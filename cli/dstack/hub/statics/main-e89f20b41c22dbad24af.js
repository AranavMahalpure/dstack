/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ 623:
/***/ ((module) => {

"use strict";

module.exports = balanced;
function balanced(a, b, str) {
  if (a instanceof RegExp) a = maybeMatch(a, str);
  if (b instanceof RegExp) b = maybeMatch(b, str);

  var r = range(a, b, str);

  return r && {
    start: r[0],
    end: r[1],
    pre: str.slice(0, r[0]),
    body: str.slice(r[0] + a.length, r[1]),
    post: str.slice(r[1] + b.length)
  };
}

function maybeMatch(reg, str) {
  var m = str.match(reg);
  return m ? m[0] : null;
}

balanced.range = range;
function range(a, b, str) {
  var begs, beg, left, right, result;
  var ai = str.indexOf(a);
  var bi = str.indexOf(b, ai + 1);
  var i = ai;

  if (ai >= 0 && bi > 0) {
    if(a===b) {
      return [ai, bi];
    }
    begs = [];
    left = str.length;

    while (i >= 0 && !result) {
      if (i == ai) {
        begs.push(i);
        ai = str.indexOf(a, i + 1);
      } else if (begs.length == 1) {
        result = [ begs.pop(), bi ];
      } else {
        beg = begs.pop();
        if (beg < left) {
          left = beg;
          right = bi;
        }

        bi = str.indexOf(b, i + 1);
      }

      i = ai < bi && ai >= 0 ? ai : bi;
    }

    if (begs.length) {
      result = [ left, right ];
    }
  }

  return result;
}


/***/ }),

/***/ 679:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var reactIs = __webpack_require__(296);

/**
 * Copyright 2015, Yahoo! Inc.
 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
 */
var REACT_STATICS = {
  childContextTypes: true,
  contextType: true,
  contextTypes: true,
  defaultProps: true,
  displayName: true,
  getDefaultProps: true,
  getDerivedStateFromError: true,
  getDerivedStateFromProps: true,
  mixins: true,
  propTypes: true,
  type: true
};
var KNOWN_STATICS = {
  name: true,
  length: true,
  prototype: true,
  caller: true,
  callee: true,
  arguments: true,
  arity: true
};
var FORWARD_REF_STATICS = {
  '$$typeof': true,
  render: true,
  defaultProps: true,
  displayName: true,
  propTypes: true
};
var MEMO_STATICS = {
  '$$typeof': true,
  compare: true,
  defaultProps: true,
  displayName: true,
  propTypes: true,
  type: true
};
var TYPE_STATICS = {};
TYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;
TYPE_STATICS[reactIs.Memo] = MEMO_STATICS;

function getStatics(component) {
  // React v16.11 and below
  if (reactIs.isMemo(component)) {
    return MEMO_STATICS;
  } // React v16.12 and above


  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;
}

var defineProperty = Object.defineProperty;
var getOwnPropertyNames = Object.getOwnPropertyNames;
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var getPrototypeOf = Object.getPrototypeOf;
var objectPrototype = Object.prototype;
function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
  if (typeof sourceComponent !== 'string') {
    // don't hoist over string (html) components
    if (objectPrototype) {
      var inheritedComponent = getPrototypeOf(sourceComponent);

      if (inheritedComponent && inheritedComponent !== objectPrototype) {
        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
      }
    }

    var keys = getOwnPropertyNames(sourceComponent);

    if (getOwnPropertySymbols) {
      keys = keys.concat(getOwnPropertySymbols(sourceComponent));
    }

    var targetStatics = getStatics(targetComponent);
    var sourceStatics = getStatics(sourceComponent);

    for (var i = 0; i < keys.length; ++i) {
      var key = keys[i];

      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {
        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);

        try {
          // Avoid failures from read-only properties
          defineProperty(targetComponent, key, descriptor);
        } catch (e) {}
      }
    }
  }

  return targetComponent;
}

module.exports = hoistNonReactStatics;


/***/ }),

/***/ 103:
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var b="function"===typeof Symbol&&Symbol.for,c=b?Symbol.for("react.element"):60103,d=b?Symbol.for("react.portal"):60106,e=b?Symbol.for("react.fragment"):60107,f=b?Symbol.for("react.strict_mode"):60108,g=b?Symbol.for("react.profiler"):60114,h=b?Symbol.for("react.provider"):60109,k=b?Symbol.for("react.context"):60110,l=b?Symbol.for("react.async_mode"):60111,m=b?Symbol.for("react.concurrent_mode"):60111,n=b?Symbol.for("react.forward_ref"):60112,p=b?Symbol.for("react.suspense"):60113,q=b?
Symbol.for("react.suspense_list"):60120,r=b?Symbol.for("react.memo"):60115,t=b?Symbol.for("react.lazy"):60116,v=b?Symbol.for("react.block"):60121,w=b?Symbol.for("react.fundamental"):60117,x=b?Symbol.for("react.responder"):60118,y=b?Symbol.for("react.scope"):60119;
function z(a){if("object"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;
exports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return"object"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};
exports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};
exports.isValidElementType=function(a){return"string"===typeof a||"function"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||"object"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;


/***/ }),

/***/ 296:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


if (true) {
  module.exports = __webpack_require__(103);
} else {}


/***/ }),

/***/ 486:
/***/ (function(module, exports, __webpack_require__) {

/* module decorator */ module = __webpack_require__.nmd(module);
var __WEBPACK_AMD_DEFINE_RESULT__;/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */
;(function() {

  /** Used as a safe reference for `undefined` in pre-ES5 environments. */
  var undefined;

  /** Used as the semantic version number. */
  var VERSION = '4.17.21';

  /** Used as the size to enable large array optimizations. */
  var LARGE_ARRAY_SIZE = 200;

  /** Error message constants. */
  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',
      FUNC_ERROR_TEXT = 'Expected a function',
      INVALID_TEMPL_VAR_ERROR_TEXT = 'Invalid `variable` option passed into `_.template`';

  /** Used to stand-in for `undefined` hash values. */
  var HASH_UNDEFINED = '__lodash_hash_undefined__';

  /** Used as the maximum memoize cache size. */
  var MAX_MEMOIZE_SIZE = 500;

  /** Used as the internal argument placeholder. */
  var PLACEHOLDER = '__lodash_placeholder__';

  /** Used to compose bitmasks for cloning. */
  var CLONE_DEEP_FLAG = 1,
      CLONE_FLAT_FLAG = 2,
      CLONE_SYMBOLS_FLAG = 4;

  /** Used to compose bitmasks for value comparisons. */
  var COMPARE_PARTIAL_FLAG = 1,
      COMPARE_UNORDERED_FLAG = 2;

  /** Used to compose bitmasks for function metadata. */
  var WRAP_BIND_FLAG = 1,
      WRAP_BIND_KEY_FLAG = 2,
      WRAP_CURRY_BOUND_FLAG = 4,
      WRAP_CURRY_FLAG = 8,
      WRAP_CURRY_RIGHT_FLAG = 16,
      WRAP_PARTIAL_FLAG = 32,
      WRAP_PARTIAL_RIGHT_FLAG = 64,
      WRAP_ARY_FLAG = 128,
      WRAP_REARG_FLAG = 256,
      WRAP_FLIP_FLAG = 512;

  /** Used as default options for `_.truncate`. */
  var DEFAULT_TRUNC_LENGTH = 30,
      DEFAULT_TRUNC_OMISSION = '...';

  /** Used to detect hot functions by number of calls within a span of milliseconds. */
  var HOT_COUNT = 800,
      HOT_SPAN = 16;

  /** Used to indicate the type of lazy iteratees. */
  var LAZY_FILTER_FLAG = 1,
      LAZY_MAP_FLAG = 2,
      LAZY_WHILE_FLAG = 3;

  /** Used as references for various `Number` constants. */
  var INFINITY = 1 / 0,
      MAX_SAFE_INTEGER = 9007199254740991,
      MAX_INTEGER = 1.7976931348623157e+308,
      NAN = 0 / 0;

  /** Used as references for the maximum length and index of an array. */
  var MAX_ARRAY_LENGTH = 4294967295,
      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,
      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;

  /** Used to associate wrap methods with their bit flags. */
  var wrapFlags = [
    ['ary', WRAP_ARY_FLAG],
    ['bind', WRAP_BIND_FLAG],
    ['bindKey', WRAP_BIND_KEY_FLAG],
    ['curry', WRAP_CURRY_FLAG],
    ['curryRight', WRAP_CURRY_RIGHT_FLAG],
    ['flip', WRAP_FLIP_FLAG],
    ['partial', WRAP_PARTIAL_FLAG],
    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],
    ['rearg', WRAP_REARG_FLAG]
  ];

  /** `Object#toString` result references. */
  var argsTag = '[object Arguments]',
      arrayTag = '[object Array]',
      asyncTag = '[object AsyncFunction]',
      boolTag = '[object Boolean]',
      dateTag = '[object Date]',
      domExcTag = '[object DOMException]',
      errorTag = '[object Error]',
      funcTag = '[object Function]',
      genTag = '[object GeneratorFunction]',
      mapTag = '[object Map]',
      numberTag = '[object Number]',
      nullTag = '[object Null]',
      objectTag = '[object Object]',
      promiseTag = '[object Promise]',
      proxyTag = '[object Proxy]',
      regexpTag = '[object RegExp]',
      setTag = '[object Set]',
      stringTag = '[object String]',
      symbolTag = '[object Symbol]',
      undefinedTag = '[object Undefined]',
      weakMapTag = '[object WeakMap]',
      weakSetTag = '[object WeakSet]';

  var arrayBufferTag = '[object ArrayBuffer]',
      dataViewTag = '[object DataView]',
      float32Tag = '[object Float32Array]',
      float64Tag = '[object Float64Array]',
      int8Tag = '[object Int8Array]',
      int16Tag = '[object Int16Array]',
      int32Tag = '[object Int32Array]',
      uint8Tag = '[object Uint8Array]',
      uint8ClampedTag = '[object Uint8ClampedArray]',
      uint16Tag = '[object Uint16Array]',
      uint32Tag = '[object Uint32Array]';

  /** Used to match empty string literals in compiled template source. */
  var reEmptyStringLeading = /\b__p \+= '';/g,
      reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
      reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;

  /** Used to match HTML entities and HTML characters. */
  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,
      reUnescapedHtml = /[&<>"']/g,
      reHasEscapedHtml = RegExp(reEscapedHtml.source),
      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);

  /** Used to match template delimiters. */
  var reEscape = /<%-([\s\S]+?)%>/g,
      reEvaluate = /<%([\s\S]+?)%>/g,
      reInterpolate = /<%=([\s\S]+?)%>/g;

  /** Used to match property names within property paths. */
  var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
      reIsPlainProp = /^\w*$/,
      rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

  /**
   * Used to match `RegExp`
   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
   */
  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g,
      reHasRegExpChar = RegExp(reRegExpChar.source);

  /** Used to match leading whitespace. */
  var reTrimStart = /^\s+/;

  /** Used to match a single whitespace character. */
  var reWhitespace = /\s/;

  /** Used to match wrap detail comments. */
  var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,
      reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/,
      reSplitDetails = /,? & /;

  /** Used to match words composed of alphanumeric characters. */
  var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;

  /**
   * Used to validate the `validate` option in `_.template` variable.
   *
   * Forbids characters which could potentially change the meaning of the function argument definition:
   * - "()," (modification of function parameters)
   * - "=" (default value)
   * - "[]{}" (destructuring of function parameters)
   * - "/" (beginning of a comment)
   * - whitespace
   */
  var reForbiddenIdentifierChars = /[()=,{}\[\]\/\s]/;

  /** Used to match backslashes in property paths. */
  var reEscapeChar = /\\(\\)?/g;

  /**
   * Used to match
   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).
   */
  var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;

  /** Used to match `RegExp` flags from their coerced string values. */
  var reFlags = /\w*$/;

  /** Used to detect bad signed hexadecimal string values. */
  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

  /** Used to detect binary string values. */
  var reIsBinary = /^0b[01]+$/i;

  /** Used to detect host constructors (Safari). */
  var reIsHostCtor = /^\[object .+?Constructor\]$/;

  /** Used to detect octal string values. */
  var reIsOctal = /^0o[0-7]+$/i;

  /** Used to detect unsigned integer values. */
  var reIsUint = /^(?:0|[1-9]\d*)$/;

  /** Used to match Latin Unicode letters (excluding mathematical operators). */
  var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;

  /** Used to ensure capturing order of template delimiters. */
  var reNoMatch = /($^)/;

  /** Used to match unescaped characters in compiled string literals. */
  var reUnescapedString = /['\n\r\u2028\u2029\\]/g;

  /** Used to compose unicode character classes. */
  var rsAstralRange = '\\ud800-\\udfff',
      rsComboMarksRange = '\\u0300-\\u036f',
      reComboHalfMarksRange = '\\ufe20-\\ufe2f',
      rsComboSymbolsRange = '\\u20d0-\\u20ff',
      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
      rsDingbatRange = '\\u2700-\\u27bf',
      rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
      rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
      rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
      rsPunctuationRange = '\\u2000-\\u206f',
      rsSpaceRange = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
      rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
      rsVarRange = '\\ufe0e\\ufe0f',
      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;

  /** Used to compose unicode capture groups. */
  var rsApos = "['\u2019]",
      rsAstral = '[' + rsAstralRange + ']',
      rsBreak = '[' + rsBreakRange + ']',
      rsCombo = '[' + rsComboRange + ']',
      rsDigits = '\\d+',
      rsDingbat = '[' + rsDingbatRange + ']',
      rsLower = '[' + rsLowerRange + ']',
      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
      rsFitz = '\\ud83c[\\udffb-\\udfff]',
      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
      rsNonAstral = '[^' + rsAstralRange + ']',
      rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
      rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
      rsUpper = '[' + rsUpperRange + ']',
      rsZWJ = '\\u200d';

  /** Used to compose unicode regexes. */
  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',
      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',
      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',
      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',
      reOptMod = rsModifier + '?',
      rsOptVar = '[' + rsVarRange + ']?',
      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
      rsOrdLower = '\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])',
      rsOrdUpper = '\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])',
      rsSeq = rsOptVar + reOptMod + rsOptJoin,
      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,
      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';

  /** Used to match apostrophes. */
  var reApos = RegExp(rsApos, 'g');

  /**
   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
   */
  var reComboMark = RegExp(rsCombo, 'g');

  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');

  /** Used to match complex or compound words. */
  var reUnicodeWord = RegExp([
    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',
    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',
    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,
    rsUpper + '+' + rsOptContrUpper,
    rsOrdUpper,
    rsOrdLower,
    rsDigits,
    rsEmoji
  ].join('|'), 'g');

  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');

  /** Used to detect strings that need a more robust regexp to match words. */
  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;

  /** Used to assign default `context` object properties. */
  var contextProps = [
    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',
    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',
    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',
    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',
    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'
  ];

  /** Used to make template sourceURLs easier to identify. */
  var templateCounter = -1;

  /** Used to identify `toStringTag` values of typed arrays. */
  var typedArrayTags = {};
  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
  typedArrayTags[uint32Tag] = true;
  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
  typedArrayTags[errorTag] = typedArrayTags[funcTag] =
  typedArrayTags[mapTag] = typedArrayTags[numberTag] =
  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
  typedArrayTags[setTag] = typedArrayTags[stringTag] =
  typedArrayTags[weakMapTag] = false;

  /** Used to identify `toStringTag` values supported by `_.clone`. */
  var cloneableTags = {};
  cloneableTags[argsTag] = cloneableTags[arrayTag] =
  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
  cloneableTags[boolTag] = cloneableTags[dateTag] =
  cloneableTags[float32Tag] = cloneableTags[float64Tag] =
  cloneableTags[int8Tag] = cloneableTags[int16Tag] =
  cloneableTags[int32Tag] = cloneableTags[mapTag] =
  cloneableTags[numberTag] = cloneableTags[objectTag] =
  cloneableTags[regexpTag] = cloneableTags[setTag] =
  cloneableTags[stringTag] = cloneableTags[symbolTag] =
  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
  cloneableTags[errorTag] = cloneableTags[funcTag] =
  cloneableTags[weakMapTag] = false;

  /** Used to map Latin Unicode letters to basic Latin letters. */
  var deburredLetters = {
    // Latin-1 Supplement block.
    '\xc0': 'A',  '\xc1': 'A', '\xc2': 'A', '\xc3': 'A', '\xc4': 'A', '\xc5': 'A',
    '\xe0': 'a',  '\xe1': 'a', '\xe2': 'a', '\xe3': 'a', '\xe4': 'a', '\xe5': 'a',
    '\xc7': 'C',  '\xe7': 'c',
    '\xd0': 'D',  '\xf0': 'd',
    '\xc8': 'E',  '\xc9': 'E', '\xca': 'E', '\xcb': 'E',
    '\xe8': 'e',  '\xe9': 'e', '\xea': 'e', '\xeb': 'e',
    '\xcc': 'I',  '\xcd': 'I', '\xce': 'I', '\xcf': 'I',
    '\xec': 'i',  '\xed': 'i', '\xee': 'i', '\xef': 'i',
    '\xd1': 'N',  '\xf1': 'n',
    '\xd2': 'O',  '\xd3': 'O', '\xd4': 'O', '\xd5': 'O', '\xd6': 'O', '\xd8': 'O',
    '\xf2': 'o',  '\xf3': 'o', '\xf4': 'o', '\xf5': 'o', '\xf6': 'o', '\xf8': 'o',
    '\xd9': 'U',  '\xda': 'U', '\xdb': 'U', '\xdc': 'U',
    '\xf9': 'u',  '\xfa': 'u', '\xfb': 'u', '\xfc': 'u',
    '\xdd': 'Y',  '\xfd': 'y', '\xff': 'y',
    '\xc6': 'Ae', '\xe6': 'ae',
    '\xde': 'Th', '\xfe': 'th',
    '\xdf': 'ss',
    // Latin Extended-A block.
    '\u0100': 'A',  '\u0102': 'A', '\u0104': 'A',
    '\u0101': 'a',  '\u0103': 'a', '\u0105': 'a',
    '\u0106': 'C',  '\u0108': 'C', '\u010a': 'C', '\u010c': 'C',
    '\u0107': 'c',  '\u0109': 'c', '\u010b': 'c', '\u010d': 'c',
    '\u010e': 'D',  '\u0110': 'D', '\u010f': 'd', '\u0111': 'd',
    '\u0112': 'E',  '\u0114': 'E', '\u0116': 'E', '\u0118': 'E', '\u011a': 'E',
    '\u0113': 'e',  '\u0115': 'e', '\u0117': 'e', '\u0119': 'e', '\u011b': 'e',
    '\u011c': 'G',  '\u011e': 'G', '\u0120': 'G', '\u0122': 'G',
    '\u011d': 'g',  '\u011f': 'g', '\u0121': 'g', '\u0123': 'g',
    '\u0124': 'H',  '\u0126': 'H', '\u0125': 'h', '\u0127': 'h',
    '\u0128': 'I',  '\u012a': 'I', '\u012c': 'I', '\u012e': 'I', '\u0130': 'I',
    '\u0129': 'i',  '\u012b': 'i', '\u012d': 'i', '\u012f': 'i', '\u0131': 'i',
    '\u0134': 'J',  '\u0135': 'j',
    '\u0136': 'K',  '\u0137': 'k', '\u0138': 'k',
    '\u0139': 'L',  '\u013b': 'L', '\u013d': 'L', '\u013f': 'L', '\u0141': 'L',
    '\u013a': 'l',  '\u013c': 'l', '\u013e': 'l', '\u0140': 'l', '\u0142': 'l',
    '\u0143': 'N',  '\u0145': 'N', '\u0147': 'N', '\u014a': 'N',
    '\u0144': 'n',  '\u0146': 'n', '\u0148': 'n', '\u014b': 'n',
    '\u014c': 'O',  '\u014e': 'O', '\u0150': 'O',
    '\u014d': 'o',  '\u014f': 'o', '\u0151': 'o',
    '\u0154': 'R',  '\u0156': 'R', '\u0158': 'R',
    '\u0155': 'r',  '\u0157': 'r', '\u0159': 'r',
    '\u015a': 'S',  '\u015c': 'S', '\u015e': 'S', '\u0160': 'S',
    '\u015b': 's',  '\u015d': 's', '\u015f': 's', '\u0161': 's',
    '\u0162': 'T',  '\u0164': 'T', '\u0166': 'T',
    '\u0163': 't',  '\u0165': 't', '\u0167': 't',
    '\u0168': 'U',  '\u016a': 'U', '\u016c': 'U', '\u016e': 'U', '\u0170': 'U', '\u0172': 'U',
    '\u0169': 'u',  '\u016b': 'u', '\u016d': 'u', '\u016f': 'u', '\u0171': 'u', '\u0173': 'u',
    '\u0174': 'W',  '\u0175': 'w',
    '\u0176': 'Y',  '\u0177': 'y', '\u0178': 'Y',
    '\u0179': 'Z',  '\u017b': 'Z', '\u017d': 'Z',
    '\u017a': 'z',  '\u017c': 'z', '\u017e': 'z',
    '\u0132': 'IJ', '\u0133': 'ij',
    '\u0152': 'Oe', '\u0153': 'oe',
    '\u0149': "'n", '\u017f': 's'
  };

  /** Used to map characters to HTML entities. */
  var htmlEscapes = {
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;',
    '"': '&quot;',
    "'": '&#39;'
  };

  /** Used to map HTML entities to characters. */
  var htmlUnescapes = {
    '&amp;': '&',
    '&lt;': '<',
    '&gt;': '>',
    '&quot;': '"',
    '&#39;': "'"
  };

  /** Used to escape characters for inclusion in compiled string literals. */
  var stringEscapes = {
    '\\': '\\',
    "'": "'",
    '\n': 'n',
    '\r': 'r',
    '\u2028': 'u2028',
    '\u2029': 'u2029'
  };

  /** Built-in method references without a dependency on `root`. */
  var freeParseFloat = parseFloat,
      freeParseInt = parseInt;

  /** Detect free variable `global` from Node.js. */
  var freeGlobal = typeof __webpack_require__.g == 'object' && __webpack_require__.g && __webpack_require__.g.Object === Object && __webpack_require__.g;

  /** Detect free variable `self`. */
  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

  /** Used as a reference to the global object. */
  var root = freeGlobal || freeSelf || Function('return this')();

  /** Detect free variable `exports`. */
  var freeExports =  true && exports && !exports.nodeType && exports;

  /** Detect free variable `module`. */
  var freeModule = freeExports && "object" == 'object' && module && !module.nodeType && module;

  /** Detect the popular CommonJS extension `module.exports`. */
  var moduleExports = freeModule && freeModule.exports === freeExports;

  /** Detect free variable `process` from Node.js. */
  var freeProcess = moduleExports && freeGlobal.process;

  /** Used to access faster Node.js helpers. */
  var nodeUtil = (function() {
    try {
      // Use `util.types` for Node.js 10+.
      var types = freeModule && freeModule.require && freeModule.require('util').types;

      if (types) {
        return types;
      }

      // Legacy `process.binding('util')` for Node.js < 10.
      return freeProcess && freeProcess.binding && freeProcess.binding('util');
    } catch (e) {}
  }());

  /* Node.js helper references. */
  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,
      nodeIsDate = nodeUtil && nodeUtil.isDate,
      nodeIsMap = nodeUtil && nodeUtil.isMap,
      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,
      nodeIsSet = nodeUtil && nodeUtil.isSet,
      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

  /*--------------------------------------------------------------------------*/

  /**
   * A faster alternative to `Function#apply`, this function invokes `func`
   * with the `this` binding of `thisArg` and the arguments of `args`.
   *
   * @private
   * @param {Function} func The function to invoke.
   * @param {*} thisArg The `this` binding of `func`.
   * @param {Array} args The arguments to invoke `func` with.
   * @returns {*} Returns the result of `func`.
   */
  function apply(func, thisArg, args) {
    switch (args.length) {
      case 0: return func.call(thisArg);
      case 1: return func.call(thisArg, args[0]);
      case 2: return func.call(thisArg, args[0], args[1]);
      case 3: return func.call(thisArg, args[0], args[1], args[2]);
    }
    return func.apply(thisArg, args);
  }

  /**
   * A specialized version of `baseAggregator` for arrays.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} setter The function to set `accumulator` values.
   * @param {Function} iteratee The iteratee to transform keys.
   * @param {Object} accumulator The initial aggregated object.
   * @returns {Function} Returns `accumulator`.
   */
  function arrayAggregator(array, setter, iteratee, accumulator) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      var value = array[index];
      setter(accumulator, value, iteratee(value), array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.forEach` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */
  function arrayEach(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (iteratee(array[index], index, array) === false) {
        break;
      }
    }
    return array;
  }

  /**
   * A specialized version of `_.forEachRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */
  function arrayEachRight(array, iteratee) {
    var length = array == null ? 0 : array.length;

    while (length--) {
      if (iteratee(array[length], length, array) === false) {
        break;
      }
    }
    return array;
  }

  /**
   * A specialized version of `_.every` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if all elements pass the predicate check,
   *  else `false`.
   */
  function arrayEvery(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (!predicate(array[index], index, array)) {
        return false;
      }
    }
    return true;
  }

  /**
   * A specialized version of `_.filter` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {Array} Returns the new filtered array.
   */
  function arrayFilter(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (predicate(value, index, array)) {
        result[resIndex++] = value;
      }
    }
    return result;
  }

  /**
   * A specialized version of `_.includes` for arrays without support for
   * specifying an index to search from.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */
  function arrayIncludes(array, value) {
    var length = array == null ? 0 : array.length;
    return !!length && baseIndexOf(array, value, 0) > -1;
  }

  /**
   * This function is like `arrayIncludes` except that it accepts a comparator.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */
  function arrayIncludesWith(array, value, comparator) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (comparator(value, array[index])) {
        return true;
      }
    }
    return false;
  }

  /**
   * A specialized version of `_.map` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the new mapped array.
   */
  function arrayMap(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length,
        result = Array(length);

    while (++index < length) {
      result[index] = iteratee(array[index], index, array);
    }
    return result;
  }

  /**
   * Appends the elements of `values` to `array`.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {Array} values The values to append.
   * @returns {Array} Returns `array`.
   */
  function arrayPush(array, values) {
    var index = -1,
        length = values.length,
        offset = array.length;

    while (++index < length) {
      array[offset + index] = values[index];
    }
    return array;
  }

  /**
   * A specialized version of `_.reduce` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the first element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */
  function arrayReduce(array, iteratee, accumulator, initAccum) {
    var index = -1,
        length = array == null ? 0 : array.length;

    if (initAccum && length) {
      accumulator = array[++index];
    }
    while (++index < length) {
      accumulator = iteratee(accumulator, array[index], index, array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.reduceRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the last element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */
  function arrayReduceRight(array, iteratee, accumulator, initAccum) {
    var length = array == null ? 0 : array.length;
    if (initAccum && length) {
      accumulator = array[--length];
    }
    while (length--) {
      accumulator = iteratee(accumulator, array[length], length, array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.some` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if any element passes the predicate check,
   *  else `false`.
   */
  function arraySome(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (predicate(array[index], index, array)) {
        return true;
      }
    }
    return false;
  }

  /**
   * Gets the size of an ASCII `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */
  var asciiSize = baseProperty('length');

  /**
   * Converts an ASCII `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function asciiToArray(string) {
    return string.split('');
  }

  /**
   * Splits an ASCII `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */
  function asciiWords(string) {
    return string.match(reAsciiWord) || [];
  }

  /**
   * The base implementation of methods like `_.findKey` and `_.findLastKey`,
   * without support for iteratee shorthands, which iterates over `collection`
   * using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the found element or its key, else `undefined`.
   */
  function baseFindKey(collection, predicate, eachFunc) {
    var result;
    eachFunc(collection, function(value, key, collection) {
      if (predicate(value, key, collection)) {
        result = key;
        return false;
      }
    });
    return result;
  }

  /**
   * The base implementation of `_.findIndex` and `_.findLastIndex` without
   * support for iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {number} fromIndex The index to search from.
   * @param {boolean} [fromRight] Specify iterating from right to left.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseFindIndex(array, predicate, fromIndex, fromRight) {
    var length = array.length,
        index = fromIndex + (fromRight ? 1 : -1);

    while ((fromRight ? index-- : ++index < length)) {
      if (predicate(array[index], index, array)) {
        return index;
      }
    }
    return -1;
  }

  /**
   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseIndexOf(array, value, fromIndex) {
    return value === value
      ? strictIndexOf(array, value, fromIndex)
      : baseFindIndex(array, baseIsNaN, fromIndex);
  }

  /**
   * This function is like `baseIndexOf` except that it accepts a comparator.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseIndexOfWith(array, value, fromIndex, comparator) {
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (comparator(array[index], value)) {
        return index;
      }
    }
    return -1;
  }

  /**
   * The base implementation of `_.isNaN` without support for number objects.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
   */
  function baseIsNaN(value) {
    return value !== value;
  }

  /**
   * The base implementation of `_.mean` and `_.meanBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the mean.
   */
  function baseMean(array, iteratee) {
    var length = array == null ? 0 : array.length;
    return length ? (baseSum(array, iteratee) / length) : NAN;
  }

  /**
   * The base implementation of `_.property` without support for deep paths.
   *
   * @private
   * @param {string} key The key of the property to get.
   * @returns {Function} Returns the new accessor function.
   */
  function baseProperty(key) {
    return function(object) {
      return object == null ? undefined : object[key];
    };
  }

  /**
   * The base implementation of `_.propertyOf` without support for deep paths.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Function} Returns the new accessor function.
   */
  function basePropertyOf(object) {
    return function(key) {
      return object == null ? undefined : object[key];
    };
  }

  /**
   * The base implementation of `_.reduce` and `_.reduceRight`, without support
   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} accumulator The initial value.
   * @param {boolean} initAccum Specify using the first or last element of
   *  `collection` as the initial value.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the accumulated value.
   */
  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
    eachFunc(collection, function(value, index, collection) {
      accumulator = initAccum
        ? (initAccum = false, value)
        : iteratee(accumulator, value, index, collection);
    });
    return accumulator;
  }

  /**
   * The base implementation of `_.sortBy` which uses `comparer` to define the
   * sort order of `array` and replaces criteria objects with their corresponding
   * values.
   *
   * @private
   * @param {Array} array The array to sort.
   * @param {Function} comparer The function to define sort order.
   * @returns {Array} Returns `array`.
   */
  function baseSortBy(array, comparer) {
    var length = array.length;

    array.sort(comparer);
    while (length--) {
      array[length] = array[length].value;
    }
    return array;
  }

  /**
   * The base implementation of `_.sum` and `_.sumBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the sum.
   */
  function baseSum(array, iteratee) {
    var result,
        index = -1,
        length = array.length;

    while (++index < length) {
      var current = iteratee(array[index]);
      if (current !== undefined) {
        result = result === undefined ? current : (result + current);
      }
    }
    return result;
  }

  /**
   * The base implementation of `_.times` without support for iteratee shorthands
   * or max array length checks.
   *
   * @private
   * @param {number} n The number of times to invoke `iteratee`.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the array of results.
   */
  function baseTimes(n, iteratee) {
    var index = -1,
        result = Array(n);

    while (++index < n) {
      result[index] = iteratee(index);
    }
    return result;
  }

  /**
   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array
   * of key-value pairs for `object` corresponding to the property names of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the key-value pairs.
   */
  function baseToPairs(object, props) {
    return arrayMap(props, function(key) {
      return [key, object[key]];
    });
  }

  /**
   * The base implementation of `_.trim`.
   *
   * @private
   * @param {string} string The string to trim.
   * @returns {string} Returns the trimmed string.
   */
  function baseTrim(string) {
    return string
      ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')
      : string;
  }

  /**
   * The base implementation of `_.unary` without support for storing metadata.
   *
   * @private
   * @param {Function} func The function to cap arguments for.
   * @returns {Function} Returns the new capped function.
   */
  function baseUnary(func) {
    return function(value) {
      return func(value);
    };
  }

  /**
   * The base implementation of `_.values` and `_.valuesIn` which creates an
   * array of `object` property values corresponding to the property names
   * of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the array of property values.
   */
  function baseValues(object, props) {
    return arrayMap(props, function(key) {
      return object[key];
    });
  }

  /**
   * Checks if a `cache` value for `key` exists.
   *
   * @private
   * @param {Object} cache The cache to query.
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */
  function cacheHas(cache, key) {
    return cache.has(key);
  }

  /**
   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the first unmatched string symbol.
   */
  function charsStartIndex(strSymbols, chrSymbols) {
    var index = -1,
        length = strSymbols.length;

    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
    return index;
  }

  /**
   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the last unmatched string symbol.
   */
  function charsEndIndex(strSymbols, chrSymbols) {
    var index = strSymbols.length;

    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
    return index;
  }

  /**
   * Gets the number of `placeholder` occurrences in `array`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} placeholder The placeholder to search for.
   * @returns {number} Returns the placeholder count.
   */
  function countHolders(array, placeholder) {
    var length = array.length,
        result = 0;

    while (length--) {
      if (array[length] === placeholder) {
        ++result;
      }
    }
    return result;
  }

  /**
   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A
   * letters to basic Latin letters.
   *
   * @private
   * @param {string} letter The matched letter to deburr.
   * @returns {string} Returns the deburred letter.
   */
  var deburrLetter = basePropertyOf(deburredLetters);

  /**
   * Used by `_.escape` to convert characters to HTML entities.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */
  var escapeHtmlChar = basePropertyOf(htmlEscapes);

  /**
   * Used by `_.template` to escape characters for inclusion in compiled string literals.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */
  function escapeStringChar(chr) {
    return '\\' + stringEscapes[chr];
  }

  /**
   * Gets the value at `key` of `object`.
   *
   * @private
   * @param {Object} [object] The object to query.
   * @param {string} key The key of the property to get.
   * @returns {*} Returns the property value.
   */
  function getValue(object, key) {
    return object == null ? undefined : object[key];
  }

  /**
   * Checks if `string` contains Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a symbol is found, else `false`.
   */
  function hasUnicode(string) {
    return reHasUnicode.test(string);
  }

  /**
   * Checks if `string` contains a word composed of Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a word is found, else `false`.
   */
  function hasUnicodeWord(string) {
    return reHasUnicodeWord.test(string);
  }

  /**
   * Converts `iterator` to an array.
   *
   * @private
   * @param {Object} iterator The iterator to convert.
   * @returns {Array} Returns the converted array.
   */
  function iteratorToArray(iterator) {
    var data,
        result = [];

    while (!(data = iterator.next()).done) {
      result.push(data.value);
    }
    return result;
  }

  /**
   * Converts `map` to its key-value pairs.
   *
   * @private
   * @param {Object} map The map to convert.
   * @returns {Array} Returns the key-value pairs.
   */
  function mapToArray(map) {
    var index = -1,
        result = Array(map.size);

    map.forEach(function(value, key) {
      result[++index] = [key, value];
    });
    return result;
  }

  /**
   * Creates a unary function that invokes `func` with its argument transformed.
   *
   * @private
   * @param {Function} func The function to wrap.
   * @param {Function} transform The argument transform.
   * @returns {Function} Returns the new function.
   */
  function overArg(func, transform) {
    return function(arg) {
      return func(transform(arg));
    };
  }

  /**
   * Replaces all `placeholder` elements in `array` with an internal placeholder
   * and returns an array of their indexes.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {*} placeholder The placeholder to replace.
   * @returns {Array} Returns the new array of placeholder indexes.
   */
  function replaceHolders(array, placeholder) {
    var index = -1,
        length = array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (value === placeholder || value === PLACEHOLDER) {
        array[index] = PLACEHOLDER;
        result[resIndex++] = index;
      }
    }
    return result;
  }

  /**
   * Converts `set` to an array of its values.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the values.
   */
  function setToArray(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function(value) {
      result[++index] = value;
    });
    return result;
  }

  /**
   * Converts `set` to its value-value pairs.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the value-value pairs.
   */
  function setToPairs(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function(value) {
      result[++index] = [value, value];
    });
    return result;
  }

  /**
   * A specialized version of `_.indexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function strictIndexOf(array, value, fromIndex) {
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (array[index] === value) {
        return index;
      }
    }
    return -1;
  }

  /**
   * A specialized version of `_.lastIndexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function strictLastIndexOf(array, value, fromIndex) {
    var index = fromIndex + 1;
    while (index--) {
      if (array[index] === value) {
        return index;
      }
    }
    return index;
  }

  /**
   * Gets the number of symbols in `string`.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {number} Returns the string size.
   */
  function stringSize(string) {
    return hasUnicode(string)
      ? unicodeSize(string)
      : asciiSize(string);
  }

  /**
   * Converts `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function stringToArray(string) {
    return hasUnicode(string)
      ? unicodeToArray(string)
      : asciiToArray(string);
  }

  /**
   * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace
   * character of `string`.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {number} Returns the index of the last non-whitespace character.
   */
  function trimmedEndIndex(string) {
    var index = string.length;

    while (index-- && reWhitespace.test(string.charAt(index))) {}
    return index;
  }

  /**
   * Used by `_.unescape` to convert HTML entities to characters.
   *
   * @private
   * @param {string} chr The matched character to unescape.
   * @returns {string} Returns the unescaped character.
   */
  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);

  /**
   * Gets the size of a Unicode `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */
  function unicodeSize(string) {
    var result = reUnicode.lastIndex = 0;
    while (reUnicode.test(string)) {
      ++result;
    }
    return result;
  }

  /**
   * Converts a Unicode `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function unicodeToArray(string) {
    return string.match(reUnicode) || [];
  }

  /**
   * Splits a Unicode `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */
  function unicodeWords(string) {
    return string.match(reUnicodeWord) || [];
  }

  /*--------------------------------------------------------------------------*/

  /**
   * Create a new pristine `lodash` function using the `context` object.
   *
   * @static
   * @memberOf _
   * @since 1.1.0
   * @category Util
   * @param {Object} [context=root] The context object.
   * @returns {Function} Returns a new `lodash` function.
   * @example
   *
   * _.mixin({ 'foo': _.constant('foo') });
   *
   * var lodash = _.runInContext();
   * lodash.mixin({ 'bar': lodash.constant('bar') });
   *
   * _.isFunction(_.foo);
   * // => true
   * _.isFunction(_.bar);
   * // => false
   *
   * lodash.isFunction(lodash.foo);
   * // => false
   * lodash.isFunction(lodash.bar);
   * // => true
   *
   * // Create a suped-up `defer` in Node.js.
   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;
   */
  var runInContext = (function runInContext(context) {
    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));

    /** Built-in constructor references. */
    var Array = context.Array,
        Date = context.Date,
        Error = context.Error,
        Function = context.Function,
        Math = context.Math,
        Object = context.Object,
        RegExp = context.RegExp,
        String = context.String,
        TypeError = context.TypeError;

    /** Used for built-in method references. */
    var arrayProto = Array.prototype,
        funcProto = Function.prototype,
        objectProto = Object.prototype;

    /** Used to detect overreaching core-js shims. */
    var coreJsData = context['__core-js_shared__'];

    /** Used to resolve the decompiled source of functions. */
    var funcToString = funcProto.toString;

    /** Used to check objects for own properties. */
    var hasOwnProperty = objectProto.hasOwnProperty;

    /** Used to generate unique IDs. */
    var idCounter = 0;

    /** Used to detect methods masquerading as native. */
    var maskSrcKey = (function() {
      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
      return uid ? ('Symbol(src)_1.' + uid) : '';
    }());

    /**
     * Used to resolve the
     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
     * of values.
     */
    var nativeObjectToString = objectProto.toString;

    /** Used to infer the `Object` constructor. */
    var objectCtorString = funcToString.call(Object);

    /** Used to restore the original `_` reference in `_.noConflict`. */
    var oldDash = root._;

    /** Used to detect if a method is native. */
    var reIsNative = RegExp('^' +
      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
      .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
    );

    /** Built-in value references. */
    var Buffer = moduleExports ? context.Buffer : undefined,
        Symbol = context.Symbol,
        Uint8Array = context.Uint8Array,
        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,
        getPrototype = overArg(Object.getPrototypeOf, Object),
        objectCreate = Object.create,
        propertyIsEnumerable = objectProto.propertyIsEnumerable,
        splice = arrayProto.splice,
        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,
        symIterator = Symbol ? Symbol.iterator : undefined,
        symToStringTag = Symbol ? Symbol.toStringTag : undefined;

    var defineProperty = (function() {
      try {
        var func = getNative(Object, 'defineProperty');
        func({}, '', {});
        return func;
      } catch (e) {}
    }());

    /** Mocked built-ins. */
    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,
        ctxNow = Date && Date.now !== root.Date.now && Date.now,
        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeCeil = Math.ceil,
        nativeFloor = Math.floor,
        nativeGetSymbols = Object.getOwnPropertySymbols,
        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,
        nativeIsFinite = context.isFinite,
        nativeJoin = arrayProto.join,
        nativeKeys = overArg(Object.keys, Object),
        nativeMax = Math.max,
        nativeMin = Math.min,
        nativeNow = Date.now,
        nativeParseInt = context.parseInt,
        nativeRandom = Math.random,
        nativeReverse = arrayProto.reverse;

    /* Built-in method references that are verified to be native. */
    var DataView = getNative(context, 'DataView'),
        Map = getNative(context, 'Map'),
        Promise = getNative(context, 'Promise'),
        Set = getNative(context, 'Set'),
        WeakMap = getNative(context, 'WeakMap'),
        nativeCreate = getNative(Object, 'create');

    /** Used to store function metadata. */
    var metaMap = WeakMap && new WeakMap;

    /** Used to lookup unminified function names. */
    var realNames = {};

    /** Used to detect maps, sets, and weakmaps. */
    var dataViewCtorString = toSource(DataView),
        mapCtorString = toSource(Map),
        promiseCtorString = toSource(Promise),
        setCtorString = toSource(Set),
        weakMapCtorString = toSource(WeakMap);

    /** Used to convert symbols to primitives and strings. */
    var symbolProto = Symbol ? Symbol.prototype : undefined,
        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,
        symbolToString = symbolProto ? symbolProto.toString : undefined;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` object which wraps `value` to enable implicit method
     * chain sequences. Methods that operate on and return arrays, collections,
     * and functions can be chained together. Methods that retrieve a single value
     * or may return a primitive value will automatically end the chain sequence
     * and return the unwrapped value. Otherwise, the value must be unwrapped
     * with `_#value`.
     *
     * Explicit chain sequences, which must be unwrapped with `_#value`, may be
     * enabled using `_.chain`.
     *
     * The execution of chained methods is lazy, that is, it's deferred until
     * `_#value` is implicitly or explicitly called.
     *
     * Lazy evaluation allows several methods to support shortcut fusion.
     * Shortcut fusion is an optimization to merge iteratee calls; this avoids
     * the creation of intermediate arrays and can greatly reduce the number of
     * iteratee executions. Sections of a chain sequence qualify for shortcut
     * fusion if the section is applied to an array and iteratees accept only
     * one argument. The heuristic for whether a section qualifies for shortcut
     * fusion is subject to change.
     *
     * Chaining is supported in custom builds as long as the `_#value` method is
     * directly or indirectly included in the build.
     *
     * In addition to lodash methods, wrappers have `Array` and `String` methods.
     *
     * The wrapper `Array` methods are:
     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
     *
     * The wrapper `String` methods are:
     * `replace` and `split`
     *
     * The wrapper methods that support shortcut fusion are:
     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
     *
     * The chainable wrapper methods are:
     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
     * `zipObject`, `zipObjectDeep`, and `zipWith`
     *
     * The wrapper methods that are **not** chainable by default are:
     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,
     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,
     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,
     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,
     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,
     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,
     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,
     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,
     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,
     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,
     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,
     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,
     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,
     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,
     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,
     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,
     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,
     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,
     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,
     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,
     * `upperFirst`, `value`, and `words`
     *
     * @name _
     * @constructor
     * @category Seq
     * @param {*} value The value to wrap in a `lodash` instance.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2, 3]);
     *
     * // Returns an unwrapped value.
     * wrapped.reduce(_.add);
     * // => 6
     *
     * // Returns a wrapped value.
     * var squares = wrapped.map(square);
     *
     * _.isArray(squares);
     * // => false
     *
     * _.isArray(squares.value());
     * // => true
     */
    function lodash(value) {
      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
        if (value instanceof LodashWrapper) {
          return value;
        }
        if (hasOwnProperty.call(value, '__wrapped__')) {
          return wrapperClone(value);
        }
      }
      return new LodashWrapper(value);
    }

    /**
     * The base implementation of `_.create` without support for assigning
     * properties to the created object.
     *
     * @private
     * @param {Object} proto The object to inherit from.
     * @returns {Object} Returns the new object.
     */
    var baseCreate = (function() {
      function object() {}
      return function(proto) {
        if (!isObject(proto)) {
          return {};
        }
        if (objectCreate) {
          return objectCreate(proto);
        }
        object.prototype = proto;
        var result = new object;
        object.prototype = undefined;
        return result;
      };
    }());

    /**
     * The function whose prototype chain sequence wrappers inherit from.
     *
     * @private
     */
    function baseLodash() {
      // No operation performed.
    }

    /**
     * The base constructor for creating `lodash` wrapper objects.
     *
     * @private
     * @param {*} value The value to wrap.
     * @param {boolean} [chainAll] Enable explicit method chain sequences.
     */
    function LodashWrapper(value, chainAll) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__chain__ = !!chainAll;
      this.__index__ = 0;
      this.__values__ = undefined;
    }

    /**
     * By default, the template delimiters used by lodash are like those in
     * embedded Ruby (ERB) as well as ES2015 template strings. Change the
     * following template settings to use alternative delimiters.
     *
     * @static
     * @memberOf _
     * @type {Object}
     */
    lodash.templateSettings = {

      /**
       * Used to detect `data` property values to be HTML-escaped.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'escape': reEscape,

      /**
       * Used to detect code to be evaluated.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'evaluate': reEvaluate,

      /**
       * Used to detect `data` property values to inject.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'interpolate': reInterpolate,

      /**
       * Used to reference the data object in the template text.
       *
       * @memberOf _.templateSettings
       * @type {string}
       */
      'variable': '',

      /**
       * Used to import variables into the compiled template.
       *
       * @memberOf _.templateSettings
       * @type {Object}
       */
      'imports': {

        /**
         * A reference to the `lodash` function.
         *
         * @memberOf _.templateSettings.imports
         * @type {Function}
         */
        '_': lodash
      }
    };

    // Ensure wrappers are instances of `baseLodash`.
    lodash.prototype = baseLodash.prototype;
    lodash.prototype.constructor = lodash;

    LodashWrapper.prototype = baseCreate(baseLodash.prototype);
    LodashWrapper.prototype.constructor = LodashWrapper;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
     *
     * @private
     * @constructor
     * @param {*} value The value to wrap.
     */
    function LazyWrapper(value) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__dir__ = 1;
      this.__filtered__ = false;
      this.__iteratees__ = [];
      this.__takeCount__ = MAX_ARRAY_LENGTH;
      this.__views__ = [];
    }

    /**
     * Creates a clone of the lazy wrapper object.
     *
     * @private
     * @name clone
     * @memberOf LazyWrapper
     * @returns {Object} Returns the cloned `LazyWrapper` object.
     */
    function lazyClone() {
      var result = new LazyWrapper(this.__wrapped__);
      result.__actions__ = copyArray(this.__actions__);
      result.__dir__ = this.__dir__;
      result.__filtered__ = this.__filtered__;
      result.__iteratees__ = copyArray(this.__iteratees__);
      result.__takeCount__ = this.__takeCount__;
      result.__views__ = copyArray(this.__views__);
      return result;
    }

    /**
     * Reverses the direction of lazy iteration.
     *
     * @private
     * @name reverse
     * @memberOf LazyWrapper
     * @returns {Object} Returns the new reversed `LazyWrapper` object.
     */
    function lazyReverse() {
      if (this.__filtered__) {
        var result = new LazyWrapper(this);
        result.__dir__ = -1;
        result.__filtered__ = true;
      } else {
        result = this.clone();
        result.__dir__ *= -1;
      }
      return result;
    }

    /**
     * Extracts the unwrapped value from its lazy wrapper.
     *
     * @private
     * @name value
     * @memberOf LazyWrapper
     * @returns {*} Returns the unwrapped value.
     */
    function lazyValue() {
      var array = this.__wrapped__.value(),
          dir = this.__dir__,
          isArr = isArray(array),
          isRight = dir < 0,
          arrLength = isArr ? array.length : 0,
          view = getView(0, arrLength, this.__views__),
          start = view.start,
          end = view.end,
          length = end - start,
          index = isRight ? end : (start - 1),
          iteratees = this.__iteratees__,
          iterLength = iteratees.length,
          resIndex = 0,
          takeCount = nativeMin(length, this.__takeCount__);

      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {
        return baseWrapperValue(array, this.__actions__);
      }
      var result = [];

      outer:
      while (length-- && resIndex < takeCount) {
        index += dir;

        var iterIndex = -1,
            value = array[index];

        while (++iterIndex < iterLength) {
          var data = iteratees[iterIndex],
              iteratee = data.iteratee,
              type = data.type,
              computed = iteratee(value);

          if (type == LAZY_MAP_FLAG) {
            value = computed;
          } else if (!computed) {
            if (type == LAZY_FILTER_FLAG) {
              continue outer;
            } else {
              break outer;
            }
          }
        }
        result[resIndex++] = value;
      }
      return result;
    }

    // Ensure `LazyWrapper` is an instance of `baseLodash`.
    LazyWrapper.prototype = baseCreate(baseLodash.prototype);
    LazyWrapper.prototype.constructor = LazyWrapper;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a hash object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function Hash(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the hash.
     *
     * @private
     * @name clear
     * @memberOf Hash
     */
    function hashClear() {
      this.__data__ = nativeCreate ? nativeCreate(null) : {};
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the hash.
     *
     * @private
     * @name delete
     * @memberOf Hash
     * @param {Object} hash The hash to modify.
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function hashDelete(key) {
      var result = this.has(key) && delete this.__data__[key];
      this.size -= result ? 1 : 0;
      return result;
    }

    /**
     * Gets the hash value for `key`.
     *
     * @private
     * @name get
     * @memberOf Hash
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function hashGet(key) {
      var data = this.__data__;
      if (nativeCreate) {
        var result = data[key];
        return result === HASH_UNDEFINED ? undefined : result;
      }
      return hasOwnProperty.call(data, key) ? data[key] : undefined;
    }

    /**
     * Checks if a hash value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Hash
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function hashHas(key) {
      var data = this.__data__;
      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
    }

    /**
     * Sets the hash `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Hash
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the hash instance.
     */
    function hashSet(key, value) {
      var data = this.__data__;
      this.size += this.has(key) ? 0 : 1;
      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
      return this;
    }

    // Add methods to `Hash`.
    Hash.prototype.clear = hashClear;
    Hash.prototype['delete'] = hashDelete;
    Hash.prototype.get = hashGet;
    Hash.prototype.has = hashHas;
    Hash.prototype.set = hashSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates an list cache object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function ListCache(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the list cache.
     *
     * @private
     * @name clear
     * @memberOf ListCache
     */
    function listCacheClear() {
      this.__data__ = [];
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the list cache.
     *
     * @private
     * @name delete
     * @memberOf ListCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function listCacheDelete(key) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      if (index < 0) {
        return false;
      }
      var lastIndex = data.length - 1;
      if (index == lastIndex) {
        data.pop();
      } else {
        splice.call(data, index, 1);
      }
      --this.size;
      return true;
    }

    /**
     * Gets the list cache value for `key`.
     *
     * @private
     * @name get
     * @memberOf ListCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function listCacheGet(key) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      return index < 0 ? undefined : data[index][1];
    }

    /**
     * Checks if a list cache value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf ListCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function listCacheHas(key) {
      return assocIndexOf(this.__data__, key) > -1;
    }

    /**
     * Sets the list cache `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf ListCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the list cache instance.
     */
    function listCacheSet(key, value) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      if (index < 0) {
        ++this.size;
        data.push([key, value]);
      } else {
        data[index][1] = value;
      }
      return this;
    }

    // Add methods to `ListCache`.
    ListCache.prototype.clear = listCacheClear;
    ListCache.prototype['delete'] = listCacheDelete;
    ListCache.prototype.get = listCacheGet;
    ListCache.prototype.has = listCacheHas;
    ListCache.prototype.set = listCacheSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a map cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function MapCache(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the map.
     *
     * @private
     * @name clear
     * @memberOf MapCache
     */
    function mapCacheClear() {
      this.size = 0;
      this.__data__ = {
        'hash': new Hash,
        'map': new (Map || ListCache),
        'string': new Hash
      };
    }

    /**
     * Removes `key` and its value from the map.
     *
     * @private
     * @name delete
     * @memberOf MapCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function mapCacheDelete(key) {
      var result = getMapData(this, key)['delete'](key);
      this.size -= result ? 1 : 0;
      return result;
    }

    /**
     * Gets the map value for `key`.
     *
     * @private
     * @name get
     * @memberOf MapCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function mapCacheGet(key) {
      return getMapData(this, key).get(key);
    }

    /**
     * Checks if a map value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf MapCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function mapCacheHas(key) {
      return getMapData(this, key).has(key);
    }

    /**
     * Sets the map `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf MapCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the map cache instance.
     */
    function mapCacheSet(key, value) {
      var data = getMapData(this, key),
          size = data.size;

      data.set(key, value);
      this.size += data.size == size ? 0 : 1;
      return this;
    }

    // Add methods to `MapCache`.
    MapCache.prototype.clear = mapCacheClear;
    MapCache.prototype['delete'] = mapCacheDelete;
    MapCache.prototype.get = mapCacheGet;
    MapCache.prototype.has = mapCacheHas;
    MapCache.prototype.set = mapCacheSet;

    /*------------------------------------------------------------------------*/

    /**
     *
     * Creates an array cache object to store unique values.
     *
     * @private
     * @constructor
     * @param {Array} [values] The values to cache.
     */
    function SetCache(values) {
      var index = -1,
          length = values == null ? 0 : values.length;

      this.__data__ = new MapCache;
      while (++index < length) {
        this.add(values[index]);
      }
    }

    /**
     * Adds `value` to the array cache.
     *
     * @private
     * @name add
     * @memberOf SetCache
     * @alias push
     * @param {*} value The value to cache.
     * @returns {Object} Returns the cache instance.
     */
    function setCacheAdd(value) {
      this.__data__.set(value, HASH_UNDEFINED);
      return this;
    }

    /**
     * Checks if `value` is in the array cache.
     *
     * @private
     * @name has
     * @memberOf SetCache
     * @param {*} value The value to search for.
     * @returns {number} Returns `true` if `value` is found, else `false`.
     */
    function setCacheHas(value) {
      return this.__data__.has(value);
    }

    // Add methods to `SetCache`.
    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
    SetCache.prototype.has = setCacheHas;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a stack cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function Stack(entries) {
      var data = this.__data__ = new ListCache(entries);
      this.size = data.size;
    }

    /**
     * Removes all key-value entries from the stack.
     *
     * @private
     * @name clear
     * @memberOf Stack
     */
    function stackClear() {
      this.__data__ = new ListCache;
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the stack.
     *
     * @private
     * @name delete
     * @memberOf Stack
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function stackDelete(key) {
      var data = this.__data__,
          result = data['delete'](key);

      this.size = data.size;
      return result;
    }

    /**
     * Gets the stack value for `key`.
     *
     * @private
     * @name get
     * @memberOf Stack
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function stackGet(key) {
      return this.__data__.get(key);
    }

    /**
     * Checks if a stack value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Stack
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function stackHas(key) {
      return this.__data__.has(key);
    }

    /**
     * Sets the stack `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Stack
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the stack cache instance.
     */
    function stackSet(key, value) {
      var data = this.__data__;
      if (data instanceof ListCache) {
        var pairs = data.__data__;
        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
          pairs.push([key, value]);
          this.size = ++data.size;
          return this;
        }
        data = this.__data__ = new MapCache(pairs);
      }
      data.set(key, value);
      this.size = data.size;
      return this;
    }

    // Add methods to `Stack`.
    Stack.prototype.clear = stackClear;
    Stack.prototype['delete'] = stackDelete;
    Stack.prototype.get = stackGet;
    Stack.prototype.has = stackHas;
    Stack.prototype.set = stackSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates an array of the enumerable property names of the array-like `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @param {boolean} inherited Specify returning inherited property names.
     * @returns {Array} Returns the array of property names.
     */
    function arrayLikeKeys(value, inherited) {
      var isArr = isArray(value),
          isArg = !isArr && isArguments(value),
          isBuff = !isArr && !isArg && isBuffer(value),
          isType = !isArr && !isArg && !isBuff && isTypedArray(value),
          skipIndexes = isArr || isArg || isBuff || isType,
          result = skipIndexes ? baseTimes(value.length, String) : [],
          length = result.length;

      for (var key in value) {
        if ((inherited || hasOwnProperty.call(value, key)) &&
            !(skipIndexes && (
               // Safari 9 has enumerable `arguments.length` in strict mode.
               key == 'length' ||
               // Node.js 0.10 has enumerable non-index properties on buffers.
               (isBuff && (key == 'offset' || key == 'parent')) ||
               // PhantomJS 2 has enumerable non-index properties on typed arrays.
               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
               // Skip index properties.
               isIndex(key, length)
            ))) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * A specialized version of `_.sample` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @returns {*} Returns the random element.
     */
    function arraySample(array) {
      var length = array.length;
      return length ? array[baseRandom(0, length - 1)] : undefined;
    }

    /**
     * A specialized version of `_.sampleSize` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */
    function arraySampleSize(array, n) {
      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));
    }

    /**
     * A specialized version of `_.shuffle` for arrays.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */
    function arrayShuffle(array) {
      return shuffleSelf(copyArray(array));
    }

    /**
     * This function is like `assignValue` except that it doesn't assign
     * `undefined` values.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function assignMergeValue(object, key, value) {
      if ((value !== undefined && !eq(object[key], value)) ||
          (value === undefined && !(key in object))) {
        baseAssignValue(object, key, value);
      }
    }

    /**
     * Assigns `value` to `key` of `object` if the existing value is not equivalent
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function assignValue(object, key, value) {
      var objValue = object[key];
      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
          (value === undefined && !(key in object))) {
        baseAssignValue(object, key, value);
      }
    }

    /**
     * Gets the index at which the `key` is found in `array` of key-value pairs.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {*} key The key to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     */
    function assocIndexOf(array, key) {
      var length = array.length;
      while (length--) {
        if (eq(array[length][0], key)) {
          return length;
        }
      }
      return -1;
    }

    /**
     * Aggregates elements of `collection` on `accumulator` with keys transformed
     * by `iteratee` and values set by `setter`.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform keys.
     * @param {Object} accumulator The initial aggregated object.
     * @returns {Function} Returns `accumulator`.
     */
    function baseAggregator(collection, setter, iteratee, accumulator) {
      baseEach(collection, function(value, key, collection) {
        setter(accumulator, value, iteratee(value), collection);
      });
      return accumulator;
    }

    /**
     * The base implementation of `_.assign` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */
    function baseAssign(object, source) {
      return object && copyObject(source, keys(source), object);
    }

    /**
     * The base implementation of `_.assignIn` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */
    function baseAssignIn(object, source) {
      return object && copyObject(source, keysIn(source), object);
    }

    /**
     * The base implementation of `assignValue` and `assignMergeValue` without
     * value checks.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function baseAssignValue(object, key, value) {
      if (key == '__proto__' && defineProperty) {
        defineProperty(object, key, {
          'configurable': true,
          'enumerable': true,
          'value': value,
          'writable': true
        });
      } else {
        object[key] = value;
      }
    }

    /**
     * The base implementation of `_.at` without support for individual paths.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {string[]} paths The property paths to pick.
     * @returns {Array} Returns the picked elements.
     */
    function baseAt(object, paths) {
      var index = -1,
          length = paths.length,
          result = Array(length),
          skip = object == null;

      while (++index < length) {
        result[index] = skip ? undefined : get(object, paths[index]);
      }
      return result;
    }

    /**
     * The base implementation of `_.clamp` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     */
    function baseClamp(number, lower, upper) {
      if (number === number) {
        if (upper !== undefined) {
          number = number <= upper ? number : upper;
        }
        if (lower !== undefined) {
          number = number >= lower ? number : lower;
        }
      }
      return number;
    }

    /**
     * The base implementation of `_.clone` and `_.cloneDeep` which tracks
     * traversed objects.
     *
     * @private
     * @param {*} value The value to clone.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Deep clone
     *  2 - Flatten inherited properties
     *  4 - Clone symbols
     * @param {Function} [customizer] The function to customize cloning.
     * @param {string} [key] The key of `value`.
     * @param {Object} [object] The parent object of `value`.
     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
     * @returns {*} Returns the cloned value.
     */
    function baseClone(value, bitmask, customizer, key, object, stack) {
      var result,
          isDeep = bitmask & CLONE_DEEP_FLAG,
          isFlat = bitmask & CLONE_FLAT_FLAG,
          isFull = bitmask & CLONE_SYMBOLS_FLAG;

      if (customizer) {
        result = object ? customizer(value, key, object, stack) : customizer(value);
      }
      if (result !== undefined) {
        return result;
      }
      if (!isObject(value)) {
        return value;
      }
      var isArr = isArray(value);
      if (isArr) {
        result = initCloneArray(value);
        if (!isDeep) {
          return copyArray(value, result);
        }
      } else {
        var tag = getTag(value),
            isFunc = tag == funcTag || tag == genTag;

        if (isBuffer(value)) {
          return cloneBuffer(value, isDeep);
        }
        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
          result = (isFlat || isFunc) ? {} : initCloneObject(value);
          if (!isDeep) {
            return isFlat
              ? copySymbolsIn(value, baseAssignIn(result, value))
              : copySymbols(value, baseAssign(result, value));
          }
        } else {
          if (!cloneableTags[tag]) {
            return object ? value : {};
          }
          result = initCloneByTag(value, tag, isDeep);
        }
      }
      // Check for circular references and return its corresponding clone.
      stack || (stack = new Stack);
      var stacked = stack.get(value);
      if (stacked) {
        return stacked;
      }
      stack.set(value, result);

      if (isSet(value)) {
        value.forEach(function(subValue) {
          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
        });
      } else if (isMap(value)) {
        value.forEach(function(subValue, key) {
          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));
        });
      }

      var keysFunc = isFull
        ? (isFlat ? getAllKeysIn : getAllKeys)
        : (isFlat ? keysIn : keys);

      var props = isArr ? undefined : keysFunc(value);
      arrayEach(props || value, function(subValue, key) {
        if (props) {
          key = subValue;
          subValue = value[key];
        }
        // Recursively populate clone (susceptible to call stack limits).
        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
      });
      return result;
    }

    /**
     * The base implementation of `_.conforms` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     */
    function baseConforms(source) {
      var props = keys(source);
      return function(object) {
        return baseConformsTo(object, source, props);
      };
    }

    /**
     * The base implementation of `_.conformsTo` which accepts `props` to check.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     */
    function baseConformsTo(object, source, props) {
      var length = props.length;
      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (length--) {
        var key = props[length],
            predicate = source[key],
            value = object[key];

        if ((value === undefined && !(key in object)) || !predicate(value)) {
          return false;
        }
      }
      return true;
    }

    /**
     * The base implementation of `_.delay` and `_.defer` which accepts `args`
     * to provide to `func`.
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {Array} args The arguments to provide to `func`.
     * @returns {number|Object} Returns the timer id or timeout object.
     */
    function baseDelay(func, wait, args) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return setTimeout(function() { func.apply(undefined, args); }, wait);
    }

    /**
     * The base implementation of methods like `_.difference` without support
     * for excluding multiple arrays or iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Array} values The values to exclude.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     */
    function baseDifference(array, values, iteratee, comparator) {
      var index = -1,
          includes = arrayIncludes,
          isCommon = true,
          length = array.length,
          result = [],
          valuesLength = values.length;

      if (!length) {
        return result;
      }
      if (iteratee) {
        values = arrayMap(values, baseUnary(iteratee));
      }
      if (comparator) {
        includes = arrayIncludesWith;
        isCommon = false;
      }
      else if (values.length >= LARGE_ARRAY_SIZE) {
        includes = cacheHas;
        isCommon = false;
        values = new SetCache(values);
      }
      outer:
      while (++index < length) {
        var value = array[index],
            computed = iteratee == null ? value : iteratee(value);

        value = (comparator || value !== 0) ? value : 0;
        if (isCommon && computed === computed) {
          var valuesIndex = valuesLength;
          while (valuesIndex--) {
            if (values[valuesIndex] === computed) {
              continue outer;
            }
          }
          result.push(value);
        }
        else if (!includes(values, computed, comparator)) {
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.forEach` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */
    var baseEach = createBaseEach(baseForOwn);

    /**
     * The base implementation of `_.forEachRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */
    var baseEachRight = createBaseEach(baseForOwnRight, true);

    /**
     * The base implementation of `_.every` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`
     */
    function baseEvery(collection, predicate) {
      var result = true;
      baseEach(collection, function(value, index, collection) {
        result = !!predicate(value, index, collection);
        return result;
      });
      return result;
    }

    /**
     * The base implementation of methods like `_.max` and `_.min` which accepts a
     * `comparator` to determine the extremum value.
     *
     * @private
     * @param {Array} array The array to iterate over.
     * @param {Function} iteratee The iteratee invoked per iteration.
     * @param {Function} comparator The comparator used to compare values.
     * @returns {*} Returns the extremum value.
     */
    function baseExtremum(array, iteratee, comparator) {
      var index = -1,
          length = array.length;

      while (++index < length) {
        var value = array[index],
            current = iteratee(value);

        if (current != null && (computed === undefined
              ? (current === current && !isSymbol(current))
              : comparator(current, computed)
            )) {
          var computed = current,
              result = value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.fill` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     */
    function baseFill(array, value, start, end) {
      var length = array.length;

      start = toInteger(start);
      if (start < 0) {
        start = -start > length ? 0 : (length + start);
      }
      end = (end === undefined || end > length) ? length : toInteger(end);
      if (end < 0) {
        end += length;
      }
      end = start > end ? 0 : toLength(end);
      while (start < end) {
        array[start++] = value;
      }
      return array;
    }

    /**
     * The base implementation of `_.filter` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     */
    function baseFilter(collection, predicate) {
      var result = [];
      baseEach(collection, function(value, index, collection) {
        if (predicate(value, index, collection)) {
          result.push(value);
        }
      });
      return result;
    }

    /**
     * The base implementation of `_.flatten` with support for restricting flattening.
     *
     * @private
     * @param {Array} array The array to flatten.
     * @param {number} depth The maximum recursion depth.
     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
     * @param {Array} [result=[]] The initial result value.
     * @returns {Array} Returns the new flattened array.
     */
    function baseFlatten(array, depth, predicate, isStrict, result) {
      var index = -1,
          length = array.length;

      predicate || (predicate = isFlattenable);
      result || (result = []);

      while (++index < length) {
        var value = array[index];
        if (depth > 0 && predicate(value)) {
          if (depth > 1) {
            // Recursively flatten arrays (susceptible to call stack limits).
            baseFlatten(value, depth - 1, predicate, isStrict, result);
          } else {
            arrayPush(result, value);
          }
        } else if (!isStrict) {
          result[result.length] = value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `baseForOwn` which iterates over `object`
     * properties returned by `keysFunc` and invokes `iteratee` for each property.
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */
    var baseFor = createBaseFor();

    /**
     * This function is like `baseFor` except that it iterates over properties
     * in the opposite order.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */
    var baseForRight = createBaseFor(true);

    /**
     * The base implementation of `_.forOwn` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */
    function baseForOwn(object, iteratee) {
      return object && baseFor(object, iteratee, keys);
    }

    /**
     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */
    function baseForOwnRight(object, iteratee) {
      return object && baseForRight(object, iteratee, keys);
    }

    /**
     * The base implementation of `_.functions` which creates an array of
     * `object` function property names filtered from `props`.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Array} props The property names to filter.
     * @returns {Array} Returns the function names.
     */
    function baseFunctions(object, props) {
      return arrayFilter(props, function(key) {
        return isFunction(object[key]);
      });
    }

    /**
     * The base implementation of `_.get` without support for default values.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @returns {*} Returns the resolved value.
     */
    function baseGet(object, path) {
      path = castPath(path, object);

      var index = 0,
          length = path.length;

      while (object != null && index < length) {
        object = object[toKey(path[index++])];
      }
      return (index && index == length) ? object : undefined;
    }

    /**
     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
     * `keysFunc` and `symbolsFunc` to get the enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @param {Function} symbolsFunc The function to get the symbols of `object`.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function baseGetAllKeys(object, keysFunc, symbolsFunc) {
      var result = keysFunc(object);
      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
    }

    /**
     * The base implementation of `getTag` without fallbacks for buggy environments.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */
    function baseGetTag(value) {
      if (value == null) {
        return value === undefined ? undefinedTag : nullTag;
      }
      return (symToStringTag && symToStringTag in Object(value))
        ? getRawTag(value)
        : objectToString(value);
    }

    /**
     * The base implementation of `_.gt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     */
    function baseGt(value, other) {
      return value > other;
    }

    /**
     * The base implementation of `_.has` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */
    function baseHas(object, key) {
      return object != null && hasOwnProperty.call(object, key);
    }

    /**
     * The base implementation of `_.hasIn` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */
    function baseHasIn(object, key) {
      return object != null && key in Object(object);
    }

    /**
     * The base implementation of `_.inRange` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to check.
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     */
    function baseInRange(number, start, end) {
      return number >= nativeMin(start, end) && number < nativeMax(start, end);
    }

    /**
     * The base implementation of methods like `_.intersection`, without support
     * for iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of shared values.
     */
    function baseIntersection(arrays, iteratee, comparator) {
      var includes = comparator ? arrayIncludesWith : arrayIncludes,
          length = arrays[0].length,
          othLength = arrays.length,
          othIndex = othLength,
          caches = Array(othLength),
          maxLength = Infinity,
          result = [];

      while (othIndex--) {
        var array = arrays[othIndex];
        if (othIndex && iteratee) {
          array = arrayMap(array, baseUnary(iteratee));
        }
        maxLength = nativeMin(array.length, maxLength);
        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))
          ? new SetCache(othIndex && array)
          : undefined;
      }
      array = arrays[0];

      var index = -1,
          seen = caches[0];

      outer:
      while (++index < length && result.length < maxLength) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        value = (comparator || value !== 0) ? value : 0;
        if (!(seen
              ? cacheHas(seen, computed)
              : includes(result, computed, comparator)
            )) {
          othIndex = othLength;
          while (--othIndex) {
            var cache = caches[othIndex];
            if (!(cache
                  ? cacheHas(cache, computed)
                  : includes(arrays[othIndex], computed, comparator))
                ) {
              continue outer;
            }
          }
          if (seen) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.invert` and `_.invertBy` which inverts
     * `object` with values transformed by `iteratee` and set by `setter`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform values.
     * @param {Object} accumulator The initial inverted object.
     * @returns {Function} Returns `accumulator`.
     */
    function baseInverter(object, setter, iteratee, accumulator) {
      baseForOwn(object, function(value, key, object) {
        setter(accumulator, iteratee(value), key, object);
      });
      return accumulator;
    }

    /**
     * The base implementation of `_.invoke` without support for individual
     * method arguments.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {Array} args The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     */
    function baseInvoke(object, path, args) {
      path = castPath(path, object);
      object = parent(object, path);
      var func = object == null ? object : object[toKey(last(path))];
      return func == null ? undefined : apply(func, object, args);
    }

    /**
     * The base implementation of `_.isArguments`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     */
    function baseIsArguments(value) {
      return isObjectLike(value) && baseGetTag(value) == argsTag;
    }

    /**
     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     */
    function baseIsArrayBuffer(value) {
      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;
    }

    /**
     * The base implementation of `_.isDate` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     */
    function baseIsDate(value) {
      return isObjectLike(value) && baseGetTag(value) == dateTag;
    }

    /**
     * The base implementation of `_.isEqual` which supports partial comparisons
     * and tracks traversed objects.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Unordered comparison
     *  2 - Partial comparison
     * @param {Function} [customizer] The function to customize comparisons.
     * @param {Object} [stack] Tracks traversed `value` and `other` objects.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     */
    function baseIsEqual(value, other, bitmask, customizer, stack) {
      if (value === other) {
        return true;
      }
      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {
        return value !== value && other !== other;
      }
      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
    }

    /**
     * A specialized version of `baseIsEqual` for arrays and objects which performs
     * deep comparisons and tracks traversed objects enabling objects with circular
     * references to be compared.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} [stack] Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
      var objIsArr = isArray(object),
          othIsArr = isArray(other),
          objTag = objIsArr ? arrayTag : getTag(object),
          othTag = othIsArr ? arrayTag : getTag(other);

      objTag = objTag == argsTag ? objectTag : objTag;
      othTag = othTag == argsTag ? objectTag : othTag;

      var objIsObj = objTag == objectTag,
          othIsObj = othTag == objectTag,
          isSameTag = objTag == othTag;

      if (isSameTag && isBuffer(object)) {
        if (!isBuffer(other)) {
          return false;
        }
        objIsArr = true;
        objIsObj = false;
      }
      if (isSameTag && !objIsObj) {
        stack || (stack = new Stack);
        return (objIsArr || isTypedArray(object))
          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
      }
      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

        if (objIsWrapped || othIsWrapped) {
          var objUnwrapped = objIsWrapped ? object.value() : object,
              othUnwrapped = othIsWrapped ? other.value() : other;

          stack || (stack = new Stack);
          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
        }
      }
      if (!isSameTag) {
        return false;
      }
      stack || (stack = new Stack);
      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
    }

    /**
     * The base implementation of `_.isMap` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     */
    function baseIsMap(value) {
      return isObjectLike(value) && getTag(value) == mapTag;
    }

    /**
     * The base implementation of `_.isMatch` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Array} matchData The property names, values, and compare flags to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     */
    function baseIsMatch(object, source, matchData, customizer) {
      var index = matchData.length,
          length = index,
          noCustomizer = !customizer;

      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (index--) {
        var data = matchData[index];
        if ((noCustomizer && data[2])
              ? data[1] !== object[data[0]]
              : !(data[0] in object)
            ) {
          return false;
        }
      }
      while (++index < length) {
        data = matchData[index];
        var key = data[0],
            objValue = object[key],
            srcValue = data[1];

        if (noCustomizer && data[2]) {
          if (objValue === undefined && !(key in object)) {
            return false;
          }
        } else {
          var stack = new Stack;
          if (customizer) {
            var result = customizer(objValue, srcValue, key, object, source, stack);
          }
          if (!(result === undefined
                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)
                : result
              )) {
            return false;
          }
        }
      }
      return true;
    }

    /**
     * The base implementation of `_.isNative` without bad shim checks.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     */
    function baseIsNative(value) {
      if (!isObject(value) || isMasked(value)) {
        return false;
      }
      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
      return pattern.test(toSource(value));
    }

    /**
     * The base implementation of `_.isRegExp` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     */
    function baseIsRegExp(value) {
      return isObjectLike(value) && baseGetTag(value) == regexpTag;
    }

    /**
     * The base implementation of `_.isSet` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     */
    function baseIsSet(value) {
      return isObjectLike(value) && getTag(value) == setTag;
    }

    /**
     * The base implementation of `_.isTypedArray` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     */
    function baseIsTypedArray(value) {
      return isObjectLike(value) &&
        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
    }

    /**
     * The base implementation of `_.iteratee`.
     *
     * @private
     * @param {*} [value=_.identity] The value to convert to an iteratee.
     * @returns {Function} Returns the iteratee.
     */
    function baseIteratee(value) {
      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
      if (typeof value == 'function') {
        return value;
      }
      if (value == null) {
        return identity;
      }
      if (typeof value == 'object') {
        return isArray(value)
          ? baseMatchesProperty(value[0], value[1])
          : baseMatches(value);
      }
      return property(value);
    }

    /**
     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function baseKeys(object) {
      if (!isPrototype(object)) {
        return nativeKeys(object);
      }
      var result = [];
      for (var key in Object(object)) {
        if (hasOwnProperty.call(object, key) && key != 'constructor') {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function baseKeysIn(object) {
      if (!isObject(object)) {
        return nativeKeysIn(object);
      }
      var isProto = isPrototype(object),
          result = [];

      for (var key in object) {
        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.lt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     */
    function baseLt(value, other) {
      return value < other;
    }

    /**
     * The base implementation of `_.map` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     */
    function baseMap(collection, iteratee) {
      var index = -1,
          result = isArrayLike(collection) ? Array(collection.length) : [];

      baseEach(collection, function(value, key, collection) {
        result[++index] = iteratee(value, key, collection);
      });
      return result;
    }

    /**
     * The base implementation of `_.matches` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     */
    function baseMatches(source) {
      var matchData = getMatchData(source);
      if (matchData.length == 1 && matchData[0][2]) {
        return matchesStrictComparable(matchData[0][0], matchData[0][1]);
      }
      return function(object) {
        return object === source || baseIsMatch(object, source, matchData);
      };
    }

    /**
     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
     *
     * @private
     * @param {string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */
    function baseMatchesProperty(path, srcValue) {
      if (isKey(path) && isStrictComparable(srcValue)) {
        return matchesStrictComparable(toKey(path), srcValue);
      }
      return function(object) {
        var objValue = get(object, path);
        return (objValue === undefined && objValue === srcValue)
          ? hasIn(object, path)
          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
      };
    }

    /**
     * The base implementation of `_.merge` without support for multiple sources.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} [customizer] The function to customize merged values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */
    function baseMerge(object, source, srcIndex, customizer, stack) {
      if (object === source) {
        return;
      }
      baseFor(source, function(srcValue, key) {
        stack || (stack = new Stack);
        if (isObject(srcValue)) {
          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
        }
        else {
          var newValue = customizer
            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)
            : undefined;

          if (newValue === undefined) {
            newValue = srcValue;
          }
          assignMergeValue(object, key, newValue);
        }
      }, keysIn);
    }

    /**
     * A specialized version of `baseMerge` for arrays and objects which performs
     * deep merges and tracks traversed objects enabling objects with circular
     * references to be merged.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {string} key The key of the value to merge.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} mergeFunc The function to merge values.
     * @param {Function} [customizer] The function to customize assigned values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */
    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
      var objValue = safeGet(object, key),
          srcValue = safeGet(source, key),
          stacked = stack.get(srcValue);

      if (stacked) {
        assignMergeValue(object, key, stacked);
        return;
      }
      var newValue = customizer
        ? customizer(objValue, srcValue, (key + ''), object, source, stack)
        : undefined;

      var isCommon = newValue === undefined;

      if (isCommon) {
        var isArr = isArray(srcValue),
            isBuff = !isArr && isBuffer(srcValue),
            isTyped = !isArr && !isBuff && isTypedArray(srcValue);

        newValue = srcValue;
        if (isArr || isBuff || isTyped) {
          if (isArray(objValue)) {
            newValue = objValue;
          }
          else if (isArrayLikeObject(objValue)) {
            newValue = copyArray(objValue);
          }
          else if (isBuff) {
            isCommon = false;
            newValue = cloneBuffer(srcValue, true);
          }
          else if (isTyped) {
            isCommon = false;
            newValue = cloneTypedArray(srcValue, true);
          }
          else {
            newValue = [];
          }
        }
        else if (isPlainObject(srcValue) || isArguments(srcValue)) {
          newValue = objValue;
          if (isArguments(objValue)) {
            newValue = toPlainObject(objValue);
          }
          else if (!isObject(objValue) || isFunction(objValue)) {
            newValue = initCloneObject(srcValue);
          }
        }
        else {
          isCommon = false;
        }
      }
      if (isCommon) {
        // Recursively merge objects and arrays (susceptible to call stack limits).
        stack.set(srcValue, newValue);
        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
        stack['delete'](srcValue);
      }
      assignMergeValue(object, key, newValue);
    }

    /**
     * The base implementation of `_.nth` which doesn't coerce arguments.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {number} n The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     */
    function baseNth(array, n) {
      var length = array.length;
      if (!length) {
        return;
      }
      n += n < 0 ? length : 0;
      return isIndex(n, length) ? array[n] : undefined;
    }

    /**
     * The base implementation of `_.orderBy` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
     * @param {string[]} orders The sort orders of `iteratees`.
     * @returns {Array} Returns the new sorted array.
     */
    function baseOrderBy(collection, iteratees, orders) {
      if (iteratees.length) {
        iteratees = arrayMap(iteratees, function(iteratee) {
          if (isArray(iteratee)) {
            return function(value) {
              return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);
            }
          }
          return iteratee;
        });
      } else {
        iteratees = [identity];
      }

      var index = -1;
      iteratees = arrayMap(iteratees, baseUnary(getIteratee()));

      var result = baseMap(collection, function(value, key, collection) {
        var criteria = arrayMap(iteratees, function(iteratee) {
          return iteratee(value);
        });
        return { 'criteria': criteria, 'index': ++index, 'value': value };
      });

      return baseSortBy(result, function(object, other) {
        return compareMultiple(object, other, orders);
      });
    }

    /**
     * The base implementation of `_.pick` without support for individual
     * property identifiers.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @returns {Object} Returns the new object.
     */
    function basePick(object, paths) {
      return basePickBy(object, paths, function(value, path) {
        return hasIn(object, path);
      });
    }

    /**
     * The base implementation of  `_.pickBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @param {Function} predicate The function invoked per property.
     * @returns {Object} Returns the new object.
     */
    function basePickBy(object, paths, predicate) {
      var index = -1,
          length = paths.length,
          result = {};

      while (++index < length) {
        var path = paths[index],
            value = baseGet(object, path);

        if (predicate(value, path)) {
          baseSet(result, castPath(path, object), value);
        }
      }
      return result;
    }

    /**
     * A specialized version of `baseProperty` which supports deep paths.
     *
     * @private
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     */
    function basePropertyDeep(path) {
      return function(object) {
        return baseGet(object, path);
      };
    }

    /**
     * The base implementation of `_.pullAllBy` without support for iteratee
     * shorthands.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     */
    function basePullAll(array, values, iteratee, comparator) {
      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,
          index = -1,
          length = values.length,
          seen = array;

      if (array === values) {
        values = copyArray(values);
      }
      if (iteratee) {
        seen = arrayMap(array, baseUnary(iteratee));
      }
      while (++index < length) {
        var fromIndex = 0,
            value = values[index],
            computed = iteratee ? iteratee(value) : value;

        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {
          if (seen !== array) {
            splice.call(seen, fromIndex, 1);
          }
          splice.call(array, fromIndex, 1);
        }
      }
      return array;
    }

    /**
     * The base implementation of `_.pullAt` without support for individual
     * indexes or capturing the removed elements.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {number[]} indexes The indexes of elements to remove.
     * @returns {Array} Returns `array`.
     */
    function basePullAt(array, indexes) {
      var length = array ? indexes.length : 0,
          lastIndex = length - 1;

      while (length--) {
        var index = indexes[length];
        if (length == lastIndex || index !== previous) {
          var previous = index;
          if (isIndex(index)) {
            splice.call(array, index, 1);
          } else {
            baseUnset(array, index);
          }
        }
      }
      return array;
    }

    /**
     * The base implementation of `_.random` without support for returning
     * floating-point numbers.
     *
     * @private
     * @param {number} lower The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the random number.
     */
    function baseRandom(lower, upper) {
      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
    }

    /**
     * The base implementation of `_.range` and `_.rangeRight` which doesn't
     * coerce arguments.
     *
     * @private
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @param {number} step The value to increment or decrement by.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the range of numbers.
     */
    function baseRange(start, end, step, fromRight) {
      var index = -1,
          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
          result = Array(length);

      while (length--) {
        result[fromRight ? length : ++index] = start;
        start += step;
      }
      return result;
    }

    /**
     * The base implementation of `_.repeat` which doesn't coerce arguments.
     *
     * @private
     * @param {string} string The string to repeat.
     * @param {number} n The number of times to repeat the string.
     * @returns {string} Returns the repeated string.
     */
    function baseRepeat(string, n) {
      var result = '';
      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {
        return result;
      }
      // Leverage the exponentiation by squaring algorithm for a faster repeat.
      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.
      do {
        if (n % 2) {
          result += string;
        }
        n = nativeFloor(n / 2);
        if (n) {
          string += string;
        }
      } while (n);

      return result;
    }

    /**
     * The base implementation of `_.rest` which doesn't validate or coerce arguments.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     */
    function baseRest(func, start) {
      return setToString(overRest(func, start, identity), func + '');
    }

    /**
     * The base implementation of `_.sample`.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     */
    function baseSample(collection) {
      return arraySample(values(collection));
    }

    /**
     * The base implementation of `_.sampleSize` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */
    function baseSampleSize(collection, n) {
      var array = values(collection);
      return shuffleSelf(array, baseClamp(n, 0, array.length));
    }

    /**
     * The base implementation of `_.set`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */
    function baseSet(object, path, value, customizer) {
      if (!isObject(object)) {
        return object;
      }
      path = castPath(path, object);

      var index = -1,
          length = path.length,
          lastIndex = length - 1,
          nested = object;

      while (nested != null && ++index < length) {
        var key = toKey(path[index]),
            newValue = value;

        if (key === '__proto__' || key === 'constructor' || key === 'prototype') {
          return object;
        }

        if (index != lastIndex) {
          var objValue = nested[key];
          newValue = customizer ? customizer(objValue, key, nested) : undefined;
          if (newValue === undefined) {
            newValue = isObject(objValue)
              ? objValue
              : (isIndex(path[index + 1]) ? [] : {});
          }
        }
        assignValue(nested, key, newValue);
        nested = nested[key];
      }
      return object;
    }

    /**
     * The base implementation of `setData` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */
    var baseSetData = !metaMap ? identity : function(func, data) {
      metaMap.set(func, data);
      return func;
    };

    /**
     * The base implementation of `setToString` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */
    var baseSetToString = !defineProperty ? identity : function(func, string) {
      return defineProperty(func, 'toString', {
        'configurable': true,
        'enumerable': false,
        'value': constant(string),
        'writable': true
      });
    };

    /**
     * The base implementation of `_.shuffle`.
     *
     * @private
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */
    function baseShuffle(collection) {
      return shuffleSelf(values(collection));
    }

    /**
     * The base implementation of `_.slice` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */
    function baseSlice(array, start, end) {
      var index = -1,
          length = array.length;

      if (start < 0) {
        start = -start > length ? 0 : (length + start);
      }
      end = end > length ? length : end;
      if (end < 0) {
        end += length;
      }
      length = start > end ? 0 : ((end - start) >>> 0);
      start >>>= 0;

      var result = Array(length);
      while (++index < length) {
        result[index] = array[index + start];
      }
      return result;
    }

    /**
     * The base implementation of `_.some` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     */
    function baseSome(collection, predicate) {
      var result;

      baseEach(collection, function(value, index, collection) {
        result = predicate(value, index, collection);
        return !result;
      });
      return !!result;
    }

    /**
     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which
     * performs a binary search of `array` to determine the index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */
    function baseSortedIndex(array, value, retHighest) {
      var low = 0,
          high = array == null ? low : array.length;

      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
        while (low < high) {
          var mid = (low + high) >>> 1,
              computed = array[mid];

          if (computed !== null && !isSymbol(computed) &&
              (retHighest ? (computed <= value) : (computed < value))) {
            low = mid + 1;
          } else {
            high = mid;
          }
        }
        return high;
      }
      return baseSortedIndexBy(array, value, identity, retHighest);
    }

    /**
     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`
     * which invokes `iteratee` for `value` and each element of `array` to compute
     * their sort ranking. The iteratee is invoked with one argument; (value).
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} iteratee The iteratee invoked per element.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */
    function baseSortedIndexBy(array, value, iteratee, retHighest) {
      var low = 0,
          high = array == null ? 0 : array.length;
      if (high === 0) {
        return 0;
      }

      value = iteratee(value);
      var valIsNaN = value !== value,
          valIsNull = value === null,
          valIsSymbol = isSymbol(value),
          valIsUndefined = value === undefined;

      while (low < high) {
        var mid = nativeFloor((low + high) / 2),
            computed = iteratee(array[mid]),
            othIsDefined = computed !== undefined,
            othIsNull = computed === null,
            othIsReflexive = computed === computed,
            othIsSymbol = isSymbol(computed);

        if (valIsNaN) {
          var setLow = retHighest || othIsReflexive;
        } else if (valIsUndefined) {
          setLow = othIsReflexive && (retHighest || othIsDefined);
        } else if (valIsNull) {
          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
        } else if (valIsSymbol) {
          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
        } else if (othIsNull || othIsSymbol) {
          setLow = false;
        } else {
          setLow = retHighest ? (computed <= value) : (computed < value);
        }
        if (setLow) {
          low = mid + 1;
        } else {
          high = mid;
        }
      }
      return nativeMin(high, MAX_ARRAY_INDEX);
    }

    /**
     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without
     * support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */
    function baseSortedUniq(array, iteratee) {
      var index = -1,
          length = array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        if (!index || !eq(computed, seen)) {
          var seen = computed;
          result[resIndex++] = value === 0 ? 0 : value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.toNumber` which doesn't ensure correct
     * conversions of binary, hexadecimal, or octal string values.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     */
    function baseToNumber(value) {
      if (typeof value == 'number') {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      return +value;
    }

    /**
     * The base implementation of `_.toString` which doesn't convert nullish
     * values to empty strings.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {string} Returns the string.
     */
    function baseToString(value) {
      // Exit early for strings to avoid a performance hit in some environments.
      if (typeof value == 'string') {
        return value;
      }
      if (isArray(value)) {
        // Recursively convert values (susceptible to call stack limits).
        return arrayMap(value, baseToString) + '';
      }
      if (isSymbol(value)) {
        return symbolToString ? symbolToString.call(value) : '';
      }
      var result = (value + '');
      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
    }

    /**
     * The base implementation of `_.uniqBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */
    function baseUniq(array, iteratee, comparator) {
      var index = -1,
          includes = arrayIncludes,
          length = array.length,
          isCommon = true,
          result = [],
          seen = result;

      if (comparator) {
        isCommon = false;
        includes = arrayIncludesWith;
      }
      else if (length >= LARGE_ARRAY_SIZE) {
        var set = iteratee ? null : createSet(array);
        if (set) {
          return setToArray(set);
        }
        isCommon = false;
        includes = cacheHas;
        seen = new SetCache;
      }
      else {
        seen = iteratee ? [] : result;
      }
      outer:
      while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        value = (comparator || value !== 0) ? value : 0;
        if (isCommon && computed === computed) {
          var seenIndex = seen.length;
          while (seenIndex--) {
            if (seen[seenIndex] === computed) {
              continue outer;
            }
          }
          if (iteratee) {
            seen.push(computed);
          }
          result.push(value);
        }
        else if (!includes(seen, computed, comparator)) {
          if (seen !== result) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.unset`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The property path to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     */
    function baseUnset(object, path) {
      path = castPath(path, object);
      object = parent(object, path);
      return object == null || delete object[toKey(last(path))];
    }

    /**
     * The base implementation of `_.update`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to update.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */
    function baseUpdate(object, path, updater, customizer) {
      return baseSet(object, path, updater(baseGet(object, path)), customizer);
    }

    /**
     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`
     * without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {Function} predicate The function invoked per iteration.
     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the slice of `array`.
     */
    function baseWhile(array, predicate, isDrop, fromRight) {
      var length = array.length,
          index = fromRight ? length : -1;

      while ((fromRight ? index-- : ++index < length) &&
        predicate(array[index], index, array)) {}

      return isDrop
        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))
        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));
    }

    /**
     * The base implementation of `wrapperValue` which returns the result of
     * performing a sequence of actions on the unwrapped `value`, where each
     * successive action is supplied the return value of the previous.
     *
     * @private
     * @param {*} value The unwrapped value.
     * @param {Array} actions Actions to perform to resolve the unwrapped value.
     * @returns {*} Returns the resolved value.
     */
    function baseWrapperValue(value, actions) {
      var result = value;
      if (result instanceof LazyWrapper) {
        result = result.value();
      }
      return arrayReduce(actions, function(result, action) {
        return action.func.apply(action.thisArg, arrayPush([result], action.args));
      }, result);
    }

    /**
     * The base implementation of methods like `_.xor`, without support for
     * iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of values.
     */
    function baseXor(arrays, iteratee, comparator) {
      var length = arrays.length;
      if (length < 2) {
        return length ? baseUniq(arrays[0]) : [];
      }
      var index = -1,
          result = Array(length);

      while (++index < length) {
        var array = arrays[index],
            othIndex = -1;

        while (++othIndex < length) {
          if (othIndex != index) {
            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);
          }
        }
      }
      return baseUniq(baseFlatten(result, 1), iteratee, comparator);
    }

    /**
     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.
     *
     * @private
     * @param {Array} props The property identifiers.
     * @param {Array} values The property values.
     * @param {Function} assignFunc The function to assign values.
     * @returns {Object} Returns the new object.
     */
    function baseZipObject(props, values, assignFunc) {
      var index = -1,
          length = props.length,
          valsLength = values.length,
          result = {};

      while (++index < length) {
        var value = index < valsLength ? values[index] : undefined;
        assignFunc(result, props[index], value);
      }
      return result;
    }

    /**
     * Casts `value` to an empty array if it's not an array like object.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Array|Object} Returns the cast array-like object.
     */
    function castArrayLikeObject(value) {
      return isArrayLikeObject(value) ? value : [];
    }

    /**
     * Casts `value` to `identity` if it's not a function.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Function} Returns cast function.
     */
    function castFunction(value) {
      return typeof value == 'function' ? value : identity;
    }

    /**
     * Casts `value` to a path array if it's not one.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {Object} [object] The object to query keys on.
     * @returns {Array} Returns the cast property path array.
     */
    function castPath(value, object) {
      if (isArray(value)) {
        return value;
      }
      return isKey(value, object) ? [value] : stringToPath(toString(value));
    }

    /**
     * A `baseRest` alias which can be replaced with `identity` by module
     * replacement plugins.
     *
     * @private
     * @type {Function}
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */
    var castRest = baseRest;

    /**
     * Casts `array` to a slice if it's needed.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {number} start The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the cast slice.
     */
    function castSlice(array, start, end) {
      var length = array.length;
      end = end === undefined ? length : end;
      return (!start && end >= length) ? array : baseSlice(array, start, end);
    }

    /**
     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).
     *
     * @private
     * @param {number|Object} id The timer id or timeout object of the timer to clear.
     */
    var clearTimeout = ctxClearTimeout || function(id) {
      return root.clearTimeout(id);
    };

    /**
     * Creates a clone of  `buffer`.
     *
     * @private
     * @param {Buffer} buffer The buffer to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Buffer} Returns the cloned buffer.
     */
    function cloneBuffer(buffer, isDeep) {
      if (isDeep) {
        return buffer.slice();
      }
      var length = buffer.length,
          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

      buffer.copy(result);
      return result;
    }

    /**
     * Creates a clone of `arrayBuffer`.
     *
     * @private
     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
     * @returns {ArrayBuffer} Returns the cloned array buffer.
     */
    function cloneArrayBuffer(arrayBuffer) {
      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
      new Uint8Array(result).set(new Uint8Array(arrayBuffer));
      return result;
    }

    /**
     * Creates a clone of `dataView`.
     *
     * @private
     * @param {Object} dataView The data view to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned data view.
     */
    function cloneDataView(dataView, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
    }

    /**
     * Creates a clone of `regexp`.
     *
     * @private
     * @param {Object} regexp The regexp to clone.
     * @returns {Object} Returns the cloned regexp.
     */
    function cloneRegExp(regexp) {
      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
      result.lastIndex = regexp.lastIndex;
      return result;
    }

    /**
     * Creates a clone of the `symbol` object.
     *
     * @private
     * @param {Object} symbol The symbol object to clone.
     * @returns {Object} Returns the cloned symbol object.
     */
    function cloneSymbol(symbol) {
      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
    }

    /**
     * Creates a clone of `typedArray`.
     *
     * @private
     * @param {Object} typedArray The typed array to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned typed array.
     */
    function cloneTypedArray(typedArray, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
    }

    /**
     * Compares values to sort them in ascending order.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {number} Returns the sort order indicator for `value`.
     */
    function compareAscending(value, other) {
      if (value !== other) {
        var valIsDefined = value !== undefined,
            valIsNull = value === null,
            valIsReflexive = value === value,
            valIsSymbol = isSymbol(value);

        var othIsDefined = other !== undefined,
            othIsNull = other === null,
            othIsReflexive = other === other,
            othIsSymbol = isSymbol(other);

        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||
            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||
            (valIsNull && othIsDefined && othIsReflexive) ||
            (!valIsDefined && othIsReflexive) ||
            !valIsReflexive) {
          return 1;
        }
        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||
            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||
            (othIsNull && valIsDefined && valIsReflexive) ||
            (!othIsDefined && valIsReflexive) ||
            !othIsReflexive) {
          return -1;
        }
      }
      return 0;
    }

    /**
     * Used by `_.orderBy` to compare multiple properties of a value to another
     * and stable sort them.
     *
     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
     * specify an order of "desc" for descending or "asc" for ascending sort order
     * of corresponding values.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {boolean[]|string[]} orders The order to sort by for each property.
     * @returns {number} Returns the sort order indicator for `object`.
     */
    function compareMultiple(object, other, orders) {
      var index = -1,
          objCriteria = object.criteria,
          othCriteria = other.criteria,
          length = objCriteria.length,
          ordersLength = orders.length;

      while (++index < length) {
        var result = compareAscending(objCriteria[index], othCriteria[index]);
        if (result) {
          if (index >= ordersLength) {
            return result;
          }
          var order = orders[index];
          return result * (order == 'desc' ? -1 : 1);
        }
      }
      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
      // that causes it, under certain circumstances, to provide the same value for
      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
      // for more details.
      //
      // This also ensures a stable sort in V8 and other engines.
      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
      return object.index - other.index;
    }

    /**
     * Creates an array that is the composition of partially applied arguments,
     * placeholders, and provided arguments into a single array of arguments.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to prepend to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */
    function composeArgs(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersLength = holders.length,
          leftIndex = -1,
          leftLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(leftLength + rangeLength),
          isUncurried = !isCurried;

      while (++leftIndex < leftLength) {
        result[leftIndex] = partials[leftIndex];
      }
      while (++argsIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[holders[argsIndex]] = args[argsIndex];
        }
      }
      while (rangeLength--) {
        result[leftIndex++] = args[argsIndex++];
      }
      return result;
    }

    /**
     * This function is like `composeArgs` except that the arguments composition
     * is tailored for `_.partialRight`.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to append to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */
    function composeArgsRight(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersIndex = -1,
          holdersLength = holders.length,
          rightIndex = -1,
          rightLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(rangeLength + rightLength),
          isUncurried = !isCurried;

      while (++argsIndex < rangeLength) {
        result[argsIndex] = args[argsIndex];
      }
      var offset = argsIndex;
      while (++rightIndex < rightLength) {
        result[offset + rightIndex] = partials[rightIndex];
      }
      while (++holdersIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[offset + holders[holdersIndex]] = args[argsIndex++];
        }
      }
      return result;
    }

    /**
     * Copies the values of `source` to `array`.
     *
     * @private
     * @param {Array} source The array to copy values from.
     * @param {Array} [array=[]] The array to copy values to.
     * @returns {Array} Returns `array`.
     */
    function copyArray(source, array) {
      var index = -1,
          length = source.length;

      array || (array = Array(length));
      while (++index < length) {
        array[index] = source[index];
      }
      return array;
    }

    /**
     * Copies properties of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy properties from.
     * @param {Array} props The property identifiers to copy.
     * @param {Object} [object={}] The object to copy properties to.
     * @param {Function} [customizer] The function to customize copied values.
     * @returns {Object} Returns `object`.
     */
    function copyObject(source, props, object, customizer) {
      var isNew = !object;
      object || (object = {});

      var index = -1,
          length = props.length;

      while (++index < length) {
        var key = props[index];

        var newValue = customizer
          ? customizer(object[key], source[key], key, object, source)
          : undefined;

        if (newValue === undefined) {
          newValue = source[key];
        }
        if (isNew) {
          baseAssignValue(object, key, newValue);
        } else {
          assignValue(object, key, newValue);
        }
      }
      return object;
    }

    /**
     * Copies own symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */
    function copySymbols(source, object) {
      return copyObject(source, getSymbols(source), object);
    }

    /**
     * Copies own and inherited symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */
    function copySymbolsIn(source, object) {
      return copyObject(source, getSymbolsIn(source), object);
    }

    /**
     * Creates a function like `_.groupBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} [initializer] The accumulator object initializer.
     * @returns {Function} Returns the new aggregator function.
     */
    function createAggregator(setter, initializer) {
      return function(collection, iteratee) {
        var func = isArray(collection) ? arrayAggregator : baseAggregator,
            accumulator = initializer ? initializer() : {};

        return func(collection, setter, getIteratee(iteratee, 2), accumulator);
      };
    }

    /**
     * Creates a function like `_.assign`.
     *
     * @private
     * @param {Function} assigner The function to assign values.
     * @returns {Function} Returns the new assigner function.
     */
    function createAssigner(assigner) {
      return baseRest(function(object, sources) {
        var index = -1,
            length = sources.length,
            customizer = length > 1 ? sources[length - 1] : undefined,
            guard = length > 2 ? sources[2] : undefined;

        customizer = (assigner.length > 3 && typeof customizer == 'function')
          ? (length--, customizer)
          : undefined;

        if (guard && isIterateeCall(sources[0], sources[1], guard)) {
          customizer = length < 3 ? undefined : customizer;
          length = 1;
        }
        object = Object(object);
        while (++index < length) {
          var source = sources[index];
          if (source) {
            assigner(object, source, index, customizer);
          }
        }
        return object;
      });
    }

    /**
     * Creates a `baseEach` or `baseEachRight` function.
     *
     * @private
     * @param {Function} eachFunc The function to iterate over a collection.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */
    function createBaseEach(eachFunc, fromRight) {
      return function(collection, iteratee) {
        if (collection == null) {
          return collection;
        }
        if (!isArrayLike(collection)) {
          return eachFunc(collection, iteratee);
        }
        var length = collection.length,
            index = fromRight ? length : -1,
            iterable = Object(collection);

        while ((fromRight ? index-- : ++index < length)) {
          if (iteratee(iterable[index], index, iterable) === false) {
            break;
          }
        }
        return collection;
      };
    }

    /**
     * Creates a base function for methods like `_.forIn` and `_.forOwn`.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */
    function createBaseFor(fromRight) {
      return function(object, iteratee, keysFunc) {
        var index = -1,
            iterable = Object(object),
            props = keysFunc(object),
            length = props.length;

        while (length--) {
          var key = props[fromRight ? length : ++index];
          if (iteratee(iterable[key], key, iterable) === false) {
            break;
          }
        }
        return object;
      };
    }

    /**
     * Creates a function that wraps `func` to invoke it with the optional `this`
     * binding of `thisArg`.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createBind(func, bitmask, thisArg) {
      var isBind = bitmask & WRAP_BIND_FLAG,
          Ctor = createCtor(func);

      function wrapper() {
        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
        return fn.apply(isBind ? thisArg : this, arguments);
      }
      return wrapper;
    }

    /**
     * Creates a function like `_.lowerFirst`.
     *
     * @private
     * @param {string} methodName The name of the `String` case method to use.
     * @returns {Function} Returns the new case function.
     */
    function createCaseFirst(methodName) {
      return function(string) {
        string = toString(string);

        var strSymbols = hasUnicode(string)
          ? stringToArray(string)
          : undefined;

        var chr = strSymbols
          ? strSymbols[0]
          : string.charAt(0);

        var trailing = strSymbols
          ? castSlice(strSymbols, 1).join('')
          : string.slice(1);

        return chr[methodName]() + trailing;
      };
    }

    /**
     * Creates a function like `_.camelCase`.
     *
     * @private
     * @param {Function} callback The function to combine each word.
     * @returns {Function} Returns the new compounder function.
     */
    function createCompounder(callback) {
      return function(string) {
        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');
      };
    }

    /**
     * Creates a function that produces an instance of `Ctor` regardless of
     * whether it was invoked as part of a `new` expression or by `call` or `apply`.
     *
     * @private
     * @param {Function} Ctor The constructor to wrap.
     * @returns {Function} Returns the new wrapped function.
     */
    function createCtor(Ctor) {
      return function() {
        // Use a `switch` statement to work with class constructors. See
        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
        // for more details.
        var args = arguments;
        switch (args.length) {
          case 0: return new Ctor;
          case 1: return new Ctor(args[0]);
          case 2: return new Ctor(args[0], args[1]);
          case 3: return new Ctor(args[0], args[1], args[2]);
          case 4: return new Ctor(args[0], args[1], args[2], args[3]);
          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);
          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
        }
        var thisBinding = baseCreate(Ctor.prototype),
            result = Ctor.apply(thisBinding, args);

        // Mimic the constructor's `return` behavior.
        // See https://es5.github.io/#x13.2.2 for more details.
        return isObject(result) ? result : thisBinding;
      };
    }

    /**
     * Creates a function that wraps `func` to enable currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {number} arity The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createCurry(func, bitmask, arity) {
      var Ctor = createCtor(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length,
            placeholder = getHolder(wrapper);

        while (index--) {
          args[index] = arguments[index];
        }
        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)
          ? []
          : replaceHolders(args, placeholder);

        length -= holders.length;
        if (length < arity) {
          return createRecurry(
            func, bitmask, createHybrid, wrapper.placeholder, undefined,
            args, holders, undefined, undefined, arity - length);
        }
        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
        return apply(fn, this, args);
      }
      return wrapper;
    }

    /**
     * Creates a `_.find` or `_.findLast` function.
     *
     * @private
     * @param {Function} findIndexFunc The function to find the collection index.
     * @returns {Function} Returns the new find function.
     */
    function createFind(findIndexFunc) {
      return function(collection, predicate, fromIndex) {
        var iterable = Object(collection);
        if (!isArrayLike(collection)) {
          var iteratee = getIteratee(predicate, 3);
          collection = keys(collection);
          predicate = function(key) { return iteratee(iterable[key], key, iterable); };
        }
        var index = findIndexFunc(collection, predicate, fromIndex);
        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
      };
    }

    /**
     * Creates a `_.flow` or `_.flowRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new flow function.
     */
    function createFlow(fromRight) {
      return flatRest(function(funcs) {
        var length = funcs.length,
            index = length,
            prereq = LodashWrapper.prototype.thru;

        if (fromRight) {
          funcs.reverse();
        }
        while (index--) {
          var func = funcs[index];
          if (typeof func != 'function') {
            throw new TypeError(FUNC_ERROR_TEXT);
          }
          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {
            var wrapper = new LodashWrapper([], true);
          }
        }
        index = wrapper ? index : length;
        while (++index < length) {
          func = funcs[index];

          var funcName = getFuncName(func),
              data = funcName == 'wrapper' ? getData(func) : undefined;

          if (data && isLaziable(data[0]) &&
                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&
                !data[4].length && data[9] == 1
              ) {
            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
          } else {
            wrapper = (func.length == 1 && isLaziable(func))
              ? wrapper[funcName]()
              : wrapper.thru(func);
          }
        }
        return function() {
          var args = arguments,
              value = args[0];

          if (wrapper && args.length == 1 && isArray(value)) {
            return wrapper.plant(value).value();
          }
          var index = 0,
              result = length ? funcs[index].apply(this, args) : value;

          while (++index < length) {
            result = funcs[index].call(this, result);
          }
          return result;
        };
      });
    }

    /**
     * Creates a function that wraps `func` to invoke it with optional `this`
     * binding of `thisArg`, partial application, and currying.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [partialsRight] The arguments to append to those provided
     *  to the new function.
     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
      var isAry = bitmask & WRAP_ARY_FLAG,
          isBind = bitmask & WRAP_BIND_FLAG,
          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,
          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),
          isFlip = bitmask & WRAP_FLIP_FLAG,
          Ctor = isBindKey ? undefined : createCtor(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length;

        while (index--) {
          args[index] = arguments[index];
        }
        if (isCurried) {
          var placeholder = getHolder(wrapper),
              holdersCount = countHolders(args, placeholder);
        }
        if (partials) {
          args = composeArgs(args, partials, holders, isCurried);
        }
        if (partialsRight) {
          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
        }
        length -= holdersCount;
        if (isCurried && length < arity) {
          var newHolders = replaceHolders(args, placeholder);
          return createRecurry(
            func, bitmask, createHybrid, wrapper.placeholder, thisArg,
            args, newHolders, argPos, ary, arity - length
          );
        }
        var thisBinding = isBind ? thisArg : this,
            fn = isBindKey ? thisBinding[func] : func;

        length = args.length;
        if (argPos) {
          args = reorder(args, argPos);
        } else if (isFlip && length > 1) {
          args.reverse();
        }
        if (isAry && ary < length) {
          args.length = ary;
        }
        if (this && this !== root && this instanceof wrapper) {
          fn = Ctor || createCtor(fn);
        }
        return fn.apply(thisBinding, args);
      }
      return wrapper;
    }

    /**
     * Creates a function like `_.invertBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} toIteratee The function to resolve iteratees.
     * @returns {Function} Returns the new inverter function.
     */
    function createInverter(setter, toIteratee) {
      return function(object, iteratee) {
        return baseInverter(object, setter, toIteratee(iteratee), {});
      };
    }

    /**
     * Creates a function that performs a mathematical operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @param {number} [defaultValue] The value used for `undefined` arguments.
     * @returns {Function} Returns the new mathematical operation function.
     */
    function createMathOperation(operator, defaultValue) {
      return function(value, other) {
        var result;
        if (value === undefined && other === undefined) {
          return defaultValue;
        }
        if (value !== undefined) {
          result = value;
        }
        if (other !== undefined) {
          if (result === undefined) {
            return other;
          }
          if (typeof value == 'string' || typeof other == 'string') {
            value = baseToString(value);
            other = baseToString(other);
          } else {
            value = baseToNumber(value);
            other = baseToNumber(other);
          }
          result = operator(value, other);
        }
        return result;
      };
    }

    /**
     * Creates a function like `_.over`.
     *
     * @private
     * @param {Function} arrayFunc The function to iterate over iteratees.
     * @returns {Function} Returns the new over function.
     */
    function createOver(arrayFunc) {
      return flatRest(function(iteratees) {
        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
        return baseRest(function(args) {
          var thisArg = this;
          return arrayFunc(iteratees, function(iteratee) {
            return apply(iteratee, thisArg, args);
          });
        });
      });
    }

    /**
     * Creates the padding for `string` based on `length`. The `chars` string
     * is truncated if the number of characters exceeds `length`.
     *
     * @private
     * @param {number} length The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padding for `string`.
     */
    function createPadding(length, chars) {
      chars = chars === undefined ? ' ' : baseToString(chars);

      var charsLength = chars.length;
      if (charsLength < 2) {
        return charsLength ? baseRepeat(chars, length) : chars;
      }
      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
      return hasUnicode(chars)
        ? castSlice(stringToArray(result), 0, length).join('')
        : result.slice(0, length);
    }

    /**
     * Creates a function that wraps `func` to invoke it with the `this` binding
     * of `thisArg` and `partials` prepended to the arguments it receives.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {Array} partials The arguments to prepend to those provided to
     *  the new function.
     * @returns {Function} Returns the new wrapped function.
     */
    function createPartial(func, bitmask, thisArg, partials) {
      var isBind = bitmask & WRAP_BIND_FLAG,
          Ctor = createCtor(func);

      function wrapper() {
        var argsIndex = -1,
            argsLength = arguments.length,
            leftIndex = -1,
            leftLength = partials.length,
            args = Array(leftLength + argsLength),
            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;

        while (++leftIndex < leftLength) {
          args[leftIndex] = partials[leftIndex];
        }
        while (argsLength--) {
          args[leftIndex++] = arguments[++argsIndex];
        }
        return apply(fn, isBind ? thisArg : this, args);
      }
      return wrapper;
    }

    /**
     * Creates a `_.range` or `_.rangeRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new range function.
     */
    function createRange(fromRight) {
      return function(start, end, step) {
        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {
          end = step = undefined;
        }
        // Ensure the sign of `-0` is preserved.
        start = toFinite(start);
        if (end === undefined) {
          end = start;
          start = 0;
        } else {
          end = toFinite(end);
        }
        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);
        return baseRange(start, end, step, fromRight);
      };
    }

    /**
     * Creates a function that performs a relational operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @returns {Function} Returns the new relational operation function.
     */
    function createRelationalOperation(operator) {
      return function(value, other) {
        if (!(typeof value == 'string' && typeof other == 'string')) {
          value = toNumber(value);
          other = toNumber(other);
        }
        return operator(value, other);
      };
    }

    /**
     * Creates a function that wraps `func` to continue currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {Function} wrapFunc The function to create the `func` wrapper.
     * @param {*} placeholder The placeholder value.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
      var isCurry = bitmask & WRAP_CURRY_FLAG,
          newHolders = isCurry ? holders : undefined,
          newHoldersRight = isCurry ? undefined : holders,
          newPartials = isCurry ? partials : undefined,
          newPartialsRight = isCurry ? undefined : partials;

      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);
      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);

      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
      }
      var newData = [
        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,
        newHoldersRight, argPos, ary, arity
      ];

      var result = wrapFunc.apply(undefined, newData);
      if (isLaziable(func)) {
        setData(result, newData);
      }
      result.placeholder = placeholder;
      return setWrapToString(result, func, bitmask);
    }

    /**
     * Creates a function like `_.round`.
     *
     * @private
     * @param {string} methodName The name of the `Math` method to use when rounding.
     * @returns {Function} Returns the new round function.
     */
    function createRound(methodName) {
      var func = Math[methodName];
      return function(number, precision) {
        number = toNumber(number);
        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);
        if (precision && nativeIsFinite(number)) {
          // Shift with exponential notation to avoid floating-point issues.
          // See [MDN](https://mdn.io/round#Examples) for more details.
          var pair = (toString(number) + 'e').split('e'),
              value = func(pair[0] + 'e' + (+pair[1] + precision));

          pair = (toString(value) + 'e').split('e');
          return +(pair[0] + 'e' + (+pair[1] - precision));
        }
        return func(number);
      };
    }

    /**
     * Creates a set object of `values`.
     *
     * @private
     * @param {Array} values The values to add to the set.
     * @returns {Object} Returns the new set.
     */
    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {
      return new Set(values);
    };

    /**
     * Creates a `_.toPairs` or `_.toPairsIn` function.
     *
     * @private
     * @param {Function} keysFunc The function to get the keys of a given object.
     * @returns {Function} Returns the new pairs function.
     */
    function createToPairs(keysFunc) {
      return function(object) {
        var tag = getTag(object);
        if (tag == mapTag) {
          return mapToArray(object);
        }
        if (tag == setTag) {
          return setToPairs(object);
        }
        return baseToPairs(object, keysFunc(object));
      };
    }

    /**
     * Creates a function that either curries or invokes `func` with optional
     * `this` binding and partially applied arguments.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags.
     *    1 - `_.bind`
     *    2 - `_.bindKey`
     *    4 - `_.curry` or `_.curryRight` of a bound function
     *    8 - `_.curry`
     *   16 - `_.curryRight`
     *   32 - `_.partial`
     *   64 - `_.partialRight`
     *  128 - `_.rearg`
     *  256 - `_.ary`
     *  512 - `_.flip`
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to be partially applied.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
      if (!isBindKey && typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var length = partials ? partials.length : 0;
      if (!length) {
        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
        partials = holders = undefined;
      }
      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
      arity = arity === undefined ? arity : toInteger(arity);
      length -= holders ? holders.length : 0;

      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
        var partialsRight = partials,
            holdersRight = holders;

        partials = holders = undefined;
      }
      var data = isBindKey ? undefined : getData(func);

      var newData = [
        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,
        argPos, ary, arity
      ];

      if (data) {
        mergeData(newData, data);
      }
      func = newData[0];
      bitmask = newData[1];
      thisArg = newData[2];
      partials = newData[3];
      holders = newData[4];
      arity = newData[9] = newData[9] === undefined
        ? (isBindKey ? 0 : func.length)
        : nativeMax(newData[9] - length, 0);

      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
      }
      if (!bitmask || bitmask == WRAP_BIND_FLAG) {
        var result = createBind(func, bitmask, thisArg);
      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
        result = createCurry(func, bitmask, arity);
      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
        result = createPartial(func, bitmask, thisArg, partials);
      } else {
        result = createHybrid.apply(undefined, newData);
      }
      var setter = data ? baseSetData : setData;
      return setWrapToString(setter(result, newData), func, bitmask);
    }

    /**
     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties
     * of source objects to the destination object for all destination properties
     * that resolve to `undefined`.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to assign.
     * @param {Object} object The parent object of `objValue`.
     * @returns {*} Returns the value to assign.
     */
    function customDefaultsAssignIn(objValue, srcValue, key, object) {
      if (objValue === undefined ||
          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {
        return srcValue;
      }
      return objValue;
    }

    /**
     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source
     * objects into destination objects that are passed thru.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to merge.
     * @param {Object} object The parent object of `objValue`.
     * @param {Object} source The parent object of `srcValue`.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     * @returns {*} Returns the value to assign.
     */
    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
      if (isObject(objValue) && isObject(srcValue)) {
        // Recursively merge objects and arrays (susceptible to call stack limits).
        stack.set(srcValue, objValue);
        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);
        stack['delete'](srcValue);
      }
      return objValue;
    }

    /**
     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain
     * objects.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {string} key The key of the property to inspect.
     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.
     */
    function customOmitClone(value) {
      return isPlainObject(value) ? undefined : value;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for arrays with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Array} array The array to compare.
     * @param {Array} other The other array to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `array` and `other` objects.
     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
     */
    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
          arrLength = array.length,
          othLength = other.length;

      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
        return false;
      }
      // Check that cyclic values are equal.
      var arrStacked = stack.get(array);
      var othStacked = stack.get(other);
      if (arrStacked && othStacked) {
        return arrStacked == other && othStacked == array;
      }
      var index = -1,
          result = true,
          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;

      stack.set(array, other);
      stack.set(other, array);

      // Ignore non-index properties.
      while (++index < arrLength) {
        var arrValue = array[index],
            othValue = other[index];

        if (customizer) {
          var compared = isPartial
            ? customizer(othValue, arrValue, index, other, array, stack)
            : customizer(arrValue, othValue, index, array, other, stack);
        }
        if (compared !== undefined) {
          if (compared) {
            continue;
          }
          result = false;
          break;
        }
        // Recursively compare arrays (susceptible to call stack limits).
        if (seen) {
          if (!arraySome(other, function(othValue, othIndex) {
                if (!cacheHas(seen, othIndex) &&
                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
                  return seen.push(othIndex);
                }
              })) {
            result = false;
            break;
          }
        } else if (!(
              arrValue === othValue ||
                equalFunc(arrValue, othValue, bitmask, customizer, stack)
            )) {
          result = false;
          break;
        }
      }
      stack['delete'](array);
      stack['delete'](other);
      return result;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for comparing objects of
     * the same `toStringTag`.
     *
     * **Note:** This function only supports comparing values with tags of
     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {string} tag The `toStringTag` of the objects to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
      switch (tag) {
        case dataViewTag:
          if ((object.byteLength != other.byteLength) ||
              (object.byteOffset != other.byteOffset)) {
            return false;
          }
          object = object.buffer;
          other = other.buffer;

        case arrayBufferTag:
          if ((object.byteLength != other.byteLength) ||
              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
            return false;
          }
          return true;

        case boolTag:
        case dateTag:
        case numberTag:
          // Coerce booleans to `1` or `0` and dates to milliseconds.
          // Invalid dates are coerced to `NaN`.
          return eq(+object, +other);

        case errorTag:
          return object.name == other.name && object.message == other.message;

        case regexpTag:
        case stringTag:
          // Coerce regexes to strings and treat strings, primitives and objects,
          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
          // for more details.
          return object == (other + '');

        case mapTag:
          var convert = mapToArray;

        case setTag:
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
          convert || (convert = setToArray);

          if (object.size != other.size && !isPartial) {
            return false;
          }
          // Assume cyclic values are equal.
          var stacked = stack.get(object);
          if (stacked) {
            return stacked == other;
          }
          bitmask |= COMPARE_UNORDERED_FLAG;

          // Recursively compare objects (susceptible to call stack limits).
          stack.set(object, other);
          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
          stack['delete'](object);
          return result;

        case symbolTag:
          if (symbolValueOf) {
            return symbolValueOf.call(object) == symbolValueOf.call(other);
          }
      }
      return false;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for objects with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
          objProps = getAllKeys(object),
          objLength = objProps.length,
          othProps = getAllKeys(other),
          othLength = othProps.length;

      if (objLength != othLength && !isPartial) {
        return false;
      }
      var index = objLength;
      while (index--) {
        var key = objProps[index];
        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
          return false;
        }
      }
      // Check that cyclic values are equal.
      var objStacked = stack.get(object);
      var othStacked = stack.get(other);
      if (objStacked && othStacked) {
        return objStacked == other && othStacked == object;
      }
      var result = true;
      stack.set(object, other);
      stack.set(other, object);

      var skipCtor = isPartial;
      while (++index < objLength) {
        key = objProps[index];
        var objValue = object[key],
            othValue = other[key];

        if (customizer) {
          var compared = isPartial
            ? customizer(othValue, objValue, key, other, object, stack)
            : customizer(objValue, othValue, key, object, other, stack);
        }
        // Recursively compare objects (susceptible to call stack limits).
        if (!(compared === undefined
              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
              : compared
            )) {
          result = false;
          break;
        }
        skipCtor || (skipCtor = key == 'constructor');
      }
      if (result && !skipCtor) {
        var objCtor = object.constructor,
            othCtor = other.constructor;

        // Non `Object` object instances with different constructors are not equal.
        if (objCtor != othCtor &&
            ('constructor' in object && 'constructor' in other) &&
            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
              typeof othCtor == 'function' && othCtor instanceof othCtor)) {
          result = false;
        }
      }
      stack['delete'](object);
      stack['delete'](other);
      return result;
    }

    /**
     * A specialized version of `baseRest` which flattens the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */
    function flatRest(func) {
      return setToString(overRest(func, undefined, flatten), func + '');
    }

    /**
     * Creates an array of own enumerable property names and symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function getAllKeys(object) {
      return baseGetAllKeys(object, keys, getSymbols);
    }

    /**
     * Creates an array of own and inherited enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function getAllKeysIn(object) {
      return baseGetAllKeys(object, keysIn, getSymbolsIn);
    }

    /**
     * Gets metadata for `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {*} Returns the metadata for `func`.
     */
    var getData = !metaMap ? noop : function(func) {
      return metaMap.get(func);
    };

    /**
     * Gets the name of `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {string} Returns the function name.
     */
    function getFuncName(func) {
      var result = (func.name + ''),
          array = realNames[result],
          length = hasOwnProperty.call(realNames, result) ? array.length : 0;

      while (length--) {
        var data = array[length],
            otherFunc = data.func;
        if (otherFunc == null || otherFunc == func) {
          return data.name;
        }
      }
      return result;
    }

    /**
     * Gets the argument placeholder value for `func`.
     *
     * @private
     * @param {Function} func The function to inspect.
     * @returns {*} Returns the placeholder value.
     */
    function getHolder(func) {
      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;
      return object.placeholder;
    }

    /**
     * Gets the appropriate "iteratee" function. If `_.iteratee` is customized,
     * this function returns the custom method, otherwise it returns `baseIteratee`.
     * If arguments are provided, the chosen function is invoked with them and
     * its result is returned.
     *
     * @private
     * @param {*} [value] The value to convert to an iteratee.
     * @param {number} [arity] The arity of the created iteratee.
     * @returns {Function} Returns the chosen function or its result.
     */
    function getIteratee() {
      var result = lodash.iteratee || iteratee;
      result = result === iteratee ? baseIteratee : result;
      return arguments.length ? result(arguments[0], arguments[1]) : result;
    }

    /**
     * Gets the data for `map`.
     *
     * @private
     * @param {Object} map The map to query.
     * @param {string} key The reference key.
     * @returns {*} Returns the map data.
     */
    function getMapData(map, key) {
      var data = map.__data__;
      return isKeyable(key)
        ? data[typeof key == 'string' ? 'string' : 'hash']
        : data.map;
    }

    /**
     * Gets the property names, values, and compare flags of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the match data of `object`.
     */
    function getMatchData(object) {
      var result = keys(object),
          length = result.length;

      while (length--) {
        var key = result[length],
            value = object[key];

        result[length] = [key, value, isStrictComparable(value)];
      }
      return result;
    }

    /**
     * Gets the native function at `key` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {string} key The key of the method to get.
     * @returns {*} Returns the function if it's native, else `undefined`.
     */
    function getNative(object, key) {
      var value = getValue(object, key);
      return baseIsNative(value) ? value : undefined;
    }

    /**
     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the raw `toStringTag`.
     */
    function getRawTag(value) {
      var isOwn = hasOwnProperty.call(value, symToStringTag),
          tag = value[symToStringTag];

      try {
        value[symToStringTag] = undefined;
        var unmasked = true;
      } catch (e) {}

      var result = nativeObjectToString.call(value);
      if (unmasked) {
        if (isOwn) {
          value[symToStringTag] = tag;
        } else {
          delete value[symToStringTag];
        }
      }
      return result;
    }

    /**
     * Creates an array of the own enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */
    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
      if (object == null) {
        return [];
      }
      object = Object(object);
      return arrayFilter(nativeGetSymbols(object), function(symbol) {
        return propertyIsEnumerable.call(object, symbol);
      });
    };

    /**
     * Creates an array of the own and inherited enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */
    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
      var result = [];
      while (object) {
        arrayPush(result, getSymbols(object));
        object = getPrototype(object);
      }
      return result;
    };

    /**
     * Gets the `toStringTag` of `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */
    var getTag = baseGetTag;

    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
        (Map && getTag(new Map) != mapTag) ||
        (Promise && getTag(Promise.resolve()) != promiseTag) ||
        (Set && getTag(new Set) != setTag) ||
        (WeakMap && getTag(new WeakMap) != weakMapTag)) {
      getTag = function(value) {
        var result = baseGetTag(value),
            Ctor = result == objectTag ? value.constructor : undefined,
            ctorString = Ctor ? toSource(Ctor) : '';

        if (ctorString) {
          switch (ctorString) {
            case dataViewCtorString: return dataViewTag;
            case mapCtorString: return mapTag;
            case promiseCtorString: return promiseTag;
            case setCtorString: return setTag;
            case weakMapCtorString: return weakMapTag;
          }
        }
        return result;
      };
    }

    /**
     * Gets the view, applying any `transforms` to the `start` and `end` positions.
     *
     * @private
     * @param {number} start The start of the view.
     * @param {number} end The end of the view.
     * @param {Array} transforms The transformations to apply to the view.
     * @returns {Object} Returns an object containing the `start` and `end`
     *  positions of the view.
     */
    function getView(start, end, transforms) {
      var index = -1,
          length = transforms.length;

      while (++index < length) {
        var data = transforms[index],
            size = data.size;

        switch (data.type) {
          case 'drop':      start += size; break;
          case 'dropRight': end -= size; break;
          case 'take':      end = nativeMin(end, start + size); break;
          case 'takeRight': start = nativeMax(start, end - size); break;
        }
      }
      return { 'start': start, 'end': end };
    }

    /**
     * Extracts wrapper details from the `source` body comment.
     *
     * @private
     * @param {string} source The source to inspect.
     * @returns {Array} Returns the wrapper details.
     */
    function getWrapDetails(source) {
      var match = source.match(reWrapDetails);
      return match ? match[1].split(reSplitDetails) : [];
    }

    /**
     * Checks if `path` exists on `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @param {Function} hasFunc The function to check properties.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     */
    function hasPath(object, path, hasFunc) {
      path = castPath(path, object);

      var index = -1,
          length = path.length,
          result = false;

      while (++index < length) {
        var key = toKey(path[index]);
        if (!(result = object != null && hasFunc(object, key))) {
          break;
        }
        object = object[key];
      }
      if (result || ++index != length) {
        return result;
      }
      length = object == null ? 0 : object.length;
      return !!length && isLength(length) && isIndex(key, length) &&
        (isArray(object) || isArguments(object));
    }

    /**
     * Initializes an array clone.
     *
     * @private
     * @param {Array} array The array to clone.
     * @returns {Array} Returns the initialized clone.
     */
    function initCloneArray(array) {
      var length = array.length,
          result = new array.constructor(length);

      // Add properties assigned by `RegExp#exec`.
      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
        result.index = array.index;
        result.input = array.input;
      }
      return result;
    }

    /**
     * Initializes an object clone.
     *
     * @private
     * @param {Object} object The object to clone.
     * @returns {Object} Returns the initialized clone.
     */
    function initCloneObject(object) {
      return (typeof object.constructor == 'function' && !isPrototype(object))
        ? baseCreate(getPrototype(object))
        : {};
    }

    /**
     * Initializes an object clone based on its `toStringTag`.
     *
     * **Note:** This function only supports cloning values with tags of
     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.
     *
     * @private
     * @param {Object} object The object to clone.
     * @param {string} tag The `toStringTag` of the object to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the initialized clone.
     */
    function initCloneByTag(object, tag, isDeep) {
      var Ctor = object.constructor;
      switch (tag) {
        case arrayBufferTag:
          return cloneArrayBuffer(object);

        case boolTag:
        case dateTag:
          return new Ctor(+object);

        case dataViewTag:
          return cloneDataView(object, isDeep);

        case float32Tag: case float64Tag:
        case int8Tag: case int16Tag: case int32Tag:
        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
          return cloneTypedArray(object, isDeep);

        case mapTag:
          return new Ctor;

        case numberTag:
        case stringTag:
          return new Ctor(object);

        case regexpTag:
          return cloneRegExp(object);

        case setTag:
          return new Ctor;

        case symbolTag:
          return cloneSymbol(object);
      }
    }

    /**
     * Inserts wrapper `details` in a comment at the top of the `source` body.
     *
     * @private
     * @param {string} source The source to modify.
     * @returns {Array} details The details to insert.
     * @returns {string} Returns the modified source.
     */
    function insertWrapDetails(source, details) {
      var length = details.length;
      if (!length) {
        return source;
      }
      var lastIndex = length - 1;
      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];
      details = details.join(length > 2 ? ', ' : ' ');
      return source.replace(reWrapComment, '{\n/* [wrapped with ' + details + '] */\n');
    }

    /**
     * Checks if `value` is a flattenable `arguments` object or array.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
     */
    function isFlattenable(value) {
      return isArray(value) || isArguments(value) ||
        !!(spreadableSymbol && value && value[spreadableSymbol]);
    }

    /**
     * Checks if `value` is a valid array-like index.
     *
     * @private
     * @param {*} value The value to check.
     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
     */
    function isIndex(value, length) {
      var type = typeof value;
      length = length == null ? MAX_SAFE_INTEGER : length;

      return !!length &&
        (type == 'number' ||
          (type != 'symbol' && reIsUint.test(value))) &&
            (value > -1 && value % 1 == 0 && value < length);
    }

    /**
     * Checks if the given arguments are from an iteratee call.
     *
     * @private
     * @param {*} value The potential iteratee value argument.
     * @param {*} index The potential iteratee index or key argument.
     * @param {*} object The potential iteratee object argument.
     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
     *  else `false`.
     */
    function isIterateeCall(value, index, object) {
      if (!isObject(object)) {
        return false;
      }
      var type = typeof index;
      if (type == 'number'
            ? (isArrayLike(object) && isIndex(index, object.length))
            : (type == 'string' && index in object)
          ) {
        return eq(object[index], value);
      }
      return false;
    }

    /**
     * Checks if `value` is a property name and not a property path.
     *
     * @private
     * @param {*} value The value to check.
     * @param {Object} [object] The object to query keys on.
     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
     */
    function isKey(value, object) {
      if (isArray(value)) {
        return false;
      }
      var type = typeof value;
      if (type == 'number' || type == 'symbol' || type == 'boolean' ||
          value == null || isSymbol(value)) {
        return true;
      }
      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
        (object != null && value in Object(object));
    }

    /**
     * Checks if `value` is suitable for use as unique object key.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
     */
    function isKeyable(value) {
      var type = typeof value;
      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
        ? (value !== '__proto__')
        : (value === null);
    }

    /**
     * Checks if `func` has a lazy counterpart.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
     *  else `false`.
     */
    function isLaziable(func) {
      var funcName = getFuncName(func),
          other = lodash[funcName];

      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
        return false;
      }
      if (func === other) {
        return true;
      }
      var data = getData(other);
      return !!data && func === data[0];
    }

    /**
     * Checks if `func` has its source masked.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` is masked, else `false`.
     */
    function isMasked(func) {
      return !!maskSrcKey && (maskSrcKey in func);
    }

    /**
     * Checks if `func` is capable of being masked.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.
     */
    var isMaskable = coreJsData ? isFunction : stubFalse;

    /**
     * Checks if `value` is likely a prototype object.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
     */
    function isPrototype(value) {
      var Ctor = value && value.constructor,
          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

      return value === proto;
    }

    /**
     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` if suitable for strict
     *  equality comparisons, else `false`.
     */
    function isStrictComparable(value) {
      return value === value && !isObject(value);
    }

    /**
     * A specialized version of `matchesProperty` for source values suitable
     * for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {string} key The key of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */
    function matchesStrictComparable(key, srcValue) {
      return function(object) {
        if (object == null) {
          return false;
        }
        return object[key] === srcValue &&
          (srcValue !== undefined || (key in Object(object)));
      };
    }

    /**
     * A specialized version of `_.memoize` which clears the memoized function's
     * cache when it exceeds `MAX_MEMOIZE_SIZE`.
     *
     * @private
     * @param {Function} func The function to have its output memoized.
     * @returns {Function} Returns the new memoized function.
     */
    function memoizeCapped(func) {
      var result = memoize(func, function(key) {
        if (cache.size === MAX_MEMOIZE_SIZE) {
          cache.clear();
        }
        return key;
      });

      var cache = result.cache;
      return result;
    }

    /**
     * Merges the function metadata of `source` into `data`.
     *
     * Merging metadata reduces the number of wrappers used to invoke a function.
     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
     * may be applied regardless of execution order. Methods like `_.ary` and
     * `_.rearg` modify function arguments, making the order in which they are
     * executed important, preventing the merging of metadata. However, we make
     * an exception for a safe combined case where curried functions have `_.ary`
     * and or `_.rearg` applied.
     *
     * @private
     * @param {Array} data The destination metadata.
     * @param {Array} source The source metadata.
     * @returns {Array} Returns `data`.
     */
    function mergeData(data, source) {
      var bitmask = data[1],
          srcBitmask = source[1],
          newBitmask = bitmask | srcBitmask,
          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);

      var isCombo =
        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||
        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||
        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));

      // Exit early if metadata can't be merged.
      if (!(isCommon || isCombo)) {
        return data;
      }
      // Use source `thisArg` if available.
      if (srcBitmask & WRAP_BIND_FLAG) {
        data[2] = source[2];
        // Set when currying a bound function.
        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
      }
      // Compose partial arguments.
      var value = source[3];
      if (value) {
        var partials = data[3];
        data[3] = partials ? composeArgs(partials, value, source[4]) : value;
        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
      }
      // Compose partial right arguments.
      value = source[5];
      if (value) {
        partials = data[5];
        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
      }
      // Use source `argPos` if available.
      value = source[7];
      if (value) {
        data[7] = value;
      }
      // Use source `ary` if it's smaller.
      if (srcBitmask & WRAP_ARY_FLAG) {
        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
      }
      // Use source `arity` if one is not provided.
      if (data[9] == null) {
        data[9] = source[9];
      }
      // Use source `func` and merge bitmasks.
      data[0] = source[0];
      data[1] = newBitmask;

      return data;
    }

    /**
     * This function is like
     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * except that it includes inherited enumerable properties.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function nativeKeysIn(object) {
      var result = [];
      if (object != null) {
        for (var key in Object(object)) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * Converts `value` to a string using `Object.prototype.toString`.
     *
     * @private
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     */
    function objectToString(value) {
      return nativeObjectToString.call(value);
    }

    /**
     * A specialized version of `baseRest` which transforms the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @param {Function} transform The rest array transform.
     * @returns {Function} Returns the new function.
     */
    function overRest(func, start, transform) {
      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
      return function() {
        var args = arguments,
            index = -1,
            length = nativeMax(args.length - start, 0),
            array = Array(length);

        while (++index < length) {
          array[index] = args[start + index];
        }
        index = -1;
        var otherArgs = Array(start + 1);
        while (++index < start) {
          otherArgs[index] = args[index];
        }
        otherArgs[start] = transform(array);
        return apply(func, this, otherArgs);
      };
    }

    /**
     * Gets the parent value at `path` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array} path The path to get the parent value of.
     * @returns {*} Returns the parent value.
     */
    function parent(object, path) {
      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
    }

    /**
     * Reorder `array` according to the specified indexes where the element at
     * the first index is assigned as the first element, the element at
     * the second index is assigned as the second element, and so on.
     *
     * @private
     * @param {Array} array The array to reorder.
     * @param {Array} indexes The arranged array indexes.
     * @returns {Array} Returns `array`.
     */
    function reorder(array, indexes) {
      var arrLength = array.length,
          length = nativeMin(indexes.length, arrLength),
          oldArray = copyArray(array);

      while (length--) {
        var index = indexes[length];
        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
      }
      return array;
    }

    /**
     * Gets the value at `key`, unless `key` is "__proto__" or "constructor".
     *
     * @private
     * @param {Object} object The object to query.
     * @param {string} key The key of the property to get.
     * @returns {*} Returns the property value.
     */
    function safeGet(object, key) {
      if (key === 'constructor' && typeof object[key] === 'function') {
        return;
      }

      if (key == '__proto__') {
        return;
      }

      return object[key];
    }

    /**
     * Sets metadata for `func`.
     *
     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
     * period of time, it will trip its breaker and transition to an identity
     * function to avoid garbage collection pauses in V8. See
     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
     * for more details.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */
    var setData = shortOut(baseSetData);

    /**
     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @returns {number|Object} Returns the timer id or timeout object.
     */
    var setTimeout = ctxSetTimeout || function(func, wait) {
      return root.setTimeout(func, wait);
    };

    /**
     * Sets the `toString` method of `func` to return `string`.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */
    var setToString = shortOut(baseSetToString);

    /**
     * Sets the `toString` method of `wrapper` to mimic the source of `reference`
     * with wrapper details in a comment at the top of the source body.
     *
     * @private
     * @param {Function} wrapper The function to modify.
     * @param {Function} reference The reference function.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Function} Returns `wrapper`.
     */
    function setWrapToString(wrapper, reference, bitmask) {
      var source = (reference + '');
      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
    }

    /**
     * Creates a function that'll short out and invoke `identity` instead
     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
     * milliseconds.
     *
     * @private
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new shortable function.
     */
    function shortOut(func) {
      var count = 0,
          lastCalled = 0;

      return function() {
        var stamp = nativeNow(),
            remaining = HOT_SPAN - (stamp - lastCalled);

        lastCalled = stamp;
        if (remaining > 0) {
          if (++count >= HOT_COUNT) {
            return arguments[0];
          }
        } else {
          count = 0;
        }
        return func.apply(undefined, arguments);
      };
    }

    /**
     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @param {number} [size=array.length] The size of `array`.
     * @returns {Array} Returns `array`.
     */
    function shuffleSelf(array, size) {
      var index = -1,
          length = array.length,
          lastIndex = length - 1;

      size = size === undefined ? length : size;
      while (++index < size) {
        var rand = baseRandom(index, lastIndex),
            value = array[rand];

        array[rand] = array[index];
        array[index] = value;
      }
      array.length = size;
      return array;
    }

    /**
     * Converts `string` to a property path array.
     *
     * @private
     * @param {string} string The string to convert.
     * @returns {Array} Returns the property path array.
     */
    var stringToPath = memoizeCapped(function(string) {
      var result = [];
      if (string.charCodeAt(0) === 46 /* . */) {
        result.push('');
      }
      string.replace(rePropName, function(match, number, quote, subString) {
        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));
      });
      return result;
    });

    /**
     * Converts `value` to a string key if it's not a string or symbol.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {string|symbol} Returns the key.
     */
    function toKey(value) {
      if (typeof value == 'string' || isSymbol(value)) {
        return value;
      }
      var result = (value + '');
      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
    }

    /**
     * Converts `func` to its source code.
     *
     * @private
     * @param {Function} func The function to convert.
     * @returns {string} Returns the source code.
     */
    function toSource(func) {
      if (func != null) {
        try {
          return funcToString.call(func);
        } catch (e) {}
        try {
          return (func + '');
        } catch (e) {}
      }
      return '';
    }

    /**
     * Updates wrapper `details` based on `bitmask` flags.
     *
     * @private
     * @returns {Array} details The details to modify.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Array} Returns `details`.
     */
    function updateWrapDetails(details, bitmask) {
      arrayEach(wrapFlags, function(pair) {
        var value = '_.' + pair[0];
        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {
          details.push(value);
        }
      });
      return details.sort();
    }

    /**
     * Creates a clone of `wrapper`.
     *
     * @private
     * @param {Object} wrapper The wrapper to clone.
     * @returns {Object} Returns the cloned wrapper.
     */
    function wrapperClone(wrapper) {
      if (wrapper instanceof LazyWrapper) {
        return wrapper.clone();
      }
      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
      result.__actions__ = copyArray(wrapper.__actions__);
      result.__index__  = wrapper.__index__;
      result.__values__ = wrapper.__values__;
      return result;
    }

    /*------------------------------------------------------------------------*/

    /**
     * Creates an array of elements split into groups the length of `size`.
     * If `array` can't be split evenly, the final chunk will be the remaining
     * elements.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to process.
     * @param {number} [size=1] The length of each chunk
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the new array of chunks.
     * @example
     *
     * _.chunk(['a', 'b', 'c', 'd'], 2);
     * // => [['a', 'b'], ['c', 'd']]
     *
     * _.chunk(['a', 'b', 'c', 'd'], 3);
     * // => [['a', 'b', 'c'], ['d']]
     */
    function chunk(array, size, guard) {
      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {
        size = 1;
      } else {
        size = nativeMax(toInteger(size), 0);
      }
      var length = array == null ? 0 : array.length;
      if (!length || size < 1) {
        return [];
      }
      var index = 0,
          resIndex = 0,
          result = Array(nativeCeil(length / size));

      while (index < length) {
        result[resIndex++] = baseSlice(array, index, (index += size));
      }
      return result;
    }

    /**
     * Creates an array with all falsey values removed. The values `false`, `null`,
     * `0`, `""`, `undefined`, and `NaN` are falsey.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to compact.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.compact([0, 1, false, 2, '', 3]);
     * // => [1, 2, 3]
     */
    function compact(array) {
      var index = -1,
          length = array == null ? 0 : array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index];
        if (value) {
          result[resIndex++] = value;
        }
      }
      return result;
    }

    /**
     * Creates a new array concatenating `array` with any additional arrays
     * and/or values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to concatenate.
     * @param {...*} [values] The values to concatenate.
     * @returns {Array} Returns the new concatenated array.
     * @example
     *
     * var array = [1];
     * var other = _.concat(array, 2, [3], [[4]]);
     *
     * console.log(other);
     * // => [1, 2, 3, [4]]
     *
     * console.log(array);
     * // => [1]
     */
    function concat() {
      var length = arguments.length;
      if (!length) {
        return [];
      }
      var args = Array(length - 1),
          array = arguments[0],
          index = length;

      while (index--) {
        args[index - 1] = arguments[index];
      }
      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));
    }

    /**
     * Creates an array of `array` values not included in the other given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * **Note:** Unlike `_.pullAll`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.without, _.xor
     * @example
     *
     * _.difference([2, 1], [2, 3]);
     * // => [1]
     */
    var difference = baseRest(function(array, values) {
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))
        : [];
    });

    /**
     * This method is like `_.difference` except that it accepts `iteratee` which
     * is invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */
    var differenceBy = baseRest(function(array, values) {
      var iteratee = last(values);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))
        : [];
    });

    /**
     * This method is like `_.difference` except that it accepts `comparator`
     * which is invoked to compare elements of `array` to `values`. The order and
     * references of result values are determined by the first array. The comparator
     * is invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     *
     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }]
     */
    var differenceWith = baseRest(function(array, values) {
      var comparator = last(values);
      if (isArrayLikeObject(comparator)) {
        comparator = undefined;
      }
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)
        : [];
    });

    /**
     * Creates a slice of `array` with `n` elements dropped from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.drop([1, 2, 3]);
     * // => [2, 3]
     *
     * _.drop([1, 2, 3], 2);
     * // => [3]
     *
     * _.drop([1, 2, 3], 5);
     * // => []
     *
     * _.drop([1, 2, 3], 0);
     * // => [1, 2, 3]
     */
    function drop(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      return baseSlice(array, n < 0 ? 0 : n, length);
    }

    /**
     * Creates a slice of `array` with `n` elements dropped from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.dropRight([1, 2, 3]);
     * // => [1, 2]
     *
     * _.dropRight([1, 2, 3], 2);
     * // => [1]
     *
     * _.dropRight([1, 2, 3], 5);
     * // => []
     *
     * _.dropRight([1, 2, 3], 0);
     * // => [1, 2, 3]
     */
    function dropRight(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      n = length - n;
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }

    /**
     * Creates a slice of `array` excluding elements dropped from the end.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.dropRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropRightWhile(users, ['active', false]);
     * // => objects for ['barney']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropRightWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */
    function dropRightWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), true, true)
        : [];
    }

    /**
     * Creates a slice of `array` excluding elements dropped from the beginning.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.dropWhile(users, function(o) { return !o.active; });
     * // => objects for ['pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropWhile(users, ['active', false]);
     * // => objects for ['pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */
    function dropWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), true)
        : [];
    }

    /**
     * Fills elements of `array` with `value` from `start` up to, but not
     * including, `end`.
     *
     * **Note:** This method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Array
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.fill(array, 'a');
     * console.log(array);
     * // => ['a', 'a', 'a']
     *
     * _.fill(Array(3), 2);
     * // => [2, 2, 2]
     *
     * _.fill([4, 6, 8, 10], '*', 1, 3);
     * // => [4, '*', '*', 10]
     */
    function fill(array, value, start, end) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {
        start = 0;
        end = length;
      }
      return baseFill(array, value, start, end);
    }

    /**
     * This method is like `_.find` except that it returns the index of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.findIndex(users, function(o) { return o.user == 'barney'; });
     * // => 0
     *
     * // The `_.matches` iteratee shorthand.
     * _.findIndex(users, { 'user': 'fred', 'active': false });
     * // => 1
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findIndex(users, ['active', false]);
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.findIndex(users, 'active');
     * // => 2
     */
    function findIndex(array, predicate, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = fromIndex == null ? 0 : toInteger(fromIndex);
      if (index < 0) {
        index = nativeMax(length + index, 0);
      }
      return baseFindIndex(array, getIteratee(predicate, 3), index);
    }

    /**
     * This method is like `_.findIndex` except that it iterates over elements
     * of `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });
     * // => 2
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastIndex(users, { 'user': 'barney', 'active': true });
     * // => 0
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastIndex(users, ['active', false]);
     * // => 2
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastIndex(users, 'active');
     * // => 0
     */
    function findLastIndex(array, predicate, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = length - 1;
      if (fromIndex !== undefined) {
        index = toInteger(fromIndex);
        index = fromIndex < 0
          ? nativeMax(length + index, 0)
          : nativeMin(index, length - 1);
      }
      return baseFindIndex(array, getIteratee(predicate, 3), index, true);
    }

    /**
     * Flattens `array` a single level deep.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flatten([1, [2, [3, [4]], 5]]);
     * // => [1, 2, [3, [4]], 5]
     */
    function flatten(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseFlatten(array, 1) : [];
    }

    /**
     * Recursively flattens `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flattenDeep([1, [2, [3, [4]], 5]]);
     * // => [1, 2, 3, 4, 5]
     */
    function flattenDeep(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseFlatten(array, INFINITY) : [];
    }

    /**
     * Recursively flatten `array` up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * var array = [1, [2, [3, [4]], 5]];
     *
     * _.flattenDepth(array, 1);
     * // => [1, 2, [3, [4]], 5]
     *
     * _.flattenDepth(array, 2);
     * // => [1, 2, 3, [4], 5]
     */
    function flattenDepth(array, depth) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      depth = depth === undefined ? 1 : toInteger(depth);
      return baseFlatten(array, depth);
    }

    /**
     * The inverse of `_.toPairs`; this method returns an object composed
     * from key-value `pairs`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} pairs The key-value pairs.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.fromPairs([['a', 1], ['b', 2]]);
     * // => { 'a': 1, 'b': 2 }
     */
    function fromPairs(pairs) {
      var index = -1,
          length = pairs == null ? 0 : pairs.length,
          result = {};

      while (++index < length) {
        var pair = pairs[index];
        result[pair[0]] = pair[1];
      }
      return result;
    }

    /**
     * Gets the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias first
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the first element of `array`.
     * @example
     *
     * _.head([1, 2, 3]);
     * // => 1
     *
     * _.head([]);
     * // => undefined
     */
    function head(array) {
      return (array && array.length) ? array[0] : undefined;
    }

    /**
     * Gets the index at which the first occurrence of `value` is found in `array`
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. If `fromIndex` is negative, it's used as the
     * offset from the end of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.indexOf([1, 2, 1, 2], 2);
     * // => 1
     *
     * // Search from the `fromIndex`.
     * _.indexOf([1, 2, 1, 2], 2, 2);
     * // => 3
     */
    function indexOf(array, value, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = fromIndex == null ? 0 : toInteger(fromIndex);
      if (index < 0) {
        index = nativeMax(length + index, 0);
      }
      return baseIndexOf(array, value, index);
    }

    /**
     * Gets all but the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.initial([1, 2, 3]);
     * // => [1, 2]
     */
    function initial(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseSlice(array, 0, -1) : [];
    }

    /**
     * Creates an array of unique values that are included in all given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersection([2, 1], [2, 3]);
     * // => [2]
     */
    var intersection = baseRest(function(arrays) {
      var mapped = arrayMap(arrays, castArrayLikeObject);
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped)
        : [];
    });

    /**
     * This method is like `_.intersection` except that it accepts `iteratee`
     * which is invoked for each element of each `arrays` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [2.1]
     *
     * // The `_.property` iteratee shorthand.
     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }]
     */
    var intersectionBy = baseRest(function(arrays) {
      var iteratee = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);

      if (iteratee === last(mapped)) {
        iteratee = undefined;
      } else {
        mapped.pop();
      }
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped, getIteratee(iteratee, 2))
        : [];
    });

    /**
     * This method is like `_.intersection` except that it accepts `comparator`
     * which is invoked to compare elements of `arrays`. The order and references
     * of result values are determined by the first array. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.intersectionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }]
     */
    var intersectionWith = baseRest(function(arrays) {
      var comparator = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);

      comparator = typeof comparator == 'function' ? comparator : undefined;
      if (comparator) {
        mapped.pop();
      }
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped, undefined, comparator)
        : [];
    });

    /**
     * Converts all elements in `array` into a string separated by `separator`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to convert.
     * @param {string} [separator=','] The element separator.
     * @returns {string} Returns the joined string.
     * @example
     *
     * _.join(['a', 'b', 'c'], '~');
     * // => 'a~b~c'
     */
    function join(array, separator) {
      return array == null ? '' : nativeJoin.call(array, separator);
    }

    /**
     * Gets the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the last element of `array`.
     * @example
     *
     * _.last([1, 2, 3]);
     * // => 3
     */
    function last(array) {
      var length = array == null ? 0 : array.length;
      return length ? array[length - 1] : undefined;
    }

    /**
     * This method is like `_.indexOf` except that it iterates over elements of
     * `array` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.lastIndexOf([1, 2, 1, 2], 2);
     * // => 3
     *
     * // Search from the `fromIndex`.
     * _.lastIndexOf([1, 2, 1, 2], 2, 2);
     * // => 1
     */
    function lastIndexOf(array, value, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = length;
      if (fromIndex !== undefined) {
        index = toInteger(fromIndex);
        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
      }
      return value === value
        ? strictLastIndexOf(array, value, index)
        : baseFindIndex(array, baseIsNaN, index, true);
    }

    /**
     * Gets the element at index `n` of `array`. If `n` is negative, the nth
     * element from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.11.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=0] The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     *
     * _.nth(array, 1);
     * // => 'b'
     *
     * _.nth(array, -2);
     * // => 'c';
     */
    function nth(array, n) {
      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;
    }

    /**
     * Removes all given values from `array` using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`
     * to remove elements from an array by predicate.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...*} [values] The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pull(array, 'a', 'c');
     * console.log(array);
     * // => ['b', 'b']
     */
    var pull = baseRest(pullAll);

    /**
     * This method is like `_.pull` except that it accepts an array of values to remove.
     *
     * **Note:** Unlike `_.difference`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pullAll(array, ['a', 'c']);
     * console.log(array);
     * // => ['b', 'b']
     */
    function pullAll(array, values) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values)
        : array;
    }

    /**
     * This method is like `_.pullAll` except that it accepts `iteratee` which is
     * invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The iteratee is invoked with one argument: (value).
     *
     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];
     *
     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');
     * console.log(array);
     * // => [{ 'x': 2 }]
     */
    function pullAllBy(array, values, iteratee) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values, getIteratee(iteratee, 2))
        : array;
    }

    /**
     * This method is like `_.pullAll` except that it accepts `comparator` which
     * is invoked to compare elements of `array` to `values`. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];
     *
     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);
     * console.log(array);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]
     */
    function pullAllWith(array, values, comparator) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values, undefined, comparator)
        : array;
    }

    /**
     * Removes elements from `array` corresponding to `indexes` and returns an
     * array of removed elements.
     *
     * **Note:** Unlike `_.at`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...(number|number[])} [indexes] The indexes of elements to remove.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     * var pulled = _.pullAt(array, [1, 3]);
     *
     * console.log(array);
     * // => ['a', 'c']
     *
     * console.log(pulled);
     * // => ['b', 'd']
     */
    var pullAt = flatRest(function(array, indexes) {
      var length = array == null ? 0 : array.length,
          result = baseAt(array, indexes);

      basePullAt(array, arrayMap(indexes, function(index) {
        return isIndex(index, length) ? +index : index;
      }).sort(compareAscending));

      return result;
    });

    /**
     * Removes all elements from `array` that `predicate` returns truthy for
     * and returns an array of the removed elements. The predicate is invoked
     * with three arguments: (value, index, array).
     *
     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`
     * to pull elements from an array by value.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = [1, 2, 3, 4];
     * var evens = _.remove(array, function(n) {
     *   return n % 2 == 0;
     * });
     *
     * console.log(array);
     * // => [1, 3]
     *
     * console.log(evens);
     * // => [2, 4]
     */
    function remove(array, predicate) {
      var result = [];
      if (!(array && array.length)) {
        return result;
      }
      var index = -1,
          indexes = [],
          length = array.length;

      predicate = getIteratee(predicate, 3);
      while (++index < length) {
        var value = array[index];
        if (predicate(value, index, array)) {
          result.push(value);
          indexes.push(index);
        }
      }
      basePullAt(array, indexes);
      return result;
    }

    /**
     * Reverses `array` so that the first element becomes the last, the second
     * element becomes the second to last, and so on.
     *
     * **Note:** This method mutates `array` and is based on
     * [`Array#reverse`](https://mdn.io/Array/reverse).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.reverse(array);
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */
    function reverse(array) {
      return array == null ? array : nativeReverse.call(array);
    }

    /**
     * Creates a slice of `array` from `start` up to, but not including, `end`.
     *
     * **Note:** This method is used instead of
     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are
     * returned.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */
    function slice(array, start, end) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {
        start = 0;
        end = length;
      }
      else {
        start = start == null ? 0 : toInteger(start);
        end = end === undefined ? length : toInteger(end);
      }
      return baseSlice(array, start, end);
    }

    /**
     * Uses a binary search to determine the lowest index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedIndex([30, 50], 40);
     * // => 1
     */
    function sortedIndex(array, value) {
      return baseSortedIndex(array, value);
    }

    /**
     * This method is like `_.sortedIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');
     * // => 0
     */
    function sortedIndexBy(array, value, iteratee) {
      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));
    }

    /**
     * This method is like `_.indexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);
     * // => 1
     */
    function sortedIndexOf(array, value) {
      var length = array == null ? 0 : array.length;
      if (length) {
        var index = baseSortedIndex(array, value);
        if (index < length && eq(array[index], value)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * This method is like `_.sortedIndex` except that it returns the highest
     * index at which `value` should be inserted into `array` in order to
     * maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);
     * // => 4
     */
    function sortedLastIndex(array, value) {
      return baseSortedIndex(array, value, true);
    }

    /**
     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 1
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');
     * // => 1
     */
    function sortedLastIndexBy(array, value, iteratee) {
      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);
    }

    /**
     * This method is like `_.lastIndexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);
     * // => 3
     */
    function sortedLastIndexOf(array, value) {
      var length = array == null ? 0 : array.length;
      if (length) {
        var index = baseSortedIndex(array, value, true) - 1;
        if (eq(array[index], value)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * This method is like `_.uniq` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniq([1, 1, 2]);
     * // => [1, 2]
     */
    function sortedUniq(array) {
      return (array && array.length)
        ? baseSortedUniq(array)
        : [];
    }

    /**
     * This method is like `_.uniqBy` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);
     * // => [1.1, 2.3]
     */
    function sortedUniqBy(array, iteratee) {
      return (array && array.length)
        ? baseSortedUniq(array, getIteratee(iteratee, 2))
        : [];
    }

    /**
     * Gets all but the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.tail([1, 2, 3]);
     * // => [2, 3]
     */
    function tail(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseSlice(array, 1, length) : [];
    }

    /**
     * Creates a slice of `array` with `n` elements taken from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.take([1, 2, 3]);
     * // => [1]
     *
     * _.take([1, 2, 3], 2);
     * // => [1, 2]
     *
     * _.take([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.take([1, 2, 3], 0);
     * // => []
     */
    function take(array, n, guard) {
      if (!(array && array.length)) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }

    /**
     * Creates a slice of `array` with `n` elements taken from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.takeRight([1, 2, 3]);
     * // => [3]
     *
     * _.takeRight([1, 2, 3], 2);
     * // => [2, 3]
     *
     * _.takeRight([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.takeRight([1, 2, 3], 0);
     * // => []
     */
    function takeRight(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      n = length - n;
      return baseSlice(array, n < 0 ? 0 : n, length);
    }

    /**
     * Creates a slice of `array` with elements taken from the end. Elements are
     * taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.takeRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeRightWhile(users, ['active', false]);
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeRightWhile(users, 'active');
     * // => []
     */
    function takeRightWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), false, true)
        : [];
    }

    /**
     * Creates a slice of `array` with elements taken from the beginning. Elements
     * are taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.takeWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeWhile(users, ['active', false]);
     * // => objects for ['barney', 'fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeWhile(users, 'active');
     * // => []
     */
    function takeWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3))
        : [];
    }

    /**
     * Creates an array of unique values, in order, from all given arrays using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.union([2], [1, 2]);
     * // => [2, 1]
     */
    var union = baseRest(function(arrays) {
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
    });

    /**
     * This method is like `_.union` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which uniqueness is computed. Result values are chosen from the first
     * array in which the value occurs. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.unionBy([2.1], [1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    var unionBy = baseRest(function(arrays) {
      var iteratee = last(arrays);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));
    });

    /**
     * This method is like `_.union` except that it accepts `comparator` which
     * is invoked to compare elements of `arrays`. Result values are chosen from
     * the first array in which the value occurs. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.unionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */
    var unionWith = baseRest(function(arrays) {
      var comparator = last(arrays);
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);
    });

    /**
     * Creates a duplicate-free version of an array, using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons, in which only the first occurrence of each element
     * is kept. The order of result values is determined by the order they occur
     * in the array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniq([2, 1, 2]);
     * // => [2, 1]
     */
    function uniq(array) {
      return (array && array.length) ? baseUniq(array) : [];
    }

    /**
     * This method is like `_.uniq` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * uniqueness is computed. The order of result values is determined by the
     * order they occur in the array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    function uniqBy(array, iteratee) {
      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];
    }

    /**
     * This method is like `_.uniq` except that it accepts `comparator` which
     * is invoked to compare elements of `array`. The order of result values is
     * determined by the order they occur in the array.The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.uniqWith(objects, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]
     */
    function uniqWith(array, comparator) {
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];
    }

    /**
     * This method is like `_.zip` except that it accepts an array of grouped
     * elements and creates an array regrouping the elements to their pre-zip
     * configuration.
     *
     * @static
     * @memberOf _
     * @since 1.2.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     *
     * _.unzip(zipped);
     * // => [['a', 'b'], [1, 2], [true, false]]
     */
    function unzip(array) {
      if (!(array && array.length)) {
        return [];
      }
      var length = 0;
      array = arrayFilter(array, function(group) {
        if (isArrayLikeObject(group)) {
          length = nativeMax(group.length, length);
          return true;
        }
      });
      return baseTimes(length, function(index) {
        return arrayMap(array, baseProperty(index));
      });
    }

    /**
     * This method is like `_.unzip` except that it accepts `iteratee` to specify
     * how regrouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  regrouped values.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);
     * // => [[1, 10, 100], [2, 20, 200]]
     *
     * _.unzipWith(zipped, _.add);
     * // => [3, 30, 300]
     */
    function unzipWith(array, iteratee) {
      if (!(array && array.length)) {
        return [];
      }
      var result = unzip(array);
      if (iteratee == null) {
        return result;
      }
      return arrayMap(result, function(group) {
        return apply(iteratee, undefined, group);
      });
    }

    /**
     * Creates an array excluding all given values using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.pull`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...*} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.xor
     * @example
     *
     * _.without([2, 1, 2, 3], 1, 2);
     * // => [3]
     */
    var without = baseRest(function(array, values) {
      return isArrayLikeObject(array)
        ? baseDifference(array, values)
        : [];
    });

    /**
     * Creates an array of unique values that is the
     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)
     * of the given arrays. The order of result values is determined by the order
     * they occur in the arrays.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.without
     * @example
     *
     * _.xor([2, 1], [2, 3]);
     * // => [1, 3]
     */
    var xor = baseRest(function(arrays) {
      return baseXor(arrayFilter(arrays, isArrayLikeObject));
    });

    /**
     * This method is like `_.xor` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which by which they're compared. The order of result values is determined
     * by the order they occur in the arrays. The iteratee is invoked with one
     * argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2, 3.4]
     *
     * // The `_.property` iteratee shorthand.
     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */
    var xorBy = baseRest(function(arrays) {
      var iteratee = last(arrays);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));
    });

    /**
     * This method is like `_.xor` except that it accepts `comparator` which is
     * invoked to compare elements of `arrays`. The order of result values is
     * determined by the order they occur in the arrays. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.xorWith(objects, others, _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */
    var xorWith = baseRest(function(arrays) {
      var comparator = last(arrays);
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);
    });

    /**
     * Creates an array of grouped elements, the first of which contains the
     * first elements of the given arrays, the second of which contains the
     * second elements of the given arrays, and so on.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     */
    var zip = baseRest(unzip);

    /**
     * This method is like `_.fromPairs` except that it accepts two arrays,
     * one of property identifiers and one of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 0.4.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObject(['a', 'b'], [1, 2]);
     * // => { 'a': 1, 'b': 2 }
     */
    function zipObject(props, values) {
      return baseZipObject(props || [], values || [], assignValue);
    }

    /**
     * This method is like `_.zipObject` except that it supports property paths.
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);
     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }
     */
    function zipObjectDeep(props, values) {
      return baseZipObject(props || [], values || [], baseSet);
    }

    /**
     * This method is like `_.zip` except that it accepts `iteratee` to specify
     * how grouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  grouped values.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {
     *   return a + b + c;
     * });
     * // => [111, 222]
     */
    var zipWith = baseRest(function(arrays) {
      var length = arrays.length,
          iteratee = length > 1 ? arrays[length - 1] : undefined;

      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;
      return unzipWith(arrays, iteratee);
    });

    /*------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` wrapper instance that wraps `value` with explicit method
     * chain sequences enabled. The result of such sequences must be unwrapped
     * with `_#value`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Seq
     * @param {*} value The value to wrap.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36 },
     *   { 'user': 'fred',    'age': 40 },
     *   { 'user': 'pebbles', 'age': 1 }
     * ];
     *
     * var youngest = _
     *   .chain(users)
     *   .sortBy('age')
     *   .map(function(o) {
     *     return o.user + ' is ' + o.age;
     *   })
     *   .head()
     *   .value();
     * // => 'pebbles is 1'
     */
    function chain(value) {
      var result = lodash(value);
      result.__chain__ = true;
      return result;
    }

    /**
     * This method invokes `interceptor` and returns `value`. The interceptor
     * is invoked with one argument; (value). The purpose of this method is to
     * "tap into" a method chain sequence in order to modify intermediate results.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns `value`.
     * @example
     *
     * _([1, 2, 3])
     *  .tap(function(array) {
     *    // Mutate input array.
     *    array.pop();
     *  })
     *  .reverse()
     *  .value();
     * // => [2, 1]
     */
    function tap(value, interceptor) {
      interceptor(value);
      return value;
    }

    /**
     * This method is like `_.tap` except that it returns the result of `interceptor`.
     * The purpose of this method is to "pass thru" values replacing intermediate
     * results in a method chain sequence.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns the result of `interceptor`.
     * @example
     *
     * _('  abc  ')
     *  .chain()
     *  .trim()
     *  .thru(function(value) {
     *    return [value];
     *  })
     *  .value();
     * // => ['abc']
     */
    function thru(value, interceptor) {
      return interceptor(value);
    }

    /**
     * This method is the wrapper version of `_.at`.
     *
     * @name at
     * @memberOf _
     * @since 1.0.0
     * @category Seq
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _(object).at(['a[0].b.c', 'a[1]']).value();
     * // => [3, 4]
     */
    var wrapperAt = flatRest(function(paths) {
      var length = paths.length,
          start = length ? paths[0] : 0,
          value = this.__wrapped__,
          interceptor = function(object) { return baseAt(object, paths); };

      if (length > 1 || this.__actions__.length ||
          !(value instanceof LazyWrapper) || !isIndex(start)) {
        return this.thru(interceptor);
      }
      value = value.slice(start, +start + (length ? 1 : 0));
      value.__actions__.push({
        'func': thru,
        'args': [interceptor],
        'thisArg': undefined
      });
      return new LodashWrapper(value, this.__chain__).thru(function(array) {
        if (length && !array.length) {
          array.push(undefined);
        }
        return array;
      });
    });

    /**
     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.
     *
     * @name chain
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 40 }
     * ];
     *
     * // A sequence without explicit chaining.
     * _(users).head();
     * // => { 'user': 'barney', 'age': 36 }
     *
     * // A sequence with explicit chaining.
     * _(users)
     *   .chain()
     *   .head()
     *   .pick('user')
     *   .value();
     * // => { 'user': 'barney' }
     */
    function wrapperChain() {
      return chain(this);
    }

    /**
     * Executes the chain sequence and returns the wrapped result.
     *
     * @name commit
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2];
     * var wrapped = _(array).push(3);
     *
     * console.log(array);
     * // => [1, 2]
     *
     * wrapped = wrapped.commit();
     * console.log(array);
     * // => [1, 2, 3]
     *
     * wrapped.last();
     * // => 3
     *
     * console.log(array);
     * // => [1, 2, 3]
     */
    function wrapperCommit() {
      return new LodashWrapper(this.value(), this.__chain__);
    }

    /**
     * Gets the next value on a wrapped object following the
     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).
     *
     * @name next
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the next iterator value.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 1 }
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 2 }
     *
     * wrapped.next();
     * // => { 'done': true, 'value': undefined }
     */
    function wrapperNext() {
      if (this.__values__ === undefined) {
        this.__values__ = toArray(this.value());
      }
      var done = this.__index__ >= this.__values__.length,
          value = done ? undefined : this.__values__[this.__index__++];

      return { 'done': done, 'value': value };
    }

    /**
     * Enables the wrapper to be iterable.
     *
     * @name Symbol.iterator
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the wrapper object.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped[Symbol.iterator]() === wrapped;
     * // => true
     *
     * Array.from(wrapped);
     * // => [1, 2]
     */
    function wrapperToIterator() {
      return this;
    }

    /**
     * Creates a clone of the chain sequence planting `value` as the wrapped value.
     *
     * @name plant
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @param {*} value The value to plant.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2]).map(square);
     * var other = wrapped.plant([3, 4]);
     *
     * other.value();
     * // => [9, 16]
     *
     * wrapped.value();
     * // => [1, 4]
     */
    function wrapperPlant(value) {
      var result,
          parent = this;

      while (parent instanceof baseLodash) {
        var clone = wrapperClone(parent);
        clone.__index__ = 0;
        clone.__values__ = undefined;
        if (result) {
          previous.__wrapped__ = clone;
        } else {
          result = clone;
        }
        var previous = clone;
        parent = parent.__wrapped__;
      }
      previous.__wrapped__ = value;
      return result;
    }

    /**
     * This method is the wrapper version of `_.reverse`.
     *
     * **Note:** This method mutates the wrapped array.
     *
     * @name reverse
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _(array).reverse().value()
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */
    function wrapperReverse() {
      var value = this.__wrapped__;
      if (value instanceof LazyWrapper) {
        var wrapped = value;
        if (this.__actions__.length) {
          wrapped = new LazyWrapper(this);
        }
        wrapped = wrapped.reverse();
        wrapped.__actions__.push({
          'func': thru,
          'args': [reverse],
          'thisArg': undefined
        });
        return new LodashWrapper(wrapped, this.__chain__);
      }
      return this.thru(reverse);
    }

    /**
     * Executes the chain sequence to resolve the unwrapped value.
     *
     * @name value
     * @memberOf _
     * @since 0.1.0
     * @alias toJSON, valueOf
     * @category Seq
     * @returns {*} Returns the resolved unwrapped value.
     * @example
     *
     * _([1, 2, 3]).value();
     * // => [1, 2, 3]
     */
    function wrapperValue() {
      return baseWrapperValue(this.__wrapped__, this.__actions__);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the number of times the key was returned by `iteratee`. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.countBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': 1, '6': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.countBy(['one', 'two', 'three'], 'length');
     * // => { '3': 2, '5': 1 }
     */
    var countBy = createAggregator(function(result, value, key) {
      if (hasOwnProperty.call(result, key)) {
        ++result[key];
      } else {
        baseAssignValue(result, key, 1);
      }
    });

    /**
     * Checks if `predicate` returns truthy for **all** elements of `collection`.
     * Iteration is stopped once `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * **Note:** This method returns `true` for
     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because
     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of
     * elements of empty collections.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`.
     * @example
     *
     * _.every([true, 1, null, 'yes'], Boolean);
     * // => false
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.every(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.every(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.every(users, 'active');
     * // => false
     */
    function every(collection, predicate, guard) {
      var func = isArray(collection) ? arrayEvery : baseEvery;
      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = undefined;
      }
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Iterates over elements of `collection`, returning an array of all elements
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * **Note:** Unlike `_.remove`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.reject
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * _.filter(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, { 'age': 36, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.filter(users, 'active');
     * // => objects for ['barney']
     *
     * // Combining several predicates using `_.overEvery` or `_.overSome`.
     * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));
     * // => objects for ['fred', 'barney']
     */
    function filter(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Iterates over elements of `collection`, returning the first element
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': true },
     *   { 'user': 'fred',    'age': 40, 'active': false },
     *   { 'user': 'pebbles', 'age': 1,  'active': true }
     * ];
     *
     * _.find(users, function(o) { return o.age < 40; });
     * // => object for 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.find(users, { 'age': 1, 'active': true });
     * // => object for 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.find(users, ['active', false]);
     * // => object for 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.find(users, 'active');
     * // => object for 'barney'
     */
    var find = createFind(findIndex);

    /**
     * This method is like `_.find` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=collection.length-1] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * _.findLast([1, 2, 3, 4], function(n) {
     *   return n % 2 == 1;
     * });
     * // => 3
     */
    var findLast = createFind(findLastIndex);

    /**
     * Creates a flattened array of values by running each element in `collection`
     * thru `iteratee` and flattening the mapped results. The iteratee is invoked
     * with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [n, n];
     * }
     *
     * _.flatMap([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */
    function flatMap(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), 1);
    }

    /**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDeep([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */
    function flatMapDeep(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), INFINITY);
    }

    /**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDepth([1, 2], duplicate, 2);
     * // => [[1, 1], [2, 2]]
     */
    function flatMapDepth(collection, iteratee, depth) {
      depth = depth === undefined ? 1 : toInteger(depth);
      return baseFlatten(map(collection, iteratee), depth);
    }

    /**
     * Iterates over elements of `collection` and invokes `iteratee` for each element.
     * The iteratee is invoked with three arguments: (value, index|key, collection).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * **Note:** As with other "Collections" methods, objects with a "length"
     * property are iterated like arrays. To avoid this behavior use `_.forIn`
     * or `_.forOwn` for object iteration.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias each
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEachRight
     * @example
     *
     * _.forEach([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `1` then `2`.
     *
     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */
    function forEach(collection, iteratee) {
      var func = isArray(collection) ? arrayEach : baseEach;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.forEach` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @alias eachRight
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEach
     * @example
     *
     * _.forEachRight([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `2` then `1`.
     */
    function forEachRight(collection, iteratee) {
      var func = isArray(collection) ? arrayEachRight : baseEachRight;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The order of grouped values
     * is determined by the order they occur in `collection`. The corresponding
     * value of each key is an array of elements responsible for generating the
     * key. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.groupBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': [4.2], '6': [6.1, 6.3] }
     *
     * // The `_.property` iteratee shorthand.
     * _.groupBy(['one', 'two', 'three'], 'length');
     * // => { '3': ['one', 'two'], '5': ['three'] }
     */
    var groupBy = createAggregator(function(result, value, key) {
      if (hasOwnProperty.call(result, key)) {
        result[key].push(value);
      } else {
        baseAssignValue(result, key, [value]);
      }
    });

    /**
     * Checks if `value` is in `collection`. If `collection` is a string, it's
     * checked for a substring of `value`, otherwise
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * is used for equality comparisons. If `fromIndex` is negative, it's used as
     * the offset from the end of `collection`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {boolean} Returns `true` if `value` is found, else `false`.
     * @example
     *
     * _.includes([1, 2, 3], 1);
     * // => true
     *
     * _.includes([1, 2, 3], 1, 2);
     * // => false
     *
     * _.includes({ 'a': 1, 'b': 2 }, 1);
     * // => true
     *
     * _.includes('abcd', 'bc');
     * // => true
     */
    function includes(collection, value, fromIndex, guard) {
      collection = isArrayLike(collection) ? collection : values(collection);
      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;

      var length = collection.length;
      if (fromIndex < 0) {
        fromIndex = nativeMax(length + fromIndex, 0);
      }
      return isString(collection)
        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)
        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);
    }

    /**
     * Invokes the method at `path` of each element in `collection`, returning
     * an array of the results of each invoked method. Any additional arguments
     * are provided to each invoked method. If `path` is a function, it's invoked
     * for, and `this` bound to, each element in `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array|Function|string} path The path of the method to invoke or
     *  the function invoked per iteration.
     * @param {...*} [args] The arguments to invoke each method with.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');
     * // => [[1, 5, 7], [1, 2, 3]]
     *
     * _.invokeMap([123, 456], String.prototype.split, '');
     * // => [['1', '2', '3'], ['4', '5', '6']]
     */
    var invokeMap = baseRest(function(collection, path, args) {
      var index = -1,
          isFunc = typeof path == 'function',
          result = isArrayLike(collection) ? Array(collection.length) : [];

      baseEach(collection, function(value) {
        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);
      });
      return result;
    });

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the last element responsible for generating the key. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * var array = [
     *   { 'dir': 'left', 'code': 97 },
     *   { 'dir': 'right', 'code': 100 }
     * ];
     *
     * _.keyBy(array, function(o) {
     *   return String.fromCharCode(o.code);
     * });
     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
     *
     * _.keyBy(array, 'dir');
     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
     */
    var keyBy = createAggregator(function(result, value, key) {
      baseAssignValue(result, key, value);
    });

    /**
     * Creates an array of values by running each element in `collection` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
     *
     * The guarded methods are:
     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * _.map([4, 8], square);
     * // => [16, 64]
     *
     * _.map({ 'a': 4, 'b': 8 }, square);
     * // => [16, 64] (iteration order is not guaranteed)
     *
     * var users = [
     *   { 'user': 'barney' },
     *   { 'user': 'fred' }
     * ];
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, 'user');
     * // => ['barney', 'fred']
     */
    function map(collection, iteratee) {
      var func = isArray(collection) ? arrayMap : baseMap;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.sortBy` except that it allows specifying the sort
     * orders of the iteratees to sort by. If `orders` is unspecified, all values
     * are sorted in ascending order. Otherwise, specify an order of "desc" for
     * descending or "asc" for ascending sort order of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @param {string[]} [orders] The sort orders of `iteratees`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 34 },
     *   { 'user': 'fred',   'age': 40 },
     *   { 'user': 'barney', 'age': 36 }
     * ];
     *
     * // Sort by `user` in ascending order and by `age` in descending order.
     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
     */
    function orderBy(collection, iteratees, orders, guard) {
      if (collection == null) {
        return [];
      }
      if (!isArray(iteratees)) {
        iteratees = iteratees == null ? [] : [iteratees];
      }
      orders = guard ? undefined : orders;
      if (!isArray(orders)) {
        orders = orders == null ? [] : [orders];
      }
      return baseOrderBy(collection, iteratees, orders);
    }

    /**
     * Creates an array of elements split into two groups, the first of which
     * contains elements `predicate` returns truthy for, the second of which
     * contains elements `predicate` returns falsey for. The predicate is
     * invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of grouped elements.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': false },
     *   { 'user': 'fred',    'age': 40, 'active': true },
     *   { 'user': 'pebbles', 'age': 1,  'active': false }
     * ];
     *
     * _.partition(users, function(o) { return o.active; });
     * // => objects for [['fred'], ['barney', 'pebbles']]
     *
     * // The `_.matches` iteratee shorthand.
     * _.partition(users, { 'age': 1, 'active': false });
     * // => objects for [['pebbles'], ['barney', 'fred']]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.partition(users, ['active', false]);
     * // => objects for [['barney', 'pebbles'], ['fred']]
     *
     * // The `_.property` iteratee shorthand.
     * _.partition(users, 'active');
     * // => objects for [['fred'], ['barney', 'pebbles']]
     */
    var partition = createAggregator(function(result, value, key) {
      result[key ? 0 : 1].push(value);
    }, function() { return [[], []]; });

    /**
     * Reduces `collection` to a value which is the accumulated result of running
     * each element in `collection` thru `iteratee`, where each successive
     * invocation is supplied the return value of the previous. If `accumulator`
     * is not given, the first element of `collection` is used as the initial
     * value. The iteratee is invoked with four arguments:
     * (accumulator, value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.reduce`, `_.reduceRight`, and `_.transform`.
     *
     * The guarded methods are:
     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
     * and `sortBy`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduceRight
     * @example
     *
     * _.reduce([1, 2], function(sum, n) {
     *   return sum + n;
     * }, 0);
     * // => 3
     *
     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     *   return result;
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
     */
    function reduce(collection, iteratee, accumulator) {
      var func = isArray(collection) ? arrayReduce : baseReduce,
          initAccum = arguments.length < 3;

      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);
    }

    /**
     * This method is like `_.reduce` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduce
     * @example
     *
     * var array = [[0, 1], [2, 3], [4, 5]];
     *
     * _.reduceRight(array, function(flattened, other) {
     *   return flattened.concat(other);
     * }, []);
     * // => [4, 5, 2, 3, 0, 1]
     */
    function reduceRight(collection, iteratee, accumulator) {
      var func = isArray(collection) ? arrayReduceRight : baseReduce,
          initAccum = arguments.length < 3;

      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);
    }

    /**
     * The opposite of `_.filter`; this method returns the elements of `collection`
     * that `predicate` does **not** return truthy for.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.filter
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': true }
     * ];
     *
     * _.reject(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.reject(users, { 'age': 40, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.reject(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.reject(users, 'active');
     * // => objects for ['barney']
     */
    function reject(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, negate(getIteratee(predicate, 3)));
    }

    /**
     * Gets a random element from `collection`.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     * @example
     *
     * _.sample([1, 2, 3, 4]);
     * // => 2
     */
    function sample(collection) {
      var func = isArray(collection) ? arraySample : baseSample;
      return func(collection);
    }

    /**
     * Gets `n` random elements at unique keys from `collection` up to the
     * size of `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @param {number} [n=1] The number of elements to sample.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the random elements.
     * @example
     *
     * _.sampleSize([1, 2, 3], 2);
     * // => [3, 1]
     *
     * _.sampleSize([1, 2, 3], 4);
     * // => [2, 3, 1]
     */
    function sampleSize(collection, n, guard) {
      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {
        n = 1;
      } else {
        n = toInteger(n);
      }
      var func = isArray(collection) ? arraySampleSize : baseSampleSize;
      return func(collection, n);
    }

    /**
     * Creates an array of shuffled values, using a version of the
     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     * @example
     *
     * _.shuffle([1, 2, 3, 4]);
     * // => [4, 1, 3, 2]
     */
    function shuffle(collection) {
      var func = isArray(collection) ? arrayShuffle : baseShuffle;
      return func(collection);
    }

    /**
     * Gets the size of `collection` by returning its length for array-like
     * values or the number of own enumerable string keyed properties for objects.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @returns {number} Returns the collection size.
     * @example
     *
     * _.size([1, 2, 3]);
     * // => 3
     *
     * _.size({ 'a': 1, 'b': 2 });
     * // => 2
     *
     * _.size('pebbles');
     * // => 7
     */
    function size(collection) {
      if (collection == null) {
        return 0;
      }
      if (isArrayLike(collection)) {
        return isString(collection) ? stringSize(collection) : collection.length;
      }
      var tag = getTag(collection);
      if (tag == mapTag || tag == setTag) {
        return collection.size;
      }
      return baseKeys(collection).length;
    }

    /**
     * Checks if `predicate` returns truthy for **any** element of `collection`.
     * Iteration is stopped once `predicate` returns truthy. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     * @example
     *
     * _.some([null, 0, 'yes', false], Boolean);
     * // => true
     *
     * var users = [
     *   { 'user': 'barney', 'active': true },
     *   { 'user': 'fred',   'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.some(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.some(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.some(users, 'active');
     * // => true
     */
    function some(collection, predicate, guard) {
      var func = isArray(collection) ? arraySome : baseSome;
      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = undefined;
      }
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Creates an array of elements, sorted in ascending order by the results of
     * running each element in a collection thru each iteratee. This method
     * performs a stable sort, that is, it preserves the original sort order of
     * equal elements. The iteratees are invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 30 },
     *   { 'user': 'barney', 'age': 34 }
     * ];
     *
     * _.sortBy(users, [function(o) { return o.user; }]);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]
     *
     * _.sortBy(users, ['user', 'age']);
     * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]
     */
    var sortBy = baseRest(function(collection, iteratees) {
      if (collection == null) {
        return [];
      }
      var length = iteratees.length;
      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
        iteratees = [];
      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
        iteratees = [iteratees[0]];
      }
      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
    });

    /*------------------------------------------------------------------------*/

    /**
     * Gets the timestamp of the number of milliseconds that have elapsed since
     * the Unix epoch (1 January 1970 00:00:00 UTC).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Date
     * @returns {number} Returns the timestamp.
     * @example
     *
     * _.defer(function(stamp) {
     *   console.log(_.now() - stamp);
     * }, _.now());
     * // => Logs the number of milliseconds it took for the deferred invocation.
     */
    var now = ctxNow || function() {
      return root.Date.now();
    };

    /*------------------------------------------------------------------------*/

    /**
     * The opposite of `_.before`; this method creates a function that invokes
     * `func` once it's called `n` or more times.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {number} n The number of calls before `func` is invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var saves = ['profile', 'settings'];
     *
     * var done = _.after(saves.length, function() {
     *   console.log('done saving!');
     * });
     *
     * _.forEach(saves, function(type) {
     *   asyncSave({ 'type': type, 'complete': done });
     * });
     * // => Logs 'done saving!' after the two async saves have completed.
     */
    function after(n, func) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function() {
        if (--n < 1) {
          return func.apply(this, arguments);
        }
      };
    }

    /**
     * Creates a function that invokes `func`, with up to `n` arguments,
     * ignoring any additional arguments.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @param {number} [n=func.length] The arity cap.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.ary(parseInt, 1));
     * // => [6, 8, 10]
     */
    function ary(func, n, guard) {
      n = guard ? undefined : n;
      n = (func && n == null) ? func.length : n;
      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);
    }

    /**
     * Creates a function that invokes `func`, with the `this` binding and arguments
     * of the created function, while it's called less than `n` times. Subsequent
     * calls to the created function return the result of the last `func` invocation.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {number} n The number of calls at which `func` is no longer invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * jQuery(element).on('click', _.before(5, addContactToList));
     * // => Allows adding up to 4 contacts to the list.
     */
    function before(n, func) {
      var result;
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function() {
        if (--n > 0) {
          result = func.apply(this, arguments);
        }
        if (n <= 1) {
          func = undefined;
        }
        return result;
      };
    }

    /**
     * Creates a function that invokes `func` with the `this` binding of `thisArg`
     * and `partials` prepended to the arguments it receives.
     *
     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for partially applied arguments.
     *
     * **Note:** Unlike native `Function#bind`, this method doesn't set the "length"
     * property of bound functions.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to bind.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * function greet(greeting, punctuation) {
     *   return greeting + ' ' + this.user + punctuation;
     * }
     *
     * var object = { 'user': 'fred' };
     *
     * var bound = _.bind(greet, object, 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bind(greet, object, _, '!');
     * bound('hi');
     * // => 'hi fred!'
     */
    var bind = baseRest(function(func, thisArg, partials) {
      var bitmask = WRAP_BIND_FLAG;
      if (partials.length) {
        var holders = replaceHolders(partials, getHolder(bind));
        bitmask |= WRAP_PARTIAL_FLAG;
      }
      return createWrap(func, bitmask, thisArg, partials, holders);
    });

    /**
     * Creates a function that invokes the method at `object[key]` with `partials`
     * prepended to the arguments it receives.
     *
     * This method differs from `_.bind` by allowing bound functions to reference
     * methods that may be redefined or don't yet exist. See
     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)
     * for more details.
     *
     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Function
     * @param {Object} object The object to invoke the method on.
     * @param {string} key The key of the method.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * var object = {
     *   'user': 'fred',
     *   'greet': function(greeting, punctuation) {
     *     return greeting + ' ' + this.user + punctuation;
     *   }
     * };
     *
     * var bound = _.bindKey(object, 'greet', 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * object.greet = function(greeting, punctuation) {
     *   return greeting + 'ya ' + this.user + punctuation;
     * };
     *
     * bound('!');
     * // => 'hiya fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bindKey(object, 'greet', _, '!');
     * bound('hi');
     * // => 'hiya fred!'
     */
    var bindKey = baseRest(function(object, key, partials) {
      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;
      if (partials.length) {
        var holders = replaceHolders(partials, getHolder(bindKey));
        bitmask |= WRAP_PARTIAL_FLAG;
      }
      return createWrap(key, bitmask, object, partials, holders);
    });

    /**
     * Creates a function that accepts arguments of `func` and either invokes
     * `func` returning its result, if at least `arity` number of arguments have
     * been provided, or returns a function that accepts the remaining `func`
     * arguments, and so on. The arity of `func` may be specified if `func.length`
     * is not sufficient.
     *
     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curry(abc);
     *
     * curried(1)(2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(1)(_, 3)(2);
     * // => [1, 2, 3]
     */
    function curry(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curry.placeholder;
      return result;
    }

    /**
     * This method is like `_.curry` except that arguments are applied to `func`
     * in the manner of `_.partialRight` instead of `_.partial`.
     *
     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curryRight(abc);
     *
     * curried(3)(2)(1);
     * // => [1, 2, 3]
     *
     * curried(2, 3)(1);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(3)(1, _)(2);
     * // => [1, 2, 3]
     */
    function curryRight(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curryRight.placeholder;
      return result;
    }

    /**
     * Creates a debounced function that delays invoking `func` until after `wait`
     * milliseconds have elapsed since the last time the debounced function was
     * invoked. The debounced function comes with a `cancel` method to cancel
     * delayed `func` invocations and a `flush` method to immediately invoke them.
     * Provide `options` to indicate whether `func` should be invoked on the
     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
     * with the last arguments provided to the debounced function. Subsequent
     * calls to the debounced function return the result of the last `func`
     * invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the debounced function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.debounce` and `_.throttle`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to debounce.
     * @param {number} [wait=0] The number of milliseconds to delay.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=false]
     *  Specify invoking on the leading edge of the timeout.
     * @param {number} [options.maxWait]
     *  The maximum time `func` is allowed to be delayed before it's invoked.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new debounced function.
     * @example
     *
     * // Avoid costly calculations while the window size is in flux.
     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
     *
     * // Invoke `sendMail` when clicked, debouncing subsequent calls.
     * jQuery(element).on('click', _.debounce(sendMail, 300, {
     *   'leading': true,
     *   'trailing': false
     * }));
     *
     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
     * var source = new EventSource('/stream');
     * jQuery(source).on('message', debounced);
     *
     * // Cancel the trailing debounced invocation.
     * jQuery(window).on('popstate', debounced.cancel);
     */
    function debounce(func, wait, options) {
      var lastArgs,
          lastThis,
          maxWait,
          result,
          timerId,
          lastCallTime,
          lastInvokeTime = 0,
          leading = false,
          maxing = false,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      wait = toNumber(wait) || 0;
      if (isObject(options)) {
        leading = !!options.leading;
        maxing = 'maxWait' in options;
        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }

      function invokeFunc(time) {
        var args = lastArgs,
            thisArg = lastThis;

        lastArgs = lastThis = undefined;
        lastInvokeTime = time;
        result = func.apply(thisArg, args);
        return result;
      }

      function leadingEdge(time) {
        // Reset any `maxWait` timer.
        lastInvokeTime = time;
        // Start the timer for the trailing edge.
        timerId = setTimeout(timerExpired, wait);
        // Invoke the leading edge.
        return leading ? invokeFunc(time) : result;
      }

      function remainingWait(time) {
        var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime,
            timeWaiting = wait - timeSinceLastCall;

        return maxing
          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)
          : timeWaiting;
      }

      function shouldInvoke(time) {
        var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime;

        // Either this is the first call, activity has stopped and we're at the
        // trailing edge, the system time has gone backwards and we're treating
        // it as the trailing edge, or we've hit the `maxWait` limit.
        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
      }

      function timerExpired() {
        var time = now();
        if (shouldInvoke(time)) {
          return trailingEdge(time);
        }
        // Restart the timer.
        timerId = setTimeout(timerExpired, remainingWait(time));
      }

      function trailingEdge(time) {
        timerId = undefined;

        // Only invoke if we have `lastArgs` which means `func` has been
        // debounced at least once.
        if (trailing && lastArgs) {
          return invokeFunc(time);
        }
        lastArgs = lastThis = undefined;
        return result;
      }

      function cancel() {
        if (timerId !== undefined) {
          clearTimeout(timerId);
        }
        lastInvokeTime = 0;
        lastArgs = lastCallTime = lastThis = timerId = undefined;
      }

      function flush() {
        return timerId === undefined ? result : trailingEdge(now());
      }

      function debounced() {
        var time = now(),
            isInvoking = shouldInvoke(time);

        lastArgs = arguments;
        lastThis = this;
        lastCallTime = time;

        if (isInvoking) {
          if (timerId === undefined) {
            return leadingEdge(lastCallTime);
          }
          if (maxing) {
            // Handle invocations in a tight loop.
            clearTimeout(timerId);
            timerId = setTimeout(timerExpired, wait);
            return invokeFunc(lastCallTime);
          }
        }
        if (timerId === undefined) {
          timerId = setTimeout(timerExpired, wait);
        }
        return result;
      }
      debounced.cancel = cancel;
      debounced.flush = flush;
      return debounced;
    }

    /**
     * Defers invoking the `func` until the current call stack has cleared. Any
     * additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to defer.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.defer(function(text) {
     *   console.log(text);
     * }, 'deferred');
     * // => Logs 'deferred' after one millisecond.
     */
    var defer = baseRest(function(func, args) {
      return baseDelay(func, 1, args);
    });

    /**
     * Invokes `func` after `wait` milliseconds. Any additional arguments are
     * provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.delay(function(text) {
     *   console.log(text);
     * }, 1000, 'later');
     * // => Logs 'later' after one second.
     */
    var delay = baseRest(function(func, wait, args) {
      return baseDelay(func, toNumber(wait) || 0, args);
    });

    /**
     * Creates a function that invokes `func` with arguments reversed.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to flip arguments for.
     * @returns {Function} Returns the new flipped function.
     * @example
     *
     * var flipped = _.flip(function() {
     *   return _.toArray(arguments);
     * });
     *
     * flipped('a', 'b', 'c', 'd');
     * // => ['d', 'c', 'b', 'a']
     */
    function flip(func) {
      return createWrap(func, WRAP_FLIP_FLAG);
    }

    /**
     * Creates a function that memoizes the result of `func`. If `resolver` is
     * provided, it determines the cache key for storing the result based on the
     * arguments provided to the memoized function. By default, the first argument
     * provided to the memoized function is used as the map cache key. The `func`
     * is invoked with the `this` binding of the memoized function.
     *
     * **Note:** The cache is exposed as the `cache` property on the memoized
     * function. Its creation may be customized by replacing the `_.memoize.Cache`
     * constructor with one whose instances implement the
     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
     * method interface of `clear`, `delete`, `get`, `has`, and `set`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to have its output memoized.
     * @param {Function} [resolver] The function to resolve the cache key.
     * @returns {Function} Returns the new memoized function.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     * var other = { 'c': 3, 'd': 4 };
     *
     * var values = _.memoize(_.values);
     * values(object);
     * // => [1, 2]
     *
     * values(other);
     * // => [3, 4]
     *
     * object.a = 2;
     * values(object);
     * // => [1, 2]
     *
     * // Modify the result cache.
     * values.cache.set(object, ['a', 'b']);
     * values(object);
     * // => ['a', 'b']
     *
     * // Replace `_.memoize.Cache`.
     * _.memoize.Cache = WeakMap;
     */
    function memoize(func, resolver) {
      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var memoized = function() {
        var args = arguments,
            key = resolver ? resolver.apply(this, args) : args[0],
            cache = memoized.cache;

        if (cache.has(key)) {
          return cache.get(key);
        }
        var result = func.apply(this, args);
        memoized.cache = cache.set(key, result) || cache;
        return result;
      };
      memoized.cache = new (memoize.Cache || MapCache);
      return memoized;
    }

    // Expose `MapCache`.
    memoize.Cache = MapCache;

    /**
     * Creates a function that negates the result of the predicate `func`. The
     * `func` predicate is invoked with the `this` binding and arguments of the
     * created function.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} predicate The predicate to negate.
     * @returns {Function} Returns the new negated function.
     * @example
     *
     * function isEven(n) {
     *   return n % 2 == 0;
     * }
     *
     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));
     * // => [1, 3, 5]
     */
    function negate(predicate) {
      if (typeof predicate != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return function() {
        var args = arguments;
        switch (args.length) {
          case 0: return !predicate.call(this);
          case 1: return !predicate.call(this, args[0]);
          case 2: return !predicate.call(this, args[0], args[1]);
          case 3: return !predicate.call(this, args[0], args[1], args[2]);
        }
        return !predicate.apply(this, args);
      };
    }

    /**
     * Creates a function that is restricted to invoking `func` once. Repeat calls
     * to the function return the value of the first invocation. The `func` is
     * invoked with the `this` binding and arguments of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var initialize = _.once(createApplication);
     * initialize();
     * initialize();
     * // => `createApplication` is invoked once
     */
    function once(func) {
      return before(2, func);
    }

    /**
     * Creates a function that invokes `func` with its arguments transformed.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Function
     * @param {Function} func The function to wrap.
     * @param {...(Function|Function[])} [transforms=[_.identity]]
     *  The argument transforms.
     * @returns {Function} Returns the new function.
     * @example
     *
     * function doubled(n) {
     *   return n * 2;
     * }
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var func = _.overArgs(function(x, y) {
     *   return [x, y];
     * }, [square, doubled]);
     *
     * func(9, 3);
     * // => [81, 6]
     *
     * func(10, 5);
     * // => [100, 10]
     */
    var overArgs = castRest(function(func, transforms) {
      transforms = (transforms.length == 1 && isArray(transforms[0]))
        ? arrayMap(transforms[0], baseUnary(getIteratee()))
        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));

      var funcsLength = transforms.length;
      return baseRest(function(args) {
        var index = -1,
            length = nativeMin(args.length, funcsLength);

        while (++index < length) {
          args[index] = transforms[index].call(this, args[index]);
        }
        return apply(func, this, args);
      });
    });

    /**
     * Creates a function that invokes `func` with `partials` prepended to the
     * arguments it receives. This method is like `_.bind` except it does **not**
     * alter the `this` binding.
     *
     * The `_.partial.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 0.2.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var sayHelloTo = _.partial(greet, 'hello');
     * sayHelloTo('fred');
     * // => 'hello fred'
     *
     * // Partially applied with placeholders.
     * var greetFred = _.partial(greet, _, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     */
    var partial = baseRest(function(func, partials) {
      var holders = replaceHolders(partials, getHolder(partial));
      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);
    });

    /**
     * This method is like `_.partial` except that partially applied arguments
     * are appended to the arguments it receives.
     *
     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var greetFred = _.partialRight(greet, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     *
     * // Partially applied with placeholders.
     * var sayHelloTo = _.partialRight(greet, 'hello', _);
     * sayHelloTo('fred');
     * // => 'hello fred'
     */
    var partialRight = baseRest(function(func, partials) {
      var holders = replaceHolders(partials, getHolder(partialRight));
      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);
    });

    /**
     * Creates a function that invokes `func` with arguments arranged according
     * to the specified `indexes` where the argument value at the first index is
     * provided as the first argument, the argument value at the second index is
     * provided as the second argument, and so on.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to rearrange arguments for.
     * @param {...(number|number[])} indexes The arranged argument indexes.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var rearged = _.rearg(function(a, b, c) {
     *   return [a, b, c];
     * }, [2, 0, 1]);
     *
     * rearged('b', 'c', 'a')
     * // => ['a', 'b', 'c']
     */
    var rearg = flatRest(function(func, indexes) {
      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);
    });

    /**
     * Creates a function that invokes `func` with the `this` binding of the
     * created function and arguments from `start` and beyond provided as
     * an array.
     *
     * **Note:** This method is based on the
     * [rest parameter](https://mdn.io/rest_parameters).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.rest(function(what, names) {
     *   return what + ' ' + _.initial(names).join(', ') +
     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
     * });
     *
     * say('hello', 'fred', 'barney', 'pebbles');
     * // => 'hello fred, barney, & pebbles'
     */
    function rest(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      start = start === undefined ? start : toInteger(start);
      return baseRest(func, start);
    }

    /**
     * Creates a function that invokes `func` with the `this` binding of the
     * create function and an array of arguments much like
     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).
     *
     * **Note:** This method is based on the
     * [spread operator](https://mdn.io/spread_operator).
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Function
     * @param {Function} func The function to spread arguments over.
     * @param {number} [start=0] The start position of the spread.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.spread(function(who, what) {
     *   return who + ' says ' + what;
     * });
     *
     * say(['fred', 'hello']);
     * // => 'fred says hello'
     *
     * var numbers = Promise.all([
     *   Promise.resolve(40),
     *   Promise.resolve(36)
     * ]);
     *
     * numbers.then(_.spread(function(x, y) {
     *   return x + y;
     * }));
     * // => a Promise of 76
     */
    function spread(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      start = start == null ? 0 : nativeMax(toInteger(start), 0);
      return baseRest(function(args) {
        var array = args[start],
            otherArgs = castSlice(args, 0, start);

        if (array) {
          arrayPush(otherArgs, array);
        }
        return apply(func, this, otherArgs);
      });
    }

    /**
     * Creates a throttled function that only invokes `func` at most once per
     * every `wait` milliseconds. The throttled function comes with a `cancel`
     * method to cancel delayed `func` invocations and a `flush` method to
     * immediately invoke them. Provide `options` to indicate whether `func`
     * should be invoked on the leading and/or trailing edge of the `wait`
     * timeout. The `func` is invoked with the last arguments provided to the
     * throttled function. Subsequent calls to the throttled function return the
     * result of the last `func` invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the throttled function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.throttle` and `_.debounce`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to throttle.
     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=true]
     *  Specify invoking on the leading edge of the timeout.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new throttled function.
     * @example
     *
     * // Avoid excessively updating the position while scrolling.
     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
     *
     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
     * jQuery(element).on('click', throttled);
     *
     * // Cancel the trailing throttled invocation.
     * jQuery(window).on('popstate', throttled.cancel);
     */
    function throttle(func, wait, options) {
      var leading = true,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      if (isObject(options)) {
        leading = 'leading' in options ? !!options.leading : leading;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }
      return debounce(func, wait, {
        'leading': leading,
        'maxWait': wait,
        'trailing': trailing
      });
    }

    /**
     * Creates a function that accepts up to one argument, ignoring any
     * additional arguments.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.unary(parseInt));
     * // => [6, 8, 10]
     */
    function unary(func) {
      return ary(func, 1);
    }

    /**
     * Creates a function that provides `value` to `wrapper` as its first
     * argument. Any additional arguments provided to the function are appended
     * to those provided to the `wrapper`. The wrapper is invoked with the `this`
     * binding of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {*} value The value to wrap.
     * @param {Function} [wrapper=identity] The wrapper function.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var p = _.wrap(_.escape, function(func, text) {
     *   return '<p>' + func(text) + '</p>';
     * });
     *
     * p('fred, barney, & pebbles');
     * // => '<p>fred, barney, &amp; pebbles</p>'
     */
    function wrap(value, wrapper) {
      return partial(castFunction(wrapper), value);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Casts `value` as an array if it's not one.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Lang
     * @param {*} value The value to inspect.
     * @returns {Array} Returns the cast array.
     * @example
     *
     * _.castArray(1);
     * // => [1]
     *
     * _.castArray({ 'a': 1 });
     * // => [{ 'a': 1 }]
     *
     * _.castArray('abc');
     * // => ['abc']
     *
     * _.castArray(null);
     * // => [null]
     *
     * _.castArray(undefined);
     * // => [undefined]
     *
     * _.castArray();
     * // => []
     *
     * var array = [1, 2, 3];
     * console.log(_.castArray(array) === array);
     * // => true
     */
    function castArray() {
      if (!arguments.length) {
        return [];
      }
      var value = arguments[0];
      return isArray(value) ? value : [value];
    }

    /**
     * Creates a shallow clone of `value`.
     *
     * **Note:** This method is loosely based on the
     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
     * and supports cloning arrays, array buffers, booleans, date objects, maps,
     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
     * arrays. The own enumerable properties of `arguments` objects are cloned
     * as plain objects. An empty object is returned for uncloneable values such
     * as error objects, functions, DOM nodes, and WeakMaps.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to clone.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeep
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var shallow = _.clone(objects);
     * console.log(shallow[0] === objects[0]);
     * // => true
     */
    function clone(value) {
      return baseClone(value, CLONE_SYMBOLS_FLAG);
    }

    /**
     * This method is like `_.clone` except that it accepts `customizer` which
     * is invoked to produce the cloned value. If `customizer` returns `undefined`,
     * cloning is handled by the method instead. The `customizer` is invoked with
     * up to four arguments; (value [, index|key, object, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeepWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(false);
     *   }
     * }
     *
     * var el = _.cloneWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 0
     */
    function cloneWith(value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);
    }

    /**
     * This method is like `_.clone` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @returns {*} Returns the deep cloned value.
     * @see _.clone
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var deep = _.cloneDeep(objects);
     * console.log(deep[0] === objects[0]);
     * // => false
     */
    function cloneDeep(value) {
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
    }

    /**
     * This method is like `_.cloneWith` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the deep cloned value.
     * @see _.cloneWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(true);
     *   }
     * }
     *
     * var el = _.cloneDeepWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 20
     */
    function cloneDeepWith(value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);
    }

    /**
     * Checks if `object` conforms to `source` by invoking the predicate
     * properties of `source` with the corresponding property values of `object`.
     *
     * **Note:** This method is equivalent to `_.conforms` when `source` is
     * partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });
     * // => true
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });
     * // => false
     */
    function conformsTo(object, source) {
      return source == null || baseConformsTo(object, source, keys(source));
    }

    /**
     * Performs a
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * comparison between two values to determine if they are equivalent.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.eq(object, object);
     * // => true
     *
     * _.eq(object, other);
     * // => false
     *
     * _.eq('a', 'a');
     * // => true
     *
     * _.eq('a', Object('a'));
     * // => false
     *
     * _.eq(NaN, NaN);
     * // => true
     */
    function eq(value, other) {
      return value === other || (value !== value && other !== other);
    }

    /**
     * Checks if `value` is greater than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     * @see _.lt
     * @example
     *
     * _.gt(3, 1);
     * // => true
     *
     * _.gt(3, 3);
     * // => false
     *
     * _.gt(1, 3);
     * // => false
     */
    var gt = createRelationalOperation(baseGt);

    /**
     * Checks if `value` is greater than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than or equal to
     *  `other`, else `false`.
     * @see _.lte
     * @example
     *
     * _.gte(3, 1);
     * // => true
     *
     * _.gte(3, 3);
     * // => true
     *
     * _.gte(1, 3);
     * // => false
     */
    var gte = createRelationalOperation(function(value, other) {
      return value >= other;
    });

    /**
     * Checks if `value` is likely an `arguments` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     *  else `false`.
     * @example
     *
     * _.isArguments(function() { return arguments; }());
     * // => true
     *
     * _.isArguments([1, 2, 3]);
     * // => false
     */
    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
        !propertyIsEnumerable.call(value, 'callee');
    };

    /**
     * Checks if `value` is classified as an `Array` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array, else `false`.
     * @example
     *
     * _.isArray([1, 2, 3]);
     * // => true
     *
     * _.isArray(document.body.children);
     * // => false
     *
     * _.isArray('abc');
     * // => false
     *
     * _.isArray(_.noop);
     * // => false
     */
    var isArray = Array.isArray;

    /**
     * Checks if `value` is classified as an `ArrayBuffer` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     * @example
     *
     * _.isArrayBuffer(new ArrayBuffer(2));
     * // => true
     *
     * _.isArrayBuffer(new Array(2));
     * // => false
     */
    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;

    /**
     * Checks if `value` is array-like. A value is considered array-like if it's
     * not a function and has a `value.length` that's an integer greater than or
     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
     * @example
     *
     * _.isArrayLike([1, 2, 3]);
     * // => true
     *
     * _.isArrayLike(document.body.children);
     * // => true
     *
     * _.isArrayLike('abc');
     * // => true
     *
     * _.isArrayLike(_.noop);
     * // => false
     */
    function isArrayLike(value) {
      return value != null && isLength(value.length) && !isFunction(value);
    }

    /**
     * This method is like `_.isArrayLike` except that it also checks if `value`
     * is an object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array-like object,
     *  else `false`.
     * @example
     *
     * _.isArrayLikeObject([1, 2, 3]);
     * // => true
     *
     * _.isArrayLikeObject(document.body.children);
     * // => true
     *
     * _.isArrayLikeObject('abc');
     * // => false
     *
     * _.isArrayLikeObject(_.noop);
     * // => false
     */
    function isArrayLikeObject(value) {
      return isObjectLike(value) && isArrayLike(value);
    }

    /**
     * Checks if `value` is classified as a boolean primitive or object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.
     * @example
     *
     * _.isBoolean(false);
     * // => true
     *
     * _.isBoolean(null);
     * // => false
     */
    function isBoolean(value) {
      return value === true || value === false ||
        (isObjectLike(value) && baseGetTag(value) == boolTag);
    }

    /**
     * Checks if `value` is a buffer.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
     * @example
     *
     * _.isBuffer(new Buffer(2));
     * // => true
     *
     * _.isBuffer(new Uint8Array(2));
     * // => false
     */
    var isBuffer = nativeIsBuffer || stubFalse;

    /**
     * Checks if `value` is classified as a `Date` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     * @example
     *
     * _.isDate(new Date);
     * // => true
     *
     * _.isDate('Mon April 23 2012');
     * // => false
     */
    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;

    /**
     * Checks if `value` is likely a DOM element.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.
     * @example
     *
     * _.isElement(document.body);
     * // => true
     *
     * _.isElement('<body>');
     * // => false
     */
    function isElement(value) {
      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);
    }

    /**
     * Checks if `value` is an empty object, collection, map, or set.
     *
     * Objects are considered empty if they have no own enumerable string keyed
     * properties.
     *
     * Array-like values such as `arguments` objects, arrays, buffers, strings, or
     * jQuery-like collections are considered empty if they have a `length` of `0`.
     * Similarly, maps and sets are considered empty if they have a `size` of `0`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is empty, else `false`.
     * @example
     *
     * _.isEmpty(null);
     * // => true
     *
     * _.isEmpty(true);
     * // => true
     *
     * _.isEmpty(1);
     * // => true
     *
     * _.isEmpty([1, 2, 3]);
     * // => false
     *
     * _.isEmpty({ 'a': 1 });
     * // => false
     */
    function isEmpty(value) {
      if (value == null) {
        return true;
      }
      if (isArrayLike(value) &&
          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||
            isBuffer(value) || isTypedArray(value) || isArguments(value))) {
        return !value.length;
      }
      var tag = getTag(value);
      if (tag == mapTag || tag == setTag) {
        return !value.size;
      }
      if (isPrototype(value)) {
        return !baseKeys(value).length;
      }
      for (var key in value) {
        if (hasOwnProperty.call(value, key)) {
          return false;
        }
      }
      return true;
    }

    /**
     * Performs a deep comparison between two values to determine if they are
     * equivalent.
     *
     * **Note:** This method supports comparing arrays, array buffers, booleans,
     * date objects, error objects, maps, numbers, `Object` objects, regexes,
     * sets, strings, symbols, and typed arrays. `Object` objects are compared
     * by their own, not inherited, enumerable properties. Functions and DOM
     * nodes are compared by strict equality, i.e. `===`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.isEqual(object, other);
     * // => true
     *
     * object === other;
     * // => false
     */
    function isEqual(value, other) {
      return baseIsEqual(value, other);
    }

    /**
     * This method is like `_.isEqual` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with up to
     * six arguments: (objValue, othValue [, index|key, object, other, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, othValue) {
     *   if (isGreeting(objValue) && isGreeting(othValue)) {
     *     return true;
     *   }
     * }
     *
     * var array = ['hello', 'goodbye'];
     * var other = ['hi', 'goodbye'];
     *
     * _.isEqualWith(array, other, customizer);
     * // => true
     */
    function isEqualWith(value, other, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      var result = customizer ? customizer(value, other) : undefined;
      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;
    }

    /**
     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,
     * `SyntaxError`, `TypeError`, or `URIError` object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.
     * @example
     *
     * _.isError(new Error);
     * // => true
     *
     * _.isError(Error);
     * // => false
     */
    function isError(value) {
      if (!isObjectLike(value)) {
        return false;
      }
      var tag = baseGetTag(value);
      return tag == errorTag || tag == domExcTag ||
        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));
    }

    /**
     * Checks if `value` is a finite primitive number.
     *
     * **Note:** This method is based on
     * [`Number.isFinite`](https://mdn.io/Number/isFinite).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.
     * @example
     *
     * _.isFinite(3);
     * // => true
     *
     * _.isFinite(Number.MIN_VALUE);
     * // => true
     *
     * _.isFinite(Infinity);
     * // => false
     *
     * _.isFinite('3');
     * // => false
     */
    function isFinite(value) {
      return typeof value == 'number' && nativeIsFinite(value);
    }

    /**
     * Checks if `value` is classified as a `Function` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a function, else `false`.
     * @example
     *
     * _.isFunction(_);
     * // => true
     *
     * _.isFunction(/abc/);
     * // => false
     */
    function isFunction(value) {
      if (!isObject(value)) {
        return false;
      }
      // The use of `Object#toString` avoids issues with the `typeof` operator
      // in Safari 9 which returns 'object' for typed arrays and other constructors.
      var tag = baseGetTag(value);
      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
    }

    /**
     * Checks if `value` is an integer.
     *
     * **Note:** This method is based on
     * [`Number.isInteger`](https://mdn.io/Number/isInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.
     * @example
     *
     * _.isInteger(3);
     * // => true
     *
     * _.isInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isInteger(Infinity);
     * // => false
     *
     * _.isInteger('3');
     * // => false
     */
    function isInteger(value) {
      return typeof value == 'number' && value == toInteger(value);
    }

    /**
     * Checks if `value` is a valid array-like length.
     *
     * **Note:** This method is loosely based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
     * @example
     *
     * _.isLength(3);
     * // => true
     *
     * _.isLength(Number.MIN_VALUE);
     * // => false
     *
     * _.isLength(Infinity);
     * // => false
     *
     * _.isLength('3');
     * // => false
     */
    function isLength(value) {
      return typeof value == 'number' &&
        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
    }

    /**
     * Checks if `value` is the
     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an object, else `false`.
     * @example
     *
     * _.isObject({});
     * // => true
     *
     * _.isObject([1, 2, 3]);
     * // => true
     *
     * _.isObject(_.noop);
     * // => true
     *
     * _.isObject(null);
     * // => false
     */
    function isObject(value) {
      var type = typeof value;
      return value != null && (type == 'object' || type == 'function');
    }

    /**
     * Checks if `value` is object-like. A value is object-like if it's not `null`
     * and has a `typeof` result of "object".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
     * @example
     *
     * _.isObjectLike({});
     * // => true
     *
     * _.isObjectLike([1, 2, 3]);
     * // => true
     *
     * _.isObjectLike(_.noop);
     * // => false
     *
     * _.isObjectLike(null);
     * // => false
     */
    function isObjectLike(value) {
      return value != null && typeof value == 'object';
    }

    /**
     * Checks if `value` is classified as a `Map` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     * @example
     *
     * _.isMap(new Map);
     * // => true
     *
     * _.isMap(new WeakMap);
     * // => false
     */
    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;

    /**
     * Performs a partial deep comparison between `object` and `source` to
     * determine if `object` contains equivalent property values.
     *
     * **Note:** This method is equivalent to `_.matches` when `source` is
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.isMatch(object, { 'b': 2 });
     * // => true
     *
     * _.isMatch(object, { 'b': 1 });
     * // => false
     */
    function isMatch(object, source) {
      return object === source || baseIsMatch(object, source, getMatchData(source));
    }

    /**
     * This method is like `_.isMatch` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with five
     * arguments: (objValue, srcValue, index|key, object, source).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, srcValue) {
     *   if (isGreeting(objValue) && isGreeting(srcValue)) {
     *     return true;
     *   }
     * }
     *
     * var object = { 'greeting': 'hello' };
     * var source = { 'greeting': 'hi' };
     *
     * _.isMatchWith(object, source, customizer);
     * // => true
     */
    function isMatchWith(object, source, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseIsMatch(object, source, getMatchData(source), customizer);
    }

    /**
     * Checks if `value` is `NaN`.
     *
     * **Note:** This method is based on
     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as
     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for
     * `undefined` and other non-number values.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
     * @example
     *
     * _.isNaN(NaN);
     * // => true
     *
     * _.isNaN(new Number(NaN));
     * // => true
     *
     * isNaN(undefined);
     * // => true
     *
     * _.isNaN(undefined);
     * // => false
     */
    function isNaN(value) {
      // An `NaN` primitive is the only value that is not equal to itself.
      // Perform the `toStringTag` check first to avoid errors with some
      // ActiveX objects in IE.
      return isNumber(value) && value != +value;
    }

    /**
     * Checks if `value` is a pristine native function.
     *
     * **Note:** This method can't reliably detect native functions in the presence
     * of the core-js package because core-js circumvents this kind of detection.
     * Despite multiple requests, the core-js maintainer has made it clear: any
     * attempt to fix the detection will be obstructed. As a result, we're left
     * with little choice but to throw an error. Unfortunately, this also affects
     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),
     * which rely on core-js.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     * @example
     *
     * _.isNative(Array.prototype.push);
     * // => true
     *
     * _.isNative(_);
     * // => false
     */
    function isNative(value) {
      if (isMaskable(value)) {
        throw new Error(CORE_ERROR_TEXT);
      }
      return baseIsNative(value);
    }

    /**
     * Checks if `value` is `null`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.
     * @example
     *
     * _.isNull(null);
     * // => true
     *
     * _.isNull(void 0);
     * // => false
     */
    function isNull(value) {
      return value === null;
    }

    /**
     * Checks if `value` is `null` or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
     * @example
     *
     * _.isNil(null);
     * // => true
     *
     * _.isNil(void 0);
     * // => true
     *
     * _.isNil(NaN);
     * // => false
     */
    function isNil(value) {
      return value == null;
    }

    /**
     * Checks if `value` is classified as a `Number` primitive or object.
     *
     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
     * classified as numbers, use the `_.isFinite` method.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a number, else `false`.
     * @example
     *
     * _.isNumber(3);
     * // => true
     *
     * _.isNumber(Number.MIN_VALUE);
     * // => true
     *
     * _.isNumber(Infinity);
     * // => true
     *
     * _.isNumber('3');
     * // => false
     */
    function isNumber(value) {
      return typeof value == 'number' ||
        (isObjectLike(value) && baseGetTag(value) == numberTag);
    }

    /**
     * Checks if `value` is a plain object, that is, an object created by the
     * `Object` constructor or one with a `[[Prototype]]` of `null`.
     *
     * @static
     * @memberOf _
     * @since 0.8.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * _.isPlainObject(new Foo);
     * // => false
     *
     * _.isPlainObject([1, 2, 3]);
     * // => false
     *
     * _.isPlainObject({ 'x': 0, 'y': 0 });
     * // => true
     *
     * _.isPlainObject(Object.create(null));
     * // => true
     */
    function isPlainObject(value) {
      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
        return false;
      }
      var proto = getPrototype(value);
      if (proto === null) {
        return true;
      }
      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
      return typeof Ctor == 'function' && Ctor instanceof Ctor &&
        funcToString.call(Ctor) == objectCtorString;
    }

    /**
     * Checks if `value` is classified as a `RegExp` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     * @example
     *
     * _.isRegExp(/abc/);
     * // => true
     *
     * _.isRegExp('/abc/');
     * // => false
     */
    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;

    /**
     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754
     * double precision number which isn't the result of a rounded unsafe integer.
     *
     * **Note:** This method is based on
     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.
     * @example
     *
     * _.isSafeInteger(3);
     * // => true
     *
     * _.isSafeInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isSafeInteger(Infinity);
     * // => false
     *
     * _.isSafeInteger('3');
     * // => false
     */
    function isSafeInteger(value) {
      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
    }

    /**
     * Checks if `value` is classified as a `Set` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     * @example
     *
     * _.isSet(new Set);
     * // => true
     *
     * _.isSet(new WeakSet);
     * // => false
     */
    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;

    /**
     * Checks if `value` is classified as a `String` primitive or object.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a string, else `false`.
     * @example
     *
     * _.isString('abc');
     * // => true
     *
     * _.isString(1);
     * // => false
     */
    function isString(value) {
      return typeof value == 'string' ||
        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);
    }

    /**
     * Checks if `value` is classified as a `Symbol` primitive or object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
     * @example
     *
     * _.isSymbol(Symbol.iterator);
     * // => true
     *
     * _.isSymbol('abc');
     * // => false
     */
    function isSymbol(value) {
      return typeof value == 'symbol' ||
        (isObjectLike(value) && baseGetTag(value) == symbolTag);
    }

    /**
     * Checks if `value` is classified as a typed array.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     * @example
     *
     * _.isTypedArray(new Uint8Array);
     * // => true
     *
     * _.isTypedArray([]);
     * // => false
     */
    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

    /**
     * Checks if `value` is `undefined`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
     * @example
     *
     * _.isUndefined(void 0);
     * // => true
     *
     * _.isUndefined(null);
     * // => false
     */
    function isUndefined(value) {
      return value === undefined;
    }

    /**
     * Checks if `value` is classified as a `WeakMap` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.
     * @example
     *
     * _.isWeakMap(new WeakMap);
     * // => true
     *
     * _.isWeakMap(new Map);
     * // => false
     */
    function isWeakMap(value) {
      return isObjectLike(value) && getTag(value) == weakMapTag;
    }

    /**
     * Checks if `value` is classified as a `WeakSet` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.
     * @example
     *
     * _.isWeakSet(new WeakSet);
     * // => true
     *
     * _.isWeakSet(new Set);
     * // => false
     */
    function isWeakSet(value) {
      return isObjectLike(value) && baseGetTag(value) == weakSetTag;
    }

    /**
     * Checks if `value` is less than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     * @see _.gt
     * @example
     *
     * _.lt(1, 3);
     * // => true
     *
     * _.lt(3, 3);
     * // => false
     *
     * _.lt(3, 1);
     * // => false
     */
    var lt = createRelationalOperation(baseLt);

    /**
     * Checks if `value` is less than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than or equal to
     *  `other`, else `false`.
     * @see _.gte
     * @example
     *
     * _.lte(1, 3);
     * // => true
     *
     * _.lte(3, 3);
     * // => true
     *
     * _.lte(3, 1);
     * // => false
     */
    var lte = createRelationalOperation(function(value, other) {
      return value <= other;
    });

    /**
     * Converts `value` to an array.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Array} Returns the converted array.
     * @example
     *
     * _.toArray({ 'a': 1, 'b': 2 });
     * // => [1, 2]
     *
     * _.toArray('abc');
     * // => ['a', 'b', 'c']
     *
     * _.toArray(1);
     * // => []
     *
     * _.toArray(null);
     * // => []
     */
    function toArray(value) {
      if (!value) {
        return [];
      }
      if (isArrayLike(value)) {
        return isString(value) ? stringToArray(value) : copyArray(value);
      }
      if (symIterator && value[symIterator]) {
        return iteratorToArray(value[symIterator]());
      }
      var tag = getTag(value),
          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);

      return func(value);
    }

    /**
     * Converts `value` to a finite number.
     *
     * @static
     * @memberOf _
     * @since 4.12.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted number.
     * @example
     *
     * _.toFinite(3.2);
     * // => 3.2
     *
     * _.toFinite(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toFinite(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toFinite('3.2');
     * // => 3.2
     */
    function toFinite(value) {
      if (!value) {
        return value === 0 ? value : 0;
      }
      value = toNumber(value);
      if (value === INFINITY || value === -INFINITY) {
        var sign = (value < 0 ? -1 : 1);
        return sign * MAX_INTEGER;
      }
      return value === value ? value : 0;
    }

    /**
     * Converts `value` to an integer.
     *
     * **Note:** This method is loosely based on
     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toInteger(3.2);
     * // => 3
     *
     * _.toInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toInteger(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toInteger('3.2');
     * // => 3
     */
    function toInteger(value) {
      var result = toFinite(value),
          remainder = result % 1;

      return result === result ? (remainder ? result - remainder : result) : 0;
    }

    /**
     * Converts `value` to an integer suitable for use as the length of an
     * array-like object.
     *
     * **Note:** This method is based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toLength(3.2);
     * // => 3
     *
     * _.toLength(Number.MIN_VALUE);
     * // => 0
     *
     * _.toLength(Infinity);
     * // => 4294967295
     *
     * _.toLength('3.2');
     * // => 3
     */
    function toLength(value) {
      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
    }

    /**
     * Converts `value` to a number.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     * @example
     *
     * _.toNumber(3.2);
     * // => 3.2
     *
     * _.toNumber(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toNumber(Infinity);
     * // => Infinity
     *
     * _.toNumber('3.2');
     * // => 3.2
     */
    function toNumber(value) {
      if (typeof value == 'number') {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      if (isObject(value)) {
        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
        value = isObject(other) ? (other + '') : other;
      }
      if (typeof value != 'string') {
        return value === 0 ? value : +value;
      }
      value = baseTrim(value);
      var isBinary = reIsBinary.test(value);
      return (isBinary || reIsOctal.test(value))
        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
        : (reIsBadHex.test(value) ? NAN : +value);
    }

    /**
     * Converts `value` to a plain object flattening inherited enumerable string
     * keyed properties of `value` to own properties of the plain object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Object} Returns the converted plain object.
     * @example
     *
     * function Foo() {
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.assign({ 'a': 1 }, new Foo);
     * // => { 'a': 1, 'b': 2 }
     *
     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
     * // => { 'a': 1, 'b': 2, 'c': 3 }
     */
    function toPlainObject(value) {
      return copyObject(value, keysIn(value));
    }

    /**
     * Converts `value` to a safe integer. A safe integer can be compared and
     * represented correctly.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toSafeInteger(3.2);
     * // => 3
     *
     * _.toSafeInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toSafeInteger(Infinity);
     * // => 9007199254740991
     *
     * _.toSafeInteger('3.2');
     * // => 3
     */
    function toSafeInteger(value) {
      return value
        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)
        : (value === 0 ? value : 0);
    }

    /**
     * Converts `value` to a string. An empty string is returned for `null`
     * and `undefined` values. The sign of `-0` is preserved.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.toString(null);
     * // => ''
     *
     * _.toString(-0);
     * // => '-0'
     *
     * _.toString([1, 2, 3]);
     * // => '1,2,3'
     */
    function toString(value) {
      return value == null ? '' : baseToString(value);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Assigns own enumerable string keyed properties of source objects to the
     * destination object. Source objects are applied from left to right.
     * Subsequent sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object` and is loosely based on
     * [`Object.assign`](https://mdn.io/Object/assign).
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assignIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assign({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'c': 3 }
     */
    var assign = createAssigner(function(object, source) {
      if (isPrototype(source) || isArrayLike(source)) {
        copyObject(source, keys(source), object);
        return;
      }
      for (var key in source) {
        if (hasOwnProperty.call(source, key)) {
          assignValue(object, key, source[key]);
        }
      }
    });

    /**
     * This method is like `_.assign` except that it iterates over own and
     * inherited source properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extend
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assign
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assignIn({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }
     */
    var assignIn = createAssigner(function(object, source) {
      copyObject(source, keysIn(source), object);
    });

    /**
     * This method is like `_.assignIn` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extendWith
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignInWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
      copyObject(source, keysIn(source), object, customizer);
    });

    /**
     * This method is like `_.assign` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignInWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {
      copyObject(source, keys(source), object, customizer);
    });

    /**
     * Creates an array of values corresponding to `paths` of `object`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Array} Returns the picked values.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _.at(object, ['a[0].b.c', 'a[1]']);
     * // => [3, 4]
     */
    var at = flatRest(baseAt);

    /**
     * Creates an object that inherits from the `prototype` object. If a
     * `properties` object is given, its own enumerable string keyed properties
     * are assigned to the created object.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Object
     * @param {Object} prototype The object to inherit from.
     * @param {Object} [properties] The properties to assign to the object.
     * @returns {Object} Returns the new object.
     * @example
     *
     * function Shape() {
     *   this.x = 0;
     *   this.y = 0;
     * }
     *
     * function Circle() {
     *   Shape.call(this);
     * }
     *
     * Circle.prototype = _.create(Shape.prototype, {
     *   'constructor': Circle
     * });
     *
     * var circle = new Circle;
     * circle instanceof Circle;
     * // => true
     *
     * circle instanceof Shape;
     * // => true
     */
    function create(prototype, properties) {
      var result = baseCreate(prototype);
      return properties == null ? result : baseAssign(result, properties);
    }

    /**
     * Assigns own and inherited enumerable string keyed properties of source
     * objects to the destination object for all destination properties that
     * resolve to `undefined`. Source objects are applied from left to right.
     * Once a property is set, additional values of the same property are ignored.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaultsDeep
     * @example
     *
     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var defaults = baseRest(function(object, sources) {
      object = Object(object);

      var index = -1;
      var length = sources.length;
      var guard = length > 2 ? sources[2] : undefined;

      if (guard && isIterateeCall(sources[0], sources[1], guard)) {
        length = 1;
      }

      while (++index < length) {
        var source = sources[index];
        var props = keysIn(source);
        var propsIndex = -1;
        var propsLength = props.length;

        while (++propsIndex < propsLength) {
          var key = props[propsIndex];
          var value = object[key];

          if (value === undefined ||
              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {
            object[key] = source[key];
          }
        }
      }

      return object;
    });

    /**
     * This method is like `_.defaults` except that it recursively assigns
     * default properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaults
     * @example
     *
     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });
     * // => { 'a': { 'b': 2, 'c': 3 } }
     */
    var defaultsDeep = baseRest(function(args) {
      args.push(undefined, customDefaultsMerge);
      return apply(mergeWith, undefined, args);
    });

    /**
     * This method is like `_.find` except that it returns the key of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findKey(users, function(o) { return o.age < 40; });
     * // => 'barney' (iteration order is not guaranteed)
     *
     * // The `_.matches` iteratee shorthand.
     * _.findKey(users, { 'age': 1, 'active': true });
     * // => 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findKey(users, 'active');
     * // => 'barney'
     */
    function findKey(object, predicate) {
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
    }

    /**
     * This method is like `_.findKey` except that it iterates over elements of
     * a collection in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findLastKey(users, function(o) { return o.age < 40; });
     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastKey(users, { 'age': 36, 'active': true });
     * // => 'barney'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastKey(users, 'active');
     * // => 'pebbles'
     */
    function findLastKey(object, predicate) {
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
    }

    /**
     * Iterates over own and inherited enumerable string keyed properties of an
     * object and invokes `iteratee` for each property. The iteratee is invoked
     * with three arguments: (value, key, object). Iteratee functions may exit
     * iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forInRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forIn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).
     */
    function forIn(object, iteratee) {
      return object == null
        ? object
        : baseFor(object, getIteratee(iteratee, 3), keysIn);
    }

    /**
     * This method is like `_.forIn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forInRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.
     */
    function forInRight(object, iteratee) {
      return object == null
        ? object
        : baseForRight(object, getIteratee(iteratee, 3), keysIn);
    }

    /**
     * Iterates over own enumerable string keyed properties of an object and
     * invokes `iteratee` for each property. The iteratee is invoked with three
     * arguments: (value, key, object). Iteratee functions may exit iteration
     * early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwnRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */
    function forOwn(object, iteratee) {
      return object && baseForOwn(object, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.forOwn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwnRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.
     */
    function forOwnRight(object, iteratee) {
      return object && baseForOwnRight(object, getIteratee(iteratee, 3));
    }

    /**
     * Creates an array of function property names from own enumerable properties
     * of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functionsIn
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functions(new Foo);
     * // => ['a', 'b']
     */
    function functions(object) {
      return object == null ? [] : baseFunctions(object, keys(object));
    }

    /**
     * Creates an array of function property names from own and inherited
     * enumerable properties of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functions
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functionsIn(new Foo);
     * // => ['a', 'b', 'c']
     */
    function functionsIn(object) {
      return object == null ? [] : baseFunctions(object, keysIn(object));
    }

    /**
     * Gets the value at `path` of `object`. If the resolved value is
     * `undefined`, the `defaultValue` is returned in its place.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.get(object, 'a[0].b.c');
     * // => 3
     *
     * _.get(object, ['a', '0', 'b', 'c']);
     * // => 3
     *
     * _.get(object, 'a.b.c', 'default');
     * // => 'default'
     */
    function get(object, path, defaultValue) {
      var result = object == null ? undefined : baseGet(object, path);
      return result === undefined ? defaultValue : result;
    }

    /**
     * Checks if `path` is a direct property of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = { 'a': { 'b': 2 } };
     * var other = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.has(object, 'a');
     * // => true
     *
     * _.has(object, 'a.b');
     * // => true
     *
     * _.has(object, ['a', 'b']);
     * // => true
     *
     * _.has(other, 'a');
     * // => false
     */
    function has(object, path) {
      return object != null && hasPath(object, path, baseHas);
    }

    /**
     * Checks if `path` is a direct or inherited property of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.hasIn(object, 'a');
     * // => true
     *
     * _.hasIn(object, 'a.b');
     * // => true
     *
     * _.hasIn(object, ['a', 'b']);
     * // => true
     *
     * _.hasIn(object, 'b');
     * // => false
     */
    function hasIn(object, path) {
      return object != null && hasPath(object, path, baseHasIn);
    }

    /**
     * Creates an object composed of the inverted keys and values of `object`.
     * If `object` contains duplicate values, subsequent values overwrite
     * property assignments of previous values.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Object
     * @param {Object} object The object to invert.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invert(object);
     * // => { '1': 'c', '2': 'b' }
     */
    var invert = createInverter(function(result, value, key) {
      if (value != null &&
          typeof value.toString != 'function') {
        value = nativeObjectToString.call(value);
      }

      result[value] = key;
    }, constant(identity));

    /**
     * This method is like `_.invert` except that the inverted object is generated
     * from the results of running each element of `object` thru `iteratee`. The
     * corresponding inverted value of each inverted key is an array of keys
     * responsible for generating the inverted value. The iteratee is invoked
     * with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Object
     * @param {Object} object The object to invert.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invertBy(object);
     * // => { '1': ['a', 'c'], '2': ['b'] }
     *
     * _.invertBy(object, function(value) {
     *   return 'group' + value;
     * });
     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }
     */
    var invertBy = createInverter(function(result, value, key) {
      if (value != null &&
          typeof value.toString != 'function') {
        value = nativeObjectToString.call(value);
      }

      if (hasOwnProperty.call(result, value)) {
        result[value].push(key);
      } else {
        result[value] = [key];
      }
    }, getIteratee);

    /**
     * Invokes the method at `path` of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };
     *
     * _.invoke(object, 'a[0].b.c.slice', 1, 3);
     * // => [2, 3]
     */
    var invoke = baseRest(baseInvoke);

    /**
     * Creates an array of the own enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects. See the
     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * for more details.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keys(new Foo);
     * // => ['a', 'b'] (iteration order is not guaranteed)
     *
     * _.keys('hi');
     * // => ['0', '1']
     */
    function keys(object) {
      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
    }

    /**
     * Creates an array of the own and inherited enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keysIn(new Foo);
     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
     */
    function keysIn(object) {
      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
    }

    /**
     * The opposite of `_.mapValues`; this method creates an object with the
     * same values as `object` and keys generated by running each own enumerable
     * string keyed property of `object` thru `iteratee`. The iteratee is invoked
     * with three arguments: (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapValues
     * @example
     *
     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {
     *   return key + value;
     * });
     * // => { 'a1': 1, 'b2': 2 }
     */
    function mapKeys(object, iteratee) {
      var result = {};
      iteratee = getIteratee(iteratee, 3);

      baseForOwn(object, function(value, key, object) {
        baseAssignValue(result, iteratee(value, key, object), value);
      });
      return result;
    }

    /**
     * Creates an object with the same keys as `object` and values generated
     * by running each own enumerable string keyed property of `object` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapKeys
     * @example
     *
     * var users = {
     *   'fred':    { 'user': 'fred',    'age': 40 },
     *   'pebbles': { 'user': 'pebbles', 'age': 1 }
     * };
     *
     * _.mapValues(users, function(o) { return o.age; });
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     *
     * // The `_.property` iteratee shorthand.
     * _.mapValues(users, 'age');
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     */
    function mapValues(object, iteratee) {
      var result = {};
      iteratee = getIteratee(iteratee, 3);

      baseForOwn(object, function(value, key, object) {
        baseAssignValue(result, key, iteratee(value, key, object));
      });
      return result;
    }

    /**
     * This method is like `_.assign` except that it recursively merges own and
     * inherited enumerable string keyed properties of source objects into the
     * destination object. Source properties that resolve to `undefined` are
     * skipped if a destination value exists. Array and plain object properties
     * are merged recursively. Other objects and value types are overridden by
     * assignment. Source objects are applied from left to right. Subsequent
     * sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {
     *   'a': [{ 'b': 2 }, { 'd': 4 }]
     * };
     *
     * var other = {
     *   'a': [{ 'c': 3 }, { 'e': 5 }]
     * };
     *
     * _.merge(object, other);
     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
     */
    var merge = createAssigner(function(object, source, srcIndex) {
      baseMerge(object, source, srcIndex);
    });

    /**
     * This method is like `_.merge` except that it accepts `customizer` which
     * is invoked to produce the merged values of the destination and source
     * properties. If `customizer` returns `undefined`, merging is handled by the
     * method instead. The `customizer` is invoked with six arguments:
     * (objValue, srcValue, key, object, source, stack).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} customizer The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   if (_.isArray(objValue)) {
     *     return objValue.concat(srcValue);
     *   }
     * }
     *
     * var object = { 'a': [1], 'b': [2] };
     * var other = { 'a': [3], 'b': [4] };
     *
     * _.mergeWith(object, other, customizer);
     * // => { 'a': [1, 3], 'b': [2, 4] }
     */
    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {
      baseMerge(object, source, srcIndex, customizer);
    });

    /**
     * The opposite of `_.pick`; this method creates an object composed of the
     * own and inherited enumerable property paths of `object` that are not omitted.
     *
     * **Note:** This method is considerably slower than `_.pick`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to omit.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omit(object, ['a', 'c']);
     * // => { 'b': '2' }
     */
    var omit = flatRest(function(object, paths) {
      var result = {};
      if (object == null) {
        return result;
      }
      var isDeep = false;
      paths = arrayMap(paths, function(path) {
        path = castPath(path, object);
        isDeep || (isDeep = path.length > 1);
        return path;
      });
      copyObject(object, getAllKeysIn(object), result);
      if (isDeep) {
        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
      }
      var length = paths.length;
      while (length--) {
        baseUnset(result, paths[length]);
      }
      return result;
    });

    /**
     * The opposite of `_.pickBy`; this method creates an object composed of
     * the own and inherited enumerable string keyed properties of `object` that
     * `predicate` doesn't return truthy for. The predicate is invoked with two
     * arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omitBy(object, _.isNumber);
     * // => { 'b': '2' }
     */
    function omitBy(object, predicate) {
      return pickBy(object, negate(getIteratee(predicate)));
    }

    /**
     * Creates an object composed of the picked `object` properties.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pick(object, ['a', 'c']);
     * // => { 'a': 1, 'c': 3 }
     */
    var pick = flatRest(function(object, paths) {
      return object == null ? {} : basePick(object, paths);
    });

    /**
     * Creates an object composed of the `object` properties `predicate` returns
     * truthy for. The predicate is invoked with two arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pickBy(object, _.isNumber);
     * // => { 'a': 1, 'c': 3 }
     */
    function pickBy(object, predicate) {
      if (object == null) {
        return {};
      }
      var props = arrayMap(getAllKeysIn(object), function(prop) {
        return [prop];
      });
      predicate = getIteratee(predicate);
      return basePickBy(object, props, function(value, path) {
        return predicate(value, path[0]);
      });
    }

    /**
     * This method is like `_.get` except that if the resolved value is a
     * function it's invoked with the `this` binding of its parent object and
     * its result is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to resolve.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };
     *
     * _.result(object, 'a[0].b.c1');
     * // => 3
     *
     * _.result(object, 'a[0].b.c2');
     * // => 4
     *
     * _.result(object, 'a[0].b.c3', 'default');
     * // => 'default'
     *
     * _.result(object, 'a[0].b.c3', _.constant('default'));
     * // => 'default'
     */
    function result(object, path, defaultValue) {
      path = castPath(path, object);

      var index = -1,
          length = path.length;

      // Ensure the loop is entered when path is empty.
      if (!length) {
        length = 1;
        object = undefined;
      }
      while (++index < length) {
        var value = object == null ? undefined : object[toKey(path[index])];
        if (value === undefined) {
          index = length;
          value = defaultValue;
        }
        object = isFunction(value) ? value.call(object) : value;
      }
      return object;
    }

    /**
     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,
     * it's created. Arrays are created for missing index properties while objects
     * are created for all other missing properties. Use `_.setWith` to customize
     * `path` creation.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.set(object, 'a[0].b.c', 4);
     * console.log(object.a[0].b.c);
     * // => 4
     *
     * _.set(object, ['x', '0', 'y', 'z'], 5);
     * console.log(object.x[0].y.z);
     * // => 5
     */
    function set(object, path, value) {
      return object == null ? object : baseSet(object, path, value);
    }

    /**
     * This method is like `_.set` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.setWith(object, '[0][1]', 'a', Object);
     * // => { '0': { '1': 'a' } }
     */
    function setWith(object, path, value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return object == null ? object : baseSet(object, path, value, customizer);
    }

    /**
     * Creates an array of own enumerable string keyed-value pairs for `object`
     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its
     * entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entries
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairs(new Foo);
     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)
     */
    var toPairs = createToPairs(keys);

    /**
     * Creates an array of own and inherited enumerable string keyed-value pairs
     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map
     * or set, its entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entriesIn
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairsIn(new Foo);
     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)
     */
    var toPairsIn = createToPairs(keysIn);

    /**
     * An alternative to `_.reduce`; this method transforms `object` to a new
     * `accumulator` object which is the result of running each of its own
     * enumerable string keyed properties thru `iteratee`, with each invocation
     * potentially mutating the `accumulator` object. If `accumulator` is not
     * provided, a new object with the same `[[Prototype]]` will be used. The
     * iteratee is invoked with four arguments: (accumulator, value, key, object).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The custom accumulator value.
     * @returns {*} Returns the accumulated value.
     * @example
     *
     * _.transform([2, 3, 4], function(result, n) {
     *   result.push(n *= n);
     *   return n % 2 == 0;
     * }, []);
     * // => [4, 9]
     *
     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] }
     */
    function transform(object, iteratee, accumulator) {
      var isArr = isArray(object),
          isArrLike = isArr || isBuffer(object) || isTypedArray(object);

      iteratee = getIteratee(iteratee, 4);
      if (accumulator == null) {
        var Ctor = object && object.constructor;
        if (isArrLike) {
          accumulator = isArr ? new Ctor : [];
        }
        else if (isObject(object)) {
          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
        }
        else {
          accumulator = {};
        }
      }
      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {
        return iteratee(accumulator, value, index, object);
      });
      return accumulator;
    }

    /**
     * Removes the property at `path` of `object`.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 7 } }] };
     * _.unset(object, 'a[0].b.c');
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     *
     * _.unset(object, ['a', '0', 'b', 'c']);
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     */
    function unset(object, path) {
      return object == null ? true : baseUnset(object, path);
    }

    /**
     * This method is like `_.set` except that accepts `updater` to produce the
     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`
     * is invoked with one argument: (value).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.update(object, 'a[0].b.c', function(n) { return n * n; });
     * console.log(object.a[0].b.c);
     * // => 9
     *
     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });
     * console.log(object.x[0].y.z);
     * // => 0
     */
    function update(object, path, updater) {
      return object == null ? object : baseUpdate(object, path, castFunction(updater));
    }

    /**
     * This method is like `_.update` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.updateWith(object, '[0][1]', _.constant('a'), Object);
     * // => { '0': { '1': 'a' } }
     */
    function updateWith(object, path, updater, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);
    }

    /**
     * Creates an array of the own enumerable string keyed property values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.values(new Foo);
     * // => [1, 2] (iteration order is not guaranteed)
     *
     * _.values('hi');
     * // => ['h', 'i']
     */
    function values(object) {
      return object == null ? [] : baseValues(object, keys(object));
    }

    /**
     * Creates an array of the own and inherited enumerable string keyed property
     * values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.valuesIn(new Foo);
     * // => [1, 2, 3] (iteration order is not guaranteed)
     */
    function valuesIn(object) {
      return object == null ? [] : baseValues(object, keysIn(object));
    }

    /*------------------------------------------------------------------------*/

    /**
     * Clamps `number` within the inclusive `lower` and `upper` bounds.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Number
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     * @example
     *
     * _.clamp(-10, -5, 5);
     * // => -5
     *
     * _.clamp(10, -5, 5);
     * // => 5
     */
    function clamp(number, lower, upper) {
      if (upper === undefined) {
        upper = lower;
        lower = undefined;
      }
      if (upper !== undefined) {
        upper = toNumber(upper);
        upper = upper === upper ? upper : 0;
      }
      if (lower !== undefined) {
        lower = toNumber(lower);
        lower = lower === lower ? lower : 0;
      }
      return baseClamp(toNumber(number), lower, upper);
    }

    /**
     * Checks if `n` is between `start` and up to, but not including, `end`. If
     * `end` is not specified, it's set to `start` with `start` then set to `0`.
     * If `start` is greater than `end` the params are swapped to support
     * negative ranges.
     *
     * @static
     * @memberOf _
     * @since 3.3.0
     * @category Number
     * @param {number} number The number to check.
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     * @see _.range, _.rangeRight
     * @example
     *
     * _.inRange(3, 2, 4);
     * // => true
     *
     * _.inRange(4, 8);
     * // => true
     *
     * _.inRange(4, 2);
     * // => false
     *
     * _.inRange(2, 2);
     * // => false
     *
     * _.inRange(1.2, 2);
     * // => true
     *
     * _.inRange(5.2, 4);
     * // => false
     *
     * _.inRange(-3, -2, -6);
     * // => true
     */
    function inRange(number, start, end) {
      start = toFinite(start);
      if (end === undefined) {
        end = start;
        start = 0;
      } else {
        end = toFinite(end);
      }
      number = toNumber(number);
      return baseInRange(number, start, end);
    }

    /**
     * Produces a random number between the inclusive `lower` and `upper` bounds.
     * If only one argument is provided a number between `0` and the given number
     * is returned. If `floating` is `true`, or either `lower` or `upper` are
     * floats, a floating-point number is returned instead of an integer.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Number
     * @param {number} [lower=0] The lower bound.
     * @param {number} [upper=1] The upper bound.
     * @param {boolean} [floating] Specify returning a floating-point number.
     * @returns {number} Returns the random number.
     * @example
     *
     * _.random(0, 5);
     * // => an integer between 0 and 5
     *
     * _.random(5);
     * // => also an integer between 0 and 5
     *
     * _.random(5, true);
     * // => a floating-point number between 0 and 5
     *
     * _.random(1.2, 5.2);
     * // => a floating-point number between 1.2 and 5.2
     */
    function random(lower, upper, floating) {
      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {
        upper = floating = undefined;
      }
      if (floating === undefined) {
        if (typeof upper == 'boolean') {
          floating = upper;
          upper = undefined;
        }
        else if (typeof lower == 'boolean') {
          floating = lower;
          lower = undefined;
        }
      }
      if (lower === undefined && upper === undefined) {
        lower = 0;
        upper = 1;
      }
      else {
        lower = toFinite(lower);
        if (upper === undefined) {
          upper = lower;
          lower = 0;
        } else {
          upper = toFinite(upper);
        }
      }
      if (lower > upper) {
        var temp = lower;
        lower = upper;
        upper = temp;
      }
      if (floating || lower % 1 || upper % 1) {
        var rand = nativeRandom();
        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);
      }
      return baseRandom(lower, upper);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the camel cased string.
     * @example
     *
     * _.camelCase('Foo Bar');
     * // => 'fooBar'
     *
     * _.camelCase('--foo-bar--');
     * // => 'fooBar'
     *
     * _.camelCase('__FOO_BAR__');
     * // => 'fooBar'
     */
    var camelCase = createCompounder(function(result, word, index) {
      word = word.toLowerCase();
      return result + (index ? capitalize(word) : word);
    });

    /**
     * Converts the first character of `string` to upper case and the remaining
     * to lower case.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to capitalize.
     * @returns {string} Returns the capitalized string.
     * @example
     *
     * _.capitalize('FRED');
     * // => 'Fred'
     */
    function capitalize(string) {
      return upperFirst(toString(string).toLowerCase());
    }

    /**
     * Deburrs `string` by converting
     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
     * letters to basic Latin letters and removing
     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to deburr.
     * @returns {string} Returns the deburred string.
     * @example
     *
     * _.deburr('déjà vu');
     * // => 'deja vu'
     */
    function deburr(string) {
      string = toString(string);
      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');
    }

    /**
     * Checks if `string` ends with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=string.length] The position to search up to.
     * @returns {boolean} Returns `true` if `string` ends with `target`,
     *  else `false`.
     * @example
     *
     * _.endsWith('abc', 'c');
     * // => true
     *
     * _.endsWith('abc', 'b');
     * // => false
     *
     * _.endsWith('abc', 'b', 2);
     * // => true
     */
    function endsWith(string, target, position) {
      string = toString(string);
      target = baseToString(target);

      var length = string.length;
      position = position === undefined
        ? length
        : baseClamp(toInteger(position), 0, length);

      var end = position;
      position -= target.length;
      return position >= 0 && string.slice(position, end) == target;
    }

    /**
     * Converts the characters "&", "<", ">", '"', and "'" in `string` to their
     * corresponding HTML entities.
     *
     * **Note:** No other characters are escaped. To escape additional
     * characters use a third-party library like [_he_](https://mths.be/he).
     *
     * Though the ">" character is escaped for symmetry, characters like
     * ">" and "/" don't need escaping in HTML and have no special meaning
     * unless they're part of a tag or unquoted attribute value. See
     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)
     * (under "semi-related fun fact") for more details.
     *
     * When working with HTML you should always
     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce
     * XSS vectors.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escape('fred, barney, & pebbles');
     * // => 'fred, barney, &amp; pebbles'
     */
    function escape(string) {
      string = toString(string);
      return (string && reHasUnescapedHtml.test(string))
        ? string.replace(reUnescapedHtml, escapeHtmlChar)
        : string;
    }

    /**
     * Escapes the `RegExp` special characters "^", "$", "\", ".", "*", "+",
     * "?", "(", ")", "[", "]", "{", "}", and "|" in `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escapeRegExp('[lodash](https://lodash.com/)');
     * // => '\[lodash\]\(https://lodash\.com/\)'
     */
    function escapeRegExp(string) {
      string = toString(string);
      return (string && reHasRegExpChar.test(string))
        ? string.replace(reRegExpChar, '\\$&')
        : string;
    }

    /**
     * Converts `string` to
     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the kebab cased string.
     * @example
     *
     * _.kebabCase('Foo Bar');
     * // => 'foo-bar'
     *
     * _.kebabCase('fooBar');
     * // => 'foo-bar'
     *
     * _.kebabCase('__FOO_BAR__');
     * // => 'foo-bar'
     */
    var kebabCase = createCompounder(function(result, word, index) {
      return result + (index ? '-' : '') + word.toLowerCase();
    });

    /**
     * Converts `string`, as space separated words, to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.lowerCase('--Foo-Bar--');
     * // => 'foo bar'
     *
     * _.lowerCase('fooBar');
     * // => 'foo bar'
     *
     * _.lowerCase('__FOO_BAR__');
     * // => 'foo bar'
     */
    var lowerCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + word.toLowerCase();
    });

    /**
     * Converts the first character of `string` to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.lowerFirst('Fred');
     * // => 'fred'
     *
     * _.lowerFirst('FRED');
     * // => 'fRED'
     */
    var lowerFirst = createCaseFirst('toLowerCase');

    /**
     * Pads `string` on the left and right sides if it's shorter than `length`.
     * Padding characters are truncated if they can't be evenly divided by `length`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.pad('abc', 8);
     * // => '  abc   '
     *
     * _.pad('abc', 8, '_-');
     * // => '_-abc_-_'
     *
     * _.pad('abc', 3);
     * // => 'abc'
     */
    function pad(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      if (!length || strLength >= length) {
        return string;
      }
      var mid = (length - strLength) / 2;
      return (
        createPadding(nativeFloor(mid), chars) +
        string +
        createPadding(nativeCeil(mid), chars)
      );
    }

    /**
     * Pads `string` on the right side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padEnd('abc', 6);
     * // => 'abc   '
     *
     * _.padEnd('abc', 6, '_-');
     * // => 'abc_-_'
     *
     * _.padEnd('abc', 3);
     * // => 'abc'
     */
    function padEnd(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      return (length && strLength < length)
        ? (string + createPadding(length - strLength, chars))
        : string;
    }

    /**
     * Pads `string` on the left side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padStart('abc', 6);
     * // => '   abc'
     *
     * _.padStart('abc', 6, '_-');
     * // => '_-_abc'
     *
     * _.padStart('abc', 3);
     * // => 'abc'
     */
    function padStart(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      return (length && strLength < length)
        ? (createPadding(length - strLength, chars) + string)
        : string;
    }

    /**
     * Converts `string` to an integer of the specified radix. If `radix` is
     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a
     * hexadecimal, in which case a `radix` of `16` is used.
     *
     * **Note:** This method aligns with the
     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category String
     * @param {string} string The string to convert.
     * @param {number} [radix=10] The radix to interpret `value` by.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.parseInt('08');
     * // => 8
     *
     * _.map(['6', '08', '10'], _.parseInt);
     * // => [6, 8, 10]
     */
    function parseInt(string, radix, guard) {
      if (guard || radix == null) {
        radix = 0;
      } else if (radix) {
        radix = +radix;
      }
      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);
    }

    /**
     * Repeats the given string `n` times.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to repeat.
     * @param {number} [n=1] The number of times to repeat the string.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the repeated string.
     * @example
     *
     * _.repeat('*', 3);
     * // => '***'
     *
     * _.repeat('abc', 2);
     * // => 'abcabc'
     *
     * _.repeat('abc', 0);
     * // => ''
     */
    function repeat(string, n, guard) {
      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {
        n = 1;
      } else {
        n = toInteger(n);
      }
      return baseRepeat(toString(string), n);
    }

    /**
     * Replaces matches for `pattern` in `string` with `replacement`.
     *
     * **Note:** This method is based on
     * [`String#replace`](https://mdn.io/String/replace).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to modify.
     * @param {RegExp|string} pattern The pattern to replace.
     * @param {Function|string} replacement The match replacement.
     * @returns {string} Returns the modified string.
     * @example
     *
     * _.replace('Hi Fred', 'Fred', 'Barney');
     * // => 'Hi Barney'
     */
    function replace() {
      var args = arguments,
          string = toString(args[0]);

      return args.length < 3 ? string : string.replace(args[1], args[2]);
    }

    /**
     * Converts `string` to
     * [snake case](https://en.wikipedia.org/wiki/Snake_case).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the snake cased string.
     * @example
     *
     * _.snakeCase('Foo Bar');
     * // => 'foo_bar'
     *
     * _.snakeCase('fooBar');
     * // => 'foo_bar'
     *
     * _.snakeCase('--FOO-BAR--');
     * // => 'foo_bar'
     */
    var snakeCase = createCompounder(function(result, word, index) {
      return result + (index ? '_' : '') + word.toLowerCase();
    });

    /**
     * Splits `string` by `separator`.
     *
     * **Note:** This method is based on
     * [`String#split`](https://mdn.io/String/split).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to split.
     * @param {RegExp|string} separator The separator pattern to split by.
     * @param {number} [limit] The length to truncate results to.
     * @returns {Array} Returns the string segments.
     * @example
     *
     * _.split('a-b-c', '-', 2);
     * // => ['a', 'b']
     */
    function split(string, separator, limit) {
      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {
        separator = limit = undefined;
      }
      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;
      if (!limit) {
        return [];
      }
      string = toString(string);
      if (string && (
            typeof separator == 'string' ||
            (separator != null && !isRegExp(separator))
          )) {
        separator = baseToString(separator);
        if (!separator && hasUnicode(string)) {
          return castSlice(stringToArray(string), 0, limit);
        }
      }
      return string.split(separator, limit);
    }

    /**
     * Converts `string` to
     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).
     *
     * @static
     * @memberOf _
     * @since 3.1.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the start cased string.
     * @example
     *
     * _.startCase('--foo-bar--');
     * // => 'Foo Bar'
     *
     * _.startCase('fooBar');
     * // => 'Foo Bar'
     *
     * _.startCase('__FOO_BAR__');
     * // => 'FOO BAR'
     */
    var startCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + upperFirst(word);
    });

    /**
     * Checks if `string` starts with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=0] The position to search from.
     * @returns {boolean} Returns `true` if `string` starts with `target`,
     *  else `false`.
     * @example
     *
     * _.startsWith('abc', 'a');
     * // => true
     *
     * _.startsWith('abc', 'b');
     * // => false
     *
     * _.startsWith('abc', 'b', 1);
     * // => true
     */
    function startsWith(string, target, position) {
      string = toString(string);
      position = position == null
        ? 0
        : baseClamp(toInteger(position), 0, string.length);

      target = baseToString(target);
      return string.slice(position, position + target.length) == target;
    }

    /**
     * Creates a compiled template function that can interpolate data properties
     * in "interpolate" delimiters, HTML-escape interpolated data properties in
     * "escape" delimiters, and execute JavaScript in "evaluate" delimiters. Data
     * properties may be accessed as free variables in the template. If a setting
     * object is given, it takes precedence over `_.templateSettings` values.
     *
     * **Note:** In the development build `_.template` utilizes
     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)
     * for easier debugging.
     *
     * For more information on precompiling templates see
     * [lodash's custom builds documentation](https://lodash.com/custom-builds).
     *
     * For more information on Chrome extension sandboxes see
     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The template string.
     * @param {Object} [options={}] The options object.
     * @param {RegExp} [options.escape=_.templateSettings.escape]
     *  The HTML "escape" delimiter.
     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]
     *  The "evaluate" delimiter.
     * @param {Object} [options.imports=_.templateSettings.imports]
     *  An object to import into the template as free variables.
     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]
     *  The "interpolate" delimiter.
     * @param {string} [options.sourceURL='lodash.templateSources[n]']
     *  The sourceURL of the compiled template.
     * @param {string} [options.variable='obj']
     *  The data object variable name.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the compiled template function.
     * @example
     *
     * // Use the "interpolate" delimiter to create a compiled template.
     * var compiled = _.template('hello <%= user %>!');
     * compiled({ 'user': 'fred' });
     * // => 'hello fred!'
     *
     * // Use the HTML "escape" delimiter to escape data property values.
     * var compiled = _.template('<b><%- value %></b>');
     * compiled({ 'value': '<script>' });
     * // => '<b>&lt;script&gt;</b>'
     *
     * // Use the "evaluate" delimiter to execute JavaScript and generate HTML.
     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the internal `print` function in "evaluate" delimiters.
     * var compiled = _.template('<% print("hello " + user); %>!');
     * compiled({ 'user': 'barney' });
     * // => 'hello barney!'
     *
     * // Use the ES template literal delimiter as an "interpolate" delimiter.
     * // Disable support by replacing the "interpolate" delimiter.
     * var compiled = _.template('hello ${ user }!');
     * compiled({ 'user': 'pebbles' });
     * // => 'hello pebbles!'
     *
     * // Use backslashes to treat delimiters as plain text.
     * var compiled = _.template('<%= "\\<%- value %\\>" %>');
     * compiled({ 'value': 'ignored' });
     * // => '<%- value %>'
     *
     * // Use the `imports` option to import `jQuery` as `jq`.
     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';
     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the `sourceURL` option to specify a custom sourceURL for the template.
     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });
     * compiled(data);
     * // => Find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector.
     *
     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.
     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });
     * compiled.source;
     * // => function(data) {
     * //   var __t, __p = '';
     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';
     * //   return __p;
     * // }
     *
     * // Use custom template delimiters.
     * _.templateSettings.interpolate = /{{([\s\S]+?)}}/g;
     * var compiled = _.template('hello {{ user }}!');
     * compiled({ 'user': 'mustache' });
     * // => 'hello mustache!'
     *
     * // Use the `source` property to inline compiled templates for meaningful
     * // line numbers in error messages and stack traces.
     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\
     *   var JST = {\
     *     "main": ' + _.template(mainText).source + '\
     *   };\
     * ');
     */
    function template(string, options, guard) {
      // Based on John Resig's `tmpl` implementation
      // (http://ejohn.org/blog/javascript-micro-templating/)
      // and Laura Doktorova's doT.js (https://github.com/olado/doT).
      var settings = lodash.templateSettings;

      if (guard && isIterateeCall(string, options, guard)) {
        options = undefined;
      }
      string = toString(string);
      options = assignInWith({}, options, settings, customDefaultsAssignIn);

      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),
          importsKeys = keys(imports),
          importsValues = baseValues(imports, importsKeys);

      var isEscaping,
          isEvaluating,
          index = 0,
          interpolate = options.interpolate || reNoMatch,
          source = "__p += '";

      // Compile the regexp to match each delimiter.
      var reDelimiters = RegExp(
        (options.escape || reNoMatch).source + '|' +
        interpolate.source + '|' +
        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +
        (options.evaluate || reNoMatch).source + '|$'
      , 'g');

      // Use a sourceURL for easier debugging.
      // The sourceURL gets injected into the source that's eval-ed, so be careful
      // to normalize all kinds of whitespace, so e.g. newlines (and unicode versions of it) can't sneak in
      // and escape the comment, thus injecting code that gets evaled.
      var sourceURL = '//# sourceURL=' +
        (hasOwnProperty.call(options, 'sourceURL')
          ? (options.sourceURL + '').replace(/\s/g, ' ')
          : ('lodash.templateSources[' + (++templateCounter) + ']')
        ) + '\n';

      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
        interpolateValue || (interpolateValue = esTemplateValue);

        // Escape characters that can't be included in string literals.
        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);

        // Replace delimiters with snippets.
        if (escapeValue) {
          isEscaping = true;
          source += "' +\n__e(" + escapeValue + ") +\n'";
        }
        if (evaluateValue) {
          isEvaluating = true;
          source += "';\n" + evaluateValue + ";\n__p += '";
        }
        if (interpolateValue) {
          source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
        }
        index = offset + match.length;

        // The JS engine embedded in Adobe products needs `match` returned in
        // order to produce the correct `offset` value.
        return match;
      });

      source += "';\n";

      // If `variable` is not specified wrap a with-statement around the generated
      // code to add the data object to the top of the scope chain.
      var variable = hasOwnProperty.call(options, 'variable') && options.variable;
      if (!variable) {
        source = 'with (obj) {\n' + source + '\n}\n';
      }
      // Throw an error if a forbidden character was found in `variable`, to prevent
      // potential command injection attacks.
      else if (reForbiddenIdentifierChars.test(variable)) {
        throw new Error(INVALID_TEMPL_VAR_ERROR_TEXT);
      }

      // Cleanup code by stripping empty strings.
      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)
        .replace(reEmptyStringMiddle, '$1')
        .replace(reEmptyStringTrailing, '$1;');

      // Frame code as the function body.
      source = 'function(' + (variable || 'obj') + ') {\n' +
        (variable
          ? ''
          : 'obj || (obj = {});\n'
        ) +
        "var __t, __p = ''" +
        (isEscaping
           ? ', __e = _.escape'
           : ''
        ) +
        (isEvaluating
          ? ', __j = Array.prototype.join;\n' +
            "function print() { __p += __j.call(arguments, '') }\n"
          : ';\n'
        ) +
        source +
        'return __p\n}';

      var result = attempt(function() {
        return Function(importsKeys, sourceURL + 'return ' + source)
          .apply(undefined, importsValues);
      });

      // Provide the compiled function's source by its `toString` method or
      // the `source` property as a convenience for inlining compiled templates.
      result.source = source;
      if (isError(result)) {
        throw result;
      }
      return result;
    }

    /**
     * Converts `string`, as a whole, to lower case just like
     * [String#toLowerCase](https://mdn.io/toLowerCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.toLower('--Foo-Bar--');
     * // => '--foo-bar--'
     *
     * _.toLower('fooBar');
     * // => 'foobar'
     *
     * _.toLower('__FOO_BAR__');
     * // => '__foo_bar__'
     */
    function toLower(value) {
      return toString(value).toLowerCase();
    }

    /**
     * Converts `string`, as a whole, to upper case just like
     * [String#toUpperCase](https://mdn.io/toUpperCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.toUpper('--foo-bar--');
     * // => '--FOO-BAR--'
     *
     * _.toUpper('fooBar');
     * // => 'FOOBAR'
     *
     * _.toUpper('__foo_bar__');
     * // => '__FOO_BAR__'
     */
    function toUpper(value) {
      return toString(value).toUpperCase();
    }

    /**
     * Removes leading and trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trim('  abc  ');
     * // => 'abc'
     *
     * _.trim('-_-abc-_-', '_-');
     * // => 'abc'
     *
     * _.map(['  foo  ', '  bar  '], _.trim);
     * // => ['foo', 'bar']
     */
    function trim(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return baseTrim(string);
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          chrSymbols = stringToArray(chars),
          start = charsStartIndex(strSymbols, chrSymbols),
          end = charsEndIndex(strSymbols, chrSymbols) + 1;

      return castSlice(strSymbols, start, end).join('');
    }

    /**
     * Removes trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimEnd('  abc  ');
     * // => '  abc'
     *
     * _.trimEnd('-_-abc-_-', '_-');
     * // => '-_-abc'
     */
    function trimEnd(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.slice(0, trimmedEndIndex(string) + 1);
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;

      return castSlice(strSymbols, 0, end).join('');
    }

    /**
     * Removes leading whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimStart('  abc  ');
     * // => 'abc  '
     *
     * _.trimStart('-_-abc-_-', '_-');
     * // => 'abc-_-'
     */
    function trimStart(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrimStart, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          start = charsStartIndex(strSymbols, stringToArray(chars));

      return castSlice(strSymbols, start).join('');
    }

    /**
     * Truncates `string` if it's longer than the given maximum string length.
     * The last characters of the truncated string are replaced with the omission
     * string which defaults to "...".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to truncate.
     * @param {Object} [options={}] The options object.
     * @param {number} [options.length=30] The maximum string length.
     * @param {string} [options.omission='...'] The string to indicate text is omitted.
     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.
     * @returns {string} Returns the truncated string.
     * @example
     *
     * _.truncate('hi-diddly-ho there, neighborino');
     * // => 'hi-diddly-ho there, neighbo...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': ' '
     * });
     * // => 'hi-diddly-ho there,...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': /,? +/
     * });
     * // => 'hi-diddly-ho there...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'omission': ' [...]'
     * });
     * // => 'hi-diddly-ho there, neig [...]'
     */
    function truncate(string, options) {
      var length = DEFAULT_TRUNC_LENGTH,
          omission = DEFAULT_TRUNC_OMISSION;

      if (isObject(options)) {
        var separator = 'separator' in options ? options.separator : separator;
        length = 'length' in options ? toInteger(options.length) : length;
        omission = 'omission' in options ? baseToString(options.omission) : omission;
      }
      string = toString(string);

      var strLength = string.length;
      if (hasUnicode(string)) {
        var strSymbols = stringToArray(string);
        strLength = strSymbols.length;
      }
      if (length >= strLength) {
        return string;
      }
      var end = length - stringSize(omission);
      if (end < 1) {
        return omission;
      }
      var result = strSymbols
        ? castSlice(strSymbols, 0, end).join('')
        : string.slice(0, end);

      if (separator === undefined) {
        return result + omission;
      }
      if (strSymbols) {
        end += (result.length - end);
      }
      if (isRegExp(separator)) {
        if (string.slice(end).search(separator)) {
          var match,
              substring = result;

          if (!separator.global) {
            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');
          }
          separator.lastIndex = 0;
          while ((match = separator.exec(substring))) {
            var newEnd = match.index;
          }
          result = result.slice(0, newEnd === undefined ? end : newEnd);
        }
      } else if (string.indexOf(baseToString(separator), end) != end) {
        var index = result.lastIndexOf(separator);
        if (index > -1) {
          result = result.slice(0, index);
        }
      }
      return result + omission;
    }

    /**
     * The inverse of `_.escape`; this method converts the HTML entities
     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to
     * their corresponding characters.
     *
     * **Note:** No other HTML entities are unescaped. To unescape additional
     * HTML entities use a third-party library like [_he_](https://mths.be/he).
     *
     * @static
     * @memberOf _
     * @since 0.6.0
     * @category String
     * @param {string} [string=''] The string to unescape.
     * @returns {string} Returns the unescaped string.
     * @example
     *
     * _.unescape('fred, barney, &amp; pebbles');
     * // => 'fred, barney, & pebbles'
     */
    function unescape(string) {
      string = toString(string);
      return (string && reHasEscapedHtml.test(string))
        ? string.replace(reEscapedHtml, unescapeHtmlChar)
        : string;
    }

    /**
     * Converts `string`, as space separated words, to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.upperCase('--foo-bar');
     * // => 'FOO BAR'
     *
     * _.upperCase('fooBar');
     * // => 'FOO BAR'
     *
     * _.upperCase('__foo_bar__');
     * // => 'FOO BAR'
     */
    var upperCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + word.toUpperCase();
    });

    /**
     * Converts the first character of `string` to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.upperFirst('fred');
     * // => 'Fred'
     *
     * _.upperFirst('FRED');
     * // => 'FRED'
     */
    var upperFirst = createCaseFirst('toUpperCase');

    /**
     * Splits `string` into an array of its words.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {RegExp|string} [pattern] The pattern to match words.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the words of `string`.
     * @example
     *
     * _.words('fred, barney, & pebbles');
     * // => ['fred', 'barney', 'pebbles']
     *
     * _.words('fred, barney, & pebbles', /[^, ]+/g);
     * // => ['fred', 'barney', '&', 'pebbles']
     */
    function words(string, pattern, guard) {
      string = toString(string);
      pattern = guard ? undefined : pattern;

      if (pattern === undefined) {
        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
      }
      return string.match(pattern) || [];
    }

    /*------------------------------------------------------------------------*/

    /**
     * Attempts to invoke `func`, returning either the result or the caught error
     * object. Any additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Function} func The function to attempt.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {*} Returns the `func` result or error object.
     * @example
     *
     * // Avoid throwing errors for invalid selectors.
     * var elements = _.attempt(function(selector) {
     *   return document.querySelectorAll(selector);
     * }, '>_>');
     *
     * if (_.isError(elements)) {
     *   elements = [];
     * }
     */
    var attempt = baseRest(function(func, args) {
      try {
        return apply(func, undefined, args);
      } catch (e) {
        return isError(e) ? e : new Error(e);
      }
    });

    /**
     * Binds methods of an object to the object itself, overwriting the existing
     * method.
     *
     * **Note:** This method doesn't set the "length" property of bound functions.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Object} object The object to bind and assign the bound methods to.
     * @param {...(string|string[])} methodNames The object method names to bind.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var view = {
     *   'label': 'docs',
     *   'click': function() {
     *     console.log('clicked ' + this.label);
     *   }
     * };
     *
     * _.bindAll(view, ['click']);
     * jQuery(element).on('click', view.click);
     * // => Logs 'clicked docs' when clicked.
     */
    var bindAll = flatRest(function(object, methodNames) {
      arrayEach(methodNames, function(key) {
        key = toKey(key);
        baseAssignValue(object, key, bind(object[key], object));
      });
      return object;
    });

    /**
     * Creates a function that iterates over `pairs` and invokes the corresponding
     * function of the first predicate to return truthy. The predicate-function
     * pairs are invoked with the `this` binding and arguments of the created
     * function.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Array} pairs The predicate-function pairs.
     * @returns {Function} Returns the new composite function.
     * @example
     *
     * var func = _.cond([
     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],
     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],
     *   [_.stubTrue,                      _.constant('no match')]
     * ]);
     *
     * func({ 'a': 1, 'b': 2 });
     * // => 'matches A'
     *
     * func({ 'a': 0, 'b': 1 });
     * // => 'matches B'
     *
     * func({ 'a': '1', 'b': '2' });
     * // => 'no match'
     */
    function cond(pairs) {
      var length = pairs == null ? 0 : pairs.length,
          toIteratee = getIteratee();

      pairs = !length ? [] : arrayMap(pairs, function(pair) {
        if (typeof pair[1] != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }
        return [toIteratee(pair[0]), pair[1]];
      });

      return baseRest(function(args) {
        var index = -1;
        while (++index < length) {
          var pair = pairs[index];
          if (apply(pair[0], this, args)) {
            return apply(pair[1], this, args);
          }
        }
      });
    }

    /**
     * Creates a function that invokes the predicate properties of `source` with
     * the corresponding property values of a given object, returning `true` if
     * all predicates return truthy, else `false`.
     *
     * **Note:** The created function is equivalent to `_.conformsTo` with
     * `source` partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 2, 'b': 1 },
     *   { 'a': 1, 'b': 2 }
     * ];
     *
     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));
     * // => [{ 'a': 1, 'b': 2 }]
     */
    function conforms(source) {
      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that returns `value`.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {*} value The value to return from the new function.
     * @returns {Function} Returns the new constant function.
     * @example
     *
     * var objects = _.times(2, _.constant({ 'a': 1 }));
     *
     * console.log(objects);
     * // => [{ 'a': 1 }, { 'a': 1 }]
     *
     * console.log(objects[0] === objects[1]);
     * // => true
     */
    function constant(value) {
      return function() {
        return value;
      };
    }

    /**
     * Checks `value` to determine whether a default value should be returned in
     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,
     * or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Util
     * @param {*} value The value to check.
     * @param {*} defaultValue The default value.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * _.defaultTo(1, 10);
     * // => 1
     *
     * _.defaultTo(undefined, 10);
     * // => 10
     */
    function defaultTo(value, defaultValue) {
      return (value == null || value !== value) ? defaultValue : value;
    }

    /**
     * Creates a function that returns the result of invoking the given functions
     * with the `this` binding of the created function, where each successive
     * invocation is supplied the return value of the previous.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flowRight
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flow([_.add, square]);
     * addSquare(1, 2);
     * // => 9
     */
    var flow = createFlow();

    /**
     * This method is like `_.flow` except that it creates a function that
     * invokes the given functions from right to left.
     *
     * @static
     * @since 3.0.0
     * @memberOf _
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flow
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flowRight([square, _.add]);
     * addSquare(1, 2);
     * // => 9
     */
    var flowRight = createFlow(true);

    /**
     * This method returns the first argument it receives.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {*} value Any value.
     * @returns {*} Returns `value`.
     * @example
     *
     * var object = { 'a': 1 };
     *
     * console.log(_.identity(object) === object);
     * // => true
     */
    function identity(value) {
      return value;
    }

    /**
     * Creates a function that invokes `func` with the arguments of the created
     * function. If `func` is a property name, the created function returns the
     * property value for a given element. If `func` is an array or object, the
     * created function returns `true` for elements that contain the equivalent
     * source properties, otherwise it returns `false`.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Util
     * @param {*} [func=_.identity] The value to convert to a callback.
     * @returns {Function} Returns the callback.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));
     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, _.iteratee(['user', 'fred']));
     * // => [{ 'user': 'fred', 'age': 40 }]
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, _.iteratee('user'));
     * // => ['barney', 'fred']
     *
     * // Create custom iteratee shorthands.
     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {
     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {
     *     return func.test(string);
     *   };
     * });
     *
     * _.filter(['abc', 'def'], /ef/);
     * // => ['def']
     */
    function iteratee(func) {
      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that performs a partial deep comparison between a given
     * object and `source`, returning `true` if the given object has equivalent
     * property values, else `false`.
     *
     * **Note:** The created function is equivalent to `_.isMatch` with `source`
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * **Note:** Multiple values can be checked by combining several matchers
     * using `_.overSome`
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));
     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]
     *
     * // Checking for several possible values
     * _.filter(objects, _.overSome([_.matches({ 'a': 1 }), _.matches({ 'a': 4 })]));
     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]
     */
    function matches(source) {
      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that performs a partial deep comparison between the
     * value at `path` of a given object to `srcValue`, returning `true` if the
     * object value is equivalent, else `false`.
     *
     * **Note:** Partial comparisons will match empty array and empty object
     * `srcValue` values against any array or object value, respectively. See
     * `_.isEqual` for a list of supported value comparisons.
     *
     * **Note:** Multiple values can be checked by combining several matchers
     * using `_.overSome`
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.find(objects, _.matchesProperty('a', 4));
     * // => { 'a': 4, 'b': 5, 'c': 6 }
     *
     * // Checking for several possible values
     * _.filter(objects, _.overSome([_.matchesProperty('a', 1), _.matchesProperty('a', 4)]));
     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]
     */
    function matchesProperty(path, srcValue) {
      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that invokes the method at `path` of a given object.
     * Any additional arguments are provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': _.constant(2) } },
     *   { 'a': { 'b': _.constant(1) } }
     * ];
     *
     * _.map(objects, _.method('a.b'));
     * // => [2, 1]
     *
     * _.map(objects, _.method(['a', 'b']));
     * // => [2, 1]
     */
    var method = baseRest(function(path, args) {
      return function(object) {
        return baseInvoke(object, path, args);
      };
    });

    /**
     * The opposite of `_.method`; this method creates a function that invokes
     * the method at a given path of `object`. Any additional arguments are
     * provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Object} object The object to query.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var array = _.times(3, _.constant),
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.methodOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));
     * // => [2, 0]
     */
    var methodOf = baseRest(function(object, args) {
      return function(path) {
        return baseInvoke(object, path, args);
      };
    });

    /**
     * Adds all own enumerable string keyed function properties of a source
     * object to the destination object. If `object` is a function, then methods
     * are added to its prototype as well.
     *
     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to
     * avoid conflicts caused by modifying the original.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Function|Object} [object=lodash] The destination object.
     * @param {Object} source The object of functions to add.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.
     * @returns {Function|Object} Returns `object`.
     * @example
     *
     * function vowels(string) {
     *   return _.filter(string, function(v) {
     *     return /[aeiou]/i.test(v);
     *   });
     * }
     *
     * _.mixin({ 'vowels': vowels });
     * _.vowels('fred');
     * // => ['e']
     *
     * _('fred').vowels().value();
     * // => ['e']
     *
     * _.mixin({ 'vowels': vowels }, { 'chain': false });
     * _('fred').vowels();
     * // => ['e']
     */
    function mixin(object, source, options) {
      var props = keys(source),
          methodNames = baseFunctions(source, props);

      if (options == null &&
          !(isObject(source) && (methodNames.length || !props.length))) {
        options = source;
        source = object;
        object = this;
        methodNames = baseFunctions(source, keys(source));
      }
      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,
          isFunc = isFunction(object);

      arrayEach(methodNames, function(methodName) {
        var func = source[methodName];
        object[methodName] = func;
        if (isFunc) {
          object.prototype[methodName] = function() {
            var chainAll = this.__chain__;
            if (chain || chainAll) {
              var result = object(this.__wrapped__),
                  actions = result.__actions__ = copyArray(this.__actions__);

              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });
              result.__chain__ = chainAll;
              return result;
            }
            return func.apply(object, arrayPush([this.value()], arguments));
          };
        }
      });

      return object;
    }

    /**
     * Reverts the `_` variable to its previous value and returns a reference to
     * the `lodash` function.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @returns {Function} Returns the `lodash` function.
     * @example
     *
     * var lodash = _.noConflict();
     */
    function noConflict() {
      if (root._ === this) {
        root._ = oldDash;
      }
      return this;
    }

    /**
     * This method returns `undefined`.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Util
     * @example
     *
     * _.times(2, _.noop);
     * // => [undefined, undefined]
     */
    function noop() {
      // No operation performed.
    }

    /**
     * Creates a function that gets the argument at index `n`. If `n` is negative,
     * the nth argument from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [n=0] The index of the argument to return.
     * @returns {Function} Returns the new pass-thru function.
     * @example
     *
     * var func = _.nthArg(1);
     * func('a', 'b', 'c', 'd');
     * // => 'b'
     *
     * var func = _.nthArg(-2);
     * func('a', 'b', 'c', 'd');
     * // => 'c'
     */
    function nthArg(n) {
      n = toInteger(n);
      return baseRest(function(args) {
        return baseNth(args, n);
      });
    }

    /**
     * Creates a function that invokes `iteratees` with the arguments it receives
     * and returns their results.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to invoke.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.over([Math.max, Math.min]);
     *
     * func(1, 2, 3, 4);
     * // => [4, 1]
     */
    var over = createOver(arrayMap);

    /**
     * Creates a function that checks if **all** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * Following shorthands are possible for providing predicates.
     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.
     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overEvery([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => false
     *
     * func(NaN);
     * // => false
     */
    var overEvery = createOver(arrayEvery);

    /**
     * Creates a function that checks if **any** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * Following shorthands are possible for providing predicates.
     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.
     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overSome([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => true
     *
     * func(NaN);
     * // => false
     *
     * var matchesFunc = _.overSome([{ 'a': 1 }, { 'a': 2 }])
     * var matchesPropertyFunc = _.overSome([['a', 1], ['a', 2]])
     */
    var overSome = createOver(arraySome);

    /**
     * Creates a function that returns the value at `path` of a given object.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': 2 } },
     *   { 'a': { 'b': 1 } }
     * ];
     *
     * _.map(objects, _.property('a.b'));
     * // => [2, 1]
     *
     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
     * // => [1, 2]
     */
    function property(path) {
      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
    }

    /**
     * The opposite of `_.property`; this method creates a function that returns
     * the value at a given path of `object`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} object The object to query.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var array = [0, 1, 2],
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));
     * // => [2, 0]
     */
    function propertyOf(object) {
      return function(path) {
        return object == null ? undefined : baseGet(object, path);
      };
    }

    /**
     * Creates an array of numbers (positive and/or negative) progressing from
     * `start` up to, but not including, `end`. A step of `-1` is used if a negative
     * `start` is specified without an `end` or `step`. If `end` is not specified,
     * it's set to `start` with `start` then set to `0`.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.rangeRight
     * @example
     *
     * _.range(4);
     * // => [0, 1, 2, 3]
     *
     * _.range(-4);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 5);
     * // => [1, 2, 3, 4]
     *
     * _.range(0, 20, 5);
     * // => [0, 5, 10, 15]
     *
     * _.range(0, -4, -1);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.range(0);
     * // => []
     */
    var range = createRange();

    /**
     * This method is like `_.range` except that it populates values in
     * descending order.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.range
     * @example
     *
     * _.rangeRight(4);
     * // => [3, 2, 1, 0]
     *
     * _.rangeRight(-4);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 5);
     * // => [4, 3, 2, 1]
     *
     * _.rangeRight(0, 20, 5);
     * // => [15, 10, 5, 0]
     *
     * _.rangeRight(0, -4, -1);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.rangeRight(0);
     * // => []
     */
    var rangeRight = createRange(true);

    /**
     * This method returns a new empty array.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Array} Returns the new empty array.
     * @example
     *
     * var arrays = _.times(2, _.stubArray);
     *
     * console.log(arrays);
     * // => [[], []]
     *
     * console.log(arrays[0] === arrays[1]);
     * // => false
     */
    function stubArray() {
      return [];
    }

    /**
     * This method returns `false`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `false`.
     * @example
     *
     * _.times(2, _.stubFalse);
     * // => [false, false]
     */
    function stubFalse() {
      return false;
    }

    /**
     * This method returns a new empty object.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Object} Returns the new empty object.
     * @example
     *
     * var objects = _.times(2, _.stubObject);
     *
     * console.log(objects);
     * // => [{}, {}]
     *
     * console.log(objects[0] === objects[1]);
     * // => false
     */
    function stubObject() {
      return {};
    }

    /**
     * This method returns an empty string.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {string} Returns the empty string.
     * @example
     *
     * _.times(2, _.stubString);
     * // => ['', '']
     */
    function stubString() {
      return '';
    }

    /**
     * This method returns `true`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `true`.
     * @example
     *
     * _.times(2, _.stubTrue);
     * // => [true, true]
     */
    function stubTrue() {
      return true;
    }

    /**
     * Invokes the iteratee `n` times, returning an array of the results of
     * each invocation. The iteratee is invoked with one argument; (index).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} n The number of times to invoke `iteratee`.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.times(3, String);
     * // => ['0', '1', '2']
     *
     *  _.times(4, _.constant(0));
     * // => [0, 0, 0, 0]
     */
    function times(n, iteratee) {
      n = toInteger(n);
      if (n < 1 || n > MAX_SAFE_INTEGER) {
        return [];
      }
      var index = MAX_ARRAY_LENGTH,
          length = nativeMin(n, MAX_ARRAY_LENGTH);

      iteratee = getIteratee(iteratee);
      n -= MAX_ARRAY_LENGTH;

      var result = baseTimes(length, iteratee);
      while (++index < n) {
        iteratee(index);
      }
      return result;
    }

    /**
     * Converts `value` to a property path array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {*} value The value to convert.
     * @returns {Array} Returns the new property path array.
     * @example
     *
     * _.toPath('a.b.c');
     * // => ['a', 'b', 'c']
     *
     * _.toPath('a[0].b.c');
     * // => ['a', '0', 'b', 'c']
     */
    function toPath(value) {
      if (isArray(value)) {
        return arrayMap(value, toKey);
      }
      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));
    }

    /**
     * Generates a unique ID. If `prefix` is given, the ID is appended to it.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {string} [prefix=''] The value to prefix the ID with.
     * @returns {string} Returns the unique ID.
     * @example
     *
     * _.uniqueId('contact_');
     * // => 'contact_104'
     *
     * _.uniqueId();
     * // => '105'
     */
    function uniqueId(prefix) {
      var id = ++idCounter;
      return toString(prefix) + id;
    }

    /*------------------------------------------------------------------------*/

    /**
     * Adds two numbers.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {number} augend The first number in an addition.
     * @param {number} addend The second number in an addition.
     * @returns {number} Returns the total.
     * @example
     *
     * _.add(6, 4);
     * // => 10
     */
    var add = createMathOperation(function(augend, addend) {
      return augend + addend;
    }, 0);

    /**
     * Computes `number` rounded up to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round up.
     * @param {number} [precision=0] The precision to round up to.
     * @returns {number} Returns the rounded up number.
     * @example
     *
     * _.ceil(4.006);
     * // => 5
     *
     * _.ceil(6.004, 2);
     * // => 6.01
     *
     * _.ceil(6040, -2);
     * // => 6100
     */
    var ceil = createRound('ceil');

    /**
     * Divide two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} dividend The first number in a division.
     * @param {number} divisor The second number in a division.
     * @returns {number} Returns the quotient.
     * @example
     *
     * _.divide(6, 4);
     * // => 1.5
     */
    var divide = createMathOperation(function(dividend, divisor) {
      return dividend / divisor;
    }, 1);

    /**
     * Computes `number` rounded down to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round down.
     * @param {number} [precision=0] The precision to round down to.
     * @returns {number} Returns the rounded down number.
     * @example
     *
     * _.floor(4.006);
     * // => 4
     *
     * _.floor(0.046, 2);
     * // => 0.04
     *
     * _.floor(4060, -2);
     * // => 4000
     */
    var floor = createRound('floor');

    /**
     * Computes the maximum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * _.max([4, 2, 8, 6]);
     * // => 8
     *
     * _.max([]);
     * // => undefined
     */
    function max(array) {
      return (array && array.length)
        ? baseExtremum(array, identity, baseGt)
        : undefined;
    }

    /**
     * This method is like `_.max` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.maxBy(objects, function(o) { return o.n; });
     * // => { 'n': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.maxBy(objects, 'n');
     * // => { 'n': 2 }
     */
    function maxBy(array, iteratee) {
      return (array && array.length)
        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)
        : undefined;
    }

    /**
     * Computes the mean of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the mean.
     * @example
     *
     * _.mean([4, 2, 8, 6]);
     * // => 5
     */
    function mean(array) {
      return baseMean(array, identity);
    }

    /**
     * This method is like `_.mean` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be averaged.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the mean.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.meanBy(objects, function(o) { return o.n; });
     * // => 5
     *
     * // The `_.property` iteratee shorthand.
     * _.meanBy(objects, 'n');
     * // => 5
     */
    function meanBy(array, iteratee) {
      return baseMean(array, getIteratee(iteratee, 2));
    }

    /**
     * Computes the minimum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * _.min([4, 2, 8, 6]);
     * // => 2
     *
     * _.min([]);
     * // => undefined
     */
    function min(array) {
      return (array && array.length)
        ? baseExtremum(array, identity, baseLt)
        : undefined;
    }

    /**
     * This method is like `_.min` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.minBy(objects, function(o) { return o.n; });
     * // => { 'n': 1 }
     *
     * // The `_.property` iteratee shorthand.
     * _.minBy(objects, 'n');
     * // => { 'n': 1 }
     */
    function minBy(array, iteratee) {
      return (array && array.length)
        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)
        : undefined;
    }

    /**
     * Multiply two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} multiplier The first number in a multiplication.
     * @param {number} multiplicand The second number in a multiplication.
     * @returns {number} Returns the product.
     * @example
     *
     * _.multiply(6, 4);
     * // => 24
     */
    var multiply = createMathOperation(function(multiplier, multiplicand) {
      return multiplier * multiplicand;
    }, 1);

    /**
     * Computes `number` rounded to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round.
     * @param {number} [precision=0] The precision to round to.
     * @returns {number} Returns the rounded number.
     * @example
     *
     * _.round(4.006);
     * // => 4
     *
     * _.round(4.006, 2);
     * // => 4.01
     *
     * _.round(4060, -2);
     * // => 4100
     */
    var round = createRound('round');

    /**
     * Subtract two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {number} minuend The first number in a subtraction.
     * @param {number} subtrahend The second number in a subtraction.
     * @returns {number} Returns the difference.
     * @example
     *
     * _.subtract(6, 4);
     * // => 2
     */
    var subtract = createMathOperation(function(minuend, subtrahend) {
      return minuend - subtrahend;
    }, 0);

    /**
     * Computes the sum of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the sum.
     * @example
     *
     * _.sum([4, 2, 8, 6]);
     * // => 20
     */
    function sum(array) {
      return (array && array.length)
        ? baseSum(array, identity)
        : 0;
    }

    /**
     * This method is like `_.sum` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be summed.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the sum.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.sumBy(objects, function(o) { return o.n; });
     * // => 20
     *
     * // The `_.property` iteratee shorthand.
     * _.sumBy(objects, 'n');
     * // => 20
     */
    function sumBy(array, iteratee) {
      return (array && array.length)
        ? baseSum(array, getIteratee(iteratee, 2))
        : 0;
    }

    /*------------------------------------------------------------------------*/

    // Add methods that return wrapped values in chain sequences.
    lodash.after = after;
    lodash.ary = ary;
    lodash.assign = assign;
    lodash.assignIn = assignIn;
    lodash.assignInWith = assignInWith;
    lodash.assignWith = assignWith;
    lodash.at = at;
    lodash.before = before;
    lodash.bind = bind;
    lodash.bindAll = bindAll;
    lodash.bindKey = bindKey;
    lodash.castArray = castArray;
    lodash.chain = chain;
    lodash.chunk = chunk;
    lodash.compact = compact;
    lodash.concat = concat;
    lodash.cond = cond;
    lodash.conforms = conforms;
    lodash.constant = constant;
    lodash.countBy = countBy;
    lodash.create = create;
    lodash.curry = curry;
    lodash.curryRight = curryRight;
    lodash.debounce = debounce;
    lodash.defaults = defaults;
    lodash.defaultsDeep = defaultsDeep;
    lodash.defer = defer;
    lodash.delay = delay;
    lodash.difference = difference;
    lodash.differenceBy = differenceBy;
    lodash.differenceWith = differenceWith;
    lodash.drop = drop;
    lodash.dropRight = dropRight;
    lodash.dropRightWhile = dropRightWhile;
    lodash.dropWhile = dropWhile;
    lodash.fill = fill;
    lodash.filter = filter;
    lodash.flatMap = flatMap;
    lodash.flatMapDeep = flatMapDeep;
    lodash.flatMapDepth = flatMapDepth;
    lodash.flatten = flatten;
    lodash.flattenDeep = flattenDeep;
    lodash.flattenDepth = flattenDepth;
    lodash.flip = flip;
    lodash.flow = flow;
    lodash.flowRight = flowRight;
    lodash.fromPairs = fromPairs;
    lodash.functions = functions;
    lodash.functionsIn = functionsIn;
    lodash.groupBy = groupBy;
    lodash.initial = initial;
    lodash.intersection = intersection;
    lodash.intersectionBy = intersectionBy;
    lodash.intersectionWith = intersectionWith;
    lodash.invert = invert;
    lodash.invertBy = invertBy;
    lodash.invokeMap = invokeMap;
    lodash.iteratee = iteratee;
    lodash.keyBy = keyBy;
    lodash.keys = keys;
    lodash.keysIn = keysIn;
    lodash.map = map;
    lodash.mapKeys = mapKeys;
    lodash.mapValues = mapValues;
    lodash.matches = matches;
    lodash.matchesProperty = matchesProperty;
    lodash.memoize = memoize;
    lodash.merge = merge;
    lodash.mergeWith = mergeWith;
    lodash.method = method;
    lodash.methodOf = methodOf;
    lodash.mixin = mixin;
    lodash.negate = negate;
    lodash.nthArg = nthArg;
    lodash.omit = omit;
    lodash.omitBy = omitBy;
    lodash.once = once;
    lodash.orderBy = orderBy;
    lodash.over = over;
    lodash.overArgs = overArgs;
    lodash.overEvery = overEvery;
    lodash.overSome = overSome;
    lodash.partial = partial;
    lodash.partialRight = partialRight;
    lodash.partition = partition;
    lodash.pick = pick;
    lodash.pickBy = pickBy;
    lodash.property = property;
    lodash.propertyOf = propertyOf;
    lodash.pull = pull;
    lodash.pullAll = pullAll;
    lodash.pullAllBy = pullAllBy;
    lodash.pullAllWith = pullAllWith;
    lodash.pullAt = pullAt;
    lodash.range = range;
    lodash.rangeRight = rangeRight;
    lodash.rearg = rearg;
    lodash.reject = reject;
    lodash.remove = remove;
    lodash.rest = rest;
    lodash.reverse = reverse;
    lodash.sampleSize = sampleSize;
    lodash.set = set;
    lodash.setWith = setWith;
    lodash.shuffle = shuffle;
    lodash.slice = slice;
    lodash.sortBy = sortBy;
    lodash.sortedUniq = sortedUniq;
    lodash.sortedUniqBy = sortedUniqBy;
    lodash.split = split;
    lodash.spread = spread;
    lodash.tail = tail;
    lodash.take = take;
    lodash.takeRight = takeRight;
    lodash.takeRightWhile = takeRightWhile;
    lodash.takeWhile = takeWhile;
    lodash.tap = tap;
    lodash.throttle = throttle;
    lodash.thru = thru;
    lodash.toArray = toArray;
    lodash.toPairs = toPairs;
    lodash.toPairsIn = toPairsIn;
    lodash.toPath = toPath;
    lodash.toPlainObject = toPlainObject;
    lodash.transform = transform;
    lodash.unary = unary;
    lodash.union = union;
    lodash.unionBy = unionBy;
    lodash.unionWith = unionWith;
    lodash.uniq = uniq;
    lodash.uniqBy = uniqBy;
    lodash.uniqWith = uniqWith;
    lodash.unset = unset;
    lodash.unzip = unzip;
    lodash.unzipWith = unzipWith;
    lodash.update = update;
    lodash.updateWith = updateWith;
    lodash.values = values;
    lodash.valuesIn = valuesIn;
    lodash.without = without;
    lodash.words = words;
    lodash.wrap = wrap;
    lodash.xor = xor;
    lodash.xorBy = xorBy;
    lodash.xorWith = xorWith;
    lodash.zip = zip;
    lodash.zipObject = zipObject;
    lodash.zipObjectDeep = zipObjectDeep;
    lodash.zipWith = zipWith;

    // Add aliases.
    lodash.entries = toPairs;
    lodash.entriesIn = toPairsIn;
    lodash.extend = assignIn;
    lodash.extendWith = assignInWith;

    // Add methods to `lodash.prototype`.
    mixin(lodash, lodash);

    /*------------------------------------------------------------------------*/

    // Add methods that return unwrapped values in chain sequences.
    lodash.add = add;
    lodash.attempt = attempt;
    lodash.camelCase = camelCase;
    lodash.capitalize = capitalize;
    lodash.ceil = ceil;
    lodash.clamp = clamp;
    lodash.clone = clone;
    lodash.cloneDeep = cloneDeep;
    lodash.cloneDeepWith = cloneDeepWith;
    lodash.cloneWith = cloneWith;
    lodash.conformsTo = conformsTo;
    lodash.deburr = deburr;
    lodash.defaultTo = defaultTo;
    lodash.divide = divide;
    lodash.endsWith = endsWith;
    lodash.eq = eq;
    lodash.escape = escape;
    lodash.escapeRegExp = escapeRegExp;
    lodash.every = every;
    lodash.find = find;
    lodash.findIndex = findIndex;
    lodash.findKey = findKey;
    lodash.findLast = findLast;
    lodash.findLastIndex = findLastIndex;
    lodash.findLastKey = findLastKey;
    lodash.floor = floor;
    lodash.forEach = forEach;
    lodash.forEachRight = forEachRight;
    lodash.forIn = forIn;
    lodash.forInRight = forInRight;
    lodash.forOwn = forOwn;
    lodash.forOwnRight = forOwnRight;
    lodash.get = get;
    lodash.gt = gt;
    lodash.gte = gte;
    lodash.has = has;
    lodash.hasIn = hasIn;
    lodash.head = head;
    lodash.identity = identity;
    lodash.includes = includes;
    lodash.indexOf = indexOf;
    lodash.inRange = inRange;
    lodash.invoke = invoke;
    lodash.isArguments = isArguments;
    lodash.isArray = isArray;
    lodash.isArrayBuffer = isArrayBuffer;
    lodash.isArrayLike = isArrayLike;
    lodash.isArrayLikeObject = isArrayLikeObject;
    lodash.isBoolean = isBoolean;
    lodash.isBuffer = isBuffer;
    lodash.isDate = isDate;
    lodash.isElement = isElement;
    lodash.isEmpty = isEmpty;
    lodash.isEqual = isEqual;
    lodash.isEqualWith = isEqualWith;
    lodash.isError = isError;
    lodash.isFinite = isFinite;
    lodash.isFunction = isFunction;
    lodash.isInteger = isInteger;
    lodash.isLength = isLength;
    lodash.isMap = isMap;
    lodash.isMatch = isMatch;
    lodash.isMatchWith = isMatchWith;
    lodash.isNaN = isNaN;
    lodash.isNative = isNative;
    lodash.isNil = isNil;
    lodash.isNull = isNull;
    lodash.isNumber = isNumber;
    lodash.isObject = isObject;
    lodash.isObjectLike = isObjectLike;
    lodash.isPlainObject = isPlainObject;
    lodash.isRegExp = isRegExp;
    lodash.isSafeInteger = isSafeInteger;
    lodash.isSet = isSet;
    lodash.isString = isString;
    lodash.isSymbol = isSymbol;
    lodash.isTypedArray = isTypedArray;
    lodash.isUndefined = isUndefined;
    lodash.isWeakMap = isWeakMap;
    lodash.isWeakSet = isWeakSet;
    lodash.join = join;
    lodash.kebabCase = kebabCase;
    lodash.last = last;
    lodash.lastIndexOf = lastIndexOf;
    lodash.lowerCase = lowerCase;
    lodash.lowerFirst = lowerFirst;
    lodash.lt = lt;
    lodash.lte = lte;
    lodash.max = max;
    lodash.maxBy = maxBy;
    lodash.mean = mean;
    lodash.meanBy = meanBy;
    lodash.min = min;
    lodash.minBy = minBy;
    lodash.stubArray = stubArray;
    lodash.stubFalse = stubFalse;
    lodash.stubObject = stubObject;
    lodash.stubString = stubString;
    lodash.stubTrue = stubTrue;
    lodash.multiply = multiply;
    lodash.nth = nth;
    lodash.noConflict = noConflict;
    lodash.noop = noop;
    lodash.now = now;
    lodash.pad = pad;
    lodash.padEnd = padEnd;
    lodash.padStart = padStart;
    lodash.parseInt = parseInt;
    lodash.random = random;
    lodash.reduce = reduce;
    lodash.reduceRight = reduceRight;
    lodash.repeat = repeat;
    lodash.replace = replace;
    lodash.result = result;
    lodash.round = round;
    lodash.runInContext = runInContext;
    lodash.sample = sample;
    lodash.size = size;
    lodash.snakeCase = snakeCase;
    lodash.some = some;
    lodash.sortedIndex = sortedIndex;
    lodash.sortedIndexBy = sortedIndexBy;
    lodash.sortedIndexOf = sortedIndexOf;
    lodash.sortedLastIndex = sortedLastIndex;
    lodash.sortedLastIndexBy = sortedLastIndexBy;
    lodash.sortedLastIndexOf = sortedLastIndexOf;
    lodash.startCase = startCase;
    lodash.startsWith = startsWith;
    lodash.subtract = subtract;
    lodash.sum = sum;
    lodash.sumBy = sumBy;
    lodash.template = template;
    lodash.times = times;
    lodash.toFinite = toFinite;
    lodash.toInteger = toInteger;
    lodash.toLength = toLength;
    lodash.toLower = toLower;
    lodash.toNumber = toNumber;
    lodash.toSafeInteger = toSafeInteger;
    lodash.toString = toString;
    lodash.toUpper = toUpper;
    lodash.trim = trim;
    lodash.trimEnd = trimEnd;
    lodash.trimStart = trimStart;
    lodash.truncate = truncate;
    lodash.unescape = unescape;
    lodash.uniqueId = uniqueId;
    lodash.upperCase = upperCase;
    lodash.upperFirst = upperFirst;

    // Add aliases.
    lodash.each = forEach;
    lodash.eachRight = forEachRight;
    lodash.first = head;

    mixin(lodash, (function() {
      var source = {};
      baseForOwn(lodash, function(func, methodName) {
        if (!hasOwnProperty.call(lodash.prototype, methodName)) {
          source[methodName] = func;
        }
      });
      return source;
    }()), { 'chain': false });

    /*------------------------------------------------------------------------*/

    /**
     * The semantic version number.
     *
     * @static
     * @memberOf _
     * @type {string}
     */
    lodash.VERSION = VERSION;

    // Assign default placeholders.
    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {
      lodash[methodName].placeholder = lodash;
    });

    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.
    arrayEach(['drop', 'take'], function(methodName, index) {
      LazyWrapper.prototype[methodName] = function(n) {
        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);

        var result = (this.__filtered__ && !index)
          ? new LazyWrapper(this)
          : this.clone();

        if (result.__filtered__) {
          result.__takeCount__ = nativeMin(n, result.__takeCount__);
        } else {
          result.__views__.push({
            'size': nativeMin(n, MAX_ARRAY_LENGTH),
            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')
          });
        }
        return result;
      };

      LazyWrapper.prototype[methodName + 'Right'] = function(n) {
        return this.reverse()[methodName](n).reverse();
      };
    });

    // Add `LazyWrapper` methods that accept an `iteratee` value.
    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {
      var type = index + 1,
          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;

      LazyWrapper.prototype[methodName] = function(iteratee) {
        var result = this.clone();
        result.__iteratees__.push({
          'iteratee': getIteratee(iteratee, 3),
          'type': type
        });
        result.__filtered__ = result.__filtered__ || isFilter;
        return result;
      };
    });

    // Add `LazyWrapper` methods for `_.head` and `_.last`.
    arrayEach(['head', 'last'], function(methodName, index) {
      var takeName = 'take' + (index ? 'Right' : '');

      LazyWrapper.prototype[methodName] = function() {
        return this[takeName](1).value()[0];
      };
    });

    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.
    arrayEach(['initial', 'tail'], function(methodName, index) {
      var dropName = 'drop' + (index ? '' : 'Right');

      LazyWrapper.prototype[methodName] = function() {
        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
      };
    });

    LazyWrapper.prototype.compact = function() {
      return this.filter(identity);
    };

    LazyWrapper.prototype.find = function(predicate) {
      return this.filter(predicate).head();
    };

    LazyWrapper.prototype.findLast = function(predicate) {
      return this.reverse().find(predicate);
    };

    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {
      if (typeof path == 'function') {
        return new LazyWrapper(this);
      }
      return this.map(function(value) {
        return baseInvoke(value, path, args);
      });
    });

    LazyWrapper.prototype.reject = function(predicate) {
      return this.filter(negate(getIteratee(predicate)));
    };

    LazyWrapper.prototype.slice = function(start, end) {
      start = toInteger(start);

      var result = this;
      if (result.__filtered__ && (start > 0 || end < 0)) {
        return new LazyWrapper(result);
      }
      if (start < 0) {
        result = result.takeRight(-start);
      } else if (start) {
        result = result.drop(start);
      }
      if (end !== undefined) {
        end = toInteger(end);
        result = end < 0 ? result.dropRight(-end) : result.take(end - start);
      }
      return result;
    };

    LazyWrapper.prototype.takeRightWhile = function(predicate) {
      return this.reverse().takeWhile(predicate).reverse();
    };

    LazyWrapper.prototype.toArray = function() {
      return this.take(MAX_ARRAY_LENGTH);
    };

    // Add `LazyWrapper` methods to `lodash.prototype`.
    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),
          isTaker = /^(?:head|last)$/.test(methodName),
          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],
          retUnwrapped = isTaker || /^find/.test(methodName);

      if (!lodashFunc) {
        return;
      }
      lodash.prototype[methodName] = function() {
        var value = this.__wrapped__,
            args = isTaker ? [1] : arguments,
            isLazy = value instanceof LazyWrapper,
            iteratee = args[0],
            useLazy = isLazy || isArray(value);

        var interceptor = function(value) {
          var result = lodashFunc.apply(lodash, arrayPush([value], args));
          return (isTaker && chainAll) ? result[0] : result;
        };

        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {
          // Avoid lazy use if the iteratee has a "length" value other than `1`.
          isLazy = useLazy = false;
        }
        var chainAll = this.__chain__,
            isHybrid = !!this.__actions__.length,
            isUnwrapped = retUnwrapped && !chainAll,
            onlyLazy = isLazy && !isHybrid;

        if (!retUnwrapped && useLazy) {
          value = onlyLazy ? value : new LazyWrapper(this);
          var result = func.apply(value, args);
          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });
          return new LodashWrapper(result, chainAll);
        }
        if (isUnwrapped && onlyLazy) {
          return func.apply(this, args);
        }
        result = this.thru(interceptor);
        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;
      };
    });

    // Add `Array` methods to `lodash.prototype`.
    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {
      var func = arrayProto[methodName],
          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',
          retUnwrapped = /^(?:pop|shift)$/.test(methodName);

      lodash.prototype[methodName] = function() {
        var args = arguments;
        if (retUnwrapped && !this.__chain__) {
          var value = this.value();
          return func.apply(isArray(value) ? value : [], args);
        }
        return this[chainName](function(value) {
          return func.apply(isArray(value) ? value : [], args);
        });
      };
    });

    // Map minified method names to their real names.
    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
      var lodashFunc = lodash[methodName];
      if (lodashFunc) {
        var key = lodashFunc.name + '';
        if (!hasOwnProperty.call(realNames, key)) {
          realNames[key] = [];
        }
        realNames[key].push({ 'name': methodName, 'func': lodashFunc });
      }
    });

    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{
      'name': 'wrapper',
      'func': undefined
    }];

    // Add methods to `LazyWrapper`.
    LazyWrapper.prototype.clone = lazyClone;
    LazyWrapper.prototype.reverse = lazyReverse;
    LazyWrapper.prototype.value = lazyValue;

    // Add chain sequence methods to the `lodash` wrapper.
    lodash.prototype.at = wrapperAt;
    lodash.prototype.chain = wrapperChain;
    lodash.prototype.commit = wrapperCommit;
    lodash.prototype.next = wrapperNext;
    lodash.prototype.plant = wrapperPlant;
    lodash.prototype.reverse = wrapperReverse;
    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;

    // Add lazy aliases.
    lodash.prototype.first = lodash.prototype.head;

    if (symIterator) {
      lodash.prototype[symIterator] = wrapperToIterator;
    }
    return lodash;
  });

  /*--------------------------------------------------------------------------*/

  // Export lodash.
  var _ = runInContext();

  // Some AMD build optimizers, like r.js, check for condition patterns like:
  if (true) {
    // Expose Lodash on the global object to prevent errors when Lodash is
    // loaded by a script tag in the presence of an AMD loader.
    // See http://requirejs.org/docs/errors.html#mismatch for more details.
    // Use `_.noConflict` to remove Lodash from the global object.
    root._ = _;

    // Define as an anonymous module so, through path mapping, it can be
    // referenced as the "underscore" module.
    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {
      return _;
    }).call(exports, __webpack_require__, exports, module),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  }
  // Check for `exports` after `define` in case a build optimizer adds it.
  else {}
}.call(this));


/***/ }),

/***/ 448:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/*
 Modernizr 3.0.0pre (Custom Build) | MIT
*/
var aa=__webpack_require__(294),ca=__webpack_require__(840);function p(a){for(var b="https://reactjs.org/docs/error-decoder.html?invariant="+a,c=1;c<arguments.length;c++)b+="&args[]="+encodeURIComponent(arguments[c]);return"Minified React error #"+a+"; visit "+b+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var da=new Set,ea={};function fa(a,b){ha(a,b);ha(a+"Capture",b)}
function ha(a,b){ea[a]=b;for(a=0;a<b.length;a++)da.add(b[a])}
var ia=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),ja=Object.prototype.hasOwnProperty,ka=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,la=
{},ma={};function oa(a){if(ja.call(ma,a))return!0;if(ja.call(la,a))return!1;if(ka.test(a))return ma[a]=!0;la[a]=!0;return!1}function pa(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case "function":case "symbol":return!0;case "boolean":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return"data-"!==a&&"aria-"!==a;default:return!1}}
function qa(a,b,c,d){if(null===b||"undefined"===typeof b||pa(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function v(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var z={};
"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a){z[a]=new v(a,0,!1,a,null,!1,!1)});[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(a){var b=a[0];z[b]=new v(b,1,!1,a[1],null,!1,!1)});["contentEditable","draggable","spellCheck","value"].forEach(function(a){z[a]=new v(a,2,!1,a.toLowerCase(),null,!1,!1)});
["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(a){z[a]=new v(a,2,!1,a,null,!1,!1)});"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a){z[a]=new v(a,3,!1,a.toLowerCase(),null,!1,!1)});
["checked","multiple","muted","selected"].forEach(function(a){z[a]=new v(a,3,!0,a,null,!1,!1)});["capture","download"].forEach(function(a){z[a]=new v(a,4,!1,a,null,!1,!1)});["cols","rows","size","span"].forEach(function(a){z[a]=new v(a,6,!1,a,null,!1,!1)});["rowSpan","start"].forEach(function(a){z[a]=new v(a,5,!1,a.toLowerCase(),null,!1,!1)});var ra=/[\-:]([a-z])/g;function sa(a){return a[1].toUpperCase()}
"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a){var b=a.replace(ra,
sa);z[b]=new v(b,1,!1,a,null,!1,!1)});"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,"http://www.w3.org/1999/xlink",!1,!1)});["xml:base","xml:lang","xml:space"].forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,"http://www.w3.org/XML/1998/namespace",!1,!1)});["tabIndex","crossOrigin"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!1,!1)});
z.xlinkHref=new v("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1);["src","href","action","formAction"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!0,!0)});
function ta(a,b,c,d){var e=z.hasOwnProperty(b)?z[b]:null;if(null!==e?0!==e.type:d||!(2<b.length)||"o"!==b[0]&&"O"!==b[0]||"n"!==b[1]&&"N"!==b[1])qa(b,c,e,d)&&(c=null),d||null===e?oa(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,""+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:"":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?"":""+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c)))}
var ua=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,va=Symbol.for("react.element"),wa=Symbol.for("react.portal"),ya=Symbol.for("react.fragment"),za=Symbol.for("react.strict_mode"),Aa=Symbol.for("react.profiler"),Ba=Symbol.for("react.provider"),Ca=Symbol.for("react.context"),Da=Symbol.for("react.forward_ref"),Ea=Symbol.for("react.suspense"),Fa=Symbol.for("react.suspense_list"),Ga=Symbol.for("react.memo"),Ha=Symbol.for("react.lazy");Symbol.for("react.scope");Symbol.for("react.debug_trace_mode");
var Ia=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden");Symbol.for("react.cache");Symbol.for("react.tracing_marker");var Ja=Symbol.iterator;function Ka(a){if(null===a||"object"!==typeof a)return null;a=Ja&&a[Ja]||a["@@iterator"];return"function"===typeof a?a:null}var A=Object.assign,La;function Ma(a){if(void 0===La)try{throw Error();}catch(c){var b=c.stack.trim().match(/\n( *(at )?)/);La=b&&b[1]||""}return"\n"+La+a}var Na=!1;
function Oa(a,b){if(!a||Na)return"";Na=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,"props",{set:function(){throw Error();}}),"object"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(l){var d=l}Reflect.construct(a,[],b)}else{try{b.call()}catch(l){d=l}a.call(b.prototype)}else{try{throw Error();}catch(l){d=l}a()}}catch(l){if(l&&d&&"string"===typeof l.stack){for(var e=l.stack.split("\n"),
f=d.stack.split("\n"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h]){var k="\n"+e[g].replace(" at new "," at ");a.displayName&&k.includes("<anonymous>")&&(k=k.replace("<anonymous>",a.displayName));return k}while(1<=g&&0<=h)}break}}}finally{Na=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:"")?Ma(a):""}
function Pa(a){switch(a.tag){case 5:return Ma(a.type);case 16:return Ma("Lazy");case 13:return Ma("Suspense");case 19:return Ma("SuspenseList");case 0:case 2:case 15:return a=Oa(a.type,!1),a;case 11:return a=Oa(a.type.render,!1),a;case 1:return a=Oa(a.type,!0),a;default:return""}}
function Qa(a){if(null==a)return null;if("function"===typeof a)return a.displayName||a.name||null;if("string"===typeof a)return a;switch(a){case ya:return"Fragment";case wa:return"Portal";case Aa:return"Profiler";case za:return"StrictMode";case Ea:return"Suspense";case Fa:return"SuspenseList"}if("object"===typeof a)switch(a.$$typeof){case Ca:return(a.displayName||"Context")+".Consumer";case Ba:return(a._context.displayName||"Context")+".Provider";case Da:var b=a.render;a=a.displayName;a||(a=b.displayName||
b.name||"",a=""!==a?"ForwardRef("+a+")":"ForwardRef");return a;case Ga:return b=a.displayName||null,null!==b?b:Qa(a.type)||"Memo";case Ha:b=a._payload;a=a._init;try{return Qa(a(b))}catch(c){}}return null}
function Ra(a){var b=a.type;switch(a.tag){case 24:return"Cache";case 9:return(b.displayName||"Context")+".Consumer";case 10:return(b._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return a=b.render,a=a.displayName||a.name||"",b.displayName||(""!==a?"ForwardRef("+a+")":"ForwardRef");case 7:return"Fragment";case 5:return b;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return Qa(b);case 8:return b===za?"StrictMode":"Mode";case 22:return"Offscreen";
case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"===typeof b)return b.displayName||b.name||null;if("string"===typeof b)return b}return null}function Sa(a){switch(typeof a){case "boolean":case "number":case "string":case "undefined":return a;case "object":return a;default:return""}}
function Ta(a){var b=a.type;return(a=a.nodeName)&&"input"===a.toLowerCase()&&("checkbox"===b||"radio"===b)}
function Ua(a){var b=Ta(a)?"checked":"value",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=""+a[b];if(!a.hasOwnProperty(b)&&"undefined"!==typeof c&&"function"===typeof c.get&&"function"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=""+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=""+a},stopTracking:function(){a._valueTracker=
null;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d="";a&&(d=Ta(a)?a.checked?"true":"false":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||("undefined"!==typeof document?document:void 0);if("undefined"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}
function Ya(a,b){var c=b.checked;return A({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?"":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:"checkbox"===b.type||"radio"===b.type?null!=b.checked:null!=b.value}}function ab(a,b){b=b.checked;null!=b&&ta(a,"checked",b,!1)}
function bb(a,b){ab(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if("number"===d){if(0===c&&""===a.value||a.value!=c)a.value=""+c}else a.value!==""+c&&(a.value=""+c);else if("submit"===d||"reset"===d){a.removeAttribute("value");return}b.hasOwnProperty("value")?cb(a,b.type,c):b.hasOwnProperty("defaultValue")&&cb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}
function db(a,b,c){if(b.hasOwnProperty("value")||b.hasOwnProperty("defaultValue")){var d=b.type;if(!("submit"!==d&&"reset"!==d||void 0!==b.value&&null!==b.value))return;b=""+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;""!==c&&(a.name="");a.defaultChecked=!!a._wrapperState.initialChecked;""!==c&&(a.name=c)}
function cb(a,b,c){if("number"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=""+a._wrapperState.initialValue:a.defaultValue!==""+c&&(a.defaultValue=""+c)}var eb=Array.isArray;
function fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b["$"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty("$"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=""+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}
function gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(p(91));return A({},b,{value:void 0,defaultValue:void 0,children:""+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(p(92));if(eb(c)){if(1<c.length)throw Error(p(93));c=c[0]}b=c}null==b&&(b="");c=b}a._wrapperState={initialValue:Sa(c)}}
function ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=""+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=""+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&""!==b&&null!==b&&(a.value=b)}function kb(a){switch(a){case "svg":return"http://www.w3.org/2000/svg";case "math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}
function lb(a,b){return null==a||"http://www.w3.org/1999/xhtml"===a?kb(b):"http://www.w3.org/2000/svg"===a&&"foreignObject"===b?"http://www.w3.org/1999/xhtml":a}
var mb,nb=function(a){return"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if("http://www.w3.org/2000/svg"!==a.namespaceURI||"innerHTML"in a)a.innerHTML=b;else{mb=mb||document.createElement("div");mb.innerHTML="<svg>"+b.valueOf().toString()+"</svg>";for(b=mb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});
function ob(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}
var pb={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,
zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},qb=["Webkit","ms","Moz","O"];Object.keys(pb).forEach(function(a){qb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);pb[b]=pb[a]})});function rb(a,b,c){return null==b||"boolean"===typeof b||""===b?"":c||"number"!==typeof b||0===b||pb.hasOwnProperty(a)&&pb[a]?(""+b).trim():b+"px"}
function sb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf("--"),e=rb(c,b[c],d);"float"===c&&(c="cssFloat");d?a.setProperty(c,e):a[c]=e}}var tb=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});
function ub(a,b){if(b){if(tb[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(p(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(p(60));if("object"!==typeof b.dangerouslySetInnerHTML||!("__html"in b.dangerouslySetInnerHTML))throw Error(p(61));}if(null!=b.style&&"object"!==typeof b.style)throw Error(p(62));}}
function vb(a,b){if(-1===a.indexOf("-"))return"string"===typeof b.is;switch(a){case "annotation-xml":case "color-profile":case "font-face":case "font-face-src":case "font-face-uri":case "font-face-format":case "font-face-name":case "missing-glyph":return!1;default:return!0}}var wb=null;function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;
function Bb(a){if(a=Cb(a)){if("function"!==typeof yb)throw Error(p(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(){}var Ib=!1;function Jb(a,b,c){if(Ib)return a(b,c);Ib=!0;try{return Gb(a,b,c)}finally{if(Ib=!1,null!==zb||null!==Ab)Hb(),Fb()}}
function Kb(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case "onClick":case "onClickCapture":case "onDoubleClick":case "onDoubleClickCapture":case "onMouseDown":case "onMouseDownCapture":case "onMouseMove":case "onMouseMoveCapture":case "onMouseUp":case "onMouseUpCapture":case "onMouseEnter":(d=!d.disabled)||(a=a.type,d=!("button"===a||"input"===a||"select"===a||"textarea"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&"function"!==
typeof c)throw Error(p(231,b,typeof c));return c}var Lb=!1;if(ia)try{var Mb={};Object.defineProperty(Mb,"passive",{get:function(){Lb=!0}});window.addEventListener("test",Mb,Mb);window.removeEventListener("test",Mb,Mb)}catch(a){Lb=!1}function Nb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var Ob=!1,Pb=null,Qb=!1,Rb=null,Sb={onError:function(a){Ob=!0;Pb=a}};function Tb(a,b,c,d,e,f,g,h,k){Ob=!1;Pb=null;Nb.apply(Sb,arguments)}
function Ub(a,b,c,d,e,f,g,h,k){Tb.apply(this,arguments);if(Ob){if(Ob){var l=Pb;Ob=!1;Pb=null}else throw Error(p(198));Qb||(Qb=!0,Rb=l)}}function Vb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&4098)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function Wb(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function Xb(a){if(Vb(a)!==a)throw Error(p(188));}
function Yb(a){var b=a.alternate;if(!b){b=Vb(a);if(null===b)throw Error(p(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return Xb(e),a;if(f===d)return Xb(e),b;f=f.sibling}throw Error(p(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===
c){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(p(189));}}if(c.alternate!==d)throw Error(p(190));}if(3!==c.tag)throw Error(p(188));return c.stateNode.current===c?a:b}function Zb(a){a=Yb(a);return null!==a?$b(a):null}function $b(a){if(5===a.tag||6===a.tag)return a;for(a=a.child;null!==a;){var b=$b(a);if(null!==b)return b;a=a.sibling}return null}
var ac=ca.unstable_scheduleCallback,bc=ca.unstable_cancelCallback,cc=ca.unstable_shouldYield,dc=ca.unstable_requestPaint,B=ca.unstable_now,ec=ca.unstable_getCurrentPriorityLevel,fc=ca.unstable_ImmediatePriority,gc=ca.unstable_UserBlockingPriority,hc=ca.unstable_NormalPriority,ic=ca.unstable_LowPriority,jc=ca.unstable_IdlePriority,kc=null,lc=null;function mc(a){if(lc&&"function"===typeof lc.onCommitFiberRoot)try{lc.onCommitFiberRoot(kc,a,void 0,128===(a.current.flags&128))}catch(b){}}
var oc=Math.clz32?Math.clz32:nc,pc=Math.log,qc=Math.LN2;function nc(a){a>>>=0;return 0===a?32:31-(pc(a)/qc|0)|0}var rc=64,sc=4194304;
function tc(a){switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return a&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;
default:return a}}function uc(a,b){var c=a.pendingLanes;if(0===c)return 0;var d=0,e=a.suspendedLanes,f=a.pingedLanes,g=c&268435455;if(0!==g){var h=g&~e;0!==h?d=tc(h):(f&=g,0!==f&&(d=tc(f)))}else g=c&~e,0!==g?d=tc(g):0!==f&&(d=tc(f));if(0===d)return 0;if(0!==b&&b!==d&&0===(b&e)&&(e=d&-d,f=b&-b,e>=f||16===e&&0!==(f&4194240)))return b;0!==(d&4)&&(d|=c&16);b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-oc(b),e=1<<c,d|=a[c],b&=~e;return d}
function vc(a,b){switch(a){case 1:case 2:case 4:return b+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return b+5E3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}
function wc(a,b){for(var c=a.suspendedLanes,d=a.pingedLanes,e=a.expirationTimes,f=a.pendingLanes;0<f;){var g=31-oc(f),h=1<<g,k=e[g];if(-1===k){if(0===(h&c)||0!==(h&d))e[g]=vc(h,b)}else k<=b&&(a.expiredLanes|=h);f&=~h}}function xc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function yc(){var a=rc;rc<<=1;0===(rc&4194240)&&(rc=64);return a}function zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}
function Ac(a,b,c){a.pendingLanes|=b;536870912!==b&&(a.suspendedLanes=0,a.pingedLanes=0);a=a.eventTimes;b=31-oc(b);a[b]=c}function Bc(a,b){var c=a.pendingLanes&~b;a.pendingLanes=b;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=b;a.mutableReadLanes&=b;a.entangledLanes&=b;b=a.entanglements;var d=a.eventTimes;for(a=a.expirationTimes;0<c;){var e=31-oc(c),f=1<<e;b[e]=0;d[e]=-1;a[e]=-1;c&=~f}}
function Cc(a,b){var c=a.entangledLanes|=b;for(a=a.entanglements;c;){var d=31-oc(c),e=1<<d;e&b|a[d]&b&&(a[d]|=b);c&=~e}}var C=0;function Dc(a){a&=-a;return 1<a?4<a?0!==(a&268435455)?16:536870912:4:1}var Ec,Fc,Gc,Hc,Ic,Jc=!1,Kc=[],Lc=null,Mc=null,Nc=null,Oc=new Map,Pc=new Map,Qc=[],Rc="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");
function Sc(a,b){switch(a){case "focusin":case "focusout":Lc=null;break;case "dragenter":case "dragleave":Mc=null;break;case "mouseover":case "mouseout":Nc=null;break;case "pointerover":case "pointerout":Oc.delete(b.pointerId);break;case "gotpointercapture":case "lostpointercapture":Pc.delete(b.pointerId)}}
function Tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a={blockedOn:b,domEventName:c,eventSystemFlags:d,nativeEvent:f,targetContainers:[e]},null!==b&&(b=Cb(b),null!==b&&Fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}
function Uc(a,b,c,d,e){switch(b){case "focusin":return Lc=Tc(Lc,a,b,c,d,e),!0;case "dragenter":return Mc=Tc(Mc,a,b,c,d,e),!0;case "mouseover":return Nc=Tc(Nc,a,b,c,d,e),!0;case "pointerover":var f=e.pointerId;Oc.set(f,Tc(Oc.get(f)||null,a,b,c,d,e));return!0;case "gotpointercapture":return f=e.pointerId,Pc.set(f,Tc(Pc.get(f)||null,a,b,c,d,e)),!0}return!1}
function Vc(a){var b=Wc(a.target);if(null!==b){var c=Vb(b);if(null!==c)if(b=c.tag,13===b){if(b=Wb(c),null!==b){a.blockedOn=b;Ic(a.priority,function(){Gc(c)});return}}else if(3===b&&c.stateNode.current.memoizedState.isDehydrated){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}
function Xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=Yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null===c){c=a.nativeEvent;var d=new c.constructor(c.type,c);wb=d;c.target.dispatchEvent(d);wb=null}else return b=Cb(c),null!==b&&Fc(b),a.blockedOn=c,!1;b.shift()}return!0}function Zc(a,b,c){Xc(a)&&c.delete(b)}function $c(){Jc=!1;null!==Lc&&Xc(Lc)&&(Lc=null);null!==Mc&&Xc(Mc)&&(Mc=null);null!==Nc&&Xc(Nc)&&(Nc=null);Oc.forEach(Zc);Pc.forEach(Zc)}
function ad(a,b){a.blockedOn===b&&(a.blockedOn=null,Jc||(Jc=!0,ca.unstable_scheduleCallback(ca.unstable_NormalPriority,$c)))}
function bd(a){function b(b){return ad(b,a)}if(0<Kc.length){ad(Kc[0],a);for(var c=1;c<Kc.length;c++){var d=Kc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==Lc&&ad(Lc,a);null!==Mc&&ad(Mc,a);null!==Nc&&ad(Nc,a);Oc.forEach(b);Pc.forEach(b);for(c=0;c<Qc.length;c++)d=Qc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<Qc.length&&(c=Qc[0],null===c.blockedOn);)Vc(c),null===c.blockedOn&&Qc.shift()}var cd=ua.ReactCurrentBatchConfig,dd=!0;
function ed(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=1,fd(a,b,c,d)}finally{C=e,cd.transition=f}}function gd(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=4,fd(a,b,c,d)}finally{C=e,cd.transition=f}}
function fd(a,b,c,d){if(dd){var e=Yc(a,b,c,d);if(null===e)hd(a,b,d,id,c),Sc(a,d);else if(Uc(e,a,b,c,d))d.stopPropagation();else if(Sc(a,d),b&4&&-1<Rc.indexOf(a)){for(;null!==e;){var f=Cb(e);null!==f&&Ec(f);f=Yc(a,b,c,d);null===f&&hd(a,b,d,id,c);if(f===e)break;e=f}null!==e&&d.stopPropagation()}else hd(a,b,d,null,c)}}var id=null;
function Yc(a,b,c,d){id=null;a=xb(d);a=Wc(a);if(null!==a)if(b=Vb(a),null===b)a=null;else if(c=b.tag,13===c){a=Wb(b);if(null!==a)return a;a=null}else if(3===c){if(b.stateNode.current.memoizedState.isDehydrated)return 3===b.tag?b.stateNode.containerInfo:null;a=null}else b!==a&&(a=null);id=a;return null}
function jd(a){switch(a){case "cancel":case "click":case "close":case "contextmenu":case "copy":case "cut":case "auxclick":case "dblclick":case "dragend":case "dragstart":case "drop":case "focusin":case "focusout":case "input":case "invalid":case "keydown":case "keypress":case "keyup":case "mousedown":case "mouseup":case "paste":case "pause":case "play":case "pointercancel":case "pointerdown":case "pointerup":case "ratechange":case "reset":case "resize":case "seeked":case "submit":case "touchcancel":case "touchend":case "touchstart":case "volumechange":case "change":case "selectionchange":case "textInput":case "compositionstart":case "compositionend":case "compositionupdate":case "beforeblur":case "afterblur":case "beforeinput":case "blur":case "fullscreenchange":case "focus":case "hashchange":case "popstate":case "select":case "selectstart":return 1;case "drag":case "dragenter":case "dragexit":case "dragleave":case "dragover":case "mousemove":case "mouseout":case "mouseover":case "pointermove":case "pointerout":case "pointerover":case "scroll":case "toggle":case "touchmove":case "wheel":case "mouseenter":case "mouseleave":case "pointerenter":case "pointerleave":return 4;
case "message":switch(ec()){case fc:return 1;case gc:return 4;case hc:case ic:return 16;case jc:return 536870912;default:return 16}default:return 16}}var kd=null,ld=null,md=null;function nd(){if(md)return md;var a,b=ld,c=b.length,d,e="value"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}
function od(a){var b=a.keyCode;"charCode"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}
function rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}A(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():"unknown"!==typeof a.returnValue&&
(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():"unknown"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}
var sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=A({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=A({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if("movementX"in
a)return a.movementX;a!==yd&&(yd&&"mousemove"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return"movementY"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=A({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=A({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=A({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=A({},sd,{clipboardData:function(a){return"clipboardData"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=A({},sd,{data:0}),Ld=rd(Kd),Md={Esc:"Escape",
Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Nd={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",
119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Od={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}
var Qd=A({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if("Unidentified"!==b)return b}return"keypress"===a.type?(a=od(a),13===a?"Enter":String.fromCharCode(a)):"keydown"===a.type||"keyup"===a.type?Nd[a.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return"keypress"===a.type?od(a):0},keyCode:function(a){return"keydown"===a.type||"keyup"===a.type?a.keyCode:0},which:function(a){return"keypress"===
a.type?od(a):"keydown"===a.type||"keyup"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=A({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=A({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=A({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=A({},Ad,{deltaX:function(a){return"deltaX"in a?a.deltaX:"wheelDeltaX"in a?-a.wheelDeltaX:0},
deltaY:function(a){return"deltaY"in a?a.deltaY:"wheelDeltaY"in a?-a.wheelDeltaY:"wheelDelta"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=ia&&"CompositionEvent"in window,be=null;ia&&"documentMode"in document&&(be=document.documentMode);var ce=ia&&"TextEvent"in window&&!be,de=ia&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;
function ge(a,b){switch(a){case "keyup":return-1!==$d.indexOf(b.keyCode);case "keydown":return 229!==b.keyCode;case "keypress":case "mousedown":case "focusout":return!0;default:return!1}}function he(a){a=a.detail;return"object"===typeof a&&"data"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case "compositionend":return he(b);case "keypress":if(32!==b.which)return null;fe=!0;return ee;case "textInput":return a=b.data,a===ee&&fe?null:a;default:return null}}
function ke(a,b){if(ie)return"compositionend"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case "paste":return null;case "keypress":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case "compositionend":return de&&"ko"!==b.locale?null:b.data;default:return null}}
var le={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return"input"===b?!!le[a.type]:"textarea"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,"onChange");0<b.length&&(c=new td("onChange","change",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}
function ve(a,b){if("change"===a)return b}var we=!1;if(ia){var xe;if(ia){var ye="oninput"in document;if(!ye){var ze=document.createElement("div");ze.setAttribute("oninput","return;");ye="function"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent("onpropertychange",Be),qe=pe=null)}function Be(a){if("value"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));Jb(re,b)}}
function Ce(a,b,c){"focusin"===a?(Ae(),pe=b,qe=c,pe.attachEvent("onpropertychange",Be)):"focusout"===a&&Ae()}function De(a){if("selectionchange"===a||"keyup"===a||"keydown"===a)return te(qe)}function Ee(a,b){if("click"===a)return te(b)}function Fe(a,b){if("input"===a||"change"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He="function"===typeof Object.is?Object.is:Ge;
function Ie(a,b){if(He(a,b))return!0;if("object"!==typeof a||null===a||"object"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++){var e=c[d];if(!ja.call(b,e)||!He(a[e],b[e]))return!1}return!0}function Je(a){for(;a&&a.firstChild;)a=a.firstChild;return a}
function Ke(a,b){var c=Je(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Je(c)}}function Le(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Le(a,b.parentNode):"contains"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}
function Me(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c="string"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Ne(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&("input"===b&&("text"===a.type||"search"===a.type||"tel"===a.type||"url"===a.type||"password"===a.type)||"textarea"===b||"true"===a.contentEditable)}
function Oe(a){var b=Me(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Le(c.ownerDocument.documentElement,c)){if(null!==d&&Ne(c))if(b=d.start,a=d.end,void 0===a&&(a=b),"selectionStart"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(a=(b=c.ownerDocument||document)&&b.defaultView||window,a.getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e);!a.extend&&f>d&&(e=d,d=f,f=e);e=Ke(c,f);var g=Ke(c,
d);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&(b=b.createRange(),b.setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)))}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});"function"===typeof c.focus&&c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}
var Pe=ia&&"documentMode"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;
function Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,"selectionStart"in d&&Ne(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Ie(Se,d)||(Se=d,d=oe(Re,"onSelect"),0<d.length&&(b=new td("onSelect","select",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}
function Ve(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c["Webkit"+a]="webkit"+b;c["Moz"+a]="moz"+b;return c}var We={animationend:Ve("Animation","AnimationEnd"),animationiteration:Ve("Animation","AnimationIteration"),animationstart:Ve("Animation","AnimationStart"),transitionend:Ve("Transition","TransitionEnd")},Xe={},Ye={};
ia&&(Ye=document.createElement("div").style,"AnimationEvent"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),"TransitionEvent"in window||delete We.transitionend.transition);function Ze(a){if(Xe[a])return Xe[a];if(!We[a])return a;var b=We[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Ye)return Xe[a]=b[c];return a}var $e=Ze("animationend"),af=Ze("animationiteration"),bf=Ze("animationstart"),cf=Ze("transitionend"),df=new Map,ef="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");
function ff(a,b){df.set(a,b);fa(b,[a])}for(var gf=0;gf<ef.length;gf++){var hf=ef[gf],jf=hf.toLowerCase(),kf=hf[0].toUpperCase()+hf.slice(1);ff(jf,"on"+kf)}ff($e,"onAnimationEnd");ff(af,"onAnimationIteration");ff(bf,"onAnimationStart");ff("dblclick","onDoubleClick");ff("focusin","onFocus");ff("focusout","onBlur");ff(cf,"onTransitionEnd");ha("onMouseEnter",["mouseout","mouseover"]);ha("onMouseLeave",["mouseout","mouseover"]);ha("onPointerEnter",["pointerout","pointerover"]);
ha("onPointerLeave",["pointerout","pointerover"]);fa("onChange","change click focusin focusout input keydown keyup selectionchange".split(" "));fa("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));fa("onBeforeInput",["compositionend","keypress","textInput","paste"]);fa("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" "));fa("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" "));
fa("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var lf="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),mf=new Set("cancel close invalid load scroll toggle".split(" ").concat(lf));
function nf(a,b,c){var d=a.type||"unknown-event";a.currentTarget=c;Ub(d,b,void 0,a);a.currentTarget=null}
function se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}}}if(Qb)throw a=Rb,Qb=!1,Rb=null,a;}
function D(a,b){var c=b[of];void 0===c&&(c=b[of]=new Set);var d=a+"__bubble";c.has(d)||(pf(b,a,2,!1),c.add(d))}function qf(a,b,c){var d=0;b&&(d|=4);pf(c,a,d,b)}var rf="_reactListening"+Math.random().toString(36).slice(2);function sf(a){if(!a[rf]){a[rf]=!0;da.forEach(function(b){"selectionchange"!==b&&(mf.has(b)||qf(b,!1,a),qf(b,!0,a))});var b=9===a.nodeType?a:a.ownerDocument;null===b||b[rf]||(b[rf]=!0,qf("selectionchange",!1,b))}}
function pf(a,b,c,d){switch(jd(b)){case 1:var e=ed;break;case 4:e=gd;break;default:e=fd}c=e.bind(null,b,c,a);e=void 0;!Lb||"touchstart"!==b&&"touchmove"!==b&&"wheel"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}
function hd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=Wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Jb(function(){var d=f,e=xb(c),g=[];
a:{var h=df.get(a);if(void 0!==h){var k=td,n=a;switch(a){case "keypress":if(0===od(c))break a;case "keydown":case "keyup":k=Rd;break;case "focusin":n="focus";k=Fd;break;case "focusout":n="blur";k=Fd;break;case "beforeblur":case "afterblur":k=Fd;break;case "click":if(2===c.button)break a;case "auxclick":case "dblclick":case "mousedown":case "mousemove":case "mouseup":case "mouseout":case "mouseover":case "contextmenu":k=Bd;break;case "drag":case "dragend":case "dragenter":case "dragexit":case "dragleave":case "dragover":case "dragstart":case "drop":k=
Dd;break;case "touchcancel":case "touchend":case "touchmove":case "touchstart":k=Vd;break;case $e:case af:case bf:k=Hd;break;case cf:k=Xd;break;case "scroll":k=vd;break;case "wheel":k=Zd;break;case "copy":case "cut":case "paste":k=Jd;break;case "gotpointercapture":case "lostpointercapture":case "pointercancel":case "pointerdown":case "pointermove":case "pointerout":case "pointerover":case "pointerup":k=Td}var t=0!==(b&4),J=!t&&"scroll"===a,x=t?null!==h?h+"Capture":null:h;t=[];for(var w=d,u;null!==
w;){u=w;var F=u.stateNode;5===u.tag&&null!==F&&(u=F,null!==x&&(F=Kb(w,x),null!=F&&t.push(tf(w,F,u))));if(J)break;w=w.return}0<t.length&&(h=new k(h,n,null,c,e),g.push({event:h,listeners:t}))}}if(0===(b&7)){a:{h="mouseover"===a||"pointerover"===a;k="mouseout"===a||"pointerout"===a;if(h&&c!==wb&&(n=c.relatedTarget||c.fromElement)&&(Wc(n)||n[uf]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(n=c.relatedTarget||c.toElement,k=d,n=n?Wc(n):null,null!==
n&&(J=Vb(n),n!==J||5!==n.tag&&6!==n.tag))n=null}else k=null,n=d;if(k!==n){t=Bd;F="onMouseLeave";x="onMouseEnter";w="mouse";if("pointerout"===a||"pointerover"===a)t=Td,F="onPointerLeave",x="onPointerEnter",w="pointer";J=null==k?h:ue(k);u=null==n?h:ue(n);h=new t(F,w+"leave",k,c,e);h.target=J;h.relatedTarget=u;F=null;Wc(e)===d&&(t=new t(x,w+"enter",n,c,e),t.target=u,t.relatedTarget=J,F=t);J=F;if(k&&n)b:{t=k;x=n;w=0;for(u=t;u;u=vf(u))w++;u=0;for(F=x;F;F=vf(F))u++;for(;0<w-u;)t=vf(t),w--;for(;0<u-w;)x=
vf(x),u--;for(;w--;){if(t===x||null!==x&&t===x.alternate)break b;t=vf(t);x=vf(x)}t=null}else t=null;null!==k&&wf(g,h,k,t,!1);null!==n&&null!==J&&wf(g,J,n,t,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if("select"===k||"input"===k&&"file"===h.type)var na=ve;else if(me(h))if(we)na=Fe;else{na=De;var xa=Ce}else(k=h.nodeName)&&"input"===k.toLowerCase()&&("checkbox"===h.type||"radio"===h.type)&&(na=Ee);if(na&&(na=na(a,d))){ne(g,na,c,e);break a}xa&&xa(a,h,d);"focusout"===a&&(xa=h._wrapperState)&&
xa.controlled&&"number"===h.type&&cb(h,"number",h.value)}xa=d?ue(d):window;switch(a){case "focusin":if(me(xa)||"true"===xa.contentEditable)Qe=xa,Re=d,Se=null;break;case "focusout":Se=Re=Qe=null;break;case "mousedown":Te=!0;break;case "contextmenu":case "mouseup":case "dragend":Te=!1;Ue(g,c,e);break;case "selectionchange":if(Pe)break;case "keydown":case "keyup":Ue(g,c,e)}var $a;if(ae)b:{switch(a){case "compositionstart":var ba="onCompositionStart";break b;case "compositionend":ba="onCompositionEnd";
break b;case "compositionupdate":ba="onCompositionUpdate";break b}ba=void 0}else ie?ge(a,c)&&(ba="onCompositionEnd"):"keydown"===a&&229===c.keyCode&&(ba="onCompositionStart");ba&&(de&&"ko"!==c.locale&&(ie||"onCompositionStart"!==ba?"onCompositionEnd"===ba&&ie&&($a=nd()):(kd=e,ld="value"in kd?kd.value:kd.textContent,ie=!0)),xa=oe(d,ba),0<xa.length&&(ba=new Ld(ba,a,null,c,e),g.push({event:ba,listeners:xa}),$a?ba.data=$a:($a=he(c),null!==$a&&(ba.data=$a))));if($a=ce?je(a,c):ke(a,c))d=oe(d,"onBeforeInput"),
0<d.length&&(e=new Ld("onBeforeInput","beforeinput",null,c,e),g.push({event:e,listeners:d}),e.data=$a)}se(g,b)})}function tf(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+"Capture",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Kb(a,c),null!=f&&d.unshift(tf(a,f,e)),f=Kb(a,b),null!=f&&d.push(tf(a,f,e)));a=a.return}return d}function vf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}
function wf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Kb(c,f),null!=k&&g.unshift(tf(c,k,h))):e||(k=Kb(c,f),null!=k&&g.push(tf(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}var xf=/\r\n?/g,yf=/\u0000|\uFFFD/g;function zf(a){return("string"===typeof a?a:""+a).replace(xf,"\n").replace(yf,"")}function Af(a,b,c){b=zf(b);if(zf(a)!==b&&c)throw Error(p(425));}function Bf(){}
var Cf=null,Df=null;function Ef(a,b){return"textarea"===a||"noscript"===a||"string"===typeof b.children||"number"===typeof b.children||"object"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}
var Ff="function"===typeof setTimeout?setTimeout:void 0,Gf="function"===typeof clearTimeout?clearTimeout:void 0,Hf="function"===typeof Promise?Promise:void 0,Jf="function"===typeof queueMicrotask?queueMicrotask:"undefined"!==typeof Hf?function(a){return Hf.resolve(null).then(a).catch(If)}:Ff;function If(a){setTimeout(function(){throw a;})}
function Kf(a,b){var c=b,d=0;do{var e=c.nextSibling;a.removeChild(c);if(e&&8===e.nodeType)if(c=e.data,"/$"===c){if(0===d){a.removeChild(e);bd(b);return}d--}else"$"!==c&&"$?"!==c&&"$!"!==c||d++;c=e}while(c);bd(b)}function Lf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break;if(8===b){b=a.data;if("$"===b||"$!"===b||"$?"===b)break;if("/$"===b)return null}}return a}
function Mf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if("$"===c||"$!"===c||"$?"===c){if(0===b)return a;b--}else"/$"===c&&b++}a=a.previousSibling}return null}var Nf=Math.random().toString(36).slice(2),Of="__reactFiber$"+Nf,Pf="__reactProps$"+Nf,uf="__reactContainer$"+Nf,of="__reactEvents$"+Nf,Qf="__reactListeners$"+Nf,Rf="__reactHandles$"+Nf;
function Wc(a){var b=a[Of];if(b)return b;for(var c=a.parentNode;c;){if(b=c[uf]||c[Of]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=Mf(a);null!==a;){if(c=a[Of])return c;a=Mf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[Of]||a[uf];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(p(33));}function Db(a){return a[Pf]||null}var Sf=[],Tf=-1;function Uf(a){return{current:a}}
function E(a){0>Tf||(a.current=Sf[Tf],Sf[Tf]=null,Tf--)}function G(a,b){Tf++;Sf[Tf]=a.current;a.current=b}var Vf={},H=Uf(Vf),Wf=Uf(!1),Xf=Vf;function Yf(a,b){var c=a.type.contextTypes;if(!c)return Vf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}
function Zf(a){a=a.childContextTypes;return null!==a&&void 0!==a}function $f(){E(Wf);E(H)}function ag(a,b,c){if(H.current!==Vf)throw Error(p(168));G(H,b);G(Wf,c)}function bg(a,b,c){var d=a.stateNode;b=b.childContextTypes;if("function"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in b))throw Error(p(108,Ra(a)||"Unknown",e));return A({},c,d)}
function cg(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Vf;Xf=H.current;G(H,a);G(Wf,Wf.current);return!0}function dg(a,b,c){var d=a.stateNode;if(!d)throw Error(p(169));c?(a=bg(a,b,Xf),d.__reactInternalMemoizedMergedChildContext=a,E(Wf),E(H),G(H,a)):E(Wf);G(Wf,c)}var eg=null,fg=!1,gg=!1;function hg(a){null===eg?eg=[a]:eg.push(a)}function ig(a){fg=!0;hg(a)}
function jg(){if(!gg&&null!==eg){gg=!0;var a=0,b=C;try{var c=eg;for(C=1;a<c.length;a++){var d=c[a];do d=d(!0);while(null!==d)}eg=null;fg=!1}catch(e){throw null!==eg&&(eg=eg.slice(a+1)),ac(fc,jg),e;}finally{C=b,gg=!1}}return null}var kg=[],lg=0,mg=null,ng=0,og=[],pg=0,qg=null,rg=1,sg="";function tg(a,b){kg[lg++]=ng;kg[lg++]=mg;mg=a;ng=b}
function ug(a,b,c){og[pg++]=rg;og[pg++]=sg;og[pg++]=qg;qg=a;var d=rg;a=sg;var e=32-oc(d)-1;d&=~(1<<e);c+=1;var f=32-oc(b)+e;if(30<f){var g=e-e%5;f=(d&(1<<g)-1).toString(32);d>>=g;e-=g;rg=1<<32-oc(b)+e|c<<e|d;sg=f+a}else rg=1<<f|c<<e|d,sg=a}function vg(a){null!==a.return&&(tg(a,1),ug(a,1,0))}function wg(a){for(;a===mg;)mg=kg[--lg],kg[lg]=null,ng=kg[--lg],kg[lg]=null;for(;a===qg;)qg=og[--pg],og[pg]=null,sg=og[--pg],og[pg]=null,rg=og[--pg],og[pg]=null}var xg=null,yg=null,I=!1,zg=null;
function Ag(a,b){var c=Bg(5,null,null,0);c.elementType="DELETED";c.stateNode=b;c.return=a;b=a.deletions;null===b?(a.deletions=[c],a.flags|=16):b.push(c)}
function Cg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,xg=a,yg=Lf(b.firstChild),!0):!1;case 6:return b=""===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,xg=a,yg=null,!0):!1;case 13:return b=8!==b.nodeType?null:b,null!==b?(c=null!==qg?{id:rg,overflow:sg}:null,a.memoizedState={dehydrated:b,treeContext:c,retryLane:1073741824},c=Bg(18,null,null,0),c.stateNode=b,c.return=a,a.child=c,xg=a,yg=
null,!0):!1;default:return!1}}function Dg(a){return 0!==(a.mode&1)&&0===(a.flags&128)}function Eg(a){if(I){var b=yg;if(b){var c=b;if(!Cg(a,b)){if(Dg(a))throw Error(p(418));b=Lf(c.nextSibling);var d=xg;b&&Cg(a,b)?Ag(d,c):(a.flags=a.flags&-4097|2,I=!1,xg=a)}}else{if(Dg(a))throw Error(p(418));a.flags=a.flags&-4097|2;I=!1;xg=a}}}function Fg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;xg=a}
function Gg(a){if(a!==xg)return!1;if(!I)return Fg(a),I=!0,!1;var b;(b=3!==a.tag)&&!(b=5!==a.tag)&&(b=a.type,b="head"!==b&&"body"!==b&&!Ef(a.type,a.memoizedProps));if(b&&(b=yg)){if(Dg(a))throw Hg(),Error(p(418));for(;b;)Ag(a,b),b=Lf(b.nextSibling)}Fg(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(p(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if("/$"===c){if(0===b){yg=Lf(a.nextSibling);break a}b--}else"$"!==c&&"$!"!==c&&"$?"!==c||b++}a=a.nextSibling}yg=
null}}else yg=xg?Lf(a.stateNode.nextSibling):null;return!0}function Hg(){for(var a=yg;a;)a=Lf(a.nextSibling)}function Ig(){yg=xg=null;I=!1}function Jg(a){null===zg?zg=[a]:zg.push(a)}var Kg=ua.ReactCurrentBatchConfig;function Lg(a,b){if(a&&a.defaultProps){b=A({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}var Mg=Uf(null),Ng=null,Og=null,Pg=null;function Qg(){Pg=Og=Ng=null}function Rg(a){var b=Mg.current;E(Mg);a._currentValue=b}
function Sg(a,b,c){for(;null!==a;){var d=a.alternate;(a.childLanes&b)!==b?(a.childLanes|=b,null!==d&&(d.childLanes|=b)):null!==d&&(d.childLanes&b)!==b&&(d.childLanes|=b);if(a===c)break;a=a.return}}function Tg(a,b){Ng=a;Pg=Og=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(Ug=!0),a.firstContext=null)}
function Vg(a){var b=a._currentValue;if(Pg!==a)if(a={context:a,memoizedValue:b,next:null},null===Og){if(null===Ng)throw Error(p(308));Og=a;Ng.dependencies={lanes:0,firstContext:a}}else Og=Og.next=a;return b}var Wg=null;function Xg(a){null===Wg?Wg=[a]:Wg.push(a)}function Yg(a,b,c,d){var e=b.interleaved;null===e?(c.next=c,Xg(b)):(c.next=e.next,e.next=c);b.interleaved=c;return Zg(a,d)}
function Zg(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}var $g=!1;function ah(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}
function bh(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function ch(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}
function dh(a,b,c){var d=a.updateQueue;if(null===d)return null;d=d.shared;if(0!==(K&2)){var e=d.pending;null===e?b.next=b:(b.next=e.next,e.next=b);d.pending=b;return Zg(a,c)}e=d.interleaved;null===e?(b.next=b,Xg(d)):(b.next=e.next,e.next=b);d.interleaved=b;return Zg(a,c)}function eh(a,b,c){b=b.updateQueue;if(null!==b&&(b=b.shared,0!==(c&4194240))){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}
function fh(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=
b;c.lastBaseUpdate=b}
function gh(a,b,c,d){var e=a.updateQueue;$g=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var m=a.alternate;null!==m&&(m=m.updateQueue,h=m.lastBaseUpdate,h!==g&&(null===h?m.firstBaseUpdate=l:h.next=l,m.lastBaseUpdate=k))}if(null!==f){var q=e.baseState;g=0;m=l=k=null;h=f;do{var r=h.lane,y=h.eventTime;if((d&r)===r){null!==m&&(m=m.next={eventTime:y,lane:0,tag:h.tag,payload:h.payload,callback:h.callback,
next:null});a:{var n=a,t=h;r=b;y=c;switch(t.tag){case 1:n=t.payload;if("function"===typeof n){q=n.call(y,q,r);break a}q=n;break a;case 3:n.flags=n.flags&-65537|128;case 0:n=t.payload;r="function"===typeof n?n.call(y,q,r):n;if(null===r||void 0===r)break a;q=A({},q,r);break a;case 2:$g=!0}}null!==h.callback&&0!==h.lane&&(a.flags|=64,r=e.effects,null===r?e.effects=[h]:r.push(h))}else y={eventTime:y,lane:r,tag:h.tag,payload:h.payload,callback:h.callback,next:null},null===m?(l=m=y,k=q):m=m.next=y,g|=r;
h=h.next;if(null===h)if(h=e.shared.pending,null===h)break;else r=h,h=r.next,r.next=null,e.lastBaseUpdate=r,e.shared.pending=null}while(1);null===m&&(k=q);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=m;b=e.shared.interleaved;if(null!==b){e=b;do g|=e.lane,e=e.next;while(e!==b)}else null===f&&(e.shared.lanes=0);hh|=g;a.lanes=g;a.memoizedState=q}}
function ih(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if("function"!==typeof e)throw Error(p(191,e));e.call(d)}}}var jh=(new aa.Component).refs;function kh(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:A({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}
var nh={isMounted:function(a){return(a=a._reactInternals)?Vb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=L(),e=lh(a),f=ch(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=dh(a,f,e);null!==b&&(mh(b,a,e,d),eh(b,a,e))},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=L(),e=lh(a),f=ch(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=dh(a,f,e);null!==b&&(mh(b,a,e,d),eh(b,a,e))},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=L(),d=
lh(a),e=ch(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=b);b=dh(a,e,d);null!==b&&(mh(b,a,d,c),eh(b,a,d))}};function oh(a,b,c,d,e,f,g){a=a.stateNode;return"function"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Ie(c,d)||!Ie(e,f):!0}
function ph(a,b,c){var d=!1,e=Vf;var f=b.contextType;"object"===typeof f&&null!==f?f=Vg(f):(e=Zf(b)?Xf:H.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Yf(a,e):Vf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=nh;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}
function qh(a,b,c,d){a=b.state;"function"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);"function"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&nh.enqueueReplaceState(b,b.state,null)}
function rh(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=jh;ah(a);var f=b.contextType;"object"===typeof f&&null!==f?e.context=Vg(f):(f=Zf(b)?Xf:H.current,e.context=Yf(a,f));e.state=a.memoizedState;f=b.getDerivedStateFromProps;"function"===typeof f&&(kh(a,b,f,c),e.state=a.memoizedState);"function"===typeof b.getDerivedStateFromProps||"function"===typeof e.getSnapshotBeforeUpdate||"function"!==typeof e.UNSAFE_componentWillMount&&"function"!==typeof e.componentWillMount||(b=e.state,
"function"===typeof e.componentWillMount&&e.componentWillMount(),"function"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&nh.enqueueReplaceState(e,e.state,null),gh(a,c,e,d),e.state=a.memoizedState);"function"===typeof e.componentDidMount&&(a.flags|=4194308)}
function sh(a,b,c){a=c.ref;if(null!==a&&"function"!==typeof a&&"object"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(p(309));var d=c.stateNode}if(!d)throw Error(p(147,a));var e=d,f=""+a;if(null!==b&&null!==b.ref&&"function"===typeof b.ref&&b.ref._stringRef===f)return b.ref;b=function(a){var b=e.refs;b===jh&&(b=e.refs={});null===a?delete b[f]:b[f]=a};b._stringRef=f;return b}if("string"!==typeof a)throw Error(p(284));if(!c._owner)throw Error(p(290,a));}return a}
function th(a,b){a=Object.prototype.toString.call(b);throw Error(p(31,"[object Object]"===a?"object with keys {"+Object.keys(b).join(", ")+"}":a));}function uh(a){var b=a._init;return b(a._payload)}
function vh(a){function b(b,c){if(a){var d=b.deletions;null===d?(b.deletions=[c],b.flags|=16):d.push(c)}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=wh(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return b.flags|=1048576,c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags|=2,c):d;b.flags|=2;return c}function g(b){a&&
null===b.alternate&&(b.flags|=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=xh(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){var f=c.type;if(f===ya)return m(a,b,c.props.children,d,c.key);if(null!==b&&(b.elementType===f||"object"===typeof f&&null!==f&&f.$$typeof===Ha&&uh(f)===b.type))return d=e(b,c.props),d.ref=sh(a,b,c),d.return=a,d;d=yh(c.type,c.key,c.props,null,a.mode,d);d.ref=sh(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||
b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=zh(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Ah(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function q(a,b,c){if("string"===typeof b&&""!==b||"number"===typeof b)return b=xh(""+b,a.mode,c),b.return=a,b;if("object"===typeof b&&null!==b){switch(b.$$typeof){case va:return c=yh(b.type,b.key,b.props,null,a.mode,c),
c.ref=sh(a,null,b),c.return=a,c;case wa:return b=zh(b,a.mode,c),b.return=a,b;case Ha:var d=b._init;return q(a,d(b._payload),c)}if(eb(b)||Ka(b))return b=Ah(b,a.mode,c,null),b.return=a,b;th(a,b)}return null}function r(a,b,c,d){var e=null!==b?b.key:null;if("string"===typeof c&&""!==c||"number"===typeof c)return null!==e?null:h(a,b,""+c,d);if("object"===typeof c&&null!==c){switch(c.$$typeof){case va:return c.key===e?k(a,b,c,d):null;case wa:return c.key===e?l(a,b,c,d):null;case Ha:return e=c._init,r(a,
b,e(c._payload),d)}if(eb(c)||Ka(c))return null!==e?null:m(a,b,c,d,null);th(a,c)}return null}function y(a,b,c,d,e){if("string"===typeof d&&""!==d||"number"===typeof d)return a=a.get(c)||null,h(b,a,""+d,e);if("object"===typeof d&&null!==d){switch(d.$$typeof){case va:return a=a.get(null===d.key?c:d.key)||null,k(b,a,d,e);case wa:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e);case Ha:var f=d._init;return y(a,b,c,f(d._payload),e)}if(eb(d)||Ka(d))return a=a.get(c)||null,m(b,a,d,e,null);th(b,d)}return null}
function n(e,g,h,k){for(var l=null,m=null,u=g,w=g=0,x=null;null!==u&&w<h.length;w++){u.index>w?(x=u,u=null):x=u.sibling;var n=r(e,u,h[w],k);if(null===n){null===u&&(u=x);break}a&&u&&null===n.alternate&&b(e,u);g=f(n,g,w);null===m?l=n:m.sibling=n;m=n;u=x}if(w===h.length)return c(e,u),I&&tg(e,w),l;if(null===u){for(;w<h.length;w++)u=q(e,h[w],k),null!==u&&(g=f(u,g,w),null===m?l=u:m.sibling=u,m=u);I&&tg(e,w);return l}for(u=d(e,u);w<h.length;w++)x=y(u,e,w,h[w],k),null!==x&&(a&&null!==x.alternate&&u.delete(null===
x.key?w:x.key),g=f(x,g,w),null===m?l=x:m.sibling=x,m=x);a&&u.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function t(e,g,h,k){var l=Ka(h);if("function"!==typeof l)throw Error(p(150));h=l.call(h);if(null==h)throw Error(p(151));for(var u=l=null,m=g,w=g=0,x=null,n=h.next();null!==m&&!n.done;w++,n=h.next()){m.index>w?(x=m,m=null):x=m.sibling;var t=r(e,m,n.value,k);if(null===t){null===m&&(m=x);break}a&&m&&null===t.alternate&&b(e,m);g=f(t,g,w);null===u?l=t:u.sibling=t;u=t;m=x}if(n.done)return c(e,
m),I&&tg(e,w),l;if(null===m){for(;!n.done;w++,n=h.next())n=q(e,n.value,k),null!==n&&(g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);I&&tg(e,w);return l}for(m=d(e,m);!n.done;w++,n=h.next())n=y(m,e,w,n.value,k),null!==n&&(a&&null!==n.alternate&&m.delete(null===n.key?w:n.key),g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);a&&m.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function J(a,d,f,h){"object"===typeof f&&null!==f&&f.type===ya&&null===f.key&&(f=f.props.children);if("object"===typeof f&&null!==f){switch(f.$$typeof){case va:a:{for(var k=
f.key,l=d;null!==l;){if(l.key===k){k=f.type;if(k===ya){if(7===l.tag){c(a,l.sibling);d=e(l,f.props.children);d.return=a;a=d;break a}}else if(l.elementType===k||"object"===typeof k&&null!==k&&k.$$typeof===Ha&&uh(k)===l.type){c(a,l.sibling);d=e(l,f.props);d.ref=sh(a,l,f);d.return=a;a=d;break a}c(a,l);break}else b(a,l);l=l.sibling}f.type===ya?(d=Ah(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=yh(f.type,f.key,f.props,null,a.mode,h),h.ref=sh(a,d,f),h.return=a,a=h)}return g(a);case wa:a:{for(l=f.key;null!==
d;){if(d.key===l)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=zh(f,a.mode,h);d.return=a;a=d}return g(a);case Ha:return l=f._init,J(a,d,l(f._payload),h)}if(eb(f))return n(a,d,f,h);if(Ka(f))return t(a,d,f,h);th(a,f)}return"string"===typeof f&&""!==f||"number"===typeof f?(f=""+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):
(c(a,d),d=xh(f,a.mode,h),d.return=a,a=d),g(a)):c(a,d)}return J}var Bh=vh(!0),Ch=vh(!1),Dh={},Eh=Uf(Dh),Fh=Uf(Dh),Gh=Uf(Dh);function Hh(a){if(a===Dh)throw Error(p(174));return a}function Ih(a,b){G(Gh,b);G(Fh,a);G(Eh,Dh);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:lb(null,"");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=lb(b,a)}E(Eh);G(Eh,b)}function Jh(){E(Eh);E(Fh);E(Gh)}
function Kh(a){Hh(Gh.current);var b=Hh(Eh.current);var c=lb(b,a.type);b!==c&&(G(Fh,a),G(Eh,c))}function Lh(a){Fh.current===a&&(E(Eh),E(Fh))}var M=Uf(0);
function Mh(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||"$?"===c.data||"$!"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&128))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var Nh=[];
function Oh(){for(var a=0;a<Nh.length;a++)Nh[a]._workInProgressVersionPrimary=null;Nh.length=0}var Ph=ua.ReactCurrentDispatcher,Qh=ua.ReactCurrentBatchConfig,Rh=0,N=null,O=null,P=null,Sh=!1,Th=!1,Uh=0,Vh=0;function Q(){throw Error(p(321));}function Wh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}
function Xh(a,b,c,d,e,f){Rh=f;N=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;Ph.current=null===a||null===a.memoizedState?Yh:Zh;a=c(d,e);if(Th){f=0;do{Th=!1;Uh=0;if(25<=f)throw Error(p(301));f+=1;P=O=null;b.updateQueue=null;Ph.current=$h;a=c(d,e)}while(Th)}Ph.current=ai;b=null!==O&&null!==O.next;Rh=0;P=O=N=null;Sh=!1;if(b)throw Error(p(300));return a}function bi(){var a=0!==Uh;Uh=0;return a}
function ci(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===P?N.memoizedState=P=a:P=P.next=a;return P}function di(){if(null===O){var a=N.alternate;a=null!==a?a.memoizedState:null}else a=O.next;var b=null===P?N.memoizedState:P.next;if(null!==b)P=b,O=a;else{if(null===a)throw Error(p(310));O=a;a={memoizedState:O.memoizedState,baseState:O.baseState,baseQueue:O.baseQueue,queue:O.queue,next:null};null===P?N.memoizedState=P=a:P=P.next=a}return P}
function ei(a,b){return"function"===typeof b?b(a):b}
function fi(a){var b=di(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=O,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){f=e.next;d=d.baseState;var h=g=null,k=null,l=f;do{var m=l.lane;if((Rh&m)===m)null!==k&&(k=k.next={lane:0,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null}),d=l.hasEagerState?l.eagerState:a(d,l.action);else{var q={lane:m,action:l.action,hasEagerState:l.hasEagerState,
eagerState:l.eagerState,next:null};null===k?(h=k=q,g=d):k=k.next=q;N.lanes|=m;hh|=m}l=l.next}while(null!==l&&l!==f);null===k?g=d:k.next=h;He(d,b.memoizedState)||(Ug=!0);b.memoizedState=d;b.baseState=g;b.baseQueue=k;c.lastRenderedState=d}a=c.interleaved;if(null!==a){e=a;do f=e.lane,N.lanes|=f,hh|=f,e=e.next;while(e!==a)}else null===e&&(c.lanes=0);return[b.memoizedState,c.dispatch]}
function gi(a){var b=di(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(Ug=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}function hi(){}
function ii(a,b){var c=N,d=di(),e=b(),f=!He(d.memoizedState,e);f&&(d.memoizedState=e,Ug=!0);d=d.queue;ji(ki.bind(null,c,d,a),[a]);if(d.getSnapshot!==b||f||null!==P&&P.memoizedState.tag&1){c.flags|=2048;li(9,mi.bind(null,c,d,e,b),void 0,null);if(null===R)throw Error(p(349));0!==(Rh&30)||ni(c,b,e)}return e}function ni(a,b,c){a.flags|=16384;a={getSnapshot:b,value:c};b=N.updateQueue;null===b?(b={lastEffect:null,stores:null},N.updateQueue=b,b.stores=[a]):(c=b.stores,null===c?b.stores=[a]:c.push(a))}
function mi(a,b,c,d){b.value=c;b.getSnapshot=d;oi(b)&&pi(a)}function ki(a,b,c){return c(function(){oi(b)&&pi(a)})}function oi(a){var b=a.getSnapshot;a=a.value;try{var c=b();return!He(a,c)}catch(d){return!0}}function pi(a){var b=Zg(a,1);null!==b&&mh(b,a,1,-1)}
function qi(a){var b=ci();"function"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:ei,lastRenderedState:a};b.queue=a;a=a.dispatch=ri.bind(null,N,a);return[b.memoizedState,a]}
function li(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=N.updateQueue;null===b?(b={lastEffect:null,stores:null},N.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function si(){return di().memoizedState}function ti(a,b,c,d){var e=ci();N.flags|=a;e.memoizedState=li(1|b,c,void 0,void 0===d?null:d)}
function ui(a,b,c,d){var e=di();d=void 0===d?null:d;var f=void 0;if(null!==O){var g=O.memoizedState;f=g.destroy;if(null!==d&&Wh(d,g.deps)){e.memoizedState=li(b,c,f,d);return}}N.flags|=a;e.memoizedState=li(1|b,c,f,d)}function vi(a,b){return ti(8390656,8,a,b)}function ji(a,b){return ui(2048,8,a,b)}function wi(a,b){return ui(4,2,a,b)}function xi(a,b){return ui(4,4,a,b)}
function yi(a,b){if("function"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function zi(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ui(4,4,yi.bind(null,b,a),c)}function Ai(){}function Bi(a,b){var c=di();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Wh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}
function Ci(a,b){var c=di();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Wh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}function Di(a,b,c){if(0===(Rh&21))return a.baseState&&(a.baseState=!1,Ug=!0),a.memoizedState=c;He(c,b)||(c=yc(),N.lanes|=c,hh|=c,a.baseState=!0);return b}function Ei(a,b){var c=C;C=0!==c&&4>c?c:4;a(!0);var d=Qh.transition;Qh.transition={};try{a(!1),b()}finally{C=c,Qh.transition=d}}function Fi(){return di().memoizedState}
function Gi(a,b,c){var d=lh(a);c={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(Hi(a))Ii(b,c);else if(c=Yg(a,b,c,d),null!==c){var e=L();mh(c,a,d,e);Ji(c,b,d)}}
function ri(a,b,c){var d=lh(a),e={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(Hi(a))Ii(b,e);else{var f=a.alternate;if(0===a.lanes&&(null===f||0===f.lanes)&&(f=b.lastRenderedReducer,null!==f))try{var g=b.lastRenderedState,h=f(g,c);e.hasEagerState=!0;e.eagerState=h;if(He(h,g)){var k=b.interleaved;null===k?(e.next=e,Xg(b)):(e.next=k.next,k.next=e);b.interleaved=e;return}}catch(l){}finally{}c=Yg(a,b,e,d);null!==c&&(e=L(),mh(c,a,d,e),Ji(c,b,d))}}
function Hi(a){var b=a.alternate;return a===N||null!==b&&b===N}function Ii(a,b){Th=Sh=!0;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}function Ji(a,b,c){if(0!==(c&4194240)){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}
var ai={readContext:Vg,useCallback:Q,useContext:Q,useEffect:Q,useImperativeHandle:Q,useInsertionEffect:Q,useLayoutEffect:Q,useMemo:Q,useReducer:Q,useRef:Q,useState:Q,useDebugValue:Q,useDeferredValue:Q,useTransition:Q,useMutableSource:Q,useSyncExternalStore:Q,useId:Q,unstable_isNewReconciler:!1},Yh={readContext:Vg,useCallback:function(a,b){ci().memoizedState=[a,void 0===b?null:b];return a},useContext:Vg,useEffect:vi,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ti(4194308,
4,yi.bind(null,b,a),c)},useLayoutEffect:function(a,b){return ti(4194308,4,a,b)},useInsertionEffect:function(a,b){return ti(4,2,a,b)},useMemo:function(a,b){var c=ci();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=ci();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};d.queue=a;a=a.dispatch=Gi.bind(null,N,a);return[d.memoizedState,a]},useRef:function(a){var b=
ci();a={current:a};return b.memoizedState=a},useState:qi,useDebugValue:Ai,useDeferredValue:function(a){return ci().memoizedState=a},useTransition:function(){var a=qi(!1),b=a[0];a=Ei.bind(null,a[1]);ci().memoizedState=a;return[b,a]},useMutableSource:function(){},useSyncExternalStore:function(a,b,c){var d=N,e=ci();if(I){if(void 0===c)throw Error(p(407));c=c()}else{c=b();if(null===R)throw Error(p(349));0!==(Rh&30)||ni(d,b,c)}e.memoizedState=c;var f={value:c,getSnapshot:b};e.queue=f;vi(ki.bind(null,d,
f,a),[a]);d.flags|=2048;li(9,mi.bind(null,d,f,c,b),void 0,null);return c},useId:function(){var a=ci(),b=R.identifierPrefix;if(I){var c=sg;var d=rg;c=(d&~(1<<32-oc(d)-1)).toString(32)+c;b=":"+b+"R"+c;c=Uh++;0<c&&(b+="H"+c.toString(32));b+=":"}else c=Vh++,b=":"+b+"r"+c.toString(32)+":";return a.memoizedState=b},unstable_isNewReconciler:!1},Zh={readContext:Vg,useCallback:Bi,useContext:Vg,useEffect:ji,useImperativeHandle:zi,useInsertionEffect:wi,useLayoutEffect:xi,useMemo:Ci,useReducer:fi,useRef:si,useState:function(){return fi(ei)},
useDebugValue:Ai,useDeferredValue:function(a){var b=di();return Di(b,O.memoizedState,a)},useTransition:function(){var a=fi(ei)[0],b=di().memoizedState;return[a,b]},useMutableSource:hi,useSyncExternalStore:ii,useId:Fi,unstable_isNewReconciler:!1},$h={readContext:Vg,useCallback:Bi,useContext:Vg,useEffect:ji,useImperativeHandle:zi,useInsertionEffect:wi,useLayoutEffect:xi,useMemo:Ci,useReducer:gi,useRef:si,useState:function(){return gi(ei)},useDebugValue:Ai,useDeferredValue:function(a){var b=di();return null===
O?b.memoizedState=a:Di(b,O.memoizedState,a)},useTransition:function(){var a=gi(ei)[0],b=di().memoizedState;return[a,b]},useMutableSource:hi,useSyncExternalStore:ii,useId:Fi,unstable_isNewReconciler:!1};function Ki(a,b){try{var c="",d=b;do c+=Pa(d),d=d.return;while(d);var e=c}catch(f){e="\nError generating stack: "+f.message+"\n"+f.stack}return{value:a,source:b,stack:e,digest:null}}function Li(a,b,c){return{value:a,source:null,stack:null!=c?c:null,digest:null!=b?b:null}}
function Mi(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Ni="function"===typeof WeakMap?WeakMap:Map;function Oi(a,b,c){c=ch(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Pi||(Pi=!0,Qi=d);Mi(a,b)};return c}
function Ri(a,b,c){c=ch(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if("function"===typeof d){var e=b.value;c.payload=function(){return d(e)};c.callback=function(){Mi(a,b)}}var f=a.stateNode;null!==f&&"function"===typeof f.componentDidCatch&&(c.callback=function(){Mi(a,b);"function"!==typeof d&&(null===Si?Si=new Set([this]):Si.add(this));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:""})});return c}
function Ti(a,b,c){var d=a.pingCache;if(null===d){d=a.pingCache=new Ni;var e=new Set;d.set(b,e)}else e=d.get(b),void 0===e&&(e=new Set,d.set(b,e));e.has(c)||(e.add(c),a=Ui.bind(null,a,b,c),b.then(a,a))}function Vi(a){do{var b;if(b=13===a.tag)b=a.memoizedState,b=null!==b?null!==b.dehydrated?!0:!1:!0;if(b)return a;a=a.return}while(null!==a);return null}
function Wi(a,b,c,d,e){if(0===(a.mode&1))return a===b?a.flags|=65536:(a.flags|=128,c.flags|=131072,c.flags&=-52805,1===c.tag&&(null===c.alternate?c.tag=17:(b=ch(-1,1),b.tag=2,dh(c,b,1))),c.lanes|=1),a;a.flags|=65536;a.lanes=e;return a}var Xi=ua.ReactCurrentOwner,Ug=!1;function Yi(a,b,c,d){b.child=null===a?Ch(b,null,c,d):Bh(b,a.child,c,d)}
function Zi(a,b,c,d,e){c=c.render;var f=b.ref;Tg(b,e);d=Xh(a,b,c,d,f,e);c=bi();if(null!==a&&!Ug)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,$i(a,b,e);I&&c&&vg(b);b.flags|=1;Yi(a,b,d,e);return b.child}
function aj(a,b,c,d,e){if(null===a){var f=c.type;if("function"===typeof f&&!bj(f)&&void 0===f.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=f,cj(a,b,f,d,e);a=yh(c.type,null,d,b,b.mode,e);a.ref=b.ref;a.return=b;return b.child=a}f=a.child;if(0===(a.lanes&e)){var g=f.memoizedProps;c=c.compare;c=null!==c?c:Ie;if(c(g,d)&&a.ref===b.ref)return $i(a,b,e)}b.flags|=1;a=wh(f,d);a.ref=b.ref;a.return=b;return b.child=a}
function cj(a,b,c,d,e){if(null!==a){var f=a.memoizedProps;if(Ie(f,d)&&a.ref===b.ref)if(Ug=!1,b.pendingProps=d=f,0!==(a.lanes&e))0!==(a.flags&131072)&&(Ug=!0);else return b.lanes=a.lanes,$i(a,b,e)}return dj(a,b,c,d,e)}
function ej(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if("hidden"===d.mode)if(0===(b.mode&1))b.memoizedState={baseLanes:0,cachePool:null,transitions:null},G(fj,gj),gj|=c;else{if(0===(c&1073741824))return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a,cachePool:null,transitions:null},b.updateQueue=null,G(fj,gj),gj|=a,null;b.memoizedState={baseLanes:0,cachePool:null,transitions:null};d=null!==f?f.baseLanes:c;G(fj,gj);gj|=d}else null!==
f?(d=f.baseLanes|c,b.memoizedState=null):d=c,G(fj,gj),gj|=d;Yi(a,b,e,c);return b.child}function hj(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=512,b.flags|=2097152}function dj(a,b,c,d,e){var f=Zf(c)?Xf:H.current;f=Yf(b,f);Tg(b,e);c=Xh(a,b,c,d,f,e);d=bi();if(null!==a&&!Ug)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,$i(a,b,e);I&&d&&vg(b);b.flags|=1;Yi(a,b,c,e);return b.child}
function ij(a,b,c,d,e){if(Zf(c)){var f=!0;cg(b)}else f=!1;Tg(b,e);if(null===b.stateNode)jj(a,b),ph(b,c,d),rh(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;"object"===typeof l&&null!==l?l=Vg(l):(l=Zf(c)?Xf:H.current,l=Yf(b,l));var m=c.getDerivedStateFromProps,q="function"===typeof m||"function"===typeof g.getSnapshotBeforeUpdate;q||"function"!==typeof g.UNSAFE_componentWillReceiveProps&&"function"!==typeof g.componentWillReceiveProps||
(h!==d||k!==l)&&qh(b,g,d,l);$g=!1;var r=b.memoizedState;g.state=r;gh(b,d,g,e);k=b.memoizedState;h!==d||r!==k||Wf.current||$g?("function"===typeof m&&(kh(b,c,m,d),k=b.memoizedState),(h=$g||oh(b,c,h,d,r,k,l))?(q||"function"!==typeof g.UNSAFE_componentWillMount&&"function"!==typeof g.componentWillMount||("function"===typeof g.componentWillMount&&g.componentWillMount(),"function"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),"function"===typeof g.componentDidMount&&(b.flags|=4194308)):
("function"===typeof g.componentDidMount&&(b.flags|=4194308),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):("function"===typeof g.componentDidMount&&(b.flags|=4194308),d=!1)}else{g=b.stateNode;bh(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:Lg(b.type,h);g.props=l;q=b.pendingProps;r=g.context;k=c.contextType;"object"===typeof k&&null!==k?k=Vg(k):(k=Zf(c)?Xf:H.current,k=Yf(b,k));var y=c.getDerivedStateFromProps;(m="function"===typeof y||"function"===typeof g.getSnapshotBeforeUpdate)||
"function"!==typeof g.UNSAFE_componentWillReceiveProps&&"function"!==typeof g.componentWillReceiveProps||(h!==q||r!==k)&&qh(b,g,d,k);$g=!1;r=b.memoizedState;g.state=r;gh(b,d,g,e);var n=b.memoizedState;h!==q||r!==n||Wf.current||$g?("function"===typeof y&&(kh(b,c,y,d),n=b.memoizedState),(l=$g||oh(b,c,l,d,r,n,k)||!1)?(m||"function"!==typeof g.UNSAFE_componentWillUpdate&&"function"!==typeof g.componentWillUpdate||("function"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,n,k),"function"===typeof g.UNSAFE_componentWillUpdate&&
g.UNSAFE_componentWillUpdate(d,n,k)),"function"===typeof g.componentDidUpdate&&(b.flags|=4),"function"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=1024)):("function"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=4),"function"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),b.memoizedProps=d,b.memoizedState=n),g.props=d,g.state=n,g.context=k,d=l):("function"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===
a.memoizedState||(b.flags|=4),"function"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),d=!1)}return kj(a,b,c,d,f,e)}
function kj(a,b,c,d,e,f){hj(a,b);var g=0!==(b.flags&128);if(!d&&!g)return e&&dg(b,c,!1),$i(a,b,f);d=b.stateNode;Xi.current=b;var h=g&&"function"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Bh(b,a.child,null,f),b.child=Bh(b,null,h,f)):Yi(a,b,h,f);b.memoizedState=d.state;e&&dg(b,c,!0);return b.child}function lj(a){var b=a.stateNode;b.pendingContext?ag(a,b.pendingContext,b.pendingContext!==b.context):b.context&&ag(a,b.context,!1);Ih(a,b.containerInfo)}
function mj(a,b,c,d,e){Ig();Jg(e);b.flags|=256;Yi(a,b,c,d);return b.child}var nj={dehydrated:null,treeContext:null,retryLane:0};function oj(a){return{baseLanes:a,cachePool:null,transitions:null}}
function pj(a,b,c){var d=b.pendingProps,e=M.current,f=!1,g=0!==(b.flags&128),h;(h=g)||(h=null!==a&&null===a.memoizedState?!1:0!==(e&2));if(h)f=!0,b.flags&=-129;else if(null===a||null!==a.memoizedState)e|=1;G(M,e&1);if(null===a){Eg(b);a=b.memoizedState;if(null!==a&&(a=a.dehydrated,null!==a))return 0===(b.mode&1)?b.lanes=1:"$!"===a.data?b.lanes=8:b.lanes=1073741824,null;g=d.children;a=d.fallback;return f?(d=b.mode,f=b.child,g={mode:"hidden",children:g},0===(d&1)&&null!==f?(f.childLanes=0,f.pendingProps=
g):f=qj(g,d,0,null),a=Ah(a,d,c,null),f.return=b,a.return=b,f.sibling=a,b.child=f,b.child.memoizedState=oj(c),b.memoizedState=nj,a):rj(b,g)}e=a.memoizedState;if(null!==e&&(h=e.dehydrated,null!==h))return sj(a,b,g,d,h,e,c);if(f){f=d.fallback;g=b.mode;e=a.child;h=e.sibling;var k={mode:"hidden",children:d.children};0===(g&1)&&b.child!==e?(d=b.child,d.childLanes=0,d.pendingProps=k,b.deletions=null):(d=wh(e,k),d.subtreeFlags=e.subtreeFlags&14680064);null!==h?f=wh(h,f):(f=Ah(f,g,c,null),f.flags|=2);f.return=
b;d.return=b;d.sibling=f;b.child=d;d=f;f=b.child;g=a.child.memoizedState;g=null===g?oj(c):{baseLanes:g.baseLanes|c,cachePool:null,transitions:g.transitions};f.memoizedState=g;f.childLanes=a.childLanes&~c;b.memoizedState=nj;return d}f=a.child;a=f.sibling;d=wh(f,{mode:"visible",children:d.children});0===(b.mode&1)&&(d.lanes=c);d.return=b;d.sibling=null;null!==a&&(c=b.deletions,null===c?(b.deletions=[a],b.flags|=16):c.push(a));b.child=d;b.memoizedState=null;return d}
function rj(a,b){b=qj({mode:"visible",children:b},a.mode,0,null);b.return=a;return a.child=b}function tj(a,b,c,d){null!==d&&Jg(d);Bh(b,a.child,null,c);a=rj(b,b.pendingProps.children);a.flags|=2;b.memoizedState=null;return a}
function sj(a,b,c,d,e,f,g){if(c){if(b.flags&256)return b.flags&=-257,d=Li(Error(p(422))),tj(a,b,g,d);if(null!==b.memoizedState)return b.child=a.child,b.flags|=128,null;f=d.fallback;e=b.mode;d=qj({mode:"visible",children:d.children},e,0,null);f=Ah(f,e,g,null);f.flags|=2;d.return=b;f.return=b;d.sibling=f;b.child=d;0!==(b.mode&1)&&Bh(b,a.child,null,g);b.child.memoizedState=oj(g);b.memoizedState=nj;return f}if(0===(b.mode&1))return tj(a,b,g,null);if("$!"===e.data){d=e.nextSibling&&e.nextSibling.dataset;
if(d)var h=d.dgst;d=h;f=Error(p(419));d=Li(f,d,void 0);return tj(a,b,g,d)}h=0!==(g&a.childLanes);if(Ug||h){d=R;if(null!==d){switch(g&-g){case 4:e=2;break;case 16:e=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:e=32;break;case 536870912:e=268435456;break;default:e=0}e=0!==(e&(d.suspendedLanes|g))?0:e;
0!==e&&e!==f.retryLane&&(f.retryLane=e,Zg(a,e),mh(d,a,e,-1))}uj();d=Li(Error(p(421)));return tj(a,b,g,d)}if("$?"===e.data)return b.flags|=128,b.child=a.child,b=vj.bind(null,a),e._reactRetry=b,null;a=f.treeContext;yg=Lf(e.nextSibling);xg=b;I=!0;zg=null;null!==a&&(og[pg++]=rg,og[pg++]=sg,og[pg++]=qg,rg=a.id,sg=a.overflow,qg=b);b=rj(b,d.children);b.flags|=4096;return b}function wj(a,b,c){a.lanes|=b;var d=a.alternate;null!==d&&(d.lanes|=b);Sg(a.return,b,c)}
function xj(a,b,c,d,e){var f=a.memoizedState;null===f?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e}:(f.isBackwards=b,f.rendering=null,f.renderingStartTime=0,f.last=d,f.tail=c,f.tailMode=e)}
function yj(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;Yi(a,b,d.children,c);d=M.current;if(0!==(d&2))d=d&1|2,b.flags|=128;else{if(null!==a&&0!==(a.flags&128))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&wj(a,c,b);else if(19===a.tag)wj(a,c,b);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}G(M,d);if(0===(b.mode&1))b.memoizedState=
null;else switch(e){case "forwards":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===Mh(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);xj(b,!1,e,c,f);break;case "backwards":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===Mh(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}xj(b,!0,c,null,f);break;case "together":xj(b,!1,null,null,void 0);break;default:b.memoizedState=null}return b.child}
function jj(a,b){0===(b.mode&1)&&null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2)}function $i(a,b,c){null!==a&&(b.dependencies=a.dependencies);hh|=b.lanes;if(0===(c&b.childLanes))return null;if(null!==a&&b.child!==a.child)throw Error(p(153));if(null!==b.child){a=b.child;c=wh(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=wh(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}
function zj(a,b,c){switch(b.tag){case 3:lj(b);Ig();break;case 5:Kh(b);break;case 1:Zf(b.type)&&cg(b);break;case 4:Ih(b,b.stateNode.containerInfo);break;case 10:var d=b.type._context,e=b.memoizedProps.value;G(Mg,d._currentValue);d._currentValue=e;break;case 13:d=b.memoizedState;if(null!==d){if(null!==d.dehydrated)return G(M,M.current&1),b.flags|=128,null;if(0!==(c&b.child.childLanes))return pj(a,b,c);G(M,M.current&1);a=$i(a,b,c);return null!==a?a.sibling:null}G(M,M.current&1);break;case 19:d=0!==(c&
b.childLanes);if(0!==(a.flags&128)){if(d)return yj(a,b,c);b.flags|=128}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);G(M,M.current);if(d)break;else return null;case 22:case 23:return b.lanes=0,ej(a,b,c)}return $i(a,b,c)}var Aj,Bj,Cj,Dj;
Aj=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Bj=function(){};
Cj=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;Hh(Eh.current);var f=null;switch(c){case "input":e=Ya(a,e);d=Ya(a,d);f=[];break;case "select":e=A({},e,{value:void 0});d=A({},d,{value:void 0});f=[];break;case "textarea":e=gb(a,e);d=gb(a,d);f=[];break;default:"function"!==typeof e.onClick&&"function"===typeof d.onClick&&(a.onclick=Bf)}ub(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if("style"===l){var h=e[l];for(g in h)h.hasOwnProperty(g)&&
(c||(c={}),c[g]="")}else"dangerouslySetInnerHTML"!==l&&"children"!==l&&"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(ea.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if("style"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]="");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,
c)),c=k;else"dangerouslySetInnerHTML"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):"children"===l?"string"!==typeof k&&"number"!==typeof k||(f=f||[]).push(l,""+k):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&(ea.hasOwnProperty(l)?(null!=k&&"onScroll"===l&&D("scroll",a),f||h===k||(f=[])):(f=f||[]).push(l,k))}c&&(f=f||[]).push("style",c);var l=f;if(b.updateQueue=l)b.flags|=4}};Dj=function(a,b,c,d){c!==d&&(b.flags|=4)};
function Ej(a,b){if(!I)switch(a.tailMode){case "hidden":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case "collapsed":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}
function S(a){var b=null!==a.alternate&&a.alternate.child===a.child,c=0,d=0;if(b)for(var e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags&14680064,d|=e.flags&14680064,e.return=a,e=e.sibling;else for(e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags,d|=e.flags,e.return=a,e=e.sibling;a.subtreeFlags|=d;a.childLanes=c;return b}
function Fj(a,b,c){var d=b.pendingProps;wg(b);switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return S(b),null;case 1:return Zf(b.type)&&$f(),S(b),null;case 3:d=b.stateNode;Jh();E(Wf);E(H);Oh();d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)Gg(b)?b.flags|=4:null===a||a.memoizedState.isDehydrated&&0===(b.flags&256)||(b.flags|=1024,null!==zg&&(Gj(zg),zg=null));Bj(a,b);S(b);return null;case 5:Lh(b);var e=Hh(Gh.current);
c=b.type;if(null!==a&&null!=b.stateNode)Cj(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=512,b.flags|=2097152);else{if(!d){if(null===b.stateNode)throw Error(p(166));S(b);return null}a=Hh(Eh.current);if(Gg(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[Of]=b;d[Pf]=f;a=0!==(b.mode&1);switch(c){case "dialog":D("cancel",d);D("close",d);break;case "iframe":case "object":case "embed":D("load",d);break;case "video":case "audio":for(e=0;e<lf.length;e++)D(lf[e],d);break;case "source":D("error",d);break;case "img":case "image":case "link":D("error",
d);D("load",d);break;case "details":D("toggle",d);break;case "input":Za(d,f);D("invalid",d);break;case "select":d._wrapperState={wasMultiple:!!f.multiple};D("invalid",d);break;case "textarea":hb(d,f),D("invalid",d)}ub(c,f);e=null;for(var g in f)if(f.hasOwnProperty(g)){var h=f[g];"children"===g?"string"===typeof h?d.textContent!==h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,h,a),e=["children",h]):"number"===typeof h&&d.textContent!==""+h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,
h,a),e=["children",""+h]):ea.hasOwnProperty(g)&&null!=h&&"onScroll"===g&&D("scroll",d)}switch(c){case "input":Va(d);db(d,f,!0);break;case "textarea":Va(d);jb(d);break;case "select":case "option":break;default:"function"===typeof f.onClick&&(d.onclick=Bf)}d=e;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;"http://www.w3.org/1999/xhtml"===a&&(a=kb(c));"http://www.w3.org/1999/xhtml"===a?"script"===c?(a=g.createElement("div"),a.innerHTML="<script>\x3c/script>",a=a.removeChild(a.firstChild)):
"string"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),"select"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[Of]=b;a[Pf]=d;Aj(a,b,!1,!1);b.stateNode=a;a:{g=vb(c,d);switch(c){case "dialog":D("cancel",a);D("close",a);e=d;break;case "iframe":case "object":case "embed":D("load",a);e=d;break;case "video":case "audio":for(e=0;e<lf.length;e++)D(lf[e],a);e=d;break;case "source":D("error",a);e=d;break;case "img":case "image":case "link":D("error",
a);D("load",a);e=d;break;case "details":D("toggle",a);e=d;break;case "input":Za(a,d);e=Ya(a,d);D("invalid",a);break;case "option":e=d;break;case "select":a._wrapperState={wasMultiple:!!d.multiple};e=A({},d,{value:void 0});D("invalid",a);break;case "textarea":hb(a,d);e=gb(a,d);D("invalid",a);break;default:e=d}ub(c,e);h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];"style"===f?sb(a,k):"dangerouslySetInnerHTML"===f?(k=k?k.__html:void 0,null!=k&&nb(a,k)):"children"===f?"string"===typeof k?("textarea"!==
c||""!==k)&&ob(a,k):"number"===typeof k&&ob(a,""+k):"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&"autoFocus"!==f&&(ea.hasOwnProperty(f)?null!=k&&"onScroll"===f&&D("scroll",a):null!=k&&ta(a,f,k,g))}switch(c){case "input":Va(a);db(a,d,!1);break;case "textarea":Va(a);jb(a);break;case "option":null!=d.value&&a.setAttribute("value",""+Sa(d.value));break;case "select":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,
!0);break;default:"function"===typeof e.onClick&&(a.onclick=Bf)}switch(c){case "button":case "input":case "select":case "textarea":d=!!d.autoFocus;break a;case "img":d=!0;break a;default:d=!1}}d&&(b.flags|=4)}null!==b.ref&&(b.flags|=512,b.flags|=2097152)}S(b);return null;case 6:if(a&&null!=b.stateNode)Dj(a,b,a.memoizedProps,d);else{if("string"!==typeof d&&null===b.stateNode)throw Error(p(166));c=Hh(Gh.current);Hh(Eh.current);if(Gg(b)){d=b.stateNode;c=b.memoizedProps;d[Of]=b;if(f=d.nodeValue!==c)if(a=
xg,null!==a)switch(a.tag){case 3:Af(d.nodeValue,c,0!==(a.mode&1));break;case 5:!0!==a.memoizedProps.suppressHydrationWarning&&Af(d.nodeValue,c,0!==(a.mode&1))}f&&(b.flags|=4)}else d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[Of]=b,b.stateNode=d}S(b);return null;case 13:E(M);d=b.memoizedState;if(null===a||null!==a.memoizedState&&null!==a.memoizedState.dehydrated){if(I&&null!==yg&&0!==(b.mode&1)&&0===(b.flags&128))Hg(),Ig(),b.flags|=98560,f=!1;else if(f=Gg(b),null!==d&&null!==d.dehydrated){if(null===
a){if(!f)throw Error(p(318));f=b.memoizedState;f=null!==f?f.dehydrated:null;if(!f)throw Error(p(317));f[Of]=b}else Ig(),0===(b.flags&128)&&(b.memoizedState=null),b.flags|=4;S(b);f=!1}else null!==zg&&(Gj(zg),zg=null),f=!0;if(!f)return b.flags&65536?b:null}if(0!==(b.flags&128))return b.lanes=c,b;d=null!==d;d!==(null!==a&&null!==a.memoizedState)&&d&&(b.child.flags|=8192,0!==(b.mode&1)&&(null===a||0!==(M.current&1)?0===T&&(T=3):uj()));null!==b.updateQueue&&(b.flags|=4);S(b);return null;case 4:return Jh(),
Bj(a,b),null===a&&sf(b.stateNode.containerInfo),S(b),null;case 10:return Rg(b.type._context),S(b),null;case 17:return Zf(b.type)&&$f(),S(b),null;case 19:E(M);f=b.memoizedState;if(null===f)return S(b),null;d=0!==(b.flags&128);g=f.rendering;if(null===g)if(d)Ej(f,!1);else{if(0!==T||null!==a&&0!==(a.flags&128))for(a=b.child;null!==a;){g=Mh(a);if(null!==g){b.flags|=128;Ej(f,!1);d=g.updateQueue;null!==d&&(b.updateQueue=d,b.flags|=4);b.subtreeFlags=0;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=14680066,
g=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.subtreeFlags=0,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.subtreeFlags=0,f.deletions=null,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,f.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;G(M,M.current&1|2);return b.child}a=
a.sibling}null!==f.tail&&B()>Hj&&(b.flags|=128,d=!0,Ej(f,!1),b.lanes=4194304)}else{if(!d)if(a=Mh(g),null!==a){if(b.flags|=128,d=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Ej(f,!0),null===f.tail&&"hidden"===f.tailMode&&!g.alternate&&!I)return S(b),null}else 2*B()-f.renderingStartTime>Hj&&1073741824!==c&&(b.flags|=128,d=!0,Ej(f,!1),b.lanes=4194304);f.isBackwards?(g.sibling=b.child,b.child=g):(c=f.last,null!==c?c.sibling=g:b.child=g,f.last=g)}if(null!==f.tail)return b=f.tail,f.rendering=
b,f.tail=b.sibling,f.renderingStartTime=B(),b.sibling=null,c=M.current,G(M,d?c&1|2:c&1),b;S(b);return null;case 22:case 23:return Ij(),d=null!==b.memoizedState,null!==a&&null!==a.memoizedState!==d&&(b.flags|=8192),d&&0!==(b.mode&1)?0!==(gj&1073741824)&&(S(b),b.subtreeFlags&6&&(b.flags|=8192)):S(b),null;case 24:return null;case 25:return null}throw Error(p(156,b.tag));}
function Jj(a,b){wg(b);switch(b.tag){case 1:return Zf(b.type)&&$f(),a=b.flags,a&65536?(b.flags=a&-65537|128,b):null;case 3:return Jh(),E(Wf),E(H),Oh(),a=b.flags,0!==(a&65536)&&0===(a&128)?(b.flags=a&-65537|128,b):null;case 5:return Lh(b),null;case 13:E(M);a=b.memoizedState;if(null!==a&&null!==a.dehydrated){if(null===b.alternate)throw Error(p(340));Ig()}a=b.flags;return a&65536?(b.flags=a&-65537|128,b):null;case 19:return E(M),null;case 4:return Jh(),null;case 10:return Rg(b.type._context),null;case 22:case 23:return Ij(),
null;case 24:return null;default:return null}}var Kj=!1,U=!1,Lj="function"===typeof WeakSet?WeakSet:Set,V=null;function Mj(a,b){var c=a.ref;if(null!==c)if("function"===typeof c)try{c(null)}catch(d){W(a,b,d)}else c.current=null}function Nj(a,b,c){try{c()}catch(d){W(a,b,d)}}var Oj=!1;
function Pj(a,b){Cf=dd;a=Me();if(Ne(a)){if("selectionStart"in a)var c={start:a.selectionStart,end:a.selectionEnd};else a:{c=(c=a.ownerDocument)&&c.defaultView||window;var d=c.getSelection&&c.getSelection();if(d&&0!==d.rangeCount){c=d.anchorNode;var e=d.anchorOffset,f=d.focusNode;d=d.focusOffset;try{c.nodeType,f.nodeType}catch(F){c=null;break a}var g=0,h=-1,k=-1,l=0,m=0,q=a,r=null;b:for(;;){for(var y;;){q!==c||0!==e&&3!==q.nodeType||(h=g+e);q!==f||0!==d&&3!==q.nodeType||(k=g+d);3===q.nodeType&&(g+=
q.nodeValue.length);if(null===(y=q.firstChild))break;r=q;q=y}for(;;){if(q===a)break b;r===c&&++l===e&&(h=g);r===f&&++m===d&&(k=g);if(null!==(y=q.nextSibling))break;q=r;r=q.parentNode}q=y}c=-1===h||-1===k?null:{start:h,end:k}}else c=null}c=c||{start:0,end:0}}else c=null;Df={focusedElem:a,selectionRange:c};dd=!1;for(V=b;null!==V;)if(b=V,a=b.child,0!==(b.subtreeFlags&1028)&&null!==a)a.return=b,V=a;else for(;null!==V;){b=V;try{var n=b.alternate;if(0!==(b.flags&1024))switch(b.tag){case 0:case 11:case 15:break;
case 1:if(null!==n){var t=n.memoizedProps,J=n.memoizedState,x=b.stateNode,w=x.getSnapshotBeforeUpdate(b.elementType===b.type?t:Lg(b.type,t),J);x.__reactInternalSnapshotBeforeUpdate=w}break;case 3:var u=b.stateNode.containerInfo;1===u.nodeType?u.textContent="":9===u.nodeType&&u.documentElement&&u.removeChild(u.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(p(163));}}catch(F){W(b,b.return,F)}a=b.sibling;if(null!==a){a.return=b.return;V=a;break}V=b.return}n=Oj;Oj=!1;return n}
function Qj(a,b,c){var d=b.updateQueue;d=null!==d?d.lastEffect:null;if(null!==d){var e=d=d.next;do{if((e.tag&a)===a){var f=e.destroy;e.destroy=void 0;void 0!==f&&Nj(b,c,f)}e=e.next}while(e!==d)}}function Rj(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.create;c.destroy=d()}c=c.next}while(c!==b)}}function Sj(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:a=c;break;default:a=c}"function"===typeof b?b(a):b.current=a}}
function Tj(a){var b=a.alternate;null!==b&&(a.alternate=null,Tj(b));a.child=null;a.deletions=null;a.sibling=null;5===a.tag&&(b=a.stateNode,null!==b&&(delete b[Of],delete b[Pf],delete b[of],delete b[Qf],delete b[Rf]));a.stateNode=null;a.return=null;a.dependencies=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.stateNode=null;a.updateQueue=null}function Uj(a){return 5===a.tag||3===a.tag||4===a.tag}
function Vj(a){a:for(;;){for(;null===a.sibling;){if(null===a.return||Uj(a.return))return null;a=a.return}a.sibling.return=a.return;for(a=a.sibling;5!==a.tag&&6!==a.tag&&18!==a.tag;){if(a.flags&2)continue a;if(null===a.child||4===a.tag)continue a;else a.child.return=a,a=a.child}if(!(a.flags&2))return a.stateNode}}
function Wj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=Bf));else if(4!==d&&(a=a.child,null!==a))for(Wj(a,b,c),a=a.sibling;null!==a;)Wj(a,b,c),a=a.sibling}
function Xj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(Xj(a,b,c),a=a.sibling;null!==a;)Xj(a,b,c),a=a.sibling}var X=null,Yj=!1;function Zj(a,b,c){for(c=c.child;null!==c;)ak(a,b,c),c=c.sibling}
function ak(a,b,c){if(lc&&"function"===typeof lc.onCommitFiberUnmount)try{lc.onCommitFiberUnmount(kc,c)}catch(h){}switch(c.tag){case 5:U||Mj(c,b);case 6:var d=X,e=Yj;X=null;Zj(a,b,c);X=d;Yj=e;null!==X&&(Yj?(a=X,c=c.stateNode,8===a.nodeType?a.parentNode.removeChild(c):a.removeChild(c)):X.removeChild(c.stateNode));break;case 18:null!==X&&(Yj?(a=X,c=c.stateNode,8===a.nodeType?Kf(a.parentNode,c):1===a.nodeType&&Kf(a,c),bd(a)):Kf(X,c.stateNode));break;case 4:d=X;e=Yj;X=c.stateNode.containerInfo;Yj=!0;
Zj(a,b,c);X=d;Yj=e;break;case 0:case 11:case 14:case 15:if(!U&&(d=c.updateQueue,null!==d&&(d=d.lastEffect,null!==d))){e=d=d.next;do{var f=e,g=f.destroy;f=f.tag;void 0!==g&&(0!==(f&2)?Nj(c,b,g):0!==(f&4)&&Nj(c,b,g));e=e.next}while(e!==d)}Zj(a,b,c);break;case 1:if(!U&&(Mj(c,b),d=c.stateNode,"function"===typeof d.componentWillUnmount))try{d.props=c.memoizedProps,d.state=c.memoizedState,d.componentWillUnmount()}catch(h){W(c,b,h)}Zj(a,b,c);break;case 21:Zj(a,b,c);break;case 22:c.mode&1?(U=(d=U)||null!==
c.memoizedState,Zj(a,b,c),U=d):Zj(a,b,c);break;default:Zj(a,b,c)}}function bk(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Lj);b.forEach(function(b){var d=ck.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}
function dk(a,b){var c=b.deletions;if(null!==c)for(var d=0;d<c.length;d++){var e=c[d];try{var f=a,g=b,h=g;a:for(;null!==h;){switch(h.tag){case 5:X=h.stateNode;Yj=!1;break a;case 3:X=h.stateNode.containerInfo;Yj=!0;break a;case 4:X=h.stateNode.containerInfo;Yj=!0;break a}h=h.return}if(null===X)throw Error(p(160));ak(f,g,e);X=null;Yj=!1;var k=e.alternate;null!==k&&(k.return=null);e.return=null}catch(l){W(e,b,l)}}if(b.subtreeFlags&12854)for(b=b.child;null!==b;)ek(b,a),b=b.sibling}
function ek(a,b){var c=a.alternate,d=a.flags;switch(a.tag){case 0:case 11:case 14:case 15:dk(b,a);fk(a);if(d&4){try{Qj(3,a,a.return),Rj(3,a)}catch(t){W(a,a.return,t)}try{Qj(5,a,a.return)}catch(t){W(a,a.return,t)}}break;case 1:dk(b,a);fk(a);d&512&&null!==c&&Mj(c,c.return);break;case 5:dk(b,a);fk(a);d&512&&null!==c&&Mj(c,c.return);if(a.flags&32){var e=a.stateNode;try{ob(e,"")}catch(t){W(a,a.return,t)}}if(d&4&&(e=a.stateNode,null!=e)){var f=a.memoizedProps,g=null!==c?c.memoizedProps:f,h=a.type,k=a.updateQueue;
a.updateQueue=null;if(null!==k)try{"input"===h&&"radio"===f.type&&null!=f.name&&ab(e,f);vb(h,g);var l=vb(h,f);for(g=0;g<k.length;g+=2){var m=k[g],q=k[g+1];"style"===m?sb(e,q):"dangerouslySetInnerHTML"===m?nb(e,q):"children"===m?ob(e,q):ta(e,m,q,l)}switch(h){case "input":bb(e,f);break;case "textarea":ib(e,f);break;case "select":var r=e._wrapperState.wasMultiple;e._wrapperState.wasMultiple=!!f.multiple;var y=f.value;null!=y?fb(e,!!f.multiple,y,!1):r!==!!f.multiple&&(null!=f.defaultValue?fb(e,!!f.multiple,
f.defaultValue,!0):fb(e,!!f.multiple,f.multiple?[]:"",!1))}e[Pf]=f}catch(t){W(a,a.return,t)}}break;case 6:dk(b,a);fk(a);if(d&4){if(null===a.stateNode)throw Error(p(162));e=a.stateNode;f=a.memoizedProps;try{e.nodeValue=f}catch(t){W(a,a.return,t)}}break;case 3:dk(b,a);fk(a);if(d&4&&null!==c&&c.memoizedState.isDehydrated)try{bd(b.containerInfo)}catch(t){W(a,a.return,t)}break;case 4:dk(b,a);fk(a);break;case 13:dk(b,a);fk(a);e=a.child;e.flags&8192&&(f=null!==e.memoizedState,e.stateNode.isHidden=f,!f||
null!==e.alternate&&null!==e.alternate.memoizedState||(gk=B()));d&4&&bk(a);break;case 22:m=null!==c&&null!==c.memoizedState;a.mode&1?(U=(l=U)||m,dk(b,a),U=l):dk(b,a);fk(a);if(d&8192){l=null!==a.memoizedState;if((a.stateNode.isHidden=l)&&!m&&0!==(a.mode&1))for(V=a,m=a.child;null!==m;){for(q=V=m;null!==V;){r=V;y=r.child;switch(r.tag){case 0:case 11:case 14:case 15:Qj(4,r,r.return);break;case 1:Mj(r,r.return);var n=r.stateNode;if("function"===typeof n.componentWillUnmount){d=r;c=r.return;try{b=d,n.props=
b.memoizedProps,n.state=b.memoizedState,n.componentWillUnmount()}catch(t){W(d,c,t)}}break;case 5:Mj(r,r.return);break;case 22:if(null!==r.memoizedState){hk(q);continue}}null!==y?(y.return=r,V=y):hk(q)}m=m.sibling}a:for(m=null,q=a;;){if(5===q.tag){if(null===m){m=q;try{e=q.stateNode,l?(f=e.style,"function"===typeof f.setProperty?f.setProperty("display","none","important"):f.display="none"):(h=q.stateNode,k=q.memoizedProps.style,g=void 0!==k&&null!==k&&k.hasOwnProperty("display")?k.display:null,h.style.display=
rb("display",g))}catch(t){W(a,a.return,t)}}}else if(6===q.tag){if(null===m)try{q.stateNode.nodeValue=l?"":q.memoizedProps}catch(t){W(a,a.return,t)}}else if((22!==q.tag&&23!==q.tag||null===q.memoizedState||q===a)&&null!==q.child){q.child.return=q;q=q.child;continue}if(q===a)break a;for(;null===q.sibling;){if(null===q.return||q.return===a)break a;m===q&&(m=null);q=q.return}m===q&&(m=null);q.sibling.return=q.return;q=q.sibling}}break;case 19:dk(b,a);fk(a);d&4&&bk(a);break;case 21:break;default:dk(b,
a),fk(a)}}function fk(a){var b=a.flags;if(b&2){try{a:{for(var c=a.return;null!==c;){if(Uj(c)){var d=c;break a}c=c.return}throw Error(p(160));}switch(d.tag){case 5:var e=d.stateNode;d.flags&32&&(ob(e,""),d.flags&=-33);var f=Vj(a);Xj(a,f,e);break;case 3:case 4:var g=d.stateNode.containerInfo,h=Vj(a);Wj(a,h,g);break;default:throw Error(p(161));}}catch(k){W(a,a.return,k)}a.flags&=-3}b&4096&&(a.flags&=-4097)}function ik(a,b,c){V=a;jk(a,b,c)}
function jk(a,b,c){for(var d=0!==(a.mode&1);null!==V;){var e=V,f=e.child;if(22===e.tag&&d){var g=null!==e.memoizedState||Kj;if(!g){var h=e.alternate,k=null!==h&&null!==h.memoizedState||U;h=Kj;var l=U;Kj=g;if((U=k)&&!l)for(V=e;null!==V;)g=V,k=g.child,22===g.tag&&null!==g.memoizedState?kk(e):null!==k?(k.return=g,V=k):kk(e);for(;null!==f;)V=f,jk(f,b,c),f=f.sibling;V=e;Kj=h;U=l}lk(a,b,c)}else 0!==(e.subtreeFlags&8772)&&null!==f?(f.return=e,V=f):lk(a,b,c)}}
function lk(a){for(;null!==V;){var b=V;if(0!==(b.flags&8772)){var c=b.alternate;try{if(0!==(b.flags&8772))switch(b.tag){case 0:case 11:case 15:U||Rj(5,b);break;case 1:var d=b.stateNode;if(b.flags&4&&!U)if(null===c)d.componentDidMount();else{var e=b.elementType===b.type?c.memoizedProps:Lg(b.type,c.memoizedProps);d.componentDidUpdate(e,c.memoizedState,d.__reactInternalSnapshotBeforeUpdate)}var f=b.updateQueue;null!==f&&ih(b,f,d);break;case 3:var g=b.updateQueue;if(null!==g){c=null;if(null!==b.child)switch(b.child.tag){case 5:c=
b.child.stateNode;break;case 1:c=b.child.stateNode}ih(b,g,c)}break;case 5:var h=b.stateNode;if(null===c&&b.flags&4){c=h;var k=b.memoizedProps;switch(b.type){case "button":case "input":case "select":case "textarea":k.autoFocus&&c.focus();break;case "img":k.src&&(c.src=k.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(null===b.memoizedState){var l=b.alternate;if(null!==l){var m=l.memoizedState;if(null!==m){var q=m.dehydrated;null!==q&&bd(q)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;
default:throw Error(p(163));}U||b.flags&512&&Sj(b)}catch(r){W(b,b.return,r)}}if(b===a){V=null;break}c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}function hk(a){for(;null!==V;){var b=V;if(b===a){V=null;break}var c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}
function kk(a){for(;null!==V;){var b=V;try{switch(b.tag){case 0:case 11:case 15:var c=b.return;try{Rj(4,b)}catch(k){W(b,c,k)}break;case 1:var d=b.stateNode;if("function"===typeof d.componentDidMount){var e=b.return;try{d.componentDidMount()}catch(k){W(b,e,k)}}var f=b.return;try{Sj(b)}catch(k){W(b,f,k)}break;case 5:var g=b.return;try{Sj(b)}catch(k){W(b,g,k)}}}catch(k){W(b,b.return,k)}if(b===a){V=null;break}var h=b.sibling;if(null!==h){h.return=b.return;V=h;break}V=b.return}}
var mk=Math.ceil,nk=ua.ReactCurrentDispatcher,ok=ua.ReactCurrentOwner,pk=ua.ReactCurrentBatchConfig,K=0,R=null,Y=null,Z=0,gj=0,fj=Uf(0),T=0,qk=null,hh=0,rk=0,sk=0,tk=null,uk=null,gk=0,Hj=Infinity,vk=null,Pi=!1,Qi=null,Si=null,wk=!1,xk=null,yk=0,zk=0,Ak=null,Bk=-1,Ck=0;function L(){return 0!==(K&6)?B():-1!==Bk?Bk:Bk=B()}
function lh(a){if(0===(a.mode&1))return 1;if(0!==(K&2)&&0!==Z)return Z&-Z;if(null!==Kg.transition)return 0===Ck&&(Ck=yc()),Ck;a=C;if(0!==a)return a;a=window.event;a=void 0===a?16:jd(a.type);return a}function mh(a,b,c,d){if(50<zk)throw zk=0,Ak=null,Error(p(185));Ac(a,c,d);if(0===(K&2)||a!==R)a===R&&(0===(K&2)&&(rk|=c),4===T&&Dk(a,Z)),Ek(a,d),1===c&&0===K&&0===(b.mode&1)&&(Hj=B()+500,fg&&jg())}
function Ek(a,b){var c=a.callbackNode;wc(a,b);var d=uc(a,a===R?Z:0);if(0===d)null!==c&&bc(c),a.callbackNode=null,a.callbackPriority=0;else if(b=d&-d,a.callbackPriority!==b){null!=c&&bc(c);if(1===b)0===a.tag?ig(Fk.bind(null,a)):hg(Fk.bind(null,a)),Jf(function(){0===(K&6)&&jg()}),c=null;else{switch(Dc(d)){case 1:c=fc;break;case 4:c=gc;break;case 16:c=hc;break;case 536870912:c=jc;break;default:c=hc}c=Gk(c,Hk.bind(null,a))}a.callbackPriority=b;a.callbackNode=c}}
function Hk(a,b){Bk=-1;Ck=0;if(0!==(K&6))throw Error(p(327));var c=a.callbackNode;if(Ik()&&a.callbackNode!==c)return null;var d=uc(a,a===R?Z:0);if(0===d)return null;if(0!==(d&30)||0!==(d&a.expiredLanes)||b)b=Jk(a,d);else{b=d;var e=K;K|=2;var f=Kk();if(R!==a||Z!==b)vk=null,Hj=B()+500,Lk(a,b);do try{Mk();break}catch(h){Nk(a,h)}while(1);Qg();nk.current=f;K=e;null!==Y?b=0:(R=null,Z=0,b=T)}if(0!==b){2===b&&(e=xc(a),0!==e&&(d=e,b=Ok(a,e)));if(1===b)throw c=qk,Lk(a,0),Dk(a,d),Ek(a,B()),c;if(6===b)Dk(a,d);
else{e=a.current.alternate;if(0===(d&30)&&!Pk(e)&&(b=Jk(a,d),2===b&&(f=xc(a),0!==f&&(d=f,b=Ok(a,f))),1===b))throw c=qk,Lk(a,0),Dk(a,d),Ek(a,B()),c;a.finishedWork=e;a.finishedLanes=d;switch(b){case 0:case 1:throw Error(p(345));case 2:Qk(a,uk,vk);break;case 3:Dk(a,d);if((d&130023424)===d&&(b=gk+500-B(),10<b)){if(0!==uc(a,0))break;e=a.suspendedLanes;if((e&d)!==d){L();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=Ff(Qk.bind(null,a,uk,vk),b);break}Qk(a,uk,vk);break;case 4:Dk(a,d);if((d&4194240)===
d)break;b=a.eventTimes;for(e=-1;0<d;){var g=31-oc(d);f=1<<g;g=b[g];g>e&&(e=g);d&=~f}d=e;d=B()-d;d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*mk(d/1960))-d;if(10<d){a.timeoutHandle=Ff(Qk.bind(null,a,uk,vk),d);break}Qk(a,uk,vk);break;case 5:Qk(a,uk,vk);break;default:throw Error(p(329));}}}Ek(a,B());return a.callbackNode===c?Hk.bind(null,a):null}
function Ok(a,b){var c=tk;a.current.memoizedState.isDehydrated&&(Lk(a,b).flags|=256);a=Jk(a,b);2!==a&&(b=uk,uk=c,null!==b&&Gj(b));return a}function Gj(a){null===uk?uk=a:uk.push.apply(uk,a)}
function Pk(a){for(var b=a;;){if(b.flags&16384){var c=b.updateQueue;if(null!==c&&(c=c.stores,null!==c))for(var d=0;d<c.length;d++){var e=c[d],f=e.getSnapshot;e=e.value;try{if(!He(f(),e))return!1}catch(g){return!1}}}c=b.child;if(b.subtreeFlags&16384&&null!==c)c.return=b,b=c;else{if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return!0;b=b.return}b.sibling.return=b.return;b=b.sibling}}return!0}
function Dk(a,b){b&=~sk;b&=~rk;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-oc(b),d=1<<c;a[c]=-1;b&=~d}}function Fk(a){if(0!==(K&6))throw Error(p(327));Ik();var b=uc(a,0);if(0===(b&1))return Ek(a,B()),null;var c=Jk(a,b);if(0!==a.tag&&2===c){var d=xc(a);0!==d&&(b=d,c=Ok(a,d))}if(1===c)throw c=qk,Lk(a,0),Dk(a,b),Ek(a,B()),c;if(6===c)throw Error(p(345));a.finishedWork=a.current.alternate;a.finishedLanes=b;Qk(a,uk,vk);Ek(a,B());return null}
function Rk(a,b){var c=K;K|=1;try{return a(b)}finally{K=c,0===K&&(Hj=B()+500,fg&&jg())}}function Sk(a){null!==xk&&0===xk.tag&&0===(K&6)&&Ik();var b=K;K|=1;var c=pk.transition,d=C;try{if(pk.transition=null,C=1,a)return a()}finally{C=d,pk.transition=c,K=b,0===(K&6)&&jg()}}function Ij(){gj=fj.current;E(fj)}
function Lk(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,Gf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;wg(d);switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&$f();break;case 3:Jh();E(Wf);E(H);Oh();break;case 5:Lh(d);break;case 4:Jh();break;case 13:E(M);break;case 19:E(M);break;case 10:Rg(d.type._context);break;case 22:case 23:Ij()}c=c.return}R=a;Y=a=wh(a.current,null);Z=gj=b;T=0;qk=null;sk=rk=hh=0;uk=tk=null;if(null!==Wg){for(b=
0;b<Wg.length;b++)if(c=Wg[b],d=c.interleaved,null!==d){c.interleaved=null;var e=d.next,f=c.pending;if(null!==f){var g=f.next;f.next=e;d.next=g}c.pending=d}Wg=null}return a}
function Nk(a,b){do{var c=Y;try{Qg();Ph.current=ai;if(Sh){for(var d=N.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}Sh=!1}Rh=0;P=O=N=null;Th=!1;Uh=0;ok.current=null;if(null===c||null===c.return){T=1;qk=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=Z;h.flags|=32768;if(null!==k&&"object"===typeof k&&"function"===typeof k.then){var l=k,m=h,q=m.tag;if(0===(m.mode&1)&&(0===q||11===q||15===q)){var r=m.alternate;r?(m.updateQueue=r.updateQueue,m.memoizedState=r.memoizedState,
m.lanes=r.lanes):(m.updateQueue=null,m.memoizedState=null)}var y=Vi(g);if(null!==y){y.flags&=-257;Wi(y,g,h,f,b);y.mode&1&&Ti(f,l,b);b=y;k=l;var n=b.updateQueue;if(null===n){var t=new Set;t.add(k);b.updateQueue=t}else n.add(k);break a}else{if(0===(b&1)){Ti(f,l,b);uj();break a}k=Error(p(426))}}else if(I&&h.mode&1){var J=Vi(g);if(null!==J){0===(J.flags&65536)&&(J.flags|=256);Wi(J,g,h,f,b);Jg(Ki(k,h));break a}}f=k=Ki(k,h);4!==T&&(T=2);null===tk?tk=[f]:tk.push(f);f=g;do{switch(f.tag){case 3:f.flags|=65536;
b&=-b;f.lanes|=b;var x=Oi(f,k,b);fh(f,x);break a;case 1:h=k;var w=f.type,u=f.stateNode;if(0===(f.flags&128)&&("function"===typeof w.getDerivedStateFromError||null!==u&&"function"===typeof u.componentDidCatch&&(null===Si||!Si.has(u)))){f.flags|=65536;b&=-b;f.lanes|=b;var F=Ri(f,h,b);fh(f,F);break a}}f=f.return}while(null!==f)}Tk(c)}catch(na){b=na;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}function Kk(){var a=nk.current;nk.current=ai;return null===a?ai:a}
function uj(){if(0===T||3===T||2===T)T=4;null===R||0===(hh&268435455)&&0===(rk&268435455)||Dk(R,Z)}function Jk(a,b){var c=K;K|=2;var d=Kk();if(R!==a||Z!==b)vk=null,Lk(a,b);do try{Uk();break}catch(e){Nk(a,e)}while(1);Qg();K=c;nk.current=d;if(null!==Y)throw Error(p(261));R=null;Z=0;return T}function Uk(){for(;null!==Y;)Vk(Y)}function Mk(){for(;null!==Y&&!cc();)Vk(Y)}function Vk(a){var b=Wk(a.alternate,a,gj);a.memoizedProps=a.pendingProps;null===b?Tk(a):Y=b;ok.current=null}
function Tk(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&32768)){if(c=Fj(c,b,gj),null!==c){Y=c;return}}else{c=Jj(c,b);if(null!==c){c.flags&=32767;Y=c;return}if(null!==a)a.flags|=32768,a.subtreeFlags=0,a.deletions=null;else{T=6;Y=null;return}}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===T&&(T=5)}function Qk(a,b,c){var d=C,e=pk.transition;try{pk.transition=null,C=1,Xk(a,b,c,d)}finally{pk.transition=e,C=d}return null}
function Xk(a,b,c,d){do Ik();while(null!==xk);if(0!==(K&6))throw Error(p(327));c=a.finishedWork;var e=a.finishedLanes;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(p(177));a.callbackNode=null;a.callbackPriority=0;var f=c.lanes|c.childLanes;Bc(a,f);a===R&&(Y=R=null,Z=0);0===(c.subtreeFlags&2064)&&0===(c.flags&2064)||wk||(wk=!0,Gk(hc,function(){Ik();return null}));f=0!==(c.flags&15990);if(0!==(c.subtreeFlags&15990)||f){f=pk.transition;pk.transition=null;
var g=C;C=1;var h=K;K|=4;ok.current=null;Pj(a,c);ek(c,a);Oe(Df);dd=!!Cf;Df=Cf=null;a.current=c;ik(c,a,e);dc();K=h;C=g;pk.transition=f}else a.current=c;wk&&(wk=!1,xk=a,yk=e);f=a.pendingLanes;0===f&&(Si=null);mc(c.stateNode,d);Ek(a,B());if(null!==b)for(d=a.onRecoverableError,c=0;c<b.length;c++)e=b[c],d(e.value,{componentStack:e.stack,digest:e.digest});if(Pi)throw Pi=!1,a=Qi,Qi=null,a;0!==(yk&1)&&0!==a.tag&&Ik();f=a.pendingLanes;0!==(f&1)?a===Ak?zk++:(zk=0,Ak=a):zk=0;jg();return null}
function Ik(){if(null!==xk){var a=Dc(yk),b=pk.transition,c=C;try{pk.transition=null;C=16>a?16:a;if(null===xk)var d=!1;else{a=xk;xk=null;yk=0;if(0!==(K&6))throw Error(p(331));var e=K;K|=4;for(V=a.current;null!==V;){var f=V,g=f.child;if(0!==(V.flags&16)){var h=f.deletions;if(null!==h){for(var k=0;k<h.length;k++){var l=h[k];for(V=l;null!==V;){var m=V;switch(m.tag){case 0:case 11:case 15:Qj(8,m,f)}var q=m.child;if(null!==q)q.return=m,V=q;else for(;null!==V;){m=V;var r=m.sibling,y=m.return;Tj(m);if(m===
l){V=null;break}if(null!==r){r.return=y;V=r;break}V=y}}}var n=f.alternate;if(null!==n){var t=n.child;if(null!==t){n.child=null;do{var J=t.sibling;t.sibling=null;t=J}while(null!==t)}}V=f}}if(0!==(f.subtreeFlags&2064)&&null!==g)g.return=f,V=g;else b:for(;null!==V;){f=V;if(0!==(f.flags&2048))switch(f.tag){case 0:case 11:case 15:Qj(9,f,f.return)}var x=f.sibling;if(null!==x){x.return=f.return;V=x;break b}V=f.return}}var w=a.current;for(V=w;null!==V;){g=V;var u=g.child;if(0!==(g.subtreeFlags&2064)&&null!==
u)u.return=g,V=u;else b:for(g=w;null!==V;){h=V;if(0!==(h.flags&2048))try{switch(h.tag){case 0:case 11:case 15:Rj(9,h)}}catch(na){W(h,h.return,na)}if(h===g){V=null;break b}var F=h.sibling;if(null!==F){F.return=h.return;V=F;break b}V=h.return}}K=e;jg();if(lc&&"function"===typeof lc.onPostCommitFiberRoot)try{lc.onPostCommitFiberRoot(kc,a)}catch(na){}d=!0}return d}finally{C=c,pk.transition=b}}return!1}function Yk(a,b,c){b=Ki(c,b);b=Oi(a,b,1);a=dh(a,b,1);b=L();null!==a&&(Ac(a,1,b),Ek(a,b))}
function W(a,b,c){if(3===a.tag)Yk(a,a,c);else for(;null!==b;){if(3===b.tag){Yk(b,a,c);break}else if(1===b.tag){var d=b.stateNode;if("function"===typeof b.type.getDerivedStateFromError||"function"===typeof d.componentDidCatch&&(null===Si||!Si.has(d))){a=Ki(c,a);a=Ri(b,a,1);b=dh(b,a,1);a=L();null!==b&&(Ac(b,1,a),Ek(b,a));break}}b=b.return}}
function Ui(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=L();a.pingedLanes|=a.suspendedLanes&c;R===a&&(Z&c)===c&&(4===T||3===T&&(Z&130023424)===Z&&500>B()-gk?Lk(a,0):sk|=c);Ek(a,b)}function Zk(a,b){0===b&&(0===(a.mode&1)?b=1:(b=sc,sc<<=1,0===(sc&130023424)&&(sc=4194304)));var c=L();a=Zg(a,b);null!==a&&(Ac(a,b,c),Ek(a,c))}function vj(a){var b=a.memoizedState,c=0;null!==b&&(c=b.retryLane);Zk(a,c)}
function ck(a,b){var c=0;switch(a.tag){case 13:var d=a.stateNode;var e=a.memoizedState;null!==e&&(c=e.retryLane);break;case 19:d=a.stateNode;break;default:throw Error(p(314));}null!==d&&d.delete(b);Zk(a,c)}var Wk;
Wk=function(a,b,c){if(null!==a)if(a.memoizedProps!==b.pendingProps||Wf.current)Ug=!0;else{if(0===(a.lanes&c)&&0===(b.flags&128))return Ug=!1,zj(a,b,c);Ug=0!==(a.flags&131072)?!0:!1}else Ug=!1,I&&0!==(b.flags&1048576)&&ug(b,ng,b.index);b.lanes=0;switch(b.tag){case 2:var d=b.type;jj(a,b);a=b.pendingProps;var e=Yf(b,H.current);Tg(b,c);e=Xh(null,b,d,a,e,c);var f=bi();b.flags|=1;"object"===typeof e&&null!==e&&"function"===typeof e.render&&void 0===e.$$typeof?(b.tag=1,b.memoizedState=null,b.updateQueue=
null,Zf(d)?(f=!0,cg(b)):f=!1,b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,ah(b),e.updater=nh,b.stateNode=e,e._reactInternals=b,rh(b,d,a,c),b=kj(null,b,d,!0,f,c)):(b.tag=0,I&&f&&vg(b),Yi(null,b,e,c),b=b.child);return b;case 16:d=b.elementType;a:{jj(a,b);a=b.pendingProps;e=d._init;d=e(d._payload);b.type=d;e=b.tag=$k(d);a=Lg(d,a);switch(e){case 0:b=dj(null,b,d,a,c);break a;case 1:b=ij(null,b,d,a,c);break a;case 11:b=Zi(null,b,d,a,c);break a;case 14:b=aj(null,b,d,Lg(d.type,a),c);break a}throw Error(p(306,
d,""));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),dj(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),ij(a,b,d,e,c);case 3:a:{lj(b);if(null===a)throw Error(p(387));d=b.pendingProps;f=b.memoizedState;e=f.element;bh(a,b);gh(b,d,null,c);var g=b.memoizedState;d=g.element;if(f.isDehydrated)if(f={element:d,isDehydrated:!1,cache:g.cache,pendingSuspenseBoundaries:g.pendingSuspenseBoundaries,transitions:g.transitions},b.updateQueue.baseState=
f,b.memoizedState=f,b.flags&256){e=Ki(Error(p(423)),b);b=mj(a,b,d,c,e);break a}else if(d!==e){e=Ki(Error(p(424)),b);b=mj(a,b,d,c,e);break a}else for(yg=Lf(b.stateNode.containerInfo.firstChild),xg=b,I=!0,zg=null,c=Ch(b,null,d,c),b.child=c;c;)c.flags=c.flags&-3|4096,c=c.sibling;else{Ig();if(d===e){b=$i(a,b,c);break a}Yi(a,b,d,c)}b=b.child}return b;case 5:return Kh(b),null===a&&Eg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,Ef(d,e)?g=null:null!==f&&Ef(d,f)&&(b.flags|=32),
hj(a,b),Yi(a,b,g,c),b.child;case 6:return null===a&&Eg(b),null;case 13:return pj(a,b,c);case 4:return Ih(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Bh(b,null,d,c):Yi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),Zi(a,b,d,e,c);case 7:return Yi(a,b,b.pendingProps,c),b.child;case 8:return Yi(a,b,b.pendingProps.children,c),b.child;case 12:return Yi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;f=b.memoizedProps;
g=e.value;G(Mg,d._currentValue);d._currentValue=g;if(null!==f)if(He(f.value,g)){if(f.children===e.children&&!Wf.current){b=$i(a,b,c);break a}}else for(f=b.child,null!==f&&(f.return=b);null!==f;){var h=f.dependencies;if(null!==h){g=f.child;for(var k=h.firstContext;null!==k;){if(k.context===d){if(1===f.tag){k=ch(-1,c&-c);k.tag=2;var l=f.updateQueue;if(null!==l){l=l.shared;var m=l.pending;null===m?k.next=k:(k.next=m.next,m.next=k);l.pending=k}}f.lanes|=c;k=f.alternate;null!==k&&(k.lanes|=c);Sg(f.return,
c,b);h.lanes|=c;break}k=k.next}}else if(10===f.tag)g=f.type===b.type?null:f.child;else if(18===f.tag){g=f.return;if(null===g)throw Error(p(341));g.lanes|=c;h=g.alternate;null!==h&&(h.lanes|=c);Sg(g,c,b);g=f.sibling}else g=f.child;if(null!==g)g.return=f;else for(g=f;null!==g;){if(g===b){g=null;break}f=g.sibling;if(null!==f){f.return=g.return;g=f;break}g=g.return}f=g}Yi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,d=b.pendingProps.children,Tg(b,c),e=Vg(e),d=d(e),b.flags|=1,Yi(a,b,d,c),
b.child;case 14:return d=b.type,e=Lg(d,b.pendingProps),e=Lg(d.type,e),aj(a,b,d,e,c);case 15:return cj(a,b,b.type,b.pendingProps,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),jj(a,b),b.tag=1,Zf(d)?(a=!0,cg(b)):a=!1,Tg(b,c),ph(b,d,e),rh(b,d,e,c),kj(null,b,d,!0,a,c);case 19:return yj(a,b,c);case 22:return ej(a,b,c)}throw Error(p(156,b.tag));};function Gk(a,b){return ac(a,b)}
function al(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.subtreeFlags=this.flags=0;this.deletions=null;this.childLanes=this.lanes=0;this.alternate=null}function Bg(a,b,c,d){return new al(a,b,c,d)}function bj(a){a=a.prototype;return!(!a||!a.isReactComponent)}
function $k(a){if("function"===typeof a)return bj(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Da)return 11;if(a===Ga)return 14}return 2}
function wh(a,b){var c=a.alternate;null===c?(c=Bg(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.subtreeFlags=0,c.deletions=null);c.flags=a.flags&14680064;c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};
c.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}
function yh(a,b,c,d,e,f){var g=2;d=a;if("function"===typeof a)bj(a)&&(g=1);else if("string"===typeof a)g=5;else a:switch(a){case ya:return Ah(c.children,e,f,b);case za:g=8;e|=8;break;case Aa:return a=Bg(12,c,b,e|2),a.elementType=Aa,a.lanes=f,a;case Ea:return a=Bg(13,c,b,e),a.elementType=Ea,a.lanes=f,a;case Fa:return a=Bg(19,c,b,e),a.elementType=Fa,a.lanes=f,a;case Ia:return qj(c,e,f,b);default:if("object"===typeof a&&null!==a)switch(a.$$typeof){case Ba:g=10;break a;case Ca:g=9;break a;case Da:g=11;
break a;case Ga:g=14;break a;case Ha:g=16;d=null;break a}throw Error(p(130,null==a?a:typeof a,""));}b=Bg(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Ah(a,b,c,d){a=Bg(7,a,d,b);a.lanes=c;return a}function qj(a,b,c,d){a=Bg(22,a,d,b);a.elementType=Ia;a.lanes=c;a.stateNode={isHidden:!1};return a}function xh(a,b,c){a=Bg(6,a,null,b);a.lanes=c;return a}
function zh(a,b,c){b=Bg(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}
function bl(a,b,c,d,e){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.callbackNode=this.pendingContext=this.context=null;this.callbackPriority=0;this.eventTimes=zc(0);this.expirationTimes=zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=zc(0);this.identifierPrefix=d;this.onRecoverableError=e;this.mutableSourceEagerHydrationData=
null}function cl(a,b,c,d,e,f,g,h,k){a=new bl(a,b,c,h,k);1===b?(b=1,!0===f&&(b|=8)):b=0;f=Bg(3,null,null,b);a.current=f;f.stateNode=a;f.memoizedState={element:d,isDehydrated:c,cache:null,transitions:null,pendingSuspenseBoundaries:null};ah(f);return a}function dl(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:wa,key:null==d?null:""+d,children:a,containerInfo:b,implementation:c}}
function el(a){if(!a)return Vf;a=a._reactInternals;a:{if(Vb(a)!==a||1!==a.tag)throw Error(p(170));var b=a;do{switch(b.tag){case 3:b=b.stateNode.context;break a;case 1:if(Zf(b.type)){b=b.stateNode.__reactInternalMemoizedMergedChildContext;break a}}b=b.return}while(null!==b);throw Error(p(171));}if(1===a.tag){var c=a.type;if(Zf(c))return bg(a,c,b)}return b}
function fl(a,b,c,d,e,f,g,h,k){a=cl(c,d,!0,a,e,f,g,h,k);a.context=el(null);c=a.current;d=L();e=lh(c);f=ch(d,e);f.callback=void 0!==b&&null!==b?b:null;dh(c,f,e);a.current.lanes=e;Ac(a,e,d);Ek(a,d);return a}function gl(a,b,c,d){var e=b.current,f=L(),g=lh(e);c=el(c);null===b.context?b.context=c:b.pendingContext=c;b=ch(f,g);b.payload={element:a};d=void 0===d?null:d;null!==d&&(b.callback=d);a=dh(e,b,g);null!==a&&(mh(a,e,g,f),eh(a,e,g));return g}
function hl(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function il(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function jl(a,b){il(a,b);(a=a.alternate)&&il(a,b)}function kl(){return null}var ll="function"===typeof reportError?reportError:function(a){console.error(a)};function ml(a){this._internalRoot=a}
nl.prototype.render=ml.prototype.render=function(a){var b=this._internalRoot;if(null===b)throw Error(p(409));gl(a,b,null,null)};nl.prototype.unmount=ml.prototype.unmount=function(){var a=this._internalRoot;if(null!==a){this._internalRoot=null;var b=a.containerInfo;Sk(function(){gl(null,a,null,null)});b[uf]=null}};function nl(a){this._internalRoot=a}
nl.prototype.unstable_scheduleHydration=function(a){if(a){var b=Hc();a={blockedOn:null,target:a,priority:b};for(var c=0;c<Qc.length&&0!==b&&b<Qc[c].priority;c++);Qc.splice(c,0,a);0===c&&Vc(a)}};function ol(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType)}function pl(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||" react-mount-point-unstable "!==a.nodeValue))}function ql(){}
function rl(a,b,c,d,e){if(e){if("function"===typeof d){var f=d;d=function(){var a=hl(g);f.call(a)}}var g=fl(b,d,a,0,null,!1,!1,"",ql);a._reactRootContainer=g;a[uf]=g.current;sf(8===a.nodeType?a.parentNode:a);Sk();return g}for(;e=a.lastChild;)a.removeChild(e);if("function"===typeof d){var h=d;d=function(){var a=hl(k);h.call(a)}}var k=cl(a,0,!1,null,null,!1,!1,"",ql);a._reactRootContainer=k;a[uf]=k.current;sf(8===a.nodeType?a.parentNode:a);Sk(function(){gl(b,k,c,d)});return k}
function sl(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f;if("function"===typeof e){var h=e;e=function(){var a=hl(g);h.call(a)}}gl(b,g,a,e)}else g=rl(c,b,a,e,d);return hl(g)}Ec=function(a){switch(a.tag){case 3:var b=a.stateNode;if(b.current.memoizedState.isDehydrated){var c=tc(b.pendingLanes);0!==c&&(Cc(b,c|1),Ek(b,B()),0===(K&6)&&(Hj=B()+500,jg()))}break;case 13:Sk(function(){var b=Zg(a,1);if(null!==b){var c=L();mh(b,a,1,c)}}),jl(a,1)}};
Fc=function(a){if(13===a.tag){var b=Zg(a,134217728);if(null!==b){var c=L();mh(b,a,134217728,c)}jl(a,134217728)}};Gc=function(a){if(13===a.tag){var b=lh(a),c=Zg(a,b);if(null!==c){var d=L();mh(c,a,b,d)}jl(a,b)}};Hc=function(){return C};Ic=function(a,b){var c=C;try{return C=a,b()}finally{C=c}};
yb=function(a,b,c){switch(b){case "input":bb(a,c);b=c.name;if("radio"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll("input[name="+JSON.stringify(""+b)+'][type="radio"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(p(90));Wa(d);bb(d,e)}}}break;case "textarea":ib(a,c);break;case "select":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Rk;Hb=Sk;
var tl={usingClientEntryPoint:!1,Events:[Cb,ue,Db,Eb,Fb,Rk]},ul={findFiberByHostInstance:Wc,bundleType:0,version:"18.2.0",rendererPackageName:"react-dom"};
var vl={bundleType:ul.bundleType,version:ul.version,rendererPackageName:ul.rendererPackageName,rendererConfig:ul.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ua.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=Zb(a);return null===a?null:a.stateNode},findFiberByHostInstance:ul.findFiberByHostInstance||
kl,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.2.0-next-9e3b772b8-20220608"};if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var wl=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!wl.isDisabled&&wl.supportsFiber)try{kc=wl.inject(vl),lc=wl}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=tl;
exports.createPortal=function(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!ol(b))throw Error(p(200));return dl(a,b,null,c)};exports.createRoot=function(a,b){if(!ol(a))throw Error(p(299));var c=!1,d="",e=ll;null!==b&&void 0!==b&&(!0===b.unstable_strictMode&&(c=!0),void 0!==b.identifierPrefix&&(d=b.identifierPrefix),void 0!==b.onRecoverableError&&(e=b.onRecoverableError));b=cl(a,1,!1,null,null,c,!1,d,e);a[uf]=b.current;sf(8===a.nodeType?a.parentNode:a);return new ml(b)};
exports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if("function"===typeof a.render)throw Error(p(188));a=Object.keys(a).join(",");throw Error(p(268,a));}a=Zb(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a){return Sk(a)};exports.hydrate=function(a,b,c){if(!pl(b))throw Error(p(200));return sl(null,a,b,!0,c)};
exports.hydrateRoot=function(a,b,c){if(!ol(a))throw Error(p(405));var d=null!=c&&c.hydratedSources||null,e=!1,f="",g=ll;null!==c&&void 0!==c&&(!0===c.unstable_strictMode&&(e=!0),void 0!==c.identifierPrefix&&(f=c.identifierPrefix),void 0!==c.onRecoverableError&&(g=c.onRecoverableError));b=fl(b,null,a,1,null!=c?c:null,e,!1,f,g);a[uf]=b.current;sf(a);if(d)for(a=0;a<d.length;a++)c=d[a],e=c._getVersion,e=e(c._source),null==b.mutableSourceEagerHydrationData?b.mutableSourceEagerHydrationData=[c,e]:b.mutableSourceEagerHydrationData.push(c,
e);return new nl(b)};exports.render=function(a,b,c){if(!pl(b))throw Error(p(200));return sl(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!pl(a))throw Error(p(40));return a._reactRootContainer?(Sk(function(){sl(null,null,a,!1,function(){a._reactRootContainer=null;a[uf]=null})}),!0):!1};exports.unstable_batchedUpdates=Rk;
exports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!pl(c))throw Error(p(200));if(null==a||void 0===a._reactInternals)throw Error(p(38));return sl(a,b,c,!1,d)};exports.version="18.2.0-next-9e3b772b8-20220608";


/***/ }),

/***/ 745:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
var __webpack_unused_export__;


var m = __webpack_require__(935);
if (true) {
  exports.s = m.createRoot;
  __webpack_unused_export__ = m.hydrateRoot;
} else { var i; }


/***/ }),

/***/ 935:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


function checkDCE() {
  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
  if (
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'
  ) {
    return;
  }
  if (false) {}
  try {
    // Verify that the code above has been dead code eliminated (DCE'd).
    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
  } catch (err) {
    // DevTools shouldn't crash React, no matter what.
    // We should still report in case we break this code.
    console.error(err);
  }
}

if (true) {
  // DCE check should happen before ReactDOM bundle executes so that
  // DevTools can report bad minification during injection.
  checkDCE();
  module.exports = __webpack_require__(448);
} else {}


/***/ }),

/***/ 921:
/***/ ((__unused_webpack_module, exports) => {

"use strict";
var __webpack_unused_export__;
/**
 * @license React
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var b=Symbol.for("react.element"),c=Symbol.for("react.portal"),d=Symbol.for("react.fragment"),e=Symbol.for("react.strict_mode"),f=Symbol.for("react.profiler"),g=Symbol.for("react.provider"),h=Symbol.for("react.context"),k=Symbol.for("react.server_context"),l=Symbol.for("react.forward_ref"),m=Symbol.for("react.suspense"),n=Symbol.for("react.suspense_list"),p=Symbol.for("react.memo"),q=Symbol.for("react.lazy"),t=Symbol.for("react.offscreen"),u;u=Symbol.for("react.module.reference");
function v(a){if("object"===typeof a&&null!==a){var r=a.$$typeof;switch(r){case b:switch(a=a.type,a){case d:case f:case e:case m:case n:return a;default:switch(a=a&&a.$$typeof,a){case k:case h:case l:case q:case p:case g:return a;default:return r}}case c:return r}}}__webpack_unused_export__=h;__webpack_unused_export__=g;__webpack_unused_export__=b;__webpack_unused_export__=l;__webpack_unused_export__=d;__webpack_unused_export__=q;__webpack_unused_export__=p;__webpack_unused_export__=c;__webpack_unused_export__=f;__webpack_unused_export__=e;__webpack_unused_export__=m;
__webpack_unused_export__=n;__webpack_unused_export__=function(){return!1};__webpack_unused_export__=function(){return!1};__webpack_unused_export__=function(a){return v(a)===h};__webpack_unused_export__=function(a){return v(a)===g};__webpack_unused_export__=function(a){return"object"===typeof a&&null!==a&&a.$$typeof===b};__webpack_unused_export__=function(a){return v(a)===l};__webpack_unused_export__=function(a){return v(a)===d};__webpack_unused_export__=function(a){return v(a)===q};__webpack_unused_export__=function(a){return v(a)===p};
__webpack_unused_export__=function(a){return v(a)===c};__webpack_unused_export__=function(a){return v(a)===f};__webpack_unused_export__=function(a){return v(a)===e};__webpack_unused_export__=function(a){return v(a)===m};__webpack_unused_export__=function(a){return v(a)===n};
__webpack_unused_export__=function(a){return"string"===typeof a||"function"===typeof a||a===d||a===f||a===e||a===m||a===n||a===t||"object"===typeof a&&null!==a&&(a.$$typeof===q||a.$$typeof===p||a.$$typeof===g||a.$$typeof===h||a.$$typeof===l||a.$$typeof===u||void 0!==a.getModuleId)?!0:!1};__webpack_unused_export__=v;


/***/ }),

/***/ 864:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


if (true) {
  /* unused reexport */ __webpack_require__(921);
} else {}


/***/ }),

/***/ 262:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
var __webpack_unused_export__;

__webpack_unused_export__ = ({ value: true });
/* Returns React children into an array, flattening fragments. */
var react_1 = __webpack_require__(294);
var react_is_1 = __webpack_require__(994);
function flattenChildren(children, depth, keys) {
    if (depth === void 0) { depth = 0; }
    if (keys === void 0) { keys = []; }
    return react_1.Children.toArray(children).reduce(function (acc, node, nodeIndex) {
        if (react_is_1.isFragment(node)) {
            acc.push.apply(acc, flattenChildren(node.props.children, depth + 1, keys.concat(node.key || nodeIndex)));
        }
        else {
            if (react_1.isValidElement(node)) {
                acc.push(react_1.cloneElement(node, {
                    key: keys.concat(String(node.key)).join('.')
                }));
            }
            else if (typeof node === "string" || typeof node === "number") {
                acc.push(node);
            }
        }
        return acc;
    }, []);
}
exports.Z = flattenChildren;


/***/ }),

/***/ 726:
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var b="function"===typeof Symbol&&Symbol.for,c=b?Symbol.for("react.element"):60103,d=b?Symbol.for("react.portal"):60106,e=b?Symbol.for("react.fragment"):60107,f=b?Symbol.for("react.strict_mode"):60108,g=b?Symbol.for("react.profiler"):60114,h=b?Symbol.for("react.provider"):60109,k=b?Symbol.for("react.context"):60110,l=b?Symbol.for("react.async_mode"):60111,m=b?Symbol.for("react.concurrent_mode"):60111,n=b?Symbol.for("react.forward_ref"):60112,p=b?Symbol.for("react.suspense"):60113,q=b?
Symbol.for("react.suspense_list"):60120,r=b?Symbol.for("react.memo"):60115,t=b?Symbol.for("react.lazy"):60116,v=b?Symbol.for("react.block"):60121,w=b?Symbol.for("react.fundamental"):60117,x=b?Symbol.for("react.responder"):60118,y=b?Symbol.for("react.scope"):60119;
function z(a){if("object"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;
exports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return"object"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};
exports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};
exports.isValidElementType=function(a){return"string"===typeof a||"function"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||"object"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;


/***/ }),

/***/ 994:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


if (true) {
  module.exports = __webpack_require__(726);
} else {}


/***/ }),

/***/ 408:
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var l=Symbol.for("react.element"),n=Symbol.for("react.portal"),p=Symbol.for("react.fragment"),q=Symbol.for("react.strict_mode"),r=Symbol.for("react.profiler"),t=Symbol.for("react.provider"),u=Symbol.for("react.context"),v=Symbol.for("react.forward_ref"),w=Symbol.for("react.suspense"),x=Symbol.for("react.memo"),y=Symbol.for("react.lazy"),z=Symbol.iterator;function A(a){if(null===a||"object"!==typeof a)return null;a=z&&a[z]||a["@@iterator"];return"function"===typeof a?a:null}
var B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};
E.prototype.setState=function(a,b){if("object"!==typeof a&&"function"!==typeof a&&null!=a)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,a,b,"setState")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,"forceUpdate")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;
H.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};
function M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=""+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}
function N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return"object"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={"=":"=0",":":"=2"};return"$"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\/+/g;function Q(a,b){return"object"===typeof a&&null!==a&&null!=a.key?escape(""+a.key):b.toString(36)}
function R(a,b,e,d,c){var k=typeof a;if("undefined"===k||"boolean"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case "string":case "number":h=!0;break;case "object":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=""===d?"."+Q(h,0):d,I(c)?(e="",null!=a&&(e=a.replace(P,"$&/")+"/"),R(c,b,e,"",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?"":(""+c.key).replace(P,"$&/")+"/")+a)),b.push(c)),1;h=0;d=""===d?".":d+":";if(I(a))for(var g=0;g<a.length;g++){k=
a[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),"function"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if("object"===k)throw b=String(a),Error("Objects are not valid as a React child (found: "+("[object Object]"===b?"object with keys {"+Object.keys(a).join(", ")+"}":b)+"). If you meant to render a collection of children, use an array instead.");return h}
function S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,"","",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}
var U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};exports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error("React.Children.only expected to receive a single React element child.");return a}};exports.Component=E;exports.Fragment=p;
exports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;
exports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+a+".");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=""+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);
for(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};
exports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.");};
exports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};exports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};
exports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};exports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};
exports.useTransition=function(){return U.current.useTransition()};exports.version="18.2.0";


/***/ }),

/***/ 294:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


if (true) {
  module.exports = __webpack_require__(408);
} else {}


/***/ }),

/***/ 53:
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function f(a,b){var c=a.length;a.push(b);a:for(;0<c;){var d=c-1>>>1,e=a[d];if(0<g(e,b))a[d]=b,a[c]=e,c=d;else break a}}function h(a){return 0===a.length?null:a[0]}function k(a){if(0===a.length)return null;var b=a[0],c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length,w=e>>>1;d<w;){var m=2*(d+1)-1,C=a[m],n=m+1,x=a[n];if(0>g(C,c))n<e&&0>g(x,C)?(a[d]=x,a[n]=c,d=n):(a[d]=C,a[m]=c,d=m);else if(n<e&&0>g(x,c))a[d]=x,a[n]=c,d=n;else break a}}return b}
function g(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}if("object"===typeof performance&&"function"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}var r=[],t=[],u=1,v=null,y=3,z=!1,A=!1,B=!1,D="function"===typeof setTimeout?setTimeout:null,E="function"===typeof clearTimeout?clearTimeout:null,F="undefined"!==typeof setImmediate?setImmediate:null;
"undefined"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function G(a){for(var b=h(t);null!==b;){if(null===b.callback)k(t);else if(b.startTime<=a)k(t),b.sortIndex=b.expirationTime,f(r,b);else break;b=h(t)}}function H(a){B=!1;G(a);if(!A)if(null!==h(r))A=!0,I(J);else{var b=h(t);null!==b&&K(H,b.startTime-a)}}
function J(a,b){A=!1;B&&(B=!1,E(L),L=-1);z=!0;var c=y;try{G(b);for(v=h(r);null!==v&&(!(v.expirationTime>b)||a&&!M());){var d=v.callback;if("function"===typeof d){v.callback=null;y=v.priorityLevel;var e=d(v.expirationTime<=b);b=exports.unstable_now();"function"===typeof e?v.callback=e:v===h(r)&&k(r);G(b)}else k(r);v=h(r)}if(null!==v)var w=!0;else{var m=h(t);null!==m&&K(H,m.startTime-b);w=!1}return w}finally{v=null,y=c,z=!1}}var N=!1,O=null,L=-1,P=5,Q=-1;
function M(){return exports.unstable_now()-Q<P?!1:!0}function R(){if(null!==O){var a=exports.unstable_now();Q=a;var b=!0;try{b=O(!0,a)}finally{b?S():(N=!1,O=null)}}else N=!1}var S;if("function"===typeof F)S=function(){F(R)};else if("undefined"!==typeof MessageChannel){var T=new MessageChannel,U=T.port2;T.port1.onmessage=R;S=function(){U.postMessage(null)}}else S=function(){D(R,0)};function I(a){O=a;N||(N=!0,S())}function K(a,b){L=D(function(){a(exports.unstable_now())},b)}
exports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){A||z||(A=!0,I(J))};
exports.unstable_forceFrameRate=function(a){0>a||125<a?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):P=0<a?Math.floor(1E3/a):5};exports.unstable_getCurrentPriorityLevel=function(){return y};exports.unstable_getFirstCallbackNode=function(){return h(r)};exports.unstable_next=function(a){switch(y){case 1:case 2:case 3:var b=3;break;default:b=y}var c=y;y=b;try{return a()}finally{y=c}};exports.unstable_pauseExecution=function(){};
exports.unstable_requestPaint=function(){};exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=y;y=a;try{return b()}finally{y=c}};
exports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();"object"===typeof c&&null!==c?(c=c.delay,c="number"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:u++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,f(t,a),null===h(r)&&a===h(t)&&(B?(E(L),L=-1):B=!0,K(H,c-d))):(a.sortIndex=e,f(r,a),A||z||(A=!0,I(J)));return a};
exports.unstable_shouldYield=M;exports.unstable_wrapCallback=function(a){var b=y;return function(){var c=y;y=b;try{return a.apply(this,arguments)}finally{y=c}}};


/***/ }),

/***/ 840:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


if (true) {
  module.exports = __webpack_require__(53);
} else {}


/***/ }),

/***/ 250:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/**
 * @license React
 * use-sync-external-store-shim.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var e=__webpack_require__(294);function h(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var k="function"===typeof Object.is?Object.is:h,l=e.useState,m=e.useEffect,n=e.useLayoutEffect,p=e.useDebugValue;function q(a,b){var d=b(),f=l({inst:{value:d,getSnapshot:b}}),c=f[0].inst,g=f[1];n(function(){c.value=d;c.getSnapshot=b;r(c)&&g({inst:c})},[a,d,b]);m(function(){r(c)&&g({inst:c});return a(function(){r(c)&&g({inst:c})})},[a]);p(d);return d}
function r(a){var b=a.getSnapshot;a=a.value;try{var d=b();return!k(a,d)}catch(f){return!0}}function t(a,b){return b()}var u="undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement?t:q;exports.useSyncExternalStore=void 0!==e.useSyncExternalStore?e.useSyncExternalStore:u;


/***/ }),

/***/ 139:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/**
 * @license React
 * use-sync-external-store-shim/with-selector.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var h=__webpack_require__(294),n=__webpack_require__(688);function p(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var q="function"===typeof Object.is?Object.is:p,r=n.useSyncExternalStore,t=h.useRef,u=h.useEffect,v=h.useMemo,w=h.useDebugValue;
exports.useSyncExternalStoreWithSelector=function(a,b,e,l,g){var c=t(null);if(null===c.current){var f={hasValue:!1,value:null};c.current=f}else f=c.current;c=v(function(){function a(a){if(!c){c=!0;d=a;a=l(a);if(void 0!==g&&f.hasValue){var b=f.value;if(g(b,a))return k=b}return k=a}b=k;if(q(d,a))return b;var e=l(a);if(void 0!==g&&g(b,e))return b;d=a;return k=e}var c=!1,d,k,m=void 0===e?null:e;return[function(){return a(b())},null===m?void 0:function(){return a(m())}]},[b,e,l,g]);var d=r(a,c[0],c[1]);
u(function(){f.hasValue=!0;f.value=d},[d]);w(d);return d};


/***/ }),

/***/ 688:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


if (true) {
  module.exports = __webpack_require__(250);
} else {}


/***/ }),

/***/ 798:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


if (true) {
  module.exports = __webpack_require__(139);
} else {}


/***/ }),

/***/ 739:
/***/ ((module) => {

/**
 * This file automatically generated from `pre-publish.js`.
 * Do not manually edit.
 */

module.exports = {
  "area": true,
  "base": true,
  "br": true,
  "col": true,
  "embed": true,
  "hr": true,
  "img": true,
  "input": true,
  "link": true,
  "meta": true,
  "param": true,
  "source": true,
  "track": true,
  "wbr": true
};


/***/ }),

/***/ 61:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var _typeof = (__webpack_require__(698)["default"]);
function _regeneratorRuntime() {
  "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {
    return exports;
  }, module.exports.__esModule = true, module.exports["default"] = module.exports;
  var exports = {},
    Op = Object.prototype,
    hasOwn = Op.hasOwnProperty,
    defineProperty = Object.defineProperty || function (obj, key, desc) {
      obj[key] = desc.value;
    },
    $Symbol = "function" == typeof Symbol ? Symbol : {},
    iteratorSymbol = $Symbol.iterator || "@@iterator",
    asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator",
    toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";
  function define(obj, key, value) {
    return Object.defineProperty(obj, key, {
      value: value,
      enumerable: !0,
      configurable: !0,
      writable: !0
    }), obj[key];
  }
  try {
    define({}, "");
  } catch (err) {
    define = function define(obj, key, value) {
      return obj[key] = value;
    };
  }
  function wrap(innerFn, outerFn, self, tryLocsList) {
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,
      generator = Object.create(protoGenerator.prototype),
      context = new Context(tryLocsList || []);
    return defineProperty(generator, "_invoke", {
      value: makeInvokeMethod(innerFn, self, context)
    }), generator;
  }
  function tryCatch(fn, obj, arg) {
    try {
      return {
        type: "normal",
        arg: fn.call(obj, arg)
      };
    } catch (err) {
      return {
        type: "throw",
        arg: err
      };
    }
  }
  exports.wrap = wrap;
  var ContinueSentinel = {};
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}
  var IteratorPrototype = {};
  define(IteratorPrototype, iteratorSymbol, function () {
    return this;
  });
  var getProto = Object.getPrototypeOf,
    NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);
  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function (method) {
      define(prototype, method, function (arg) {
        return this._invoke(method, arg);
      });
    });
  }
  function AsyncIterator(generator, PromiseImpl) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if ("throw" !== record.type) {
        var result = record.arg,
          value = result.value;
        return value && "object" == _typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) {
          invoke("next", value, resolve, reject);
        }, function (err) {
          invoke("throw", err, resolve, reject);
        }) : PromiseImpl.resolve(value).then(function (unwrapped) {
          result.value = unwrapped, resolve(result);
        }, function (error) {
          return invoke("throw", error, resolve, reject);
        });
      }
      reject(record.arg);
    }
    var previousPromise;
    defineProperty(this, "_invoke", {
      value: function value(method, arg) {
        function callInvokeWithMethodAndArg() {
          return new PromiseImpl(function (resolve, reject) {
            invoke(method, arg, resolve, reject);
          });
        }
        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
      }
    });
  }
  function makeInvokeMethod(innerFn, self, context) {
    var state = "suspendedStart";
    return function (method, arg) {
      if ("executing" === state) throw new Error("Generator is already running");
      if ("completed" === state) {
        if ("throw" === method) throw arg;
        return doneResult();
      }
      for (context.method = method, context.arg = arg;;) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }
        if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) {
          if ("suspendedStart" === state) throw state = "completed", context.arg;
          context.dispatchException(context.arg);
        } else "return" === context.method && context.abrupt("return", context.arg);
        state = "executing";
        var record = tryCatch(innerFn, self, context);
        if ("normal" === record.type) {
          if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue;
          return {
            value: record.arg,
            done: context.done
          };
        }
        "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg);
      }
    };
  }
  function maybeInvokeDelegate(delegate, context) {
    var methodName = context.method,
      method = delegate.iterator[methodName];
    if (undefined === method) return context.delegate = null, "throw" === methodName && delegate.iterator["return"] && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method) || "return" !== methodName && (context.method = "throw", context.arg = new TypeError("The iterator does not provide a '" + methodName + "' method")), ContinueSentinel;
    var record = tryCatch(method, delegate.iterator, context.arg);
    if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel;
    var info = record.arg;
    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel);
  }
  function pushTryEntry(locs) {
    var entry = {
      tryLoc: locs[0]
    };
    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);
  }
  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal", delete record.arg, entry.completion = record;
  }
  function Context(tryLocsList) {
    this.tryEntries = [{
      tryLoc: "root"
    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);
  }
  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) return iteratorMethod.call(iterable);
      if ("function" == typeof iterable.next) return iterable;
      if (!isNaN(iterable.length)) {
        var i = -1,
          next = function next() {
            for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;
            return next.value = undefined, next.done = !0, next;
          };
        return next.next = next;
      }
    }
    return {
      next: doneResult
    };
  }
  function doneResult() {
    return {
      value: undefined,
      done: !0
    };
  }
  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, "constructor", {
    value: GeneratorFunctionPrototype,
    configurable: !0
  }), defineProperty(GeneratorFunctionPrototype, "constructor", {
    value: GeneratorFunction,
    configurable: !0
  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) {
    var ctor = "function" == typeof genFun && genFun.constructor;
    return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name));
  }, exports.mark = function (genFun) {
    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun;
  }, exports.awrap = function (arg) {
    return {
      __await: arg
    };
  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {
    return this;
  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {
    void 0 === PromiseImpl && (PromiseImpl = Promise);
    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);
    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {
      return result.done ? result.value : iter.next();
    });
  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () {
    return this;
  }), define(Gp, "toString", function () {
    return "[object Generator]";
  }), exports.keys = function (val) {
    var object = Object(val),
      keys = [];
    for (var key in object) keys.push(key);
    return keys.reverse(), function next() {
      for (; keys.length;) {
        var key = keys.pop();
        if (key in object) return next.value = key, next.done = !1, next;
      }
      return next.done = !0, next;
    };
  }, exports.values = values, Context.prototype = {
    constructor: Context,
    reset: function reset(skipTempReset) {
      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);
    },
    stop: function stop() {
      this.done = !0;
      var rootRecord = this.tryEntries[0].completion;
      if ("throw" === rootRecord.type) throw rootRecord.arg;
      return this.rval;
    },
    dispatchException: function dispatchException(exception) {
      if (this.done) throw exception;
      var context = this;
      function handle(loc, caught) {
        return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught;
      }
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i],
          record = entry.completion;
        if ("root" === entry.tryLoc) return handle("end");
        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc"),
            hasFinally = hasOwn.call(entry, "finallyLoc");
          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);
            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);
          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);
          } else {
            if (!hasFinally) throw new Error("try statement without catch or finally");
            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);
          }
        }
      }
    },
    abrupt: function abrupt(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }
      finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);
      var record = finallyEntry ? finallyEntry.completion : {};
      return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);
    },
    complete: function complete(record, afterLoc) {
      if ("throw" === record.type) throw record.arg;
      return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;
    },
    finish: function finish(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;
      }
    },
    "catch": function _catch(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if ("throw" === record.type) {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }
      throw new Error("illegal catch attempt");
    },
    delegateYield: function delegateYield(iterable, resultName, nextLoc) {
      return this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      }, "next" === this.method && (this.arg = undefined), ContinueSentinel;
    }
  }, exports;
}
module.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 698:
/***/ ((module) => {

function _typeof(obj) {
  "@babel/helpers - typeof";

  return (module.exports = _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
  }, module.exports.__esModule = true, module.exports["default"] = module.exports), _typeof(obj);
}
module.exports = _typeof, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 687:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// TODO(Babel 8): Remove this file.

var runtime = __webpack_require__(61)();
module.exports = runtime;

// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=
try {
  regeneratorRuntime = runtime;
} catch (accidentalStrictMode) {
  if (typeof globalThis === "object") {
    globalThis.regeneratorRuntime = runtime;
  } else {
    Function("r", "regeneratorRuntime = r")(runtime);
  }
}


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/
/******/ 	/* webpack/runtime/create fake namespace object */
/******/ 	(() => {
/******/ 		var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);
/******/ 		var leafPrototypes;
/******/ 		// create a fake namespace object
/******/ 		// mode & 1: value is a module id, require it
/******/ 		// mode & 2: merge all properties of value into the ns
/******/ 		// mode & 4: return value when already ns object
/******/ 		// mode & 16: return value when it's Promise-like
/******/ 		// mode & 8|1: behave like require
/******/ 		__webpack_require__.t = function(value, mode) {
/******/ 			if(mode & 1) value = this(value);
/******/ 			if(mode & 8) return value;
/******/ 			if(typeof value === 'object' && value) {
/******/ 				if((mode & 4) && value.__esModule) return value;
/******/ 				if((mode & 16) && typeof value.then === 'function') return value;
/******/ 			}
/******/ 			var ns = Object.create(null);
/******/ 			__webpack_require__.r(ns);
/******/ 			var def = {};
/******/ 			leafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];
/******/ 			for(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {
/******/ 				Object.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));
/******/ 			}
/******/ 			def['default'] = () => (value);
/******/ 			__webpack_require__.d(ns, def);
/******/ 			return ns;
/******/ 		};
/******/ 	})();
/******/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var scriptUrl;
/******/ 		if (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + "";
/******/ 		var document = __webpack_require__.g.document;
/******/ 		if (!scriptUrl && document) {
/******/ 			if (document.currentScript)
/******/ 				scriptUrl = document.currentScript.src
/******/ 			if (!scriptUrl) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				if(scripts.length) scriptUrl = scripts[scripts.length - 1].src
/******/ 			}
/******/ 		}
/******/ 		// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration
/******/ 		// or pass an empty string ("") and set the __webpack_public_path__ variable from your code to use your own logic.
/******/ 		if (!scriptUrl) throw new Error("Automatic publicPath is not supported in this browser");
/******/ 		scriptUrl = scriptUrl.replace(/#.*$/, "").replace(/\?.*$/, "").replace(/\/[^\/]+$/, "/");
/******/ 		__webpack_require__.p = scriptUrl;
/******/ 	})();
/******/
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
(() => {
"use strict";

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(294);
var react_namespaceObject = /*#__PURE__*/__webpack_require__.t(react, 2);
// EXTERNAL MODULE: ./node_modules/react-dom/client.js
var client = __webpack_require__(745);
// EXTERNAL MODULE: ./node_modules/use-sync-external-store/shim/index.js
var shim = __webpack_require__(688);
// EXTERNAL MODULE: ./node_modules/use-sync-external-store/shim/with-selector.js
var with_selector = __webpack_require__(798);
// EXTERNAL MODULE: ./node_modules/react-dom/index.js
var react_dom = __webpack_require__(935);
;// CONCATENATED MODULE: ./node_modules/react-redux/es/utils/reactBatchedUpdates.js

;// CONCATENATED MODULE: ./node_modules/react-redux/es/utils/batch.js
// Default to a dummy "batch" implementation that just runs the callback
function defaultNoopBatch(callback) {
  callback();
}

let batch = defaultNoopBatch; // Allow injecting another batching function later

const setBatch = newBatch => batch = newBatch; // Supply a getter just to skip dealing with ESM bindings

const getBatch = () => batch;
;// CONCATENATED MODULE: ./node_modules/react-redux/es/components/Context.js

const Context_ReactReduxContext = /*#__PURE__*/(0,react.createContext)(null);

if (false) {}

/* harmony default export */ const Context = ((/* unused pure expression or super */ null && (Context_ReactReduxContext)));
;// CONCATENATED MODULE: ./node_modules/react-redux/es/hooks/useReduxContext.js



/**
 * A hook to access the value of the `ReactReduxContext`. This is a low-level
 * hook that you should usually not need to call directly.
 *
 * @returns {any} the value of the `ReactReduxContext`
 *
 * @example
 *
 * import React from 'react'
 * import { useReduxContext } from 'react-redux'
 *
 * export const CounterComponent = () => {
 *   const { store } = useReduxContext()
 *   return <div>{store.getState()}</div>
 * }
 */
function useReduxContext_useReduxContext() {
  const contextValue = (0,react.useContext)(Context_ReactReduxContext);

  if (false) {}

  return contextValue;
}
;// CONCATENATED MODULE: ./node_modules/react-redux/es/utils/useSyncExternalStore.js
const useSyncExternalStore_notInitialized = () => {
  throw new Error('uSES not initialized!');
};
;// CONCATENATED MODULE: ./node_modules/react-redux/es/hooks/useSelector.js




let useSyncExternalStoreWithSelector = useSyncExternalStore_notInitialized;
const initializeUseSelector = fn => {
  useSyncExternalStoreWithSelector = fn;
};

const refEquality = (a, b) => a === b;
/**
 * Hook factory, which creates a `useSelector` hook bound to a given context.
 *
 * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.
 * @returns {Function} A `useSelector` hook bound to the specified context.
 */


function createSelectorHook(context = Context_ReactReduxContext) {
  const useReduxContext = context === Context_ReactReduxContext ? useReduxContext_useReduxContext : () => (0,react.useContext)(context);
  return function useSelector(selector, equalityFn = refEquality) {
    if (false) {}

    const {
      store,
      subscription,
      getServerState
    } = useReduxContext();
    const selectedState = useSyncExternalStoreWithSelector(subscription.addNestedSub, store.getState, getServerState || store.getState, selector, equalityFn);
    (0,react.useDebugValue)(selectedState);
    return selectedState;
  };
}
/**
 * A hook to access the redux store's state. This hook takes a selector function
 * as an argument. The selector is called with the store state.
 *
 * This hook takes an optional equality comparison function as the second parameter
 * that allows you to customize the way the selected state is compared to determine
 * whether the component needs to be re-rendered.
 *
 * @param {Function} selector the selector function
 * @param {Function=} equalityFn the function that will be used to determine equality
 *
 * @returns {any} the selected state
 *
 * @example
 *
 * import React from 'react'
 * import { useSelector } from 'react-redux'
 *
 * export const CounterComponent = () => {
 *   const counter = useSelector(state => state.counter)
 *   return <div>{counter}</div>
 * }
 */

const useSelector_useSelector = /*#__PURE__*/createSelectorHook();
// EXTERNAL MODULE: ./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js
var hoist_non_react_statics_cjs = __webpack_require__(679);
// EXTERNAL MODULE: ./node_modules/react-is/index.js
var react_is = __webpack_require__(864);
;// CONCATENATED MODULE: ./node_modules/react-redux/es/utils/Subscription.js
 // encapsulates the subscription logic for connecting a component to the redux store, as
// well as nesting subscriptions of descendant components, so that we can ensure the
// ancestor components re-render before descendants

function createListenerCollection() {
  const batch = getBatch();
  let first = null;
  let last = null;
  return {
    clear() {
      first = null;
      last = null;
    },

    notify() {
      batch(() => {
        let listener = first;

        while (listener) {
          listener.callback();
          listener = listener.next;
        }
      });
    },

    get() {
      let listeners = [];
      let listener = first;

      while (listener) {
        listeners.push(listener);
        listener = listener.next;
      }

      return listeners;
    },

    subscribe(callback) {
      let isSubscribed = true;
      let listener = last = {
        callback,
        next: null,
        prev: last
      };

      if (listener.prev) {
        listener.prev.next = listener;
      } else {
        first = listener;
      }

      return function unsubscribe() {
        if (!isSubscribed || first === null) return;
        isSubscribed = false;

        if (listener.next) {
          listener.next.prev = listener.prev;
        } else {
          last = listener.prev;
        }

        if (listener.prev) {
          listener.prev.next = listener.next;
        } else {
          first = listener.next;
        }
      };
    }

  };
}

const nullListeners = {
  notify() {},

  get: () => []
};
function Subscription_createSubscription(store, parentSub) {
  let unsubscribe;
  let listeners = nullListeners;

  function addNestedSub(listener) {
    trySubscribe();
    return listeners.subscribe(listener);
  }

  function notifyNestedSubs() {
    listeners.notify();
  }

  function handleChangeWrapper() {
    if (subscription.onStateChange) {
      subscription.onStateChange();
    }
  }

  function isSubscribed() {
    return Boolean(unsubscribe);
  }

  function trySubscribe() {
    if (!unsubscribe) {
      unsubscribe = parentSub ? parentSub.addNestedSub(handleChangeWrapper) : store.subscribe(handleChangeWrapper);
      listeners = createListenerCollection();
    }
  }

  function tryUnsubscribe() {
    if (unsubscribe) {
      unsubscribe();
      unsubscribe = undefined;
      listeners.clear();
      listeners = nullListeners;
    }
  }

  const subscription = {
    addNestedSub,
    notifyNestedSubs,
    handleChangeWrapper,
    isSubscribed,
    trySubscribe,
    tryUnsubscribe,
    getListeners: () => listeners
  };
  return subscription;
}
;// CONCATENATED MODULE: ./node_modules/react-redux/es/utils/useIsomorphicLayoutEffect.js
 // React currently throws a warning when using useLayoutEffect on the server.
// To get around it, we can conditionally useEffect on the server (no-op) and
// useLayoutEffect in the browser. We need useLayoutEffect to ensure the store
// subscription callback always has the selector from the latest render commit
// available, otherwise a store update may happen between render and the effect,
// which may cause missed updates; we also must ensure the store subscription
// is created synchronously, otherwise a store update may occur before the
// subscription is created and an inconsistent state may be observed
// Matches logic in React's `shared/ExecutionEnvironment` file

const canUseDOM = !!(typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined');
const useIsomorphicLayoutEffect_useIsomorphicLayoutEffect = canUseDOM ? react.useLayoutEffect : react.useEffect;
;// CONCATENATED MODULE: ./node_modules/react-redux/es/components/connect.js


const _excluded = (/* unused pure expression or super */ null && (["reactReduxForwardedRef"]));

/* eslint-disable valid-jsdoc, @typescript-eslint/no-unused-vars */













let useSyncExternalStore = (/* unused pure expression or super */ null && (notInitialized));
const initializeConnect = fn => {
  useSyncExternalStore = fn;
}; // Define some constant arrays just to avoid re-creating these

const EMPTY_ARRAY = (/* unused pure expression or super */ null && ([null, 0]));
const NO_SUBSCRIPTION_ARRAY = (/* unused pure expression or super */ null && ([null, null])); // Attempts to stringify whatever not-really-a-component value we were given
// for logging in an error message

const stringifyComponent = Comp => {
  try {
    return JSON.stringify(Comp);
  } catch (err) {
    return String(Comp);
  }
};

// This is "just" a `useLayoutEffect`, but with two modifications:
// - we need to fall back to `useEffect` in SSR to avoid annoying warnings
// - we extract this to a separate function to avoid closing over values
//   and causing memory leaks
function useIsomorphicLayoutEffectWithArgs(effectFunc, effectArgs, dependencies) {
  useIsomorphicLayoutEffect(() => effectFunc(...effectArgs), dependencies);
} // Effect callback, extracted: assign the latest props values to refs for later usage


function captureWrapperProps(lastWrapperProps, lastChildProps, renderIsScheduled, wrapperProps, // actualChildProps: unknown,
childPropsFromStoreUpdate, notifyNestedSubs) {
  // We want to capture the wrapper props and child props we used for later comparisons
  lastWrapperProps.current = wrapperProps;
  renderIsScheduled.current = false; // If the render was from a store update, clear out that reference and cascade the subscriber update

  if (childPropsFromStoreUpdate.current) {
    childPropsFromStoreUpdate.current = null;
    notifyNestedSubs();
  }
} // Effect callback, extracted: subscribe to the Redux store or nearest connected ancestor,
// check for updates after dispatched actions, and trigger re-renders.


function subscribeUpdates(shouldHandleStateChanges, store, subscription, childPropsSelector, lastWrapperProps, lastChildProps, renderIsScheduled, isMounted, childPropsFromStoreUpdate, notifyNestedSubs, // forceComponentUpdateDispatch: React.Dispatch<any>,
additionalSubscribeListener) {
  // If we're not subscribed to the store, nothing to do here
  if (!shouldHandleStateChanges) return () => {}; // Capture values for checking if and when this component unmounts

  let didUnsubscribe = false;
  let lastThrownError = null; // We'll run this callback every time a store subscription update propagates to this component

  const checkForUpdates = () => {
    if (didUnsubscribe || !isMounted.current) {
      // Don't run stale listeners.
      // Redux doesn't guarantee unsubscriptions happen until next dispatch.
      return;
    } // TODO We're currently calling getState ourselves here, rather than letting `uSES` do it


    const latestStoreState = store.getState();
    let newChildProps, error;

    try {
      // Actually run the selector with the most recent store state and wrapper props
      // to determine what the child props should be
      newChildProps = childPropsSelector(latestStoreState, lastWrapperProps.current);
    } catch (e) {
      error = e;
      lastThrownError = e;
    }

    if (!error) {
      lastThrownError = null;
    } // If the child props haven't changed, nothing to do here - cascade the subscription update


    if (newChildProps === lastChildProps.current) {
      if (!renderIsScheduled.current) {
        notifyNestedSubs();
      }
    } else {
      // Save references to the new child props.  Note that we track the "child props from store update"
      // as a ref instead of a useState/useReducer because we need a way to determine if that value has
      // been processed.  If this went into useState/useReducer, we couldn't clear out the value without
      // forcing another re-render, which we don't want.
      lastChildProps.current = newChildProps;
      childPropsFromStoreUpdate.current = newChildProps;
      renderIsScheduled.current = true; // TODO This is hacky and not how `uSES` is meant to be used
      // Trigger the React `useSyncExternalStore` subscriber

      additionalSubscribeListener();
    }
  }; // Actually subscribe to the nearest connected ancestor (or store)


  subscription.onStateChange = checkForUpdates;
  subscription.trySubscribe(); // Pull data from the store after first render in case the store has
  // changed since we began.

  checkForUpdates();

  const unsubscribeWrapper = () => {
    didUnsubscribe = true;
    subscription.tryUnsubscribe();
    subscription.onStateChange = null;

    if (lastThrownError) {
      // It's possible that we caught an error due to a bad mapState function, but the
      // parent re-rendered without this component and we're about to unmount.
      // This shouldn't happen as long as we do top-down subscriptions correctly, but
      // if we ever do those wrong, this throw will surface the error in our tests.
      // In that case, throw the error from here so it doesn't get lost.
      throw lastThrownError;
    }
  };

  return unsubscribeWrapper;
} // Reducer initial state creation for our update reducer


const initStateUpdates = () => EMPTY_ARRAY;

function strictEqual(a, b) {
  return a === b;
}
/**
 * Infers the type of props that a connector will inject into a component.
 */


let hasWarnedAboutDeprecatedPureOption = false;
/**
 * Connects a React component to a Redux store.
 *
 * - Without arguments, just wraps the component, without changing the behavior / props
 *
 * - If 2 params are passed (3rd param, mergeProps, is skipped), default behavior
 * is to override ownProps (as stated in the docs), so what remains is everything that's
 * not a state or dispatch prop
 *
 * - When 3rd param is passed, we don't know if ownProps propagate and whether they
 * should be valid component props, because it depends on mergeProps implementation.
 * As such, it is the user's responsibility to extend ownProps interface from state or
 * dispatch props or both when applicable
 *
 * @param mapStateToProps A function that extracts values from state
 * @param mapDispatchToProps Setup for dispatching actions
 * @param mergeProps Optional callback to merge state and dispatch props together
 * @param options Options for configuring the connection
 *
 */

function connect(mapStateToProps, mapDispatchToProps, mergeProps, {
  // The `pure` option has been removed, so TS doesn't like us destructuring this to check its existence.
  // @ts-ignore
  pure,
  areStatesEqual = strictEqual,
  areOwnPropsEqual = shallowEqual,
  areStatePropsEqual = shallowEqual,
  areMergedPropsEqual = shallowEqual,
  // use React's forwardRef to expose a ref of the wrapped component
  forwardRef = false,
  // the context consumer to use
  context = ReactReduxContext
} = {}) {
  if (false) {}

  const Context = context;
  const initMapStateToProps = mapStateToPropsFactory(mapStateToProps);
  const initMapDispatchToProps = mapDispatchToPropsFactory(mapDispatchToProps);
  const initMergeProps = mergePropsFactory(mergeProps);
  const shouldHandleStateChanges = Boolean(mapStateToProps);

  const wrapWithConnect = WrappedComponent => {
    if (false) {}

    const wrappedComponentName = WrappedComponent.displayName || WrappedComponent.name || 'Component';
    const displayName = `Connect(${wrappedComponentName})`;
    const selectorFactoryOptions = {
      shouldHandleStateChanges,
      displayName,
      wrappedComponentName,
      WrappedComponent,
      // @ts-ignore
      initMapStateToProps,
      // @ts-ignore
      initMapDispatchToProps,
      initMergeProps,
      areStatesEqual,
      areStatePropsEqual,
      areOwnPropsEqual,
      areMergedPropsEqual
    };

    function ConnectFunction(props) {
      const [propsContext, reactReduxForwardedRef, wrapperProps] = useMemo(() => {
        // Distinguish between actual "data" props that were passed to the wrapper component,
        // and values needed to control behavior (forwarded refs, alternate context instances).
        // To maintain the wrapperProps object reference, memoize this destructuring.
        const {
          reactReduxForwardedRef
        } = props,
              wrapperProps = _objectWithoutPropertiesLoose(props, _excluded);

        return [props.context, reactReduxForwardedRef, wrapperProps];
      }, [props]);
      const ContextToUse = useMemo(() => {
        // Users may optionally pass in a custom context instance to use instead of our ReactReduxContext.
        // Memoize the check that determines which context instance we should use.
        return propsContext && propsContext.Consumer && // @ts-ignore
        isContextConsumer( /*#__PURE__*/React.createElement(propsContext.Consumer, null)) ? propsContext : Context;
      }, [propsContext, Context]); // Retrieve the store and ancestor subscription via context, if available

      const contextValue = useContext(ContextToUse); // The store _must_ exist as either a prop or in context.
      // We'll check to see if it _looks_ like a Redux store first.
      // This allows us to pass through a `store` prop that is just a plain value.

      const didStoreComeFromProps = Boolean(props.store) && Boolean(props.store.getState) && Boolean(props.store.dispatch);
      const didStoreComeFromContext = Boolean(contextValue) && Boolean(contextValue.store);

      if (false) {} // Based on the previous check, one of these must be true


      const store = didStoreComeFromProps ? props.store : contextValue.store;
      const getServerState = didStoreComeFromContext ? contextValue.getServerState : store.getState;
      const childPropsSelector = useMemo(() => {
        // The child props selector needs the store reference as an input.
        // Re-create this selector whenever the store changes.
        return defaultSelectorFactory(store.dispatch, selectorFactoryOptions);
      }, [store]);
      const [subscription, notifyNestedSubs] = useMemo(() => {
        if (!shouldHandleStateChanges) return NO_SUBSCRIPTION_ARRAY; // This Subscription's source should match where store came from: props vs. context. A component
        // connected to the store via props shouldn't use subscription from context, or vice versa.

        const subscription = createSubscription(store, didStoreComeFromProps ? undefined : contextValue.subscription); // `notifyNestedSubs` is duplicated to handle the case where the component is unmounted in
        // the middle of the notification loop, where `subscription` will then be null. This can
        // probably be avoided if Subscription's listeners logic is changed to not call listeners
        // that have been unsubscribed in the  middle of the notification loop.

        const notifyNestedSubs = subscription.notifyNestedSubs.bind(subscription);
        return [subscription, notifyNestedSubs];
      }, [store, didStoreComeFromProps, contextValue]); // Determine what {store, subscription} value should be put into nested context, if necessary,
      // and memoize that value to avoid unnecessary context updates.

      const overriddenContextValue = useMemo(() => {
        if (didStoreComeFromProps) {
          // This component is directly subscribed to a store from props.
          // We don't want descendants reading from this store - pass down whatever
          // the existing context value is from the nearest connected ancestor.
          return contextValue;
        } // Otherwise, put this component's subscription instance into context, so that
        // connected descendants won't update until after this component is done


        return _extends({}, contextValue, {
          subscription
        });
      }, [didStoreComeFromProps, contextValue, subscription]); // Set up refs to coordinate values between the subscription effect and the render logic

      const lastChildProps = useRef();
      const lastWrapperProps = useRef(wrapperProps);
      const childPropsFromStoreUpdate = useRef();
      const renderIsScheduled = useRef(false);
      const isProcessingDispatch = useRef(false);
      const isMounted = useRef(false);
      const latestSubscriptionCallbackError = useRef();
      useIsomorphicLayoutEffect(() => {
        isMounted.current = true;
        return () => {
          isMounted.current = false;
        };
      }, []);
      const actualChildPropsSelector = useMemo(() => {
        const selector = () => {
          // Tricky logic here:
          // - This render may have been triggered by a Redux store update that produced new child props
          // - However, we may have gotten new wrapper props after that
          // If we have new child props, and the same wrapper props, we know we should use the new child props as-is.
          // But, if we have new wrapper props, those might change the child props, so we have to recalculate things.
          // So, we'll use the child props from store update only if the wrapper props are the same as last time.
          if (childPropsFromStoreUpdate.current && wrapperProps === lastWrapperProps.current) {
            return childPropsFromStoreUpdate.current;
          } // TODO We're reading the store directly in render() here. Bad idea?
          // This will likely cause Bad Things (TM) to happen in Concurrent Mode.
          // Note that we do this because on renders _not_ caused by store updates, we need the latest store state
          // to determine what the child props should be.


          return childPropsSelector(store.getState(), wrapperProps);
        };

        return selector;
      }, [store, wrapperProps]); // We need this to execute synchronously every time we re-render. However, React warns
      // about useLayoutEffect in SSR, so we try to detect environment and fall back to
      // just useEffect instead to avoid the warning, since neither will run anyway.

      const subscribeForReact = useMemo(() => {
        const subscribe = reactListener => {
          if (!subscription) {
            return () => {};
          }

          return subscribeUpdates(shouldHandleStateChanges, store, subscription, // @ts-ignore
          childPropsSelector, lastWrapperProps, lastChildProps, renderIsScheduled, isMounted, childPropsFromStoreUpdate, notifyNestedSubs, reactListener);
        };

        return subscribe;
      }, [subscription]);
      useIsomorphicLayoutEffectWithArgs(captureWrapperProps, [lastWrapperProps, lastChildProps, renderIsScheduled, wrapperProps, childPropsFromStoreUpdate, notifyNestedSubs]);
      let actualChildProps;

      try {
        actualChildProps = useSyncExternalStore( // TODO We're passing through a big wrapper that does a bunch of extra side effects besides subscribing
        subscribeForReact, // TODO This is incredibly hacky. We've already processed the store update and calculated new child props,
        // TODO and we're just passing that through so it triggers a re-render for us rather than relying on `uSES`.
        actualChildPropsSelector, getServerState ? () => childPropsSelector(getServerState(), wrapperProps) : actualChildPropsSelector);
      } catch (err) {
        if (latestSubscriptionCallbackError.current) {
          ;
          err.message += `\nThe error may be correlated with this previous error:\n${latestSubscriptionCallbackError.current.stack}\n\n`;
        }

        throw err;
      }

      useIsomorphicLayoutEffect(() => {
        latestSubscriptionCallbackError.current = undefined;
        childPropsFromStoreUpdate.current = undefined;
        lastChildProps.current = actualChildProps;
      }); // Now that all that's done, we can finally try to actually render the child component.
      // We memoize the elements for the rendered child component as an optimization.

      const renderedWrappedComponent = useMemo(() => {
        return (
          /*#__PURE__*/
          // @ts-ignore
          React.createElement(WrappedComponent, _extends({}, actualChildProps, {
            ref: reactReduxForwardedRef
          }))
        );
      }, [reactReduxForwardedRef, WrappedComponent, actualChildProps]); // If React sees the exact same element reference as last time, it bails out of re-rendering
      // that child, same as if it was wrapped in React.memo() or returned false from shouldComponentUpdate.

      const renderedChild = useMemo(() => {
        if (shouldHandleStateChanges) {
          // If this component is subscribed to store updates, we need to pass its own
          // subscription instance down to our descendants. That means rendering the same
          // Context instance, and putting a different value into the context.
          return /*#__PURE__*/React.createElement(ContextToUse.Provider, {
            value: overriddenContextValue
          }, renderedWrappedComponent);
        }

        return renderedWrappedComponent;
      }, [ContextToUse, renderedWrappedComponent, overriddenContextValue]);
      return renderedChild;
    }

    const _Connect = React.memo(ConnectFunction);

    // Add a hacky cast to get the right output type
    const Connect = _Connect;
    Connect.WrappedComponent = WrappedComponent;
    Connect.displayName = ConnectFunction.displayName = displayName;

    if (forwardRef) {
      const _forwarded = React.forwardRef(function forwardConnectRef(props, ref) {
        // @ts-ignore
        return /*#__PURE__*/React.createElement(Connect, _extends({}, props, {
          reactReduxForwardedRef: ref
        }));
      });

      const forwarded = _forwarded;
      forwarded.displayName = displayName;
      forwarded.WrappedComponent = WrappedComponent;
      return hoistStatics(forwarded, WrappedComponent);
    }

    return hoistStatics(Connect, WrappedComponent);
  };

  return wrapWithConnect;
}

/* harmony default export */ const components_connect = ((/* unused pure expression or super */ null && (connect)));
;// CONCATENATED MODULE: ./node_modules/react-redux/es/components/Provider.js





function Provider_Provider({
  store,
  context,
  children,
  serverState
}) {
  const contextValue = (0,react.useMemo)(() => {
    const subscription = Subscription_createSubscription(store);
    return {
      store,
      subscription,
      getServerState: serverState ? () => serverState : undefined
    };
  }, [store, serverState]);
  const previousState = (0,react.useMemo)(() => store.getState(), [store]);
  useIsomorphicLayoutEffect_useIsomorphicLayoutEffect(() => {
    const {
      subscription
    } = contextValue;
    subscription.onStateChange = subscription.notifyNestedSubs;
    subscription.trySubscribe();

    if (previousState !== store.getState()) {
      subscription.notifyNestedSubs();
    }

    return () => {
      subscription.tryUnsubscribe();
      subscription.onStateChange = undefined;
    };
  }, [contextValue, previousState]);
  const Context = context || Context_ReactReduxContext; // @ts-ignore 'AnyAction' is assignable to the constraint of type 'A', but 'A' could be instantiated with a different subtype

  return /*#__PURE__*/react.createElement(Context.Provider, {
    value: contextValue
  }, children);
}

/* harmony default export */ const components_Provider = (Provider_Provider);
;// CONCATENATED MODULE: ./node_modules/react-redux/es/hooks/useStore.js



/**
 * Hook factory, which creates a `useStore` hook bound to a given context.
 *
 * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.
 * @returns {Function} A `useStore` hook bound to the specified context.
 */

function createStoreHook(context = Context_ReactReduxContext) {
  const useReduxContext = // @ts-ignore
  context === Context_ReactReduxContext ? useReduxContext_useReduxContext : () => (0,react.useContext)(context);
  return function useStore() {
    const {
      store
    } = useReduxContext(); // @ts-ignore

    return store;
  };
}
/**
 * A hook to access the redux store.
 *
 * @returns {any} the redux store
 *
 * @example
 *
 * import React from 'react'
 * import { useStore } from 'react-redux'
 *
 * export const ExampleComponent = () => {
 *   const store = useStore()
 *   return <div>{store.getState()}</div>
 * }
 */

const useStore_useStore = /*#__PURE__*/createStoreHook();
;// CONCATENATED MODULE: ./node_modules/react-redux/es/hooks/useDispatch.js


/**
 * Hook factory, which creates a `useDispatch` hook bound to a given context.
 *
 * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.
 * @returns {Function} A `useDispatch` hook bound to the specified context.
 */

function createDispatchHook(context = Context_ReactReduxContext) {
  const useStore = // @ts-ignore
  context === Context_ReactReduxContext ? useStore_useStore : createStoreHook(context);
  return function useDispatch() {
    const store = useStore(); // @ts-ignore

    return store.dispatch;
  };
}
/**
 * A hook to access the redux `dispatch` function.
 *
 * @returns {any|function} redux store's `dispatch` function
 *
 * @example
 *
 * import React, { useCallback } from 'react'
 * import { useDispatch } from 'react-redux'
 *
 * export const CounterComponent = ({ value }) => {
 *   const dispatch = useDispatch()
 *   const increaseCounter = useCallback(() => dispatch({ type: 'increase-counter' }), [])
 *   return (
 *     <div>
 *       <span>{value}</span>
 *       <button onClick={increaseCounter}>Increase counter</button>
 *     </div>
 *   )
 * }
 */

const useDispatch_useDispatch = /*#__PURE__*/createDispatchHook();
;// CONCATENATED MODULE: ./node_modules/react-redux/es/utils/shallowEqual.js
function is(x, y) {
  if (x === y) {
    return x !== 0 || y !== 0 || 1 / x === 1 / y;
  } else {
    return x !== x && y !== y;
  }
}

function shallowEqual_shallowEqual(objA, objB) {
  if (is(objA, objB)) return true;

  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
    return false;
  }

  const keysA = Object.keys(objA);
  const keysB = Object.keys(objB);
  if (keysA.length !== keysB.length) return false;

  for (let i = 0; i < keysA.length; i++) {
    if (!Object.prototype.hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
      return false;
    }
  }

  return true;
}
;// CONCATENATED MODULE: ./node_modules/react-redux/es/exports.js









;// CONCATENATED MODULE: ./node_modules/react-redux/es/index.js
// The primary entry point assumes we're working with standard ReactDOM/RN, but
// older versions that do not include `useSyncExternalStore` (React 16.9 - 17.x).
// Because of that, the useSyncExternalStore compat shim is needed.






initializeUseSelector(with_selector.useSyncExternalStoreWithSelector);
initializeConnect(shim.useSyncExternalStore); // Enable batched updates in our subscriptions for use
// with standard React renderers (ReactDOM, React Native)

setBatch(react_dom.unstable_batchedUpdates);


;// CONCATENATED MODULE: ./node_modules/@remix-run/router/dist/router.js
/**
 * @remix-run/router v1.2.1
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
function router_extends() {
  router_extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };
  return router_extends.apply(this, arguments);
}

////////////////////////////////////////////////////////////////////////////////
//#region Types and Constants
////////////////////////////////////////////////////////////////////////////////

/**
 * Actions represent the type of change to a location value.
 */
var Action;

(function (Action) {
  /**
   * A POP indicates a change to an arbitrary index in the history stack, such
   * as a back or forward navigation. It does not describe the direction of the
   * navigation, only that the current index changed.
   *
   * Note: This is the default action for newly created history objects.
   */
  Action["Pop"] = "POP";
  /**
   * A PUSH indicates a new entry being added to the history stack, such as when
   * a link is clicked and a new page loads. When this happens, all subsequent
   * entries in the stack are lost.
   */

  Action["Push"] = "PUSH";
  /**
   * A REPLACE indicates the entry at the current index in the history stack
   * being replaced by a new one.
   */

  Action["Replace"] = "REPLACE";
})(Action || (Action = {}));

const PopStateEventType = "popstate";
/**
 * Memory history stores the current location in memory. It is designed for use
 * in stateful non-browser environments like tests and React Native.
 */

function router_createMemoryHistory(options) {
  if (options === void 0) {
    options = {};
  }

  let {
    initialEntries = ["/"],
    initialIndex,
    v5Compat = false
  } = options;
  let entries; // Declare so we can access from createMemoryLocation

  entries = initialEntries.map((entry, index) => createMemoryLocation(entry, typeof entry === "string" ? null : entry.state, index === 0 ? "default" : undefined));
  let index = clampIndex(initialIndex == null ? entries.length - 1 : initialIndex);
  let action = Action.Pop;
  let listener = null;

  function clampIndex(n) {
    return Math.min(Math.max(n, 0), entries.length - 1);
  }

  function getCurrentLocation() {
    return entries[index];
  }

  function createMemoryLocation(to, state, key) {
    if (state === void 0) {
      state = null;
    }

    let location = createLocation(entries ? getCurrentLocation().pathname : "/", to, state, key);
    warning$1(location.pathname.charAt(0) === "/", "relative pathnames are not supported in memory history: " + JSON.stringify(to));
    return location;
  }

  let history = {
    get index() {
      return index;
    },

    get action() {
      return action;
    },

    get location() {
      return getCurrentLocation();
    },

    createHref(to) {
      return typeof to === "string" ? to : router_createPath(to);
    },

    encodeLocation(to) {
      let path = typeof to === "string" ? parsePath(to) : to;
      return {
        pathname: path.pathname || "",
        search: path.search || "",
        hash: path.hash || ""
      };
    },

    push(to, state) {
      action = Action.Push;
      let nextLocation = createMemoryLocation(to, state);
      index += 1;
      entries.splice(index, entries.length, nextLocation);

      if (v5Compat && listener) {
        listener({
          action,
          location: nextLocation
        });
      }
    },

    replace(to, state) {
      action = Action.Replace;
      let nextLocation = createMemoryLocation(to, state);
      entries[index] = nextLocation;

      if (v5Compat && listener) {
        listener({
          action,
          location: nextLocation
        });
      }
    },

    go(delta) {
      action = Action.Pop;
      index = clampIndex(index + delta);

      if (listener) {
        listener({
          action,
          location: getCurrentLocation()
        });
      }
    },

    listen(fn) {
      listener = fn;
      return () => {
        listener = null;
      };
    }

  };
  return history;
}
/**
 * Browser history stores the location in regular URLs. This is the standard for
 * most web apps, but it requires some configuration on the server to ensure you
 * serve the same app at multiple URLs.
 *
 * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory
 */

function router_createBrowserHistory(options) {
  if (options === void 0) {
    options = {};
  }

  function createBrowserLocation(window, globalHistory) {
    let {
      pathname,
      search,
      hash
    } = window.location;
    return createLocation("", {
      pathname,
      search,
      hash
    }, // state defaults to `null` because `window.history.state` does
    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || "default");
  }

  function createBrowserHref(window, to) {
    return typeof to === "string" ? to : router_createPath(to);
  }

  return getUrlBasedHistory(createBrowserLocation, createBrowserHref, null, options);
}
/**
 * Hash history stores the location in window.location.hash. This makes it ideal
 * for situations where you don't want to send the location to the server for
 * some reason, either because you do cannot configure it or the URL space is
 * reserved for something else.
 *
 * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory
 */

function router_createHashHistory(options) {
  if (options === void 0) {
    options = {};
  }

  function createHashLocation(window, globalHistory) {
    let {
      pathname = "/",
      search = "",
      hash = ""
    } = parsePath(window.location.hash.substr(1));
    return createLocation("", {
      pathname,
      search,
      hash
    }, // state defaults to `null` because `window.history.state` does
    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || "default");
  }

  function createHashHref(window, to) {
    let base = window.document.querySelector("base");
    let href = "";

    if (base && base.getAttribute("href")) {
      let url = window.location.href;
      let hashIndex = url.indexOf("#");
      href = hashIndex === -1 ? url : url.slice(0, hashIndex);
    }

    return href + "#" + (typeof to === "string" ? to : router_createPath(to));
  }

  function validateHashLocation(location, to) {
    warning$1(location.pathname.charAt(0) === "/", "relative pathnames are not supported in hash history.push(" + JSON.stringify(to) + ")");
  }

  return getUrlBasedHistory(createHashLocation, createHashHref, validateHashLocation, options);
}
function router_invariant(value, message) {
  if (value === false || value === null || typeof value === "undefined") {
    throw new Error(message);
  }
}

function warning$1(cond, message) {
  if (!cond) {
    // eslint-disable-next-line no-console
    if (typeof console !== "undefined") console.warn(message);

    try {
      // Welcome to debugging history!
      //
      // This error is thrown as a convenience so you can more easily
      // find the source for a warning that appears in the console by
      // enabling "pause on exceptions" in your JavaScript debugger.
      throw new Error(message); // eslint-disable-next-line no-empty
    } catch (e) {}
  }
}

function createKey() {
  return Math.random().toString(36).substr(2, 8);
}
/**
 * For browser-based histories, we combine the state and key into an object
 */


function getHistoryState(location) {
  return {
    usr: location.state,
    key: location.key
  };
}
/**
 * Creates a Location object with a unique key from the given Path
 */


function createLocation(current, to, state, key) {
  if (state === void 0) {
    state = null;
  }

  let location = router_extends({
    pathname: typeof current === "string" ? current : current.pathname,
    search: "",
    hash: ""
  }, typeof to === "string" ? parsePath(to) : to, {
    state,
    // TODO: This could be cleaned up.  push/replace should probably just take
    // full Locations now and avoid the need to run through this flow at all
    // But that's a pretty big refactor to the current test suite so going to
    // keep as is for the time being and just let any incoming keys take precedence
    key: to && to.key || key || createKey()
  });

  return location;
}
/**
 * Creates a string URL path from the given pathname, search, and hash components.
 */

function router_createPath(_ref) {
  let {
    pathname = "/",
    search = "",
    hash = ""
  } = _ref;
  if (search && search !== "?") pathname += search.charAt(0) === "?" ? search : "?" + search;
  if (hash && hash !== "#") pathname += hash.charAt(0) === "#" ? hash : "#" + hash;
  return pathname;
}
/**
 * Parses a string URL path into its separate pathname, search, and hash components.
 */

function parsePath(path) {
  let parsedPath = {};

  if (path) {
    let hashIndex = path.indexOf("#");

    if (hashIndex >= 0) {
      parsedPath.hash = path.substr(hashIndex);
      path = path.substr(0, hashIndex);
    }

    let searchIndex = path.indexOf("?");

    if (searchIndex >= 0) {
      parsedPath.search = path.substr(searchIndex);
      path = path.substr(0, searchIndex);
    }

    if (path) {
      parsedPath.pathname = path;
    }
  }

  return parsedPath;
}
function createClientSideURL(location) {
  // window.location.origin is "null" (the literal string value) in Firefox
  // under certain conditions, notably when serving from a local HTML file
  // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297
  let base = typeof window !== "undefined" && typeof window.location !== "undefined" && window.location.origin !== "null" ? window.location.origin : window.location.href;
  let href = typeof location === "string" ? location : router_createPath(location);
  router_invariant(base, "No window.location.(origin|href) available to create URL for href: " + href);
  return new URL(href, base);
}

function getUrlBasedHistory(getLocation, createHref, validateLocation, options) {
  if (options === void 0) {
    options = {};
  }

  let {
    window = document.defaultView,
    v5Compat = false
  } = options;
  let globalHistory = window.history;
  let action = Action.Pop;
  let listener = null;

  function handlePop() {
    action = Action.Pop;

    if (listener) {
      listener({
        action,
        location: history.location
      });
    }
  }

  function push(to, state) {
    action = Action.Push;
    let location = createLocation(history.location, to, state);
    if (validateLocation) validateLocation(location, to);
    let historyState = getHistoryState(location);
    let url = history.createHref(location); // try...catch because iOS limits us to 100 pushState calls :/

    try {
      globalHistory.pushState(historyState, "", url);
    } catch (error) {
      // They are going to lose state here, but there is no real
      // way to warn them about it since the page will refresh...
      window.location.assign(url);
    }

    if (v5Compat && listener) {
      listener({
        action,
        location: history.location
      });
    }
  }

  function replace(to, state) {
    action = Action.Replace;
    let location = createLocation(history.location, to, state);
    if (validateLocation) validateLocation(location, to);
    let historyState = getHistoryState(location);
    let url = history.createHref(location);
    globalHistory.replaceState(historyState, "", url);

    if (v5Compat && listener) {
      listener({
        action,
        location: history.location
      });
    }
  }

  let history = {
    get action() {
      return action;
    },

    get location() {
      return getLocation(window, globalHistory);
    },

    listen(fn) {
      if (listener) {
        throw new Error("A history only accepts one active listener");
      }

      window.addEventListener(PopStateEventType, handlePop);
      listener = fn;
      return () => {
        window.removeEventListener(PopStateEventType, handlePop);
        listener = null;
      };
    },

    createHref(to) {
      return createHref(window, to);
    },

    encodeLocation(to) {
      // Encode a Location the same way window.location would
      let url = createClientSideURL(typeof to === "string" ? to : router_createPath(to));
      return {
        pathname: url.pathname,
        search: url.search,
        hash: url.hash
      };
    },

    push,
    replace,

    go(n) {
      return globalHistory.go(n);
    }

  };
  return history;
} //#endregion

var ResultType;

(function (ResultType) {
  ResultType["data"] = "data";
  ResultType["deferred"] = "deferred";
  ResultType["redirect"] = "redirect";
  ResultType["error"] = "error";
})(ResultType || (ResultType = {}));

function isIndexRoute(route) {
  return route.index === true;
} // Walk the route tree generating unique IDs where necessary so we are working
// solely with AgnosticDataRouteObject's within the Router


function convertRoutesToDataRoutes(routes, parentPath, allIds) {
  if (parentPath === void 0) {
    parentPath = [];
  }

  if (allIds === void 0) {
    allIds = new Set();
  }

  return routes.map((route, index) => {
    let treePath = [...parentPath, index];
    let id = typeof route.id === "string" ? route.id : treePath.join("-");
    router_invariant(route.index !== true || !route.children, "Cannot specify children on an index route");
    router_invariant(!allIds.has(id), "Found a route id collision on id \"" + id + "\".  Route " + "id's must be globally unique within Data Router usages");
    allIds.add(id);

    if (isIndexRoute(route)) {
      let indexRoute = router_extends({}, route, {
        id
      });

      return indexRoute;
    } else {
      let pathOrLayoutRoute = router_extends({}, route, {
        id,
        children: route.children ? convertRoutesToDataRoutes(route.children, treePath, allIds) : undefined
      });

      return pathOrLayoutRoute;
    }
  });
}
/**
 * Matches the given routes to a location and returns the match data.
 *
 * @see https://reactrouter.com/utils/match-routes
 */

function matchRoutes(routes, locationArg, basename) {
  if (basename === void 0) {
    basename = "/";
  }

  let location = typeof locationArg === "string" ? parsePath(locationArg) : locationArg;
  let pathname = stripBasename(location.pathname || "/", basename);

  if (pathname == null) {
    return null;
  }

  let branches = flattenRoutes(routes);
  rankRouteBranches(branches);
  let matches = null;

  for (let i = 0; matches == null && i < branches.length; ++i) {
    matches = matchRouteBranch(branches[i], // Incoming pathnames are generally encoded from either window.location
    // or from router.navigate, but we want to match against the unencoded
    // paths in the route definitions.  Memory router locations won't be
    // encoded here but there also shouldn't be anything to decode so this
    // should be a safe operation.  This avoids needing matchRoutes to be
    // history-aware.
    safelyDecodeURI(pathname));
  }

  return matches;
}

function flattenRoutes(routes, branches, parentsMeta, parentPath) {
  if (branches === void 0) {
    branches = [];
  }

  if (parentsMeta === void 0) {
    parentsMeta = [];
  }

  if (parentPath === void 0) {
    parentPath = "";
  }

  let flattenRoute = (route, index, relativePath) => {
    let meta = {
      relativePath: relativePath === undefined ? route.path || "" : relativePath,
      caseSensitive: route.caseSensitive === true,
      childrenIndex: index,
      route
    };

    if (meta.relativePath.startsWith("/")) {
      router_invariant(meta.relativePath.startsWith(parentPath), "Absolute route path \"" + meta.relativePath + "\" nested under path " + ("\"" + parentPath + "\" is not valid. An absolute child route path ") + "must start with the combined path of all its parent routes.");
      meta.relativePath = meta.relativePath.slice(parentPath.length);
    }

    let path = router_joinPaths([parentPath, meta.relativePath]);
    let routesMeta = parentsMeta.concat(meta); // Add the children before adding this route to the array so we traverse the
    // route tree depth-first and child routes appear before their parents in
    // the "flattened" version.

    if (route.children && route.children.length > 0) {
      router_invariant( // Our types know better, but runtime JS may not!
      // @ts-expect-error
      route.index !== true, "Index routes must not have child routes. Please remove " + ("all child routes from route path \"" + path + "\"."));
      flattenRoutes(route.children, branches, routesMeta, path);
    } // Routes without a path shouldn't ever match by themselves unless they are
    // index routes, so don't add them to the list of possible branches.


    if (route.path == null && !route.index) {
      return;
    }

    branches.push({
      path,
      score: computeScore(path, route.index),
      routesMeta
    });
  };

  routes.forEach((route, index) => {
    var _route$path;

    // coarse-grain check for optional params
    if (route.path === "" || !((_route$path = route.path) != null && _route$path.includes("?"))) {
      flattenRoute(route, index);
    } else {
      for (let exploded of explodeOptionalSegments(route.path)) {
        flattenRoute(route, index, exploded);
      }
    }
  });
  return branches;
}
/**
 * Computes all combinations of optional path segments for a given path,
 * excluding combinations that are ambiguous and of lower priority.
 *
 * For example, `/one/:two?/three/:four?/:five?` explodes to:
 * - `/one/three`
 * - `/one/:two/three`
 * - `/one/three/:four`
 * - `/one/three/:five`
 * - `/one/:two/three/:four`
 * - `/one/:two/three/:five`
 * - `/one/three/:four/:five`
 * - `/one/:two/three/:four/:five`
 */


function explodeOptionalSegments(path) {
  let segments = path.split("/");
  if (segments.length === 0) return [];
  let [first, ...rest] = segments; // Optional path segments are denoted by a trailing `?`

  let isOptional = first.endsWith("?"); // Compute the corresponding required segment: `foo?` -> `foo`

  let required = first.replace(/\?$/, "");

  if (rest.length === 0) {
    // Intepret empty string as omitting an optional segment
    // `["one", "", "three"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`
    return isOptional ? [required, ""] : [required];
  }

  let restExploded = explodeOptionalSegments(rest.join("/"));
  let result = []; // All child paths with the prefix.  Do this for all children before the
  // optional version for all children so we get consistent ordering where the
  // parent optional aspect is preferred as required.  Otherwise, we can get
  // child sections interspersed where deeper optional segments are higher than
  // parent optional segments, where for example, /:two would explodes _earlier_
  // then /:one.  By always including the parent as required _for all children_
  // first, we avoid this issue

  result.push(...restExploded.map(subpath => subpath === "" ? required : [required, subpath].join("/"))); // Then if this is an optional value, add all child versions without

  if (isOptional) {
    result.push(...restExploded);
  } // for absolute paths, ensure `/` instead of empty segment


  return result.map(exploded => path.startsWith("/") && exploded === "" ? "/" : exploded);
}

function rankRouteBranches(branches) {
  branches.sort((a, b) => a.score !== b.score ? b.score - a.score // Higher score first
  : compareIndexes(a.routesMeta.map(meta => meta.childrenIndex), b.routesMeta.map(meta => meta.childrenIndex)));
}

const paramRe = /^:\w+$/;
const dynamicSegmentValue = 3;
const indexRouteValue = 2;
const emptySegmentValue = 1;
const staticSegmentValue = 10;
const splatPenalty = -2;

const isSplat = s => s === "*";

function computeScore(path, index) {
  let segments = path.split("/");
  let initialScore = segments.length;

  if (segments.some(isSplat)) {
    initialScore += splatPenalty;
  }

  if (index) {
    initialScore += indexRouteValue;
  }

  return segments.filter(s => !isSplat(s)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === "" ? emptySegmentValue : staticSegmentValue), initialScore);
}

function compareIndexes(a, b) {
  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);
  return siblings ? // If two routes are siblings, we should try to match the earlier sibling
  // first. This allows people to have fine-grained control over the matching
  // behavior by simply putting routes with identical paths in the order they
  // want them tried.
  a[a.length - 1] - b[b.length - 1] : // Otherwise, it doesn't really make sense to rank non-siblings by index,
  // so they sort equally.
  0;
}

function matchRouteBranch(branch, pathname) {
  let {
    routesMeta
  } = branch;
  let matchedParams = {};
  let matchedPathname = "/";
  let matches = [];

  for (let i = 0; i < routesMeta.length; ++i) {
    let meta = routesMeta[i];
    let end = i === routesMeta.length - 1;
    let remainingPathname = matchedPathname === "/" ? pathname : pathname.slice(matchedPathname.length) || "/";
    let match = router_matchPath({
      path: meta.relativePath,
      caseSensitive: meta.caseSensitive,
      end
    }, remainingPathname);
    if (!match) return null;
    Object.assign(matchedParams, match.params);
    let route = meta.route;
    matches.push({
      // TODO: Can this as be avoided?
      params: matchedParams,
      pathname: router_joinPaths([matchedPathname, match.pathname]),
      pathnameBase: normalizePathname(router_joinPaths([matchedPathname, match.pathnameBase])),
      route
    });

    if (match.pathnameBase !== "/") {
      matchedPathname = router_joinPaths([matchedPathname, match.pathnameBase]);
    }
  }

  return matches;
}
/**
 * Returns a path with params interpolated.
 *
 * @see https://reactrouter.com/utils/generate-path
 */


function generatePath(originalPath, params) {
  if (params === void 0) {
    params = {};
  }

  let path = originalPath;

  if (path.endsWith("*") && path !== "*" && !path.endsWith("/*")) {
    warning(false, "Route path \"" + path + "\" will be treated as if it were " + ("\"" + path.replace(/\*$/, "/*") + "\" because the `*` character must ") + "always follow a `/` in the pattern. To get rid of this warning, " + ("please change the route path to \"" + path.replace(/\*$/, "/*") + "\"."));
    path = path.replace(/\*$/, "/*");
  }

  return path.replace(/^:(\w+)/g, (_, key) => {
    router_invariant(params[key] != null, "Missing \":" + key + "\" param");
    return params[key];
  }).replace(/\/:(\w+)/g, (_, key) => {
    router_invariant(params[key] != null, "Missing \":" + key + "\" param");
    return "/" + params[key];
  }).replace(/(\/?)\*/, (_, prefix, __, str) => {
    const star = "*";

    if (params[star] == null) {
      // If no splat was provided, trim the trailing slash _unless_ it's
      // the entire path
      return str === "/*" ? "/" : "";
    } // Apply the splat


    return "" + prefix + params[star];
  });
}
/**
 * Performs pattern matching on a URL pathname and returns information about
 * the match.
 *
 * @see https://reactrouter.com/utils/match-path
 */

function router_matchPath(pattern, pathname) {
  if (typeof pattern === "string") {
    pattern = {
      path: pattern,
      caseSensitive: false,
      end: true
    };
  }

  let [matcher, paramNames] = compilePath(pattern.path, pattern.caseSensitive, pattern.end);
  let match = pathname.match(matcher);
  if (!match) return null;
  let matchedPathname = match[0];
  let pathnameBase = matchedPathname.replace(/(.)\/+$/, "$1");
  let captureGroups = match.slice(1);
  let params = paramNames.reduce((memo, paramName, index) => {
    // We need to compute the pathnameBase here using the raw splat value
    // instead of using params["*"] later because it will be decoded then
    if (paramName === "*") {
      let splatValue = captureGroups[index] || "";
      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\/+$/, "$1");
    }

    memo[paramName] = safelyDecodeURIComponent(captureGroups[index] || "", paramName);
    return memo;
  }, {});
  return {
    params,
    pathname: matchedPathname,
    pathnameBase,
    pattern
  };
}

function compilePath(path, caseSensitive, end) {
  if (caseSensitive === void 0) {
    caseSensitive = false;
  }

  if (end === void 0) {
    end = true;
  }

  warning(path === "*" || !path.endsWith("*") || path.endsWith("/*"), "Route path \"" + path + "\" will be treated as if it were " + ("\"" + path.replace(/\*$/, "/*") + "\" because the `*` character must ") + "always follow a `/` in the pattern. To get rid of this warning, " + ("please change the route path to \"" + path.replace(/\*$/, "/*") + "\"."));
  let paramNames = [];
  let regexpSource = "^" + path.replace(/\/*\*?$/, "") // Ignore trailing / and /*, we'll handle it below
  .replace(/^\/*/, "/") // Make sure it has a leading /
  .replace(/[\\.*+^$?{}|()[\]]/g, "\\$&") // Escape special regex chars
  .replace(/\/:(\w+)/g, (_, paramName) => {
    paramNames.push(paramName);
    return "/([^\\/]+)";
  });

  if (path.endsWith("*")) {
    paramNames.push("*");
    regexpSource += path === "*" || path === "/*" ? "(.*)$" // Already matched the initial /, just match the rest
    : "(?:\\/(.+)|\\/*)$"; // Don't include the / in params["*"]
  } else if (end) {
    // When matching to the end, ignore trailing slashes
    regexpSource += "\\/*$";
  } else if (path !== "" && path !== "/") {
    // If our path is non-empty and contains anything beyond an initial slash,
    // then we have _some_ form of path in our regex so we should expect to
    // match only if we find the end of this path segment.  Look for an optional
    // non-captured trailing slash (to match a portion of the URL) or the end
    // of the path (if we've matched to the end).  We used to do this with a
    // word boundary but that gives false positives on routes like
    // /user-preferences since `-` counts as a word boundary.
    regexpSource += "(?:(?=\\/|$))";
  } else ;

  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : "i");
  return [matcher, paramNames];
}

function safelyDecodeURI(value) {
  try {
    return decodeURI(value);
  } catch (error) {
    warning(false, "The URL path \"" + value + "\" could not be decoded because it is is a " + "malformed URL segment. This is probably due to a bad percent " + ("encoding (" + error + ")."));
    return value;
  }
}

function safelyDecodeURIComponent(value, paramName) {
  try {
    return decodeURIComponent(value);
  } catch (error) {
    warning(false, "The value for the URL param \"" + paramName + "\" will not be decoded because" + (" the string \"" + value + "\" is a malformed URL segment. This is probably") + (" due to a bad percent encoding (" + error + ")."));
    return value;
  }
}
/**
 * @private
 */


function stripBasename(pathname, basename) {
  if (basename === "/") return pathname;

  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {
    return null;
  } // We want to leave trailing slash behavior in the user's control, so if they
  // specify a basename with a trailing slash, we should support it


  let startIndex = basename.endsWith("/") ? basename.length - 1 : basename.length;
  let nextChar = pathname.charAt(startIndex);

  if (nextChar && nextChar !== "/") {
    // pathname does not start with basename/
    return null;
  }

  return pathname.slice(startIndex) || "/";
}
/**
 * @private
 */

function warning(cond, message) {
  if (!cond) {
    // eslint-disable-next-line no-console
    if (typeof console !== "undefined") console.warn(message);

    try {
      // Welcome to debugging React Router!
      //
      // This error is thrown as a convenience so you can more easily
      // find the source for a warning that appears in the console by
      // enabling "pause on exceptions" in your JavaScript debugger.
      throw new Error(message); // eslint-disable-next-line no-empty
    } catch (e) {}
  }
}
/**
 * Returns a resolved path object relative to the given pathname.
 *
 * @see https://reactrouter.com/utils/resolve-path
 */

function resolvePath(to, fromPathname) {
  if (fromPathname === void 0) {
    fromPathname = "/";
  }

  let {
    pathname: toPathname,
    search = "",
    hash = ""
  } = typeof to === "string" ? parsePath(to) : to;
  let pathname = toPathname ? toPathname.startsWith("/") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;
  return {
    pathname,
    search: normalizeSearch(search),
    hash: normalizeHash(hash)
  };
}

function resolvePathname(relativePath, fromPathname) {
  let segments = fromPathname.replace(/\/+$/, "").split("/");
  let relativeSegments = relativePath.split("/");
  relativeSegments.forEach(segment => {
    if (segment === "..") {
      // Keep the root "" segment so the pathname starts at /
      if (segments.length > 1) segments.pop();
    } else if (segment !== ".") {
      segments.push(segment);
    }
  });
  return segments.length > 1 ? segments.join("/") : "/";
}

function getInvalidPathError(char, field, dest, path) {
  return "Cannot include a '" + char + "' character in a manually specified " + ("`to." + field + "` field [" + JSON.stringify(path) + "].  Please separate it out to the ") + ("`to." + dest + "` field. Alternatively you may provide the full path as ") + "a string in <Link to=\"...\"> and the router will parse it for you.";
}
/**
 * @private
 *
 * When processing relative navigation we want to ignore ancestor routes that
 * do not contribute to the path, such that index/pathless layout routes don't
 * interfere.
 *
 * For example, when moving a route element into an index route and/or a
 * pathless layout route, relative link behavior contained within should stay
 * the same.  Both of the following examples should link back to the root:
 *
 *   <Route path="/">
 *     <Route path="accounts" element={<Link to=".."}>
 *   </Route>
 *
 *   <Route path="/">
 *     <Route path="accounts">
 *       <Route element={<AccountsLayout />}>       // <-- Does not contribute
 *         <Route index element={<Link to=".."} />  // <-- Does not contribute
 *       </Route
 *     </Route>
 *   </Route>
 */


function getPathContributingMatches(matches) {
  return matches.filter((match, index) => index === 0 || match.route.path && match.route.path.length > 0);
}
/**
 * @private
 */

function router_resolveTo(toArg, routePathnames, locationPathname, isPathRelative) {
  if (isPathRelative === void 0) {
    isPathRelative = false;
  }

  let to;

  if (typeof toArg === "string") {
    to = parsePath(toArg);
  } else {
    to = router_extends({}, toArg);
    router_invariant(!to.pathname || !to.pathname.includes("?"), getInvalidPathError("?", "pathname", "search", to));
    router_invariant(!to.pathname || !to.pathname.includes("#"), getInvalidPathError("#", "pathname", "hash", to));
    router_invariant(!to.search || !to.search.includes("#"), getInvalidPathError("#", "search", "hash", to));
  }

  let isEmptyPath = toArg === "" || to.pathname === "";
  let toPathname = isEmptyPath ? "/" : to.pathname;
  let from; // Routing is relative to the current pathname if explicitly requested.
  //
  // If a pathname is explicitly provided in `to`, it should be relative to the
  // route context. This is explained in `Note on `<Link to>` values` in our
  // migration guide from v5 as a means of disambiguation between `to` values
  // that begin with `/` and those that do not. However, this is problematic for
  // `to` values that do not provide a pathname. `to` can simply be a search or
  // hash string, in which case we should assume that the navigation is relative
  // to the current location's pathname and *not* the route pathname.

  if (isPathRelative || toPathname == null) {
    from = locationPathname;
  } else {
    let routePathnameIndex = routePathnames.length - 1;

    if (toPathname.startsWith("..")) {
      let toSegments = toPathname.split("/"); // Each leading .. segment means "go up one route" instead of "go up one
      // URL segment".  This is a key difference from how <a href> works and a
      // major reason we call this a "to" value instead of a "href".

      while (toSegments[0] === "..") {
        toSegments.shift();
        routePathnameIndex -= 1;
      }

      to.pathname = toSegments.join("/");
    } // If there are more ".." segments than parent routes, resolve relative to
    // the root / URL.


    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : "/";
  }

  let path = resolvePath(to, from); // Ensure the pathname has a trailing slash if the original "to" had one

  let hasExplicitTrailingSlash = toPathname && toPathname !== "/" && toPathname.endsWith("/"); // Or if this was a link to the current path which has a trailing slash

  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === ".") && locationPathname.endsWith("/");

  if (!path.pathname.endsWith("/") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {
    path.pathname += "/";
  }

  return path;
}
/**
 * @private
 */

function getToPathname(to) {
  // Empty strings should be treated the same as / paths
  return to === "" || to.pathname === "" ? "/" : typeof to === "string" ? parsePath(to).pathname : to.pathname;
}
/**
 * @private
 */

const router_joinPaths = paths => paths.join("/").replace(/\/\/+/g, "/");
/**
 * @private
 */

const normalizePathname = pathname => pathname.replace(/\/+$/, "").replace(/^\/*/, "/");
/**
 * @private
 */

const normalizeSearch = search => !search || search === "?" ? "" : search.startsWith("?") ? search : "?" + search;
/**
 * @private
 */

const normalizeHash = hash => !hash || hash === "#" ? "" : hash.startsWith("#") ? hash : "#" + hash;
/**
 * This is a shortcut for creating `application/json` responses. Converts `data`
 * to JSON and sets the `Content-Type` header.
 */

const json = function json(data, init) {
  if (init === void 0) {
    init = {};
  }

  let responseInit = typeof init === "number" ? {
    status: init
  } : init;
  let headers = new Headers(responseInit.headers);

  if (!headers.has("Content-Type")) {
    headers.set("Content-Type", "application/json; charset=utf-8");
  }

  return new Response(JSON.stringify(data), router_extends({}, responseInit, {
    headers
  }));
};
class router_AbortedDeferredError extends Error {}
class DeferredData {
  constructor(data) {
    this.pendingKeys = new Set();
    this.subscriber = undefined;
    router_invariant(data && typeof data === "object" && !Array.isArray(data), "defer() only accepts plain objects"); // Set up an AbortController + Promise we can race against to exit early
    // cancellation

    let reject;
    this.abortPromise = new Promise((_, r) => reject = r);
    this.controller = new AbortController();

    let onAbort = () => reject(new router_AbortedDeferredError("Deferred data aborted"));

    this.unlistenAbortSignal = () => this.controller.signal.removeEventListener("abort", onAbort);

    this.controller.signal.addEventListener("abort", onAbort);
    this.data = Object.entries(data).reduce((acc, _ref) => {
      let [key, value] = _ref;
      return Object.assign(acc, {
        [key]: this.trackPromise(key, value)
      });
    }, {});
  }

  trackPromise(key, value) {
    if (!(value instanceof Promise)) {
      return value;
    }

    this.pendingKeys.add(key); // We store a little wrapper promise that will be extended with
    // _data/_error props upon resolve/reject

    let promise = Promise.race([value, this.abortPromise]).then(data => this.onSettle(promise, key, null, data), error => this.onSettle(promise, key, error)); // Register rejection listeners to avoid uncaught promise rejections on
    // errors or aborted deferred values

    promise.catch(() => {});
    Object.defineProperty(promise, "_tracked", {
      get: () => true
    });
    return promise;
  }

  onSettle(promise, key, error, data) {
    if (this.controller.signal.aborted && error instanceof router_AbortedDeferredError) {
      this.unlistenAbortSignal();
      Object.defineProperty(promise, "_error", {
        get: () => error
      });
      return Promise.reject(error);
    }

    this.pendingKeys.delete(key);

    if (this.done) {
      // Nothing left to abort!
      this.unlistenAbortSignal();
    }

    const subscriber = this.subscriber;

    if (error) {
      Object.defineProperty(promise, "_error", {
        get: () => error
      });
      subscriber && subscriber(false);
      return Promise.reject(error);
    }

    Object.defineProperty(promise, "_data", {
      get: () => data
    });
    subscriber && subscriber(false);
    return data;
  }

  subscribe(fn) {
    this.subscriber = fn;
  }

  cancel() {
    this.controller.abort();
    this.pendingKeys.forEach((v, k) => this.pendingKeys.delete(k));
    let subscriber = this.subscriber;
    subscriber && subscriber(true);
  }

  async resolveData(signal) {
    let aborted = false;

    if (!this.done) {
      let onAbort = () => this.cancel();

      signal.addEventListener("abort", onAbort);
      aborted = await new Promise(resolve => {
        this.subscribe(aborted => {
          signal.removeEventListener("abort", onAbort);

          if (aborted || this.done) {
            resolve(aborted);
          }
        });
      });
    }

    return aborted;
  }

  get done() {
    return this.pendingKeys.size === 0;
  }

  get unwrappedData() {
    router_invariant(this.data !== null && this.done, "Can only unwrap data on initialized and settled deferreds");
    return Object.entries(this.data).reduce((acc, _ref2) => {
      let [key, value] = _ref2;
      return Object.assign(acc, {
        [key]: unwrapTrackedPromise(value)
      });
    }, {});
  }

}

function isTrackedPromise(value) {
  return value instanceof Promise && value._tracked === true;
}

function unwrapTrackedPromise(value) {
  if (!isTrackedPromise(value)) {
    return value;
  }

  if (value._error) {
    throw value._error;
  }

  return value._data;
}

function defer(data) {
  return new DeferredData(data);
}
/**
 * A redirect response. Sets the status code and the `Location` header.
 * Defaults to "302 Found".
 */

const redirect = function redirect(url, init) {
  if (init === void 0) {
    init = 302;
  }

  let responseInit = init;

  if (typeof responseInit === "number") {
    responseInit = {
      status: responseInit
    };
  } else if (typeof responseInit.status === "undefined") {
    responseInit.status = 302;
  }

  let headers = new Headers(responseInit.headers);
  headers.set("Location", url);
  return new Response(null, router_extends({}, responseInit, {
    headers
  }));
};
/**
 * @private
 * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies
 */

class ErrorResponse {
  constructor(status, statusText, data, internal) {
    if (internal === void 0) {
      internal = false;
    }

    this.status = status;
    this.statusText = statusText || "";
    this.internal = internal;

    if (data instanceof Error) {
      this.data = data.toString();
      this.error = data;
    } else {
      this.data = data;
    }
  }

}
/**
 * Check if the given error is an ErrorResponse generated from a 4xx/5xx
 * Response throw from an action/loader
 */

function isRouteErrorResponse(e) {
  return e instanceof ErrorResponse;
}

const validMutationMethodsArr = ["post", "put", "patch", "delete"];
const validMutationMethods = new Set(validMutationMethodsArr);
const validRequestMethodsArr = ["get", ...validMutationMethodsArr];
const validRequestMethods = new Set(validRequestMethodsArr);
const redirectStatusCodes = new Set([301, 302, 303, 307, 308]);
const redirectPreserveMethodStatusCodes = new Set([307, 308]);
const IDLE_NAVIGATION = {
  state: "idle",
  location: undefined,
  formMethod: undefined,
  formAction: undefined,
  formEncType: undefined,
  formData: undefined
};
const IDLE_FETCHER = {
  state: "idle",
  data: undefined,
  formMethod: undefined,
  formAction: undefined,
  formEncType: undefined,
  formData: undefined
};
const isBrowser = typeof window !== "undefined" && typeof window.document !== "undefined" && typeof window.document.createElement !== "undefined";
const isServer = !isBrowser; //#endregion
////////////////////////////////////////////////////////////////////////////////
//#region createRouter
////////////////////////////////////////////////////////////////////////////////

/**
 * Create a router and listen to history POP navigations
 */

function router_createRouter(init) {
  router_invariant(init.routes.length > 0, "You must provide a non-empty routes array to createRouter");
  let dataRoutes = convertRoutesToDataRoutes(init.routes); // Cleanup function for history

  let unlistenHistory = null; // Externally-provided functions to call on all state changes

  let subscribers = new Set(); // Externally-provided object to hold scroll restoration locations during routing

  let savedScrollPositions = null; // Externally-provided function to get scroll restoration keys

  let getScrollRestorationKey = null; // Externally-provided function to get current scroll position

  let getScrollPosition = null; // One-time flag to control the initial hydration scroll restoration.  Because
  // we don't get the saved positions from <ScrollRestoration /> until _after_
  // the initial render, we need to manually trigger a separate updateState to
  // send along the restoreScrollPosition
  // Set to true if we have `hydrationData` since we assume we were SSR'd and that
  // SSR did the initial scroll restoration.

  let initialScrollRestored = init.hydrationData != null;
  let initialMatches = matchRoutes(dataRoutes, init.history.location, init.basename);
  let initialErrors = null;

  if (initialMatches == null) {
    // If we do not match a user-provided-route, fall back to the root
    // to allow the error boundary to take over
    let error = getInternalRouterError(404, {
      pathname: init.history.location.pathname
    });
    let {
      matches,
      route
    } = getShortCircuitMatches(dataRoutes);
    initialMatches = matches;
    initialErrors = {
      [route.id]: error
    };
  }

  let initialized = !initialMatches.some(m => m.route.loader) || init.hydrationData != null;
  let router;
  let state = {
    historyAction: init.history.action,
    location: init.history.location,
    matches: initialMatches,
    initialized,
    navigation: IDLE_NAVIGATION,
    // Don't restore on initial updateState() if we were SSR'd
    restoreScrollPosition: init.hydrationData != null ? false : null,
    preventScrollReset: false,
    revalidation: "idle",
    loaderData: init.hydrationData && init.hydrationData.loaderData || {},
    actionData: init.hydrationData && init.hydrationData.actionData || null,
    errors: init.hydrationData && init.hydrationData.errors || initialErrors,
    fetchers: new Map()
  }; // -- Stateful internal variables to manage navigations --
  // Current navigation in progress (to be committed in completeNavigation)

  let pendingAction = Action.Pop; // Should the current navigation prevent the scroll reset if scroll cannot
  // be restored?

  let pendingPreventScrollReset = false; // AbortController for the active navigation

  let pendingNavigationController; // We use this to avoid touching history in completeNavigation if a
  // revalidation is entirely uninterrupted

  let isUninterruptedRevalidation = false; // Use this internal flag to force revalidation of all loaders:
  //  - submissions (completed or interrupted)
  //  - useRevalidate()
  //  - X-Remix-Revalidate (from redirect)

  let isRevalidationRequired = false; // Use this internal array to capture routes that require revalidation due
  // to a cancelled deferred on action submission

  let cancelledDeferredRoutes = []; // Use this internal array to capture fetcher loads that were cancelled by an
  // action navigation and require revalidation

  let cancelledFetcherLoads = []; // AbortControllers for any in-flight fetchers

  let fetchControllers = new Map(); // Track loads based on the order in which they started

  let incrementingLoadId = 0; // Track the outstanding pending navigation data load to be compared against
  // the globally incrementing load when a fetcher load lands after a completed
  // navigation

  let pendingNavigationLoadId = -1; // Fetchers that triggered data reloads as a result of their actions

  let fetchReloadIds = new Map(); // Fetchers that triggered redirect navigations from their actions

  let fetchRedirectIds = new Set(); // Most recent href/match for fetcher.load calls for fetchers

  let fetchLoadMatches = new Map(); // Store DeferredData instances for active route matches.  When a
  // route loader returns defer() we stick one in here.  Then, when a nested
  // promise resolves we update loaderData.  If a new navigation starts we
  // cancel active deferreds for eliminated routes.

  let activeDeferreds = new Map(); // Initialize the router, all side effects should be kicked off from here.
  // Implemented as a Fluent API for ease of:
  //   let router = createRouter(init).initialize();

  function initialize() {
    // If history informs us of a POP navigation, start the navigation but do not update
    // state.  We'll update our own state once the navigation completes
    unlistenHistory = init.history.listen(_ref => {
      let {
        action: historyAction,
        location
      } = _ref;
      return startNavigation(historyAction, location);
    }); // Kick off initial data load if needed.  Use Pop to avoid modifying history

    if (!state.initialized) {
      startNavigation(Action.Pop, state.location);
    }

    return router;
  } // Clean up a router and it's side effects


  function dispose() {
    if (unlistenHistory) {
      unlistenHistory();
    }

    subscribers.clear();
    pendingNavigationController && pendingNavigationController.abort();
    state.fetchers.forEach((_, key) => deleteFetcher(key));
  } // Subscribe to state updates for the router


  function subscribe(fn) {
    subscribers.add(fn);
    return () => subscribers.delete(fn);
  } // Update our state and notify the calling context of the change


  function updateState(newState) {
    state = router_extends({}, state, newState);
    subscribers.forEach(subscriber => subscriber(state));
  } // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION
  // and setting state.[historyAction/location/matches] to the new route.
  // - Location is a required param
  // - Navigation will always be set to IDLE_NAVIGATION
  // - Can pass any other state in newState


  function completeNavigation(location, newState) {
    var _location$state;

    // Deduce if we're in a loading/actionReload state:
    // - We have committed actionData in the store
    // - The current navigation was a mutation submission
    // - We're past the submitting state and into the loading state
    // - The location being loaded is not the result of a redirect
    let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === "loading" && ((_location$state = location.state) == null ? void 0 : _location$state._isRedirect) !== true;
    let actionData;

    if (newState.actionData) {
      if (Object.keys(newState.actionData).length > 0) {
        actionData = newState.actionData;
      } else {
        // Empty actionData -> clear prior actionData due to an action error
        actionData = null;
      }
    } else if (isActionReload) {
      // Keep the current data if we're wrapping up the action reload
      actionData = state.actionData;
    } else {
      // Clear actionData on any other completed navigations
      actionData = null;
    } // Always preserve any existing loaderData from re-used routes


    let loaderData = newState.loaderData ? mergeLoaderData(state.loaderData, newState.loaderData, newState.matches || [], newState.errors) : state.loaderData;
    updateState(router_extends({}, newState, {
      actionData,
      loaderData,
      historyAction: pendingAction,
      location,
      initialized: true,
      navigation: IDLE_NAVIGATION,
      revalidation: "idle",
      // Don't restore on submission navigations
      restoreScrollPosition: state.navigation.formData ? false : getSavedScrollPosition(location, newState.matches || state.matches),
      preventScrollReset: pendingPreventScrollReset
    }));

    if (isUninterruptedRevalidation) ; else if (pendingAction === Action.Pop) ; else if (pendingAction === Action.Push) {
      init.history.push(location, location.state);
    } else if (pendingAction === Action.Replace) {
      init.history.replace(location, location.state);
    } // Reset stateful navigation vars


    pendingAction = Action.Pop;
    pendingPreventScrollReset = false;
    isUninterruptedRevalidation = false;
    isRevalidationRequired = false;
    cancelledDeferredRoutes = [];
    cancelledFetcherLoads = [];
  } // Trigger a navigation event, which can either be a numerical POP or a PUSH
  // replace with an optional submission


  async function navigate(to, opts) {
    if (typeof to === "number") {
      init.history.go(to);
      return;
    }

    let {
      path,
      submission,
      error
    } = normalizeNavigateOptions(to, opts);
    let location = createLocation(state.location, path, opts && opts.state); // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded
    // URL from window.location, so we need to encode it here so the behavior
    // remains the same as POP and non-data-router usages.  new URL() does all
    // the same encoding we'd get from a history.pushState/window.location read
    // without having to touch history

    location = router_extends({}, location, init.history.encodeLocation(location));
    let userReplace = opts && opts.replace != null ? opts.replace : undefined;
    let historyAction = Action.Push;

    if (userReplace === true) {
      historyAction = Action.Replace;
    } else if (userReplace === false) ; else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) {
      // By default on submissions to the current location we REPLACE so that
      // users don't have to double-click the back button to get to the prior
      // location.  If the user redirects to a different location from the
      // action/loader this will be ignored and the redirect will be a PUSH
      historyAction = Action.Replace;
    }

    let preventScrollReset = opts && "preventScrollReset" in opts ? opts.preventScrollReset === true : undefined;
    return await startNavigation(historyAction, location, {
      submission,
      // Send through the formData serialization error if we have one so we can
      // render at the right error boundary after we match routes
      pendingError: error,
      preventScrollReset,
      replace: opts && opts.replace
    });
  } // Revalidate all current loaders.  If a navigation is in progress or if this
  // is interrupted by a navigation, allow this to "succeed" by calling all
  // loaders during the next loader round


  function revalidate() {
    interruptActiveLoads();
    updateState({
      revalidation: "loading"
    }); // If we're currently submitting an action, we don't need to start a new
    // navigation, we'll just let the follow up loader execution call all loaders

    if (state.navigation.state === "submitting") {
      return;
    } // If we're currently in an idle state, start a new navigation for the current
    // action/location and mark it as uninterrupted, which will skip the history
    // update in completeNavigation


    if (state.navigation.state === "idle") {
      startNavigation(state.historyAction, state.location, {
        startUninterruptedRevalidation: true
      });
      return;
    } // Otherwise, if we're currently in a loading state, just start a new
    // navigation to the navigation.location but do not trigger an uninterrupted
    // revalidation so that history correctly updates once the navigation completes


    startNavigation(pendingAction || state.historyAction, state.navigation.location, {
      overrideNavigation: state.navigation
    });
  } // Start a navigation to the given action/location.  Can optionally provide a
  // overrideNavigation which will override the normalLoad in the case of a redirect
  // navigation


  async function startNavigation(historyAction, location, opts) {
    // Abort any in-progress navigations and start a new one. Unset any ongoing
    // uninterrupted revalidations unless told otherwise, since we want this
    // new navigation to update history normally
    pendingNavigationController && pendingNavigationController.abort();
    pendingNavigationController = null;
    pendingAction = historyAction;
    isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true; // Save the current scroll position every time we start a new navigation,
    // and track whether we should reset scroll on completion

    saveScrollPosition(state.location, state.matches);
    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;
    let loadingNavigation = opts && opts.overrideNavigation;
    let matches = matchRoutes(dataRoutes, location, init.basename); // Short circuit with a 404 on the root error boundary if we match nothing

    if (!matches) {
      let error = getInternalRouterError(404, {
        pathname: location.pathname
      });
      let {
        matches: notFoundMatches,
        route
      } = getShortCircuitMatches(dataRoutes); // Cancel all pending deferred on 404s since we don't keep any routes

      cancelActiveDeferreds();
      completeNavigation(location, {
        matches: notFoundMatches,
        loaderData: {},
        errors: {
          [route.id]: error
        }
      });
      return;
    } // Short circuit if it's only a hash change


    if (isHashChangeOnly(state.location, location)) {
      completeNavigation(location, {
        matches
      });
      return;
    } // Create a controller/Request for this navigation


    pendingNavigationController = new AbortController();
    let request = createClientSideRequest(location, pendingNavigationController.signal, opts && opts.submission);
    let pendingActionData;
    let pendingError;

    if (opts && opts.pendingError) {
      // If we have a pendingError, it means the user attempted a GET submission
      // with binary FormData so assign here and skip to handleLoaders.  That
      // way we handle calling loaders above the boundary etc.  It's not really
      // different from an actionError in that sense.
      pendingError = {
        [findNearestBoundary(matches).route.id]: opts.pendingError
      };
    } else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {
      // Call action if we received an action submission
      let actionOutput = await handleAction(request, location, opts.submission, matches, {
        replace: opts.replace
      });

      if (actionOutput.shortCircuited) {
        return;
      }

      pendingActionData = actionOutput.pendingActionData;
      pendingError = actionOutput.pendingActionError;

      let navigation = router_extends({
        state: "loading",
        location
      }, opts.submission);

      loadingNavigation = navigation; // Create a GET request for the loaders

      request = new Request(request.url, {
        signal: request.signal
      });
    } // Call loaders


    let {
      shortCircuited,
      loaderData,
      errors
    } = await handleLoaders(request, location, matches, loadingNavigation, opts && opts.submission, opts && opts.replace, pendingActionData, pendingError);

    if (shortCircuited) {
      return;
    } // Clean up now that the action/loaders have completed.  Don't clean up if
    // we short circuited because pendingNavigationController will have already
    // been assigned to a new controller for the next navigation


    pendingNavigationController = null;
    completeNavigation(location, router_extends({
      matches
    }, pendingActionData ? {
      actionData: pendingActionData
    } : {}, {
      loaderData,
      errors
    }));
  } // Call the action matched by the leaf route for this navigation and handle
  // redirects/errors


  async function handleAction(request, location, submission, matches, opts) {
    interruptActiveLoads(); // Put us in a submitting state

    let navigation = router_extends({
      state: "submitting",
      location
    }, submission);

    updateState({
      navigation
    }); // Call our action and get the result

    let result;
    let actionMatch = getTargetMatch(matches, location);

    if (!actionMatch.route.action) {
      result = {
        type: ResultType.error,
        error: getInternalRouterError(405, {
          method: request.method,
          pathname: location.pathname,
          routeId: actionMatch.route.id
        })
      };
    } else {
      result = await callLoaderOrAction("action", request, actionMatch, matches, router.basename);

      if (request.signal.aborted) {
        return {
          shortCircuited: true
        };
      }
    }

    if (isRedirectResult(result)) {
      let replace;

      if (opts && opts.replace != null) {
        replace = opts.replace;
      } else {
        // If the user didn't explicity indicate replace behavior, replace if
        // we redirected to the exact same location we're currently at to avoid
        // double back-buttons
        replace = result.location === state.location.pathname + state.location.search;
      }

      await startRedirectNavigation(state, result, {
        submission,
        replace
      });
      return {
        shortCircuited: true
      };
    }

    if (isErrorResult(result)) {
      // Store off the pending error - we use it to determine which loaders
      // to call and will commit it when we complete the navigation
      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id); // By default, all submissions are REPLACE navigations, but if the
      // action threw an error that'll be rendered in an errorElement, we fall
      // back to PUSH so that the user can use the back button to get back to
      // the pre-submission form location to try again

      if ((opts && opts.replace) !== true) {
        pendingAction = Action.Push;
      }

      return {
        // Send back an empty object we can use to clear out any prior actionData
        pendingActionData: {},
        pendingActionError: {
          [boundaryMatch.route.id]: result.error
        }
      };
    }

    if (isDeferredResult(result)) {
      throw new Error("defer() is not supported in actions");
    }

    return {
      pendingActionData: {
        [actionMatch.route.id]: result.data
      }
    };
  } // Call all applicable loaders for the given matches, handling redirects,
  // errors, etc.


  async function handleLoaders(request, location, matches, overrideNavigation, submission, replace, pendingActionData, pendingError) {
    // Figure out the right navigation we want to use for data loading
    let loadingNavigation = overrideNavigation;

    if (!loadingNavigation) {
      let navigation = router_extends({
        state: "loading",
        location,
        formMethod: undefined,
        formAction: undefined,
        formEncType: undefined,
        formData: undefined
      }, submission);

      loadingNavigation = navigation;
    } // If this was a redirect from an action we don't have a "submission" but
    // we have it on the loading navigation so use that if available


    let activeSubmission = submission ? submission : loadingNavigation.formMethod && loadingNavigation.formAction && loadingNavigation.formData && loadingNavigation.formEncType ? {
      formMethod: loadingNavigation.formMethod,
      formAction: loadingNavigation.formAction,
      formData: loadingNavigation.formData,
      formEncType: loadingNavigation.formEncType
    } : undefined;
    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(state, matches, activeSubmission, location, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, pendingActionData, pendingError, fetchLoadMatches); // Cancel pending deferreds for no-longer-matched routes or routes we're
    // about to reload.  Note that if this is an action reload we would have
    // already cancelled all pending deferreds so this would be a no-op

    cancelActiveDeferreds(routeId => !(matches && matches.some(m => m.route.id === routeId)) || matchesToLoad && matchesToLoad.some(m => m.route.id === routeId)); // Short circuit if we have no loaders to run

    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {
      completeNavigation(location, router_extends({
        matches,
        loaderData: {},
        // Commit pending error if we're short circuiting
        errors: pendingError || null
      }, pendingActionData ? {
        actionData: pendingActionData
      } : {}));
      return {
        shortCircuited: true
      };
    } // If this is an uninterrupted revalidation, we remain in our current idle
    // state.  If not, we need to switch to our loading state and load data,
    // preserving any new action data or existing action data (in the case of
    // a revalidation interrupting an actionReload)


    if (!isUninterruptedRevalidation) {
      revalidatingFetchers.forEach(_ref2 => {
        let [key] = _ref2;
        let fetcher = state.fetchers.get(key);
        let revalidatingFetcher = {
          state: "loading",
          data: fetcher && fetcher.data,
          formMethod: undefined,
          formAction: undefined,
          formEncType: undefined,
          formData: undefined,
          " _hasFetcherDoneAnything ": true
        };
        state.fetchers.set(key, revalidatingFetcher);
      });
      let actionData = pendingActionData || state.actionData;
      updateState(router_extends({
        navigation: loadingNavigation
      }, actionData ? Object.keys(actionData).length === 0 ? {
        actionData: null
      } : {
        actionData
      } : {}, revalidatingFetchers.length > 0 ? {
        fetchers: new Map(state.fetchers)
      } : {}));
    }

    pendingNavigationLoadId = ++incrementingLoadId;
    revalidatingFetchers.forEach(_ref3 => {
      let [key] = _ref3;
      return fetchControllers.set(key, pendingNavigationController);
    });
    let {
      results,
      loaderResults,
      fetcherResults
    } = await callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, request);

    if (request.signal.aborted) {
      return {
        shortCircuited: true
      };
    } // Clean up _after_ loaders have completed.  Don't clean up if we short
    // circuited because fetchControllers would have been aborted and
    // reassigned to new controllers for the next navigation


    revalidatingFetchers.forEach(_ref4 => {
      let [key] = _ref4;
      return fetchControllers.delete(key);
    }); // If any loaders returned a redirect Response, start a new REPLACE navigation

    let redirect = findRedirect(results);

    if (redirect) {
      await startRedirectNavigation(state, redirect, {
        replace
      });
      return {
        shortCircuited: true
      };
    } // Process and commit output from loaders


    let {
      loaderData,
      errors
    } = processLoaderData(state, matches, matchesToLoad, loaderResults, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds); // Wire up subscribers to update loaderData as promises settle

    activeDeferreds.forEach((deferredData, routeId) => {
      deferredData.subscribe(aborted => {
        // Note: No need to updateState here since the TrackedPromise on
        // loaderData is stable across resolve/reject
        // Remove this instance if we were aborted or if promises have settled
        if (aborted || deferredData.done) {
          activeDeferreds.delete(routeId);
        }
      });
    });
    markFetchRedirectsDone();
    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);
    return router_extends({
      loaderData,
      errors
    }, didAbortFetchLoads || revalidatingFetchers.length > 0 ? {
      fetchers: new Map(state.fetchers)
    } : {});
  }

  function getFetcher(key) {
    return state.fetchers.get(key) || IDLE_FETCHER;
  } // Trigger a fetcher load/submit for the given fetcher key


  function fetch(key, routeId, href, opts) {
    if (isServer) {
      throw new Error("router.fetch() was called during the server render, but it shouldn't be. " + "You are likely calling a useFetcher() method in the body of your component. " + "Try moving it to a useEffect or a callback.");
    }

    if (fetchControllers.has(key)) abortFetcher(key);
    let matches = matchRoutes(dataRoutes, href, init.basename);

    if (!matches) {
      setFetcherError(key, routeId, getInternalRouterError(404, {
        pathname: href
      }));
      return;
    }

    let {
      path,
      submission
    } = normalizeNavigateOptions(href, opts, true);
    let match = getTargetMatch(matches, path);

    if (submission && isMutationMethod(submission.formMethod)) {
      handleFetcherAction(key, routeId, path, match, matches, submission);
      return;
    } // Store off the match so we can call it's shouldRevalidate on subsequent
    // revalidations


    fetchLoadMatches.set(key, [path, match, matches]);
    handleFetcherLoader(key, routeId, path, match, matches, submission);
  } // Call the action for the matched fetcher.submit(), and then handle redirects,
  // errors, and revalidation


  async function handleFetcherAction(key, routeId, path, match, requestMatches, submission) {
    interruptActiveLoads();
    fetchLoadMatches.delete(key);

    if (!match.route.action) {
      let error = getInternalRouterError(405, {
        method: submission.formMethod,
        pathname: path,
        routeId: routeId
      });
      setFetcherError(key, routeId, error);
      return;
    } // Put this fetcher into it's submitting state


    let existingFetcher = state.fetchers.get(key);

    let fetcher = router_extends({
      state: "submitting"
    }, submission, {
      data: existingFetcher && existingFetcher.data,
      " _hasFetcherDoneAnything ": true
    });

    state.fetchers.set(key, fetcher);
    updateState({
      fetchers: new Map(state.fetchers)
    }); // Call the action for the fetcher

    let abortController = new AbortController();
    let fetchRequest = createClientSideRequest(path, abortController.signal, submission);
    fetchControllers.set(key, abortController);
    let actionResult = await callLoaderOrAction("action", fetchRequest, match, requestMatches, router.basename);

    if (fetchRequest.signal.aborted) {
      // We can delete this so long as we weren't aborted by ou our own fetcher
      // re-submit which would have put _new_ controller is in fetchControllers
      if (fetchControllers.get(key) === abortController) {
        fetchControllers.delete(key);
      }

      return;
    }

    if (isRedirectResult(actionResult)) {
      fetchControllers.delete(key);
      fetchRedirectIds.add(key);

      let loadingFetcher = router_extends({
        state: "loading"
      }, submission, {
        data: undefined,
        " _hasFetcherDoneAnything ": true
      });

      state.fetchers.set(key, loadingFetcher);
      updateState({
        fetchers: new Map(state.fetchers)
      });
      return startRedirectNavigation(state, actionResult, {
        isFetchActionRedirect: true
      });
    } // Process any non-redirect errors thrown


    if (isErrorResult(actionResult)) {
      setFetcherError(key, routeId, actionResult.error);
      return;
    }

    if (isDeferredResult(actionResult)) {
      router_invariant(false, "defer() is not supported in actions");
    } // Start the data load for current matches, or the next location if we're
    // in the middle of a navigation


    let nextLocation = state.navigation.location || state.location;
    let revalidationRequest = createClientSideRequest(nextLocation, abortController.signal);
    let matches = state.navigation.state !== "idle" ? matchRoutes(dataRoutes, state.navigation.location, init.basename) : state.matches;
    router_invariant(matches, "Didn't find any matches after fetcher action");
    let loadId = ++incrementingLoadId;
    fetchReloadIds.set(key, loadId);

    let loadFetcher = router_extends({
      state: "loading",
      data: actionResult.data
    }, submission, {
      " _hasFetcherDoneAnything ": true
    });

    state.fetchers.set(key, loadFetcher);
    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(state, matches, submission, nextLocation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, {
      [match.route.id]: actionResult.data
    }, undefined, // No need to send through errors since we short circuit above
    fetchLoadMatches); // Put all revalidating fetchers into the loading state, except for the
    // current fetcher which we want to keep in it's current loading state which
    // contains it's action submission info + action data

    revalidatingFetchers.filter(_ref5 => {
      let [staleKey] = _ref5;
      return staleKey !== key;
    }).forEach(_ref6 => {
      let [staleKey] = _ref6;
      let existingFetcher = state.fetchers.get(staleKey);
      let revalidatingFetcher = {
        state: "loading",
        data: existingFetcher && existingFetcher.data,
        formMethod: undefined,
        formAction: undefined,
        formEncType: undefined,
        formData: undefined,
        " _hasFetcherDoneAnything ": true
      };
      state.fetchers.set(staleKey, revalidatingFetcher);
      fetchControllers.set(staleKey, abortController);
    });
    updateState({
      fetchers: new Map(state.fetchers)
    });
    let {
      results,
      loaderResults,
      fetcherResults
    } = await callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, revalidationRequest);

    if (abortController.signal.aborted) {
      return;
    }

    fetchReloadIds.delete(key);
    fetchControllers.delete(key);
    revalidatingFetchers.forEach(_ref7 => {
      let [staleKey] = _ref7;
      return fetchControllers.delete(staleKey);
    });
    let redirect = findRedirect(results);

    if (redirect) {
      return startRedirectNavigation(state, redirect);
    } // Process and commit output from loaders


    let {
      loaderData,
      errors
    } = processLoaderData(state, state.matches, matchesToLoad, loaderResults, undefined, revalidatingFetchers, fetcherResults, activeDeferreds);
    let doneFetcher = {
      state: "idle",
      data: actionResult.data,
      formMethod: undefined,
      formAction: undefined,
      formEncType: undefined,
      formData: undefined,
      " _hasFetcherDoneAnything ": true
    };
    state.fetchers.set(key, doneFetcher);
    let didAbortFetchLoads = abortStaleFetchLoads(loadId); // If we are currently in a navigation loading state and this fetcher is
    // more recent than the navigation, we want the newer data so abort the
    // navigation and complete it with the fetcher data

    if (state.navigation.state === "loading" && loadId > pendingNavigationLoadId) {
      router_invariant(pendingAction, "Expected pending action");
      pendingNavigationController && pendingNavigationController.abort();
      completeNavigation(state.navigation.location, {
        matches,
        loaderData,
        errors,
        fetchers: new Map(state.fetchers)
      });
    } else {
      // otherwise just update with the fetcher data, preserving any existing
      // loaderData for loaders that did not need to reload.  We have to
      // manually merge here since we aren't going through completeNavigation
      updateState(router_extends({
        errors,
        loaderData: mergeLoaderData(state.loaderData, loaderData, matches, errors)
      }, didAbortFetchLoads ? {
        fetchers: new Map(state.fetchers)
      } : {}));
      isRevalidationRequired = false;
    }
  } // Call the matched loader for fetcher.load(), handling redirects, errors, etc.


  async function handleFetcherLoader(key, routeId, path, match, matches, submission) {
    let existingFetcher = state.fetchers.get(key); // Put this fetcher into it's loading state

    let loadingFetcher = router_extends({
      state: "loading",
      formMethod: undefined,
      formAction: undefined,
      formEncType: undefined,
      formData: undefined
    }, submission, {
      data: existingFetcher && existingFetcher.data,
      " _hasFetcherDoneAnything ": true
    });

    state.fetchers.set(key, loadingFetcher);
    updateState({
      fetchers: new Map(state.fetchers)
    }); // Call the loader for this fetcher route match

    let abortController = new AbortController();
    let fetchRequest = createClientSideRequest(path, abortController.signal);
    fetchControllers.set(key, abortController);
    let result = await callLoaderOrAction("loader", fetchRequest, match, matches, router.basename); // Deferred isn't supported or fetcher loads, await everything and treat it
    // as a normal load.  resolveDeferredData will return undefined if this
    // fetcher gets aborted, so we just leave result untouched and short circuit
    // below if that happens

    if (isDeferredResult(result)) {
      result = (await resolveDeferredData(result, fetchRequest.signal, true)) || result;
    } // We can delete this so long as we weren't aborted by ou our own fetcher
    // re-load which would have put _new_ controller is in fetchControllers


    if (fetchControllers.get(key) === abortController) {
      fetchControllers.delete(key);
    }

    if (fetchRequest.signal.aborted) {
      return;
    } // If the loader threw a redirect Response, start a new REPLACE navigation


    if (isRedirectResult(result)) {
      await startRedirectNavigation(state, result);
      return;
    } // Process any non-redirect errors thrown


    if (isErrorResult(result)) {
      let boundaryMatch = findNearestBoundary(state.matches, routeId);
      state.fetchers.delete(key); // TODO: In remix, this would reset to IDLE_NAVIGATION if it was a catch -
      // do we need to behave any differently with our non-redirect errors?
      // What if it was a non-redirect Response?

      updateState({
        fetchers: new Map(state.fetchers),
        errors: {
          [boundaryMatch.route.id]: result.error
        }
      });
      return;
    }

    router_invariant(!isDeferredResult(result), "Unhandled fetcher deferred data"); // Put the fetcher back into an idle state

    let doneFetcher = {
      state: "idle",
      data: result.data,
      formMethod: undefined,
      formAction: undefined,
      formEncType: undefined,
      formData: undefined,
      " _hasFetcherDoneAnything ": true
    };
    state.fetchers.set(key, doneFetcher);
    updateState({
      fetchers: new Map(state.fetchers)
    });
  }
  /**
   * Utility function to handle redirects returned from an action or loader.
   * Normally, a redirect "replaces" the navigation that triggered it.  So, for
   * example:
   *
   *  - user is on /a
   *  - user clicks a link to /b
   *  - loader for /b redirects to /c
   *
   * In a non-JS app the browser would track the in-flight navigation to /b and
   * then replace it with /c when it encountered the redirect response.  In
   * the end it would only ever update the URL bar with /c.
   *
   * In client-side routing using pushState/replaceState, we aim to emulate
   * this behavior and we also do not update history until the end of the
   * navigation (including processed redirects).  This means that we never
   * actually touch history until we've processed redirects, so we just use
   * the history action from the original navigation (PUSH or REPLACE).
   */


  async function startRedirectNavigation(state, redirect, _temp) {
    var _window;

    let {
      submission,
      replace,
      isFetchActionRedirect
    } = _temp === void 0 ? {} : _temp;

    if (redirect.revalidate) {
      isRevalidationRequired = true;
    }

    let redirectLocation = createLocation(state.location, redirect.location, // TODO: This can be removed once we get rid of useTransition in Remix v2
    router_extends({
      _isRedirect: true
    }, isFetchActionRedirect ? {
      _isFetchActionRedirect: true
    } : {}));
    router_invariant(redirectLocation, "Expected a location on the redirect navigation"); // Check if this an external redirect that goes to a new origin

    if (typeof ((_window = window) == null ? void 0 : _window.location) !== "undefined") {
      let newOrigin = createClientSideURL(redirect.location).origin;

      if (window.location.origin !== newOrigin) {
        if (replace) {
          window.location.replace(redirect.location);
        } else {
          window.location.assign(redirect.location);
        }

        return;
      }
    } // There's no need to abort on redirects, since we don't detect the
    // redirect until the action/loaders have settled


    pendingNavigationController = null;
    let redirectHistoryAction = replace === true ? Action.Replace : Action.Push; // Use the incoming submission if provided, fallback on the active one in
    // state.navigation

    let {
      formMethod,
      formAction,
      formEncType,
      formData
    } = state.navigation;

    if (!submission && formMethod && formAction && formData && formEncType) {
      submission = {
        formMethod,
        formAction,
        formEncType,
        formData
      };
    } // If this was a 307/308 submission we want to preserve the HTTP method and
    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the
    // redirected location


    if (redirectPreserveMethodStatusCodes.has(redirect.status) && submission && isMutationMethod(submission.formMethod)) {
      await startNavigation(redirectHistoryAction, redirectLocation, {
        submission: router_extends({}, submission, {
          formAction: redirect.location
        })
      });
    } else {
      // Otherwise, we kick off a new loading navigation, preserving the
      // submission info for the duration of this navigation
      await startNavigation(redirectHistoryAction, redirectLocation, {
        overrideNavigation: {
          state: "loading",
          location: redirectLocation,
          formMethod: submission ? submission.formMethod : undefined,
          formAction: submission ? submission.formAction : undefined,
          formEncType: submission ? submission.formEncType : undefined,
          formData: submission ? submission.formData : undefined
        }
      });
    }
  }

  async function callLoadersAndMaybeResolveData(currentMatches, matches, matchesToLoad, fetchersToLoad, request) {
    // Call all navigation loaders and revalidating fetcher loaders in parallel,
    // then slice off the results into separate arrays so we can handle them
    // accordingly
    let results = await Promise.all([...matchesToLoad.map(match => callLoaderOrAction("loader", request, match, matches, router.basename)), ...fetchersToLoad.map(_ref8 => {
      let [, href, match, fetchMatches] = _ref8;
      return callLoaderOrAction("loader", createClientSideRequest(href, request.signal), match, fetchMatches, router.basename);
    })]);
    let loaderResults = results.slice(0, matchesToLoad.length);
    let fetcherResults = results.slice(matchesToLoad.length);
    await Promise.all([resolveDeferredResults(currentMatches, matchesToLoad, loaderResults, request.signal, false, state.loaderData), resolveDeferredResults(currentMatches, fetchersToLoad.map(_ref9 => {
      let [,, match] = _ref9;
      return match;
    }), fetcherResults, request.signal, true)]);
    return {
      results,
      loaderResults,
      fetcherResults
    };
  }

  function interruptActiveLoads() {
    // Every interruption triggers a revalidation
    isRevalidationRequired = true; // Cancel pending route-level deferreds and mark cancelled routes for
    // revalidation

    cancelledDeferredRoutes.push(...cancelActiveDeferreds()); // Abort in-flight fetcher loads

    fetchLoadMatches.forEach((_, key) => {
      if (fetchControllers.has(key)) {
        cancelledFetcherLoads.push(key);
        abortFetcher(key);
      }
    });
  }

  function setFetcherError(key, routeId, error) {
    let boundaryMatch = findNearestBoundary(state.matches, routeId);
    deleteFetcher(key);
    updateState({
      errors: {
        [boundaryMatch.route.id]: error
      },
      fetchers: new Map(state.fetchers)
    });
  }

  function deleteFetcher(key) {
    if (fetchControllers.has(key)) abortFetcher(key);
    fetchLoadMatches.delete(key);
    fetchReloadIds.delete(key);
    fetchRedirectIds.delete(key);
    state.fetchers.delete(key);
  }

  function abortFetcher(key) {
    let controller = fetchControllers.get(key);
    router_invariant(controller, "Expected fetch controller: " + key);
    controller.abort();
    fetchControllers.delete(key);
  }

  function markFetchersDone(keys) {
    for (let key of keys) {
      let fetcher = getFetcher(key);
      let doneFetcher = {
        state: "idle",
        data: fetcher.data,
        formMethod: undefined,
        formAction: undefined,
        formEncType: undefined,
        formData: undefined,
        " _hasFetcherDoneAnything ": true
      };
      state.fetchers.set(key, doneFetcher);
    }
  }

  function markFetchRedirectsDone() {
    let doneKeys = [];

    for (let key of fetchRedirectIds) {
      let fetcher = state.fetchers.get(key);
      router_invariant(fetcher, "Expected fetcher: " + key);

      if (fetcher.state === "loading") {
        fetchRedirectIds.delete(key);
        doneKeys.push(key);
      }
    }

    markFetchersDone(doneKeys);
  }

  function abortStaleFetchLoads(landedId) {
    let yeetedKeys = [];

    for (let [key, id] of fetchReloadIds) {
      if (id < landedId) {
        let fetcher = state.fetchers.get(key);
        router_invariant(fetcher, "Expected fetcher: " + key);

        if (fetcher.state === "loading") {
          abortFetcher(key);
          fetchReloadIds.delete(key);
          yeetedKeys.push(key);
        }
      }
    }

    markFetchersDone(yeetedKeys);
    return yeetedKeys.length > 0;
  }

  function cancelActiveDeferreds(predicate) {
    let cancelledRouteIds = [];
    activeDeferreds.forEach((dfd, routeId) => {
      if (!predicate || predicate(routeId)) {
        // Cancel the deferred - but do not remove from activeDeferreds here -
        // we rely on the subscribers to do that so our tests can assert proper
        // cleanup via _internalActiveDeferreds
        dfd.cancel();
        cancelledRouteIds.push(routeId);
        activeDeferreds.delete(routeId);
      }
    });
    return cancelledRouteIds;
  } // Opt in to capturing and reporting scroll positions during navigations,
  // used by the <ScrollRestoration> component


  function enableScrollRestoration(positions, getPosition, getKey) {
    savedScrollPositions = positions;
    getScrollPosition = getPosition;

    getScrollRestorationKey = getKey || (location => location.key); // Perform initial hydration scroll restoration, since we miss the boat on
    // the initial updateState() because we've not yet rendered <ScrollRestoration/>
    // and therefore have no savedScrollPositions available


    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {
      initialScrollRestored = true;
      let y = getSavedScrollPosition(state.location, state.matches);

      if (y != null) {
        updateState({
          restoreScrollPosition: y
        });
      }
    }

    return () => {
      savedScrollPositions = null;
      getScrollPosition = null;
      getScrollRestorationKey = null;
    };
  }

  function saveScrollPosition(location, matches) {
    if (savedScrollPositions && getScrollRestorationKey && getScrollPosition) {
      let userMatches = matches.map(m => createUseMatchesMatch(m, state.loaderData));
      let key = getScrollRestorationKey(location, userMatches) || location.key;
      savedScrollPositions[key] = getScrollPosition();
    }
  }

  function getSavedScrollPosition(location, matches) {
    if (savedScrollPositions && getScrollRestorationKey && getScrollPosition) {
      let userMatches = matches.map(m => createUseMatchesMatch(m, state.loaderData));
      let key = getScrollRestorationKey(location, userMatches) || location.key;
      let y = savedScrollPositions[key];

      if (typeof y === "number") {
        return y;
      }
    }

    return null;
  }

  router = {
    get basename() {
      return init.basename;
    },

    get state() {
      return state;
    },

    get routes() {
      return dataRoutes;
    },

    initialize,
    subscribe,
    enableScrollRestoration,
    navigate,
    fetch,
    revalidate,
    // Passthrough to history-aware createHref used by useHref so we get proper
    // hash-aware URLs in DOM paths
    createHref: to => init.history.createHref(to),
    encodeLocation: to => init.history.encodeLocation(to),
    getFetcher,
    deleteFetcher,
    dispose,
    _internalFetchControllers: fetchControllers,
    _internalActiveDeferreds: activeDeferreds
  };
  return router;
} //#endregion
////////////////////////////////////////////////////////////////////////////////
//#region createStaticHandler
////////////////////////////////////////////////////////////////////////////////

function createStaticHandler(routes, opts) {
  router_invariant(routes.length > 0, "You must provide a non-empty routes array to createStaticHandler");
  let dataRoutes = convertRoutesToDataRoutes(routes);
  let basename = (opts ? opts.basename : null) || "/";
  /**
   * The query() method is intended for document requests, in which we want to
   * call an optional action and potentially multiple loaders for all nested
   * routes.  It returns a StaticHandlerContext object, which is very similar
   * to the router state (location, loaderData, actionData, errors, etc.) and
   * also adds SSR-specific information such as the statusCode and headers
   * from action/loaders Responses.
   *
   * It _should_ never throw and should report all errors through the
   * returned context.errors object, properly associating errors to their error
   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be
   * used to emulate React error boundaries during SSr by performing a second
   * pass only down to the boundaryId.
   *
   * The one exception where we do not return a StaticHandlerContext is when a
   * redirect response is returned or thrown from any action/loader.  We
   * propagate that out and return the raw Response so the HTTP server can
   * return it directly.
   */

  async function query(request, _temp2) {
    let {
      requestContext
    } = _temp2 === void 0 ? {} : _temp2;
    let url = new URL(request.url);
    let method = request.method.toLowerCase();
    let location = createLocation("", router_createPath(url), null, "default");
    let matches = matchRoutes(dataRoutes, location, basename); // SSR supports HEAD requests while SPA doesn't

    if (!isValidMethod(method) && method !== "head") {
      let error = getInternalRouterError(405, {
        method
      });
      let {
        matches: methodNotAllowedMatches,
        route
      } = getShortCircuitMatches(dataRoutes);
      return {
        basename,
        location,
        matches: methodNotAllowedMatches,
        loaderData: {},
        actionData: null,
        errors: {
          [route.id]: error
        },
        statusCode: error.status,
        loaderHeaders: {},
        actionHeaders: {}
      };
    } else if (!matches) {
      let error = getInternalRouterError(404, {
        pathname: location.pathname
      });
      let {
        matches: notFoundMatches,
        route
      } = getShortCircuitMatches(dataRoutes);
      return {
        basename,
        location,
        matches: notFoundMatches,
        loaderData: {},
        actionData: null,
        errors: {
          [route.id]: error
        },
        statusCode: error.status,
        loaderHeaders: {},
        actionHeaders: {}
      };
    }

    let result = await queryImpl(request, location, matches, requestContext);

    if (isResponse(result)) {
      return result;
    } // When returning StaticHandlerContext, we patch back in the location here
    // since we need it for React Context.  But this helps keep our submit and
    // loadRouteData operating on a Request instead of a Location


    return router_extends({
      location,
      basename
    }, result);
  }
  /**
   * The queryRoute() method is intended for targeted route requests, either
   * for fetch ?_data requests or resource route requests.  In this case, we
   * are only ever calling a single action or loader, and we are returning the
   * returned value directly.  In most cases, this will be a Response returned
   * from the action/loader, but it may be a primitive or other value as well -
   * and in such cases the calling context should handle that accordingly.
   *
   * We do respect the throw/return differentiation, so if an action/loader
   * throws, then this method will throw the value.  This is important so we
   * can do proper boundary identification in Remix where a thrown Response
   * must go to the Catch Boundary but a returned Response is happy-path.
   *
   * One thing to note is that any Router-initiated Errors that make sense
   * to associate with a status code will be thrown as an ErrorResponse
   * instance which include the raw Error, such that the calling context can
   * serialize the error as they see fit while including the proper response
   * code.  Examples here are 404 and 405 errors that occur prior to reaching
   * any user-defined loaders.
   */


  async function queryRoute(request, _temp3) {
    let {
      routeId,
      requestContext
    } = _temp3 === void 0 ? {} : _temp3;
    let url = new URL(request.url);
    let method = request.method.toLowerCase();
    let location = createLocation("", router_createPath(url), null, "default");
    let matches = matchRoutes(dataRoutes, location, basename); // SSR supports HEAD requests while SPA doesn't

    if (!isValidMethod(method) && method !== "head") {
      throw getInternalRouterError(405, {
        method
      });
    } else if (!matches) {
      throw getInternalRouterError(404, {
        pathname: location.pathname
      });
    }

    let match = routeId ? matches.find(m => m.route.id === routeId) : getTargetMatch(matches, location);

    if (routeId && !match) {
      throw getInternalRouterError(403, {
        pathname: location.pathname,
        routeId
      });
    } else if (!match) {
      // This should never hit I don't think?
      throw getInternalRouterError(404, {
        pathname: location.pathname
      });
    }

    let result = await queryImpl(request, location, matches, requestContext, match);

    if (isResponse(result)) {
      return result;
    }

    let error = result.errors ? Object.values(result.errors)[0] : undefined;

    if (error !== undefined) {
      // If we got back result.errors, that means the loader/action threw
      // _something_ that wasn't a Response, but it's not guaranteed/required
      // to be an `instanceof Error` either, so we have to use throw here to
      // preserve the "error" state outside of queryImpl.
      throw error;
    } // Pick off the right state value to return


    let routeData = [result.actionData, result.loaderData].find(v => v);
    return Object.values(routeData || {})[0];
  }

  async function queryImpl(request, location, matches, requestContext, routeMatch) {
    router_invariant(request.signal, "query()/queryRoute() requests must contain an AbortController signal");

    try {
      if (isMutationMethod(request.method.toLowerCase())) {
        let result = await submit(request, matches, routeMatch || getTargetMatch(matches, location), requestContext, routeMatch != null);
        return result;
      }

      let result = await loadRouteData(request, matches, requestContext, routeMatch);
      return isResponse(result) ? result : router_extends({}, result, {
        actionData: null,
        actionHeaders: {}
      });
    } catch (e) {
      // If the user threw/returned a Response in callLoaderOrAction, we throw
      // it to bail out and then return or throw here based on whether the user
      // returned or threw
      if (isQueryRouteResponse(e)) {
        if (e.type === ResultType.error && !isRedirectResponse(e.response)) {
          throw e.response;
        }

        return e.response;
      } // Redirects are always returned since they don't propagate to catch
      // boundaries


      if (isRedirectResponse(e)) {
        return e;
      }

      throw e;
    }
  }

  async function submit(request, matches, actionMatch, requestContext, isRouteRequest) {
    let result;

    if (!actionMatch.route.action) {
      let error = getInternalRouterError(405, {
        method: request.method,
        pathname: new URL(request.url).pathname,
        routeId: actionMatch.route.id
      });

      if (isRouteRequest) {
        throw error;
      }

      result = {
        type: ResultType.error,
        error
      };
    } else {
      result = await callLoaderOrAction("action", request, actionMatch, matches, basename, true, isRouteRequest, requestContext);

      if (request.signal.aborted) {
        let method = isRouteRequest ? "queryRoute" : "query";
        throw new Error(method + "() call aborted");
      }
    }

    if (isRedirectResult(result)) {
      // Uhhhh - this should never happen, we should always throw these from
      // callLoaderOrAction, but the type narrowing here keeps TS happy and we
      // can get back on the "throw all redirect responses" train here should
      // this ever happen :/
      throw new Response(null, {
        status: result.status,
        headers: {
          Location: result.location
        }
      });
    }

    if (isDeferredResult(result)) {
      throw new Error("defer() is not supported in actions");
    }

    if (isRouteRequest) {
      // Note: This should only be non-Response values if we get here, since
      // isRouteRequest should throw any Response received in callLoaderOrAction
      if (isErrorResult(result)) {
        throw result.error;
      }

      return {
        matches: [actionMatch],
        loaderData: {},
        actionData: {
          [actionMatch.route.id]: result.data
        },
        errors: null,
        // Note: statusCode + headers are unused here since queryRoute will
        // return the raw Response or value
        statusCode: 200,
        loaderHeaders: {},
        actionHeaders: {}
      };
    }

    if (isErrorResult(result)) {
      // Store off the pending error - we use it to determine which loaders
      // to call and will commit it when we complete the navigation
      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);
      let context = await loadRouteData(request, matches, requestContext, undefined, {
        [boundaryMatch.route.id]: result.error
      }); // action status codes take precedence over loader status codes

      return router_extends({}, context, {
        statusCode: isRouteErrorResponse(result.error) ? result.error.status : 500,
        actionData: null,
        actionHeaders: router_extends({}, result.headers ? {
          [actionMatch.route.id]: result.headers
        } : {})
      });
    } // Create a GET request for the loaders


    let loaderRequest = new Request(request.url, {
      headers: request.headers,
      redirect: request.redirect,
      signal: request.signal
    });
    let context = await loadRouteData(loaderRequest, matches, requestContext);
    return router_extends({}, context, result.statusCode ? {
      statusCode: result.statusCode
    } : {}, {
      actionData: {
        [actionMatch.route.id]: result.data
      },
      actionHeaders: router_extends({}, result.headers ? {
        [actionMatch.route.id]: result.headers
      } : {})
    });
  }

  async function loadRouteData(request, matches, requestContext, routeMatch, pendingActionError) {
    let isRouteRequest = routeMatch != null; // Short circuit if we have no loaders to run (queryRoute())

    if (isRouteRequest && !(routeMatch != null && routeMatch.route.loader)) {
      throw getInternalRouterError(400, {
        method: request.method,
        pathname: new URL(request.url).pathname,
        routeId: routeMatch == null ? void 0 : routeMatch.route.id
      });
    }

    let requestMatches = routeMatch ? [routeMatch] : getLoaderMatchesUntilBoundary(matches, Object.keys(pendingActionError || {})[0]);
    let matchesToLoad = requestMatches.filter(m => m.route.loader); // Short circuit if we have no loaders to run (query())

    if (matchesToLoad.length === 0) {
      return {
        matches,
        // Add a null for all matched routes for proper revalidation on the client
        loaderData: matches.reduce((acc, m) => Object.assign(acc, {
          [m.route.id]: null
        }), {}),
        errors: pendingActionError || null,
        statusCode: 200,
        loaderHeaders: {}
      };
    }

    let results = await Promise.all([...matchesToLoad.map(match => callLoaderOrAction("loader", request, match, matches, basename, true, isRouteRequest, requestContext))]);

    if (request.signal.aborted) {
      let method = isRouteRequest ? "queryRoute" : "query";
      throw new Error(method + "() call aborted");
    }

    let executedLoaders = new Set();
    results.forEach((result, i) => {
      executedLoaders.add(matchesToLoad[i].route.id); // Can't do anything with these without the Remix side of things, so just
      // cancel them for now

      if (isDeferredResult(result)) {
        result.deferredData.cancel();
      }
    }); // Process and commit output from loaders

    let context = processRouteLoaderData(matches, matchesToLoad, results, pendingActionError); // Add a null for any non-loader matches for proper revalidation on the client

    matches.forEach(match => {
      if (!executedLoaders.has(match.route.id)) {
        context.loaderData[match.route.id] = null;
      }
    });
    return router_extends({}, context, {
      matches
    });
  }

  return {
    dataRoutes,
    query,
    queryRoute
  };
} //#endregion
////////////////////////////////////////////////////////////////////////////////
//#region Helpers
////////////////////////////////////////////////////////////////////////////////

/**
 * Given an existing StaticHandlerContext and an error thrown at render time,
 * provide an updated StaticHandlerContext suitable for a second SSR render
 */

function getStaticContextFromError(routes, context, error) {
  let newContext = router_extends({}, context, {
    statusCode: 500,
    errors: {
      [context._deepestRenderedBoundaryId || routes[0].id]: error
    }
  });

  return newContext;
}

function isSubmissionNavigation(opts) {
  return opts != null && "formData" in opts;
} // Normalize navigation options by converting formMethod=GET formData objects to
// URLSearchParams so they behave identically to links with query params


function normalizeNavigateOptions(to, opts, isFetcher) {
  if (isFetcher === void 0) {
    isFetcher = false;
  }

  let path = typeof to === "string" ? to : router_createPath(to); // Return location verbatim on non-submission navigations

  if (!opts || !isSubmissionNavigation(opts)) {
    return {
      path
    };
  }

  if (opts.formMethod && !isValidMethod(opts.formMethod)) {
    return {
      path,
      error: getInternalRouterError(405, {
        method: opts.formMethod
      })
    };
  } // Create a Submission on non-GET navigations


  let submission;

  if (opts.formData) {
    submission = {
      formMethod: opts.formMethod || "get",
      formAction: stripHashFromPath(path),
      formEncType: opts && opts.formEncType || "application/x-www-form-urlencoded",
      formData: opts.formData
    };

    if (isMutationMethod(submission.formMethod)) {
      return {
        path,
        submission
      };
    }
  } // Flatten submission onto URLSearchParams for GET submissions


  let parsedPath = parsePath(path);

  try {
    let searchParams = convertFormDataToSearchParams(opts.formData); // Since fetcher GET submissions only run a single loader (as opposed to
    // navigation GET submissions which run all loaders), we need to preserve
    // any incoming ?index params

    if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {
      searchParams.append("index", "");
    }

    parsedPath.search = "?" + searchParams;
  } catch (e) {
    return {
      path,
      error: getInternalRouterError(400)
    };
  }

  return {
    path: router_createPath(parsedPath),
    submission
  };
} // Filter out all routes below any caught error as they aren't going to
// render so we don't need to load them


function getLoaderMatchesUntilBoundary(matches, boundaryId) {
  let boundaryMatches = matches;

  if (boundaryId) {
    let index = matches.findIndex(m => m.route.id === boundaryId);

    if (index >= 0) {
      boundaryMatches = matches.slice(0, index);
    }
  }

  return boundaryMatches;
}

function getMatchesToLoad(state, matches, submission, location, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, pendingActionData, pendingError, fetchLoadMatches) {
  let actionResult = pendingError ? Object.values(pendingError)[0] : pendingActionData ? Object.values(pendingActionData)[0] : undefined; // Pick navigation matches that are net-new or qualify for revalidation

  let boundaryId = pendingError ? Object.keys(pendingError)[0] : undefined;
  let boundaryMatches = getLoaderMatchesUntilBoundary(matches, boundaryId);
  let navigationMatches = boundaryMatches.filter((match, index) => match.route.loader != null && (isNewLoader(state.loaderData, state.matches[index], match) || // If this route had a pending deferred cancelled it must be revalidated
  cancelledDeferredRoutes.some(id => id === match.route.id) || shouldRevalidateLoader(state.location, state.matches[index], submission, location, match, isRevalidationRequired, actionResult))); // Pick fetcher.loads that need to be revalidated

  let revalidatingFetchers = [];
  fetchLoadMatches && fetchLoadMatches.forEach((_ref10, key) => {
    let [href, match, fetchMatches] = _ref10;

    // This fetcher was cancelled from a prior action submission - force reload
    if (cancelledFetcherLoads.includes(key)) {
      revalidatingFetchers.push([key, href, match, fetchMatches]);
    } else if (isRevalidationRequired) {
      let shouldRevalidate = shouldRevalidateLoader(href, match, submission, href, match, isRevalidationRequired, actionResult);

      if (shouldRevalidate) {
        revalidatingFetchers.push([key, href, match, fetchMatches]);
      }
    }
  });
  return [navigationMatches, revalidatingFetchers];
}

function isNewLoader(currentLoaderData, currentMatch, match) {
  let isNew = // [a] -> [a, b]
  !currentMatch || // [a, b] -> [a, c]
  match.route.id !== currentMatch.route.id; // Handle the case that we don't have data for a re-used route, potentially
  // from a prior error or from a cancelled pending deferred

  let isMissingData = currentLoaderData[match.route.id] === undefined; // Always load if this is a net-new route or we don't yet have data

  return isNew || isMissingData;
}

function isNewRouteInstance(currentMatch, match) {
  let currentPath = currentMatch.route.path;
  return (// param change for this match, /users/123 -> /users/456
    currentMatch.pathname !== match.pathname || // splat param changed, which is not present in match.path
    // e.g. /files/images/avatar.jpg -> files/finances.xls
    currentPath && currentPath.endsWith("*") && currentMatch.params["*"] !== match.params["*"]
  );
}

function shouldRevalidateLoader(currentLocation, currentMatch, submission, location, match, isRevalidationRequired, actionResult) {
  let currentUrl = createClientSideURL(currentLocation);
  let currentParams = currentMatch.params;
  let nextUrl = createClientSideURL(location);
  let nextParams = match.params; // This is the default implementation as to when we revalidate.  If the route
  // provides it's own implementation, then we give them full control but
  // provide this value so they can leverage it if needed after they check
  // their own specific use cases
  // Note that fetchers always provide the same current/next locations so the
  // URL-based checks here don't apply to fetcher shouldRevalidate calls

  let defaultShouldRevalidate = isNewRouteInstance(currentMatch, match) || // Clicked the same link, resubmitted a GET form
  currentUrl.toString() === nextUrl.toString() || // Search params affect all loaders
  currentUrl.search !== nextUrl.search || // Forced revalidation due to submission, useRevalidate, or X-Remix-Revalidate
  isRevalidationRequired;

  if (match.route.shouldRevalidate) {
    let routeChoice = match.route.shouldRevalidate(router_extends({
      currentUrl,
      currentParams,
      nextUrl,
      nextParams
    }, submission, {
      actionResult,
      defaultShouldRevalidate
    }));

    if (typeof routeChoice === "boolean") {
      return routeChoice;
    }
  }

  return defaultShouldRevalidate;
}

async function callLoaderOrAction(type, request, match, matches, basename, isStaticRequest, isRouteRequest, requestContext) {
  if (basename === void 0) {
    basename = "/";
  }

  if (isStaticRequest === void 0) {
    isStaticRequest = false;
  }

  if (isRouteRequest === void 0) {
    isRouteRequest = false;
  }

  let resultType;
  let result; // Setup a promise we can race against so that abort signals short circuit

  let reject;
  let abortPromise = new Promise((_, r) => reject = r);

  let onReject = () => reject();

  request.signal.addEventListener("abort", onReject);

  try {
    let handler = match.route[type];
    router_invariant(handler, "Could not find the " + type + " to run on the \"" + match.route.id + "\" route");
    result = await Promise.race([handler({
      request,
      params: match.params,
      context: requestContext
    }), abortPromise]);
    router_invariant(result !== undefined, "You defined " + (type === "action" ? "an action" : "a loader") + " for route " + ("\"" + match.route.id + "\" but didn't return anything from your `" + type + "` ") + "function. Please return a value or `null`.");
  } catch (e) {
    resultType = ResultType.error;
    result = e;
  } finally {
    request.signal.removeEventListener("abort", onReject);
  }

  if (isResponse(result)) {
    let status = result.status; // Process redirects

    if (redirectStatusCodes.has(status)) {
      let location = result.headers.get("Location");
      router_invariant(location, "Redirects returned/thrown from loaders/actions must have a Location header");
      let isAbsolute = /^[a-z+]+:\/\//i.test(location) || location.startsWith("//"); // Support relative routing in internal redirects

      if (!isAbsolute) {
        let activeMatches = matches.slice(0, matches.indexOf(match) + 1);
        let routePathnames = getPathContributingMatches(activeMatches).map(match => match.pathnameBase);
        let resolvedLocation = router_resolveTo(location, routePathnames, new URL(request.url).pathname);
        router_invariant(router_createPath(resolvedLocation), "Unable to resolve redirect location: " + location); // Prepend the basename to the redirect location if we have one

        if (basename) {
          let path = resolvedLocation.pathname;
          resolvedLocation.pathname = path === "/" ? basename : router_joinPaths([basename, path]);
        }

        location = router_createPath(resolvedLocation);
      } // Don't process redirects in the router during static requests requests.
      // Instead, throw the Response and let the server handle it with an HTTP
      // redirect.  We also update the Location header in place in this flow so
      // basename and relative routing is taken into account


      if (isStaticRequest) {
        result.headers.set("Location", location);
        throw result;
      }

      return {
        type: ResultType.redirect,
        status,
        location,
        revalidate: result.headers.get("X-Remix-Revalidate") !== null
      };
    } // For SSR single-route requests, we want to hand Responses back directly
    // without unwrapping.  We do this with the QueryRouteResponse wrapper
    // interface so we can know whether it was returned or thrown


    if (isRouteRequest) {
      // eslint-disable-next-line no-throw-literal
      throw {
        type: resultType || ResultType.data,
        response: result
      };
    }

    let data;
    let contentType = result.headers.get("Content-Type"); // Check between word boundaries instead of startsWith() due to the last
    // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type

    if (contentType && /\bapplication\/json\b/.test(contentType)) {
      data = await result.json();
    } else {
      data = await result.text();
    }

    if (resultType === ResultType.error) {
      return {
        type: resultType,
        error: new ErrorResponse(status, result.statusText, data),
        headers: result.headers
      };
    }

    return {
      type: ResultType.data,
      data,
      statusCode: result.status,
      headers: result.headers
    };
  }

  if (resultType === ResultType.error) {
    return {
      type: resultType,
      error: result
    };
  }

  if (result instanceof DeferredData) {
    return {
      type: ResultType.deferred,
      deferredData: result
    };
  }

  return {
    type: ResultType.data,
    data: result
  };
} // Utility method for creating the Request instances for loaders/actions during
// client-side navigations and fetches.  During SSR we will always have a
// Request instance from the static handler (query/queryRoute)


function createClientSideRequest(location, signal, submission) {
  let url = createClientSideURL(stripHashFromPath(location)).toString();
  let init = {
    signal
  };

  if (submission && isMutationMethod(submission.formMethod)) {
    let {
      formMethod,
      formEncType,
      formData
    } = submission;
    init.method = formMethod.toUpperCase();
    init.body = formEncType === "application/x-www-form-urlencoded" ? convertFormDataToSearchParams(formData) : formData;
  } // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)


  return new Request(url, init);
}

function convertFormDataToSearchParams(formData) {
  let searchParams = new URLSearchParams();

  for (let [key, value] of formData.entries()) {
    router_invariant(typeof value === "string", 'File inputs are not supported with encType "application/x-www-form-urlencoded", ' + 'please use "multipart/form-data" instead.');
    searchParams.append(key, value);
  }

  return searchParams;
}

function processRouteLoaderData(matches, matchesToLoad, results, pendingError, activeDeferreds) {
  // Fill in loaderData/errors from our loaders
  let loaderData = {};
  let errors = null;
  let statusCode;
  let foundError = false;
  let loaderHeaders = {}; // Process loader results into state.loaderData/state.errors

  results.forEach((result, index) => {
    let id = matchesToLoad[index].route.id;
    router_invariant(!isRedirectResult(result), "Cannot handle redirect results in processLoaderData");

    if (isErrorResult(result)) {
      // Look upwards from the matched route for the closest ancestor
      // error boundary, defaulting to the root match
      let boundaryMatch = findNearestBoundary(matches, id);
      let error = result.error; // If we have a pending action error, we report it at the highest-route
      // that throws a loader error, and then clear it out to indicate that
      // it was consumed

      if (pendingError) {
        error = Object.values(pendingError)[0];
        pendingError = undefined;
      }

      errors = errors || {}; // Prefer higher error values if lower errors bubble to the same boundary

      if (errors[boundaryMatch.route.id] == null) {
        errors[boundaryMatch.route.id] = error;
      } // Clear our any prior loaderData for the throwing route


      loaderData[id] = undefined; // Once we find our first (highest) error, we set the status code and
      // prevent deeper status codes from overriding

      if (!foundError) {
        foundError = true;
        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;
      }

      if (result.headers) {
        loaderHeaders[id] = result.headers;
      }
    } else if (isDeferredResult(result)) {
      activeDeferreds && activeDeferreds.set(id, result.deferredData);
      loaderData[id] = result.deferredData.data; // TODO: Add statusCode/headers once we wire up streaming in Remix
    } else {
      loaderData[id] = result.data; // Error status codes always override success status codes, but if all
      // loaders are successful we take the deepest status code.

      if (result.statusCode != null && result.statusCode !== 200 && !foundError) {
        statusCode = result.statusCode;
      }

      if (result.headers) {
        loaderHeaders[id] = result.headers;
      }
    }
  }); // If we didn't consume the pending action error (i.e., all loaders
  // resolved), then consume it here.  Also clear out any loaderData for the
  // throwing route

  if (pendingError) {
    errors = pendingError;
    loaderData[Object.keys(pendingError)[0]] = undefined;
  }

  return {
    loaderData,
    errors,
    statusCode: statusCode || 200,
    loaderHeaders
  };
}

function processLoaderData(state, matches, matchesToLoad, results, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds) {
  let {
    loaderData,
    errors
  } = processRouteLoaderData(matches, matchesToLoad, results, pendingError, activeDeferreds); // Process results from our revalidating fetchers

  for (let index = 0; index < revalidatingFetchers.length; index++) {
    let [key,, match] = revalidatingFetchers[index];
    router_invariant(fetcherResults !== undefined && fetcherResults[index] !== undefined, "Did not find corresponding fetcher result");
    let result = fetcherResults[index]; // Process fetcher non-redirect errors

    if (isErrorResult(result)) {
      let boundaryMatch = findNearestBoundary(state.matches, match.route.id);

      if (!(errors && errors[boundaryMatch.route.id])) {
        errors = router_extends({}, errors, {
          [boundaryMatch.route.id]: result.error
        });
      }

      state.fetchers.delete(key);
    } else if (isRedirectResult(result)) {
      // Should never get here, redirects should get processed above, but we
      // keep this to type narrow to a success result in the else
      throw new Error("Unhandled fetcher revalidation redirect");
    } else if (isDeferredResult(result)) {
      // Should never get here, deferred data should be awaited for fetchers
      // in resolveDeferredResults
      throw new Error("Unhandled fetcher deferred data");
    } else {
      let doneFetcher = {
        state: "idle",
        data: result.data,
        formMethod: undefined,
        formAction: undefined,
        formEncType: undefined,
        formData: undefined,
        " _hasFetcherDoneAnything ": true
      };
      state.fetchers.set(key, doneFetcher);
    }
  }

  return {
    loaderData,
    errors
  };
}

function mergeLoaderData(loaderData, newLoaderData, matches, errors) {
  let mergedLoaderData = router_extends({}, newLoaderData);

  for (let match of matches) {
    let id = match.route.id;

    if (newLoaderData.hasOwnProperty(id)) {
      if (newLoaderData[id] !== undefined) {
        mergedLoaderData[id] = newLoaderData[id];
      }
    } else if (loaderData[id] !== undefined) {
      mergedLoaderData[id] = loaderData[id];
    }

    if (errors && errors.hasOwnProperty(id)) {
      // Don't keep any loader data below the boundary
      break;
    }
  }

  return mergedLoaderData;
} // Find the nearest error boundary, looking upwards from the leaf route (or the
// route specified by routeId) for the closest ancestor error boundary,
// defaulting to the root match


function findNearestBoundary(matches, routeId) {
  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1) : [...matches];
  return eligibleMatches.reverse().find(m => m.route.hasErrorBoundary === true) || matches[0];
}

function getShortCircuitMatches(routes) {
  // Prefer a root layout route if present, otherwise shim in a route object
  let route = routes.find(r => r.index || !r.path || r.path === "/") || {
    id: "__shim-error-route__"
  };
  return {
    matches: [{
      params: {},
      pathname: "",
      pathnameBase: "",
      route
    }],
    route
  };
}

function getInternalRouterError(status, _temp4) {
  let {
    pathname,
    routeId,
    method
  } = _temp4 === void 0 ? {} : _temp4;
  let statusText = "Unknown Server Error";
  let errorMessage = "Unknown @remix-run/router error";

  if (status === 400) {
    statusText = "Bad Request";

    if (method && pathname && routeId) {
      errorMessage = "You made a " + method + " request to \"" + pathname + "\" but " + ("did not provide a `loader` for route \"" + routeId + "\", ") + "so there is no way to handle the request.";
    } else {
      errorMessage = "Cannot submit binary form data using GET";
    }
  } else if (status === 403) {
    statusText = "Forbidden";
    errorMessage = "Route \"" + routeId + "\" does not match URL \"" + pathname + "\"";
  } else if (status === 404) {
    statusText = "Not Found";
    errorMessage = "No route matches URL \"" + pathname + "\"";
  } else if (status === 405) {
    statusText = "Method Not Allowed";

    if (method && pathname && routeId) {
      errorMessage = "You made a " + method.toUpperCase() + " request to \"" + pathname + "\" but " + ("did not provide an `action` for route \"" + routeId + "\", ") + "so there is no way to handle the request.";
    } else if (method) {
      errorMessage = "Invalid request method \"" + method.toUpperCase() + "\"";
    }
  }

  return new ErrorResponse(status || 500, statusText, new Error(errorMessage), true);
} // Find any returned redirect errors, starting from the lowest match


function findRedirect(results) {
  for (let i = results.length - 1; i >= 0; i--) {
    let result = results[i];

    if (isRedirectResult(result)) {
      return result;
    }
  }
}

function stripHashFromPath(path) {
  let parsedPath = typeof path === "string" ? parsePath(path) : path;
  return router_createPath(router_extends({}, parsedPath, {
    hash: ""
  }));
}

function isHashChangeOnly(a, b) {
  return a.pathname === b.pathname && a.search === b.search && a.hash !== b.hash;
}

function isDeferredResult(result) {
  return result.type === ResultType.deferred;
}

function isErrorResult(result) {
  return result.type === ResultType.error;
}

function isRedirectResult(result) {
  return (result && result.type) === ResultType.redirect;
}

function isResponse(value) {
  return value != null && typeof value.status === "number" && typeof value.statusText === "string" && typeof value.headers === "object" && typeof value.body !== "undefined";
}

function isRedirectResponse(result) {
  if (!isResponse(result)) {
    return false;
  }

  let status = result.status;
  let location = result.headers.get("Location");
  return status >= 300 && status <= 399 && location != null;
}

function isQueryRouteResponse(obj) {
  return obj && isResponse(obj.response) && (obj.type === ResultType.data || ResultType.error);
}

function isValidMethod(method) {
  return validRequestMethods.has(method);
}

function isMutationMethod(method) {
  return validMutationMethods.has(method);
}

async function resolveDeferredResults(currentMatches, matchesToLoad, results, signal, isFetcher, currentLoaderData) {
  for (let index = 0; index < results.length; index++) {
    let result = results[index];
    let match = matchesToLoad[index];
    let currentMatch = currentMatches.find(m => m.route.id === match.route.id);
    let isRevalidatingLoader = currentMatch != null && !isNewRouteInstance(currentMatch, match) && (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;

    if (isDeferredResult(result) && (isFetcher || isRevalidatingLoader)) {
      // Note: we do not have to touch activeDeferreds here since we race them
      // against the signal in resolveDeferredData and they'll get aborted
      // there if needed
      await resolveDeferredData(result, signal, isFetcher).then(result => {
        if (result) {
          results[index] = result || results[index];
        }
      });
    }
  }
}

async function resolveDeferredData(result, signal, unwrap) {
  if (unwrap === void 0) {
    unwrap = false;
  }

  let aborted = await result.deferredData.resolveData(signal);

  if (aborted) {
    return;
  }

  if (unwrap) {
    try {
      return {
        type: ResultType.data,
        data: result.deferredData.unwrappedData
      };
    } catch (e) {
      // Handle any TrackedPromise._error values encountered while unwrapping
      return {
        type: ResultType.error,
        error: e
      };
    }
  }

  return {
    type: ResultType.data,
    data: result.deferredData.data
  };
}

function hasNakedIndexQuery(search) {
  return new URLSearchParams(search).getAll("index").some(v => v === "");
} // Note: This should match the format exported by useMatches, so if you change
// this please also change that :)  Eventually we'll DRY this up


function createUseMatchesMatch(match, loaderData) {
  let {
    route,
    pathname,
    params
  } = match;
  return {
    id: route.id,
    pathname,
    params,
    data: loaderData[route.id],
    handle: route.handle
  };
}

function getTargetMatch(matches, location) {
  let search = typeof location === "string" ? parsePath(location).search : location.search;

  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || "")) {
    // Return the leaf index route when index is present
    return matches[matches.length - 1];
  } // Otherwise grab the deepest "path contributing" match (ignoring index and
  // pathless layout routes)


  let pathMatches = getPathContributingMatches(matches);
  return pathMatches[pathMatches.length - 1];
} //#endregion


//# sourceMappingURL=router.js.map

;// CONCATENATED MODULE: ./node_modules/react-router/dist/index.js
/**
 * React Router v6.6.2
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */




function dist_extends() {
  dist_extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };
  return dist_extends.apply(this, arguments);
}

/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/**
 * inlined Object.is polyfill to avoid requiring consumers ship their own
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
 */

function isPolyfill(x, y) {
  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare
  ;
}

const dist_is = typeof Object.is === "function" ? Object.is : isPolyfill; // Intentionally not using named imports because Rollup uses dynamic
// dispatch for CommonJS interop named imports.

const {
  useState: dist_useState,
  useEffect: dist_useEffect,
  useLayoutEffect,
  useDebugValue
} = react_namespaceObject;
let didWarnOld18Alpha = false;
let didWarnUncachedGetSnapshot = false; // Disclaimer: This shim breaks many of the rules of React, and only works
// because of a very particular set of implementation details and assumptions
// -- change any one of them and it will break. The most important assumption
// is that updates are always synchronous, because concurrent rendering is
// only available in versions of React that also have a built-in
// useSyncExternalStore API. And we only use this shim when the built-in API
// does not exist.
//
// Do not assume that the clever hacks used by this hook also work in general.
// The point of this shim is to replace the need for hacks by other libraries.

function useSyncExternalStore$2(subscribe, getSnapshot, // Note: The shim does not use getServerSnapshot, because pre-18 versions of
// React do not expose a way to check if we're hydrating. So users of the shim
// will need to track that themselves and return the correct value
// from `getSnapshot`.
getServerSnapshot) {
  if (false) {} // Read the current snapshot from the store on every render. Again, this
  // breaks the rules of React, and only works here because of specific
  // implementation details, most importantly that updates are
  // always synchronous.


  const value = getSnapshot();

  if (false) {} // Because updates are synchronous, we don't queue them. Instead we force a
  // re-render whenever the subscribed state changes by updating an some
  // arbitrary useState hook. Then, during render, we call getSnapshot to read
  // the current value.
  //
  // Because we don't actually use the state returned by the useState hook, we
  // can save a bit of memory by storing other stuff in that slot.
  //
  // To implement the early bailout, we need to track some things on a mutable
  // object. Usually, we would put that in a useRef hook, but we can stash it in
  // our useState hook instead.
  //
  // To force a re-render, we call forceUpdate({inst}). That works because the
  // new object always fails an equality check.


  const [{
    inst
  }, forceUpdate] = dist_useState({
    inst: {
      value,
      getSnapshot
    }
  }); // Track the latest getSnapshot function with a ref. This needs to be updated
  // in the layout phase so we can access it during the tearing check that
  // happens on subscribe.

  useLayoutEffect(() => {
    inst.value = value;
    inst.getSnapshot = getSnapshot; // Whenever getSnapshot or subscribe changes, we need to check in the
    // commit phase if there was an interleaved mutation. In concurrent mode
    // this can happen all the time, but even in synchronous mode, an earlier
    // effect may have mutated the store.

    if (checkIfSnapshotChanged(inst)) {
      // Force a re-render.
      forceUpdate({
        inst
      });
    } // eslint-disable-next-line react-hooks/exhaustive-deps

  }, [subscribe, value, getSnapshot]);
  dist_useEffect(() => {
    // Check for changes right before subscribing. Subsequent changes will be
    // detected in the subscription handler.
    if (checkIfSnapshotChanged(inst)) {
      // Force a re-render.
      forceUpdate({
        inst
      });
    }

    const handleStoreChange = () => {
      // TODO: Because there is no cross-renderer API for batching updates, it's
      // up to the consumer of this library to wrap their subscription event
      // with unstable_batchedUpdates. Should we try to detect when this isn't
      // the case and print a warning in development?
      // The store changed. Check if the snapshot changed since the last time we
      // read from the store.
      if (checkIfSnapshotChanged(inst)) {
        // Force a re-render.
        forceUpdate({
          inst
        });
      }
    }; // Subscribe to the store and return a clean-up function.


    return subscribe(handleStoreChange); // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [subscribe]);
  useDebugValue(value);
  return value;
}

function checkIfSnapshotChanged(inst) {
  const latestGetSnapshot = inst.getSnapshot;
  const prevValue = inst.value;

  try {
    const nextValue = latestGetSnapshot();
    return !dist_is(prevValue, nextValue);
  } catch (error) {
    return true;
  }
}

/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @flow
 */
function useSyncExternalStore$1(subscribe, getSnapshot, getServerSnapshot) {
  // Note: The shim does not use getServerSnapshot, because pre-18 versions of
  // React do not expose a way to check if we're hydrating. So users of the shim
  // will need to track that themselves and return the correct value
  // from `getSnapshot`.
  return getSnapshot();
}

/**
 * Inlined into the react-router repo since use-sync-external-store does not
 * provide a UMD-compatible package, so we need this to be able to distribute
 * UMD react-router bundles
 */
const dist_canUseDOM = !!(typeof window !== "undefined" && typeof window.document !== "undefined" && typeof window.document.createElement !== "undefined");
const isServerEnvironment = !dist_canUseDOM;
const dist_shim = isServerEnvironment ? useSyncExternalStore$1 : useSyncExternalStore$2;
const dist_useSyncExternalStore =  true ? (module => module.useSyncExternalStore)(react_namespaceObject) : dist_shim;

const DataRouterContext = /*#__PURE__*/react.createContext(null);

if (false) {}

const DataRouterStateContext = /*#__PURE__*/react.createContext(null);

if (false) {}

const AwaitContext = /*#__PURE__*/(/* unused pure expression or super */ null && (React.createContext(null)));

if (false) {}

const NavigationContext = /*#__PURE__*/react.createContext(null);

if (false) {}

const LocationContext = /*#__PURE__*/react.createContext(null);

if (false) {}

const RouteContext = /*#__PURE__*/react.createContext({
  outlet: null,
  matches: []
});

if (false) {}

const RouteErrorContext = /*#__PURE__*/react.createContext(null);

if (false) {}

/**
 * Returns the full href for the given "to" value. This is useful for building
 * custom links that are also accessible and preserve right-click behavior.
 *
 * @see https://reactrouter.com/hooks/use-href
 */

function dist_useHref(to, _temp) {
  let {
    relative
  } = _temp === void 0 ? {} : _temp;
  !useInRouterContext() ?  false ? 0 : invariant(false) : void 0;
  let {
    basename,
    navigator
  } = React.useContext(NavigationContext);
  let {
    hash,
    pathname,
    search
  } = dist_useResolvedPath(to, {
    relative
  });
  let joinedPathname = pathname; // If we're operating within a basename, prepend it to the pathname prior
  // to creating the href.  If this is a root navigation, then just use the raw
  // basename which allows the basename to have full control over the presence
  // of a trailing slash on root links

  if (basename !== "/") {
    joinedPathname = pathname === "/" ? basename : joinPaths([basename, pathname]);
  }

  return navigator.createHref({
    pathname: joinedPathname,
    search,
    hash
  });
}
/**
 * Returns true if this component is a descendant of a <Router>.
 *
 * @see https://reactrouter.com/hooks/use-in-router-context
 */

function useInRouterContext() {
  return react.useContext(LocationContext) != null;
}
/**
 * Returns the current location object, which represents the current URL in web
 * browsers.
 *
 * Note: If you're using this it may mean you're doing some of your own
 * "routing" in your app, and we'd like to know what your use case is. We may
 * be able to provide something higher-level to better suit your needs.
 *
 * @see https://reactrouter.com/hooks/use-location
 */

function dist_useLocation() {
  !useInRouterContext() ?  false ? 0 : router_invariant(false) : void 0;
  return react.useContext(LocationContext).location;
}
/**
 * Returns the current navigation action which describes how the router came to
 * the current location, either by a pop, push, or replace on the history stack.
 *
 * @see https://reactrouter.com/hooks/use-navigation-type
 */

function useNavigationType() {
  return React.useContext(LocationContext).navigationType;
}
/**
 * Returns a PathMatch object if the given pattern matches the current URL.
 * This is useful for components that need to know "active" state, e.g.
 * <NavLink>.
 *
 * @see https://reactrouter.com/hooks/use-match
 */

function useMatch(pattern) {
  !useInRouterContext() ?  false ? 0 : invariant(false) : void 0;
  let {
    pathname
  } = dist_useLocation();
  return React.useMemo(() => matchPath(pattern, pathname), [pathname, pattern]);
}
/**
 * The interface for the navigate() function returned from useNavigate().
 */

/**
 * Returns an imperative method for changing the location. Used by <Link>s, but
 * may also be used by other elements to change the location.
 *
 * @see https://reactrouter.com/hooks/use-navigate
 */
function dist_useNavigate() {
  !useInRouterContext() ?  false ? 0 : router_invariant(false) : void 0;
  let {
    basename,
    navigator
  } = react.useContext(NavigationContext);
  let {
    matches
  } = react.useContext(RouteContext);
  let {
    pathname: locationPathname
  } = dist_useLocation();
  let routePathnamesJson = JSON.stringify(getPathContributingMatches(matches).map(match => match.pathnameBase));
  let activeRef = react.useRef(false);
  react.useEffect(() => {
    activeRef.current = true;
  });
  let navigate = react.useCallback(function (to, options) {
    if (options === void 0) {
      options = {};
    }

     false ? 0 : void 0;
    if (!activeRef.current) return;

    if (typeof to === "number") {
      navigator.go(to);
      return;
    }

    let path = router_resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, options.relative === "path"); // If we're operating within a basename, prepend it to the pathname prior
    // to handing off to history.  If this is a root navigation, then we
    // navigate to the raw basename which allows the basename to have full
    // control over the presence of a trailing slash on root links

    if (basename !== "/") {
      path.pathname = path.pathname === "/" ? basename : router_joinPaths([basename, path.pathname]);
    }

    (!!options.replace ? navigator.replace : navigator.push)(path, options.state, options);
  }, [basename, navigator, routePathnamesJson, locationPathname]);
  return navigate;
}
const OutletContext = /*#__PURE__*/react.createContext(null);
/**
 * Returns the context (if provided) for the child route at this level of the route
 * hierarchy.
 * @see https://reactrouter.com/hooks/use-outlet-context
 */

function useOutletContext() {
  return React.useContext(OutletContext);
}
/**
 * Returns the element for the child route at this level of the route
 * hierarchy. Used internally by <Outlet> to render child routes.
 *
 * @see https://reactrouter.com/hooks/use-outlet
 */

function useOutlet(context) {
  let outlet = react.useContext(RouteContext).outlet;

  if (outlet) {
    return /*#__PURE__*/react.createElement(OutletContext.Provider, {
      value: context
    }, outlet);
  }

  return outlet;
}
/**
 * Returns an object of key/value pairs of the dynamic params from the current
 * URL that were matched by the route path.
 *
 * @see https://reactrouter.com/hooks/use-params
 */

function useParams() {
  let {
    matches
  } = react.useContext(RouteContext);
  let routeMatch = matches[matches.length - 1];
  return routeMatch ? routeMatch.params : {};
}
/**
 * Resolves the pathname of the given `to` value against the current location.
 *
 * @see https://reactrouter.com/hooks/use-resolved-path
 */

function dist_useResolvedPath(to, _temp2) {
  let {
    relative
  } = _temp2 === void 0 ? {} : _temp2;
  let {
    matches
  } = React.useContext(RouteContext);
  let {
    pathname: locationPathname
  } = dist_useLocation();
  let routePathnamesJson = JSON.stringify(UNSAFE_getPathContributingMatches(matches).map(match => match.pathnameBase));
  return React.useMemo(() => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, relative === "path"), [to, routePathnamesJson, locationPathname, relative]);
}
/**
 * Returns the element of the route that matched the current location, prepared
 * with the correct context to render the remainder of the route tree. Route
 * elements in the tree must render an <Outlet> to render their child route's
 * element.
 *
 * @see https://reactrouter.com/hooks/use-routes
 */

function useRoutes(routes, locationArg) {
  !useInRouterContext() ?  false ? 0 : router_invariant(false) : void 0;
  let {
    navigator
  } = react.useContext(NavigationContext);
  let dataRouterStateContext = react.useContext(DataRouterStateContext);
  let {
    matches: parentMatches
  } = react.useContext(RouteContext);
  let routeMatch = parentMatches[parentMatches.length - 1];
  let parentParams = routeMatch ? routeMatch.params : {};
  let parentPathname = routeMatch ? routeMatch.pathname : "/";
  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : "/";
  let parentRoute = routeMatch && routeMatch.route;

  if (false) {}

  let locationFromContext = dist_useLocation();
  let location;

  if (locationArg) {
    var _parsedLocationArg$pa;

    let parsedLocationArg = typeof locationArg === "string" ? parsePath(locationArg) : locationArg;
    !(parentPathnameBase === "/" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ?  false ? 0 : router_invariant(false) : void 0;
    location = parsedLocationArg;
  } else {
    location = locationFromContext;
  }

  let pathname = location.pathname || "/";
  let remainingPathname = parentPathnameBase === "/" ? pathname : pathname.slice(parentPathnameBase.length) || "/";
  let matches = matchRoutes(routes, {
    pathname: remainingPathname
  });

  if (false) {}

  let renderedMatches = _renderMatches(matches && matches.map(match => Object.assign({}, match, {
    params: Object.assign({}, parentParams, match.params),
    pathname: router_joinPaths([parentPathnameBase, // Re-encode pathnames that were decoded inside matchRoutes
    navigator.encodeLocation ? navigator.encodeLocation(match.pathname).pathname : match.pathname]),
    pathnameBase: match.pathnameBase === "/" ? parentPathnameBase : router_joinPaths([parentPathnameBase, // Re-encode pathnames that were decoded inside matchRoutes
    navigator.encodeLocation ? navigator.encodeLocation(match.pathnameBase).pathname : match.pathnameBase])
  })), parentMatches, dataRouterStateContext || undefined); // When a user passes in a `locationArg`, the associated routes need to
  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`
  // to use the scoped location instead of the global location.


  if (locationArg && renderedMatches) {
    return /*#__PURE__*/react.createElement(LocationContext.Provider, {
      value: {
        location: dist_extends({
          pathname: "/",
          search: "",
          hash: "",
          state: null,
          key: "default"
        }, location),
        navigationType: Action.Pop
      }
    }, renderedMatches);
  }

  return renderedMatches;
}

function DefaultErrorElement() {
  let error = useRouteError();
  let message = isRouteErrorResponse(error) ? error.status + " " + error.statusText : error instanceof Error ? error.message : JSON.stringify(error);
  let stack = error instanceof Error ? error.stack : null;
  let lightgrey = "rgba(200,200,200, 0.5)";
  let preStyles = {
    padding: "0.5rem",
    backgroundColor: lightgrey
  };
  let codeStyles = {
    padding: "2px 4px",
    backgroundColor: lightgrey
  };
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("h2", null, "Unhandled Thrown Error!"), /*#__PURE__*/react.createElement("h3", {
    style: {
      fontStyle: "italic"
    }
  }, message), stack ? /*#__PURE__*/react.createElement("pre", {
    style: preStyles
  }, stack) : null, /*#__PURE__*/react.createElement("p", null, "\uD83D\uDCBF Hey developer \uD83D\uDC4B"), /*#__PURE__*/react.createElement("p", null, "You can provide a way better UX than this when your app throws errors by providing your own\xA0", /*#__PURE__*/react.createElement("code", {
    style: codeStyles
  }, "errorElement"), " props on\xA0", /*#__PURE__*/react.createElement("code", {
    style: codeStyles
  }, "<Route>")));
}

class RenderErrorBoundary extends react.Component {
  constructor(props) {
    super(props);
    this.state = {
      location: props.location,
      error: props.error
    };
  }

  static getDerivedStateFromError(error) {
    return {
      error: error
    };
  }

  static getDerivedStateFromProps(props, state) {
    // When we get into an error state, the user will likely click "back" to the
    // previous page that didn't have an error. Because this wraps the entire
    // application, that will have no effect--the error page continues to display.
    // This gives us a mechanism to recover from the error when the location changes.
    //
    // Whether we're in an error state or not, we update the location in state
    // so that when we are in an error state, it gets reset when a new location
    // comes in and the user recovers from the error.
    if (state.location !== props.location) {
      return {
        error: props.error,
        location: props.location
      };
    } // If we're not changing locations, preserve the location but still surface
    // any new errors that may come through. We retain the existing error, we do
    // this because the error provided from the app state may be cleared without
    // the location changing.


    return {
      error: props.error || state.error,
      location: state.location
    };
  }

  componentDidCatch(error, errorInfo) {
    console.error("React Router caught the following error during render", error, errorInfo);
  }

  render() {
    return this.state.error ? /*#__PURE__*/react.createElement(RouteContext.Provider, {
      value: this.props.routeContext
    }, /*#__PURE__*/react.createElement(RouteErrorContext.Provider, {
      value: this.state.error,
      children: this.props.component
    })) : this.props.children;
  }

}

function RenderedRoute(_ref) {
  let {
    routeContext,
    match,
    children
  } = _ref;
  let dataRouterContext = react.useContext(DataRouterContext); // Track how deep we got in our render pass to emulate SSR componentDidCatch
  // in a DataStaticRouter

  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && match.route.errorElement) {
    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;
  }

  return /*#__PURE__*/react.createElement(RouteContext.Provider, {
    value: routeContext
  }, children);
}

function _renderMatches(matches, parentMatches, dataRouterState) {
  if (parentMatches === void 0) {
    parentMatches = [];
  }

  if (matches == null) {
    if (dataRouterState != null && dataRouterState.errors) {
      // Don't bail if we have data router errors so we can render them in the
      // boundary.  Use the pre-matched (or shimmed) matches
      matches = dataRouterState.matches;
    } else {
      return null;
    }
  }

  let renderedMatches = matches; // If we have data errors, trim matches to the highest error boundary

  let errors = dataRouterState == null ? void 0 : dataRouterState.errors;

  if (errors != null) {
    let errorIndex = renderedMatches.findIndex(m => m.route.id && (errors == null ? void 0 : errors[m.route.id]));
    !(errorIndex >= 0) ?  false ? 0 : router_invariant(false) : void 0;
    renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));
  }

  return renderedMatches.reduceRight((outlet, match, index) => {
    let error = match.route.id ? errors == null ? void 0 : errors[match.route.id] : null; // Only data routers handle errors

    let errorElement = dataRouterState ? match.route.errorElement || /*#__PURE__*/react.createElement(DefaultErrorElement, null) : null;
    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));

    let getChildren = () => /*#__PURE__*/react.createElement(RenderedRoute, {
      match: match,
      routeContext: {
        outlet,
        matches
      }
    }, error ? errorElement : match.route.element !== undefined ? match.route.element : outlet); // Only wrap in an error boundary within data router usages when we have an
    // errorElement on this route.  Otherwise let it bubble up to an ancestor
    // errorElement


    return dataRouterState && (match.route.errorElement || index === 0) ? /*#__PURE__*/react.createElement(RenderErrorBoundary, {
      location: dataRouterState.location,
      component: errorElement,
      error: error,
      children: getChildren(),
      routeContext: {
        outlet: null,
        matches
      }
    }) : getChildren();
  }, null);
}
var DataRouterHook;

(function (DataRouterHook) {
  DataRouterHook["UseRevalidator"] = "useRevalidator";
})(DataRouterHook || (DataRouterHook = {}));

var DataRouterStateHook;

(function (DataRouterStateHook) {
  DataRouterStateHook["UseLoaderData"] = "useLoaderData";
  DataRouterStateHook["UseActionData"] = "useActionData";
  DataRouterStateHook["UseRouteError"] = "useRouteError";
  DataRouterStateHook["UseNavigation"] = "useNavigation";
  DataRouterStateHook["UseRouteLoaderData"] = "useRouteLoaderData";
  DataRouterStateHook["UseMatches"] = "useMatches";
  DataRouterStateHook["UseRevalidator"] = "useRevalidator";
})(DataRouterStateHook || (DataRouterStateHook = {}));

function getDataRouterConsoleError(hookName) {
  return hookName + " must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.";
}

function useDataRouterContext(hookName) {
  let ctx = React.useContext(DataRouterContext);
  !ctx ?  false ? 0 : invariant(false) : void 0;
  return ctx;
}

function useDataRouterState(hookName) {
  let state = react.useContext(DataRouterStateContext);
  !state ?  false ? 0 : router_invariant(false) : void 0;
  return state;
}

function useRouteContext(hookName) {
  let route = react.useContext(RouteContext);
  !route ?  false ? 0 : router_invariant(false) : void 0;
  return route;
}

function useCurrentRouteId(hookName) {
  let route = useRouteContext(hookName);
  let thisRoute = route.matches[route.matches.length - 1];
  !thisRoute.route.id ?  false ? 0 : router_invariant(false) : void 0;
  return thisRoute.route.id;
}
/**
 * Returns the current navigation, defaulting to an "idle" navigation when
 * no navigation is in progress
 */


function dist_useNavigation() {
  let state = useDataRouterState(DataRouterStateHook.UseNavigation);
  return state.navigation;
}
/**
 * Returns a revalidate function for manually triggering revalidation, as well
 * as the current state of any manual revalidations
 */

function useRevalidator() {
  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);
  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);
  return {
    revalidate: dataRouterContext.router.revalidate,
    state: state.revalidation
  };
}
/**
 * Returns the active route matches, useful for accessing loaderData for
 * parent/child routes or the route "handle" property
 */

function dist_useMatches() {
  let {
    matches,
    loaderData
  } = useDataRouterState(DataRouterStateHook.UseMatches);
  return React.useMemo(() => matches.map(match => {
    let {
      pathname,
      params
    } = match; // Note: This structure matches that created by createUseMatchesMatch
    // in the @remix-run/router , so if you change this please also change
    // that :)  Eventually we'll DRY this up

    return {
      id: match.route.id,
      pathname,
      params,
      data: loaderData[match.route.id],
      handle: match.route.handle
    };
  }), [matches, loaderData]);
}
/**
 * Returns the loader data for the nearest ancestor Route loader
 */

function useLoaderData() {
  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);
  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);

  if (state.errors && state.errors[routeId] != null) {
    console.error("You cannot `useLoaderData` in an errorElement (routeId: " + routeId + ")");
    return undefined;
  }

  return state.loaderData[routeId];
}
/**
 * Returns the loaderData for the given routeId
 */

function useRouteLoaderData(routeId) {
  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);
  return state.loaderData[routeId];
}
/**
 * Returns the action data for the nearest ancestor Route action
 */

function useActionData() {
  let state = useDataRouterState(DataRouterStateHook.UseActionData);
  let route = React.useContext(RouteContext);
  !route ?  false ? 0 : invariant(false) : void 0;
  return Object.values((state == null ? void 0 : state.actionData) || {})[0];
}
/**
 * Returns the nearest ancestor Route error, which could be a loader/action
 * error or a render error.  This is intended to be called from your
 * errorElement to display a proper error message.
 */

function useRouteError() {
  var _state$errors;

  let error = react.useContext(RouteErrorContext);
  let state = useDataRouterState(DataRouterStateHook.UseRouteError);
  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError); // If this was a render error, we put it in a RouteError context inside
  // of RenderErrorBoundary

  if (error) {
    return error;
  } // Otherwise look for errors from our data router state


  return (_state$errors = state.errors) == null ? void 0 : _state$errors[routeId];
}
/**
 * Returns the happy-path data from the nearest ancestor <Await /> value
 */

function useAsyncValue() {
  let value = React.useContext(AwaitContext);
  return value == null ? void 0 : value._data;
}
/**
 * Returns the error from the nearest ancestor <Await /> value
 */

function useAsyncError() {
  let value = React.useContext(AwaitContext);
  return value == null ? void 0 : value._error;
}
const alreadyWarned = {};

function warningOnce(key, cond, message) {
  if (!cond && !alreadyWarned[key]) {
    alreadyWarned[key] = true;
     false ? 0 : void 0;
  }
}

/**
 * Given a Remix Router instance, render the appropriate UI
 */
function RouterProvider(_ref) {
  let {
    fallbackElement,
    router
  } = _ref;
  // Sync router state to our component state to force re-renders
  let state = dist_useSyncExternalStore(router.subscribe, () => router.state, // We have to provide this so React@18 doesn't complain during hydration,
  // but we pass our serialized hydration data into the router so state here
  // is already synced with what the server saw
  () => router.state);
  let navigator = react.useMemo(() => {
    return {
      createHref: router.createHref,
      encodeLocation: router.encodeLocation,
      go: n => router.navigate(n),
      push: (to, state, opts) => router.navigate(to, {
        state,
        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset
      }),
      replace: (to, state, opts) => router.navigate(to, {
        replace: true,
        state,
        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset
      })
    };
  }, [router]);
  let basename = router.basename || "/"; // The fragment and {null} here are important!  We need them to keep React 18's
  // useId happy when we are server-rendering since we may have a <script> here
  // containing the hydrated server-side staticContext (from StaticRouterProvider).
  // useId relies on the component tree structure to generate deterministic id's
  // so we need to ensure it remains the same on the client even though
  // we don't need the <script> tag

  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement(DataRouterContext.Provider, {
    value: {
      router,
      navigator,
      static: false,
      // Do we need this?
      basename
    }
  }, /*#__PURE__*/react.createElement(DataRouterStateContext.Provider, {
    value: state
  }, /*#__PURE__*/react.createElement(dist_Router, {
    basename: router.basename,
    location: router.state.location,
    navigationType: router.state.historyAction,
    navigator: navigator
  }, router.state.initialized ? /*#__PURE__*/react.createElement(Routes, null) : fallbackElement))), null);
}

/**
 * A <Router> that stores all entries in memory.
 *
 * @see https://reactrouter.com/router-components/memory-router
 */
function MemoryRouter(_ref2) {
  let {
    basename,
    children,
    initialEntries,
    initialIndex
  } = _ref2;
  let historyRef = React.useRef();

  if (historyRef.current == null) {
    historyRef.current = createMemoryHistory({
      initialEntries,
      initialIndex,
      v5Compat: true
    });
  }

  let history = historyRef.current;
  let [state, setState] = React.useState({
    action: history.action,
    location: history.location
  });
  React.useLayoutEffect(() => history.listen(setState), [history]);
  return /*#__PURE__*/React.createElement(dist_Router, {
    basename: basename,
    children: children,
    location: state.location,
    navigationType: state.action,
    navigator: history
  });
}

/**
 * Changes the current location.
 *
 * Note: This API is mostly useful in React.Component subclasses that are not
 * able to use hooks. In functional components, we recommend you use the
 * `useNavigate` hook instead.
 *
 * @see https://reactrouter.com/components/navigate
 */
function Navigate(_ref3) {
  let {
    to,
    replace,
    state,
    relative
  } = _ref3;
  !useInRouterContext() ?  false ? 0 : router_invariant(false) : void 0;
   false ? 0 : void 0;
  let dataRouterState = react.useContext(DataRouterStateContext);
  let navigate = dist_useNavigate();
  react.useEffect(() => {
    // Avoid kicking off multiple navigations if we're in the middle of a
    // data-router navigation, since components get re-rendered when we enter
    // a submitting/loading state
    if (dataRouterState && dataRouterState.navigation.state !== "idle") {
      return;
    }

    navigate(to, {
      replace,
      state,
      relative
    });
  });
  return null;
}

/**
 * Renders the child route's element, if there is one.
 *
 * @see https://reactrouter.com/components/outlet
 */
function Outlet(props) {
  return useOutlet(props.context);
}

/**
 * Declares an element that should be rendered at a certain URL path.
 *
 * @see https://reactrouter.com/components/route
 */
function Route(_props) {
   false ? 0 : router_invariant(false) ;
}

/**
 * Provides location context for the rest of the app.
 *
 * Note: You usually won't render a <Router> directly. Instead, you'll render a
 * router that is more specific to your environment such as a <BrowserRouter>
 * in web browsers or a <StaticRouter> for server rendering.
 *
 * @see https://reactrouter.com/router-components/router
 */
function dist_Router(_ref4) {
  let {
    basename: basenameProp = "/",
    children = null,
    location: locationProp,
    navigationType = Action.Pop,
    navigator,
    static: staticProp = false
  } = _ref4;
  !!useInRouterContext() ?  false ? 0 : router_invariant(false) : void 0; // Preserve trailing slashes on basename, so we can let the user control
  // the enforcement of trailing slashes throughout the app

  let basename = basenameProp.replace(/^\/*/, "/");
  let navigationContext = react.useMemo(() => ({
    basename,
    navigator,
    static: staticProp
  }), [basename, navigator, staticProp]);

  if (typeof locationProp === "string") {
    locationProp = parsePath(locationProp);
  }

  let {
    pathname = "/",
    search = "",
    hash = "",
    state = null,
    key = "default"
  } = locationProp;
  let location = react.useMemo(() => {
    let trailingPathname = stripBasename(pathname, basename);

    if (trailingPathname == null) {
      return null;
    }

    return {
      pathname: trailingPathname,
      search,
      hash,
      state,
      key
    };
  }, [basename, pathname, search, hash, state, key]);
   false ? 0 : void 0;

  if (location == null) {
    return null;
  }

  return /*#__PURE__*/react.createElement(NavigationContext.Provider, {
    value: navigationContext
  }, /*#__PURE__*/react.createElement(LocationContext.Provider, {
    children: children,
    value: {
      location,
      navigationType
    }
  }));
}

/**
 * A container for a nested tree of <Route> elements that renders the branch
 * that best matches the current location.
 *
 * @see https://reactrouter.com/components/routes
 */
function Routes(_ref5) {
  let {
    children,
    location
  } = _ref5;
  let dataRouterContext = react.useContext(DataRouterContext); // When in a DataRouterContext _without_ children, we use the router routes
  // directly.  If we have children, then we're in a descendant tree and we
  // need to use child routes.

  let routes = dataRouterContext && !children ? dataRouterContext.router.routes : createRoutesFromChildren(children);
  return useRoutes(routes, location);
}

/**
 * Component to use for rendering lazily loaded data from returning defer()
 * in a loader function
 */
function Await(_ref6) {
  let {
    children,
    errorElement,
    resolve
  } = _ref6;
  return /*#__PURE__*/React.createElement(AwaitErrorBoundary, {
    resolve: resolve,
    errorElement: errorElement
  }, /*#__PURE__*/React.createElement(ResolveAwait, null, children));
}
var AwaitRenderStatus;

(function (AwaitRenderStatus) {
  AwaitRenderStatus[AwaitRenderStatus["pending"] = 0] = "pending";
  AwaitRenderStatus[AwaitRenderStatus["success"] = 1] = "success";
  AwaitRenderStatus[AwaitRenderStatus["error"] = 2] = "error";
})(AwaitRenderStatus || (AwaitRenderStatus = {}));

const neverSettledPromise = new Promise(() => {});

class AwaitErrorBoundary extends react.Component {
  constructor(props) {
    super(props);
    this.state = {
      error: null
    };
  }

  static getDerivedStateFromError(error) {
    return {
      error
    };
  }

  componentDidCatch(error, errorInfo) {
    console.error("<Await> caught the following error during render", error, errorInfo);
  }

  render() {
    let {
      children,
      errorElement,
      resolve
    } = this.props;
    let promise = null;
    let status = AwaitRenderStatus.pending;

    if (!(resolve instanceof Promise)) {
      // Didn't get a promise - provide as a resolved promise
      status = AwaitRenderStatus.success;
      promise = Promise.resolve();
      Object.defineProperty(promise, "_tracked", {
        get: () => true
      });
      Object.defineProperty(promise, "_data", {
        get: () => resolve
      });
    } else if (this.state.error) {
      // Caught a render error, provide it as a rejected promise
      status = AwaitRenderStatus.error;
      let renderError = this.state.error;
      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings

      Object.defineProperty(promise, "_tracked", {
        get: () => true
      });
      Object.defineProperty(promise, "_error", {
        get: () => renderError
      });
    } else if (resolve._tracked) {
      // Already tracked promise - check contents
      promise = resolve;
      status = promise._error !== undefined ? AwaitRenderStatus.error : promise._data !== undefined ? AwaitRenderStatus.success : AwaitRenderStatus.pending;
    } else {
      // Raw (untracked) promise - track it
      status = AwaitRenderStatus.pending;
      Object.defineProperty(resolve, "_tracked", {
        get: () => true
      });
      promise = resolve.then(data => Object.defineProperty(resolve, "_data", {
        get: () => data
      }), error => Object.defineProperty(resolve, "_error", {
        get: () => error
      }));
    }

    if (status === AwaitRenderStatus.error && promise._error instanceof AbortedDeferredError) {
      // Freeze the UI by throwing a never resolved promise
      throw neverSettledPromise;
    }

    if (status === AwaitRenderStatus.error && !errorElement) {
      // No errorElement, throw to the nearest route-level error boundary
      throw promise._error;
    }

    if (status === AwaitRenderStatus.error) {
      // Render via our errorElement
      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {
        value: promise,
        children: errorElement
      });
    }

    if (status === AwaitRenderStatus.success) {
      // Render children with resolved value
      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {
        value: promise,
        children: children
      });
    } // Throw to the suspense boundary


    throw promise;
  }

}
/**
 * @private
 * Indirection to leverage useAsyncValue for a render-prop API on <Await>
 */


function ResolveAwait(_ref7) {
  let {
    children
  } = _ref7;
  let data = useAsyncValue();

  if (typeof children === "function") {
    return children(data);
  }

  return /*#__PURE__*/React.createElement(React.Fragment, null, children);
} ///////////////////////////////////////////////////////////////////////////////
// UTILS
///////////////////////////////////////////////////////////////////////////////

/**
 * Creates a route config from a React "children" object, which is usually
 * either a `<Route>` element or an array of them. Used internally by
 * `<Routes>` to create a route config from its children.
 *
 * @see https://reactrouter.com/utils/create-routes-from-children
 */


function createRoutesFromChildren(children, parentPath) {
  if (parentPath === void 0) {
    parentPath = [];
  }

  let routes = [];
  react.Children.forEach(children, (element, index) => {
    if (! /*#__PURE__*/react.isValidElement(element)) {
      // Ignore non-elements. This allows people to more easily inline
      // conditionals in their route config.
      return;
    }

    if (element.type === react.Fragment) {
      // Transparently support React.Fragment and its children.
      routes.push.apply(routes, createRoutesFromChildren(element.props.children, parentPath));
      return;
    }

    !(element.type === Route) ?  false ? 0 : router_invariant(false) : void 0;
    !(!element.props.index || !element.props.children) ?  false ? 0 : router_invariant(false) : void 0;
    let treePath = [...parentPath, index];
    let route = {
      id: element.props.id || treePath.join("-"),
      caseSensitive: element.props.caseSensitive,
      element: element.props.element,
      index: element.props.index,
      path: element.props.path,
      loader: element.props.loader,
      action: element.props.action,
      errorElement: element.props.errorElement,
      hasErrorBoundary: element.props.errorElement != null,
      shouldRevalidate: element.props.shouldRevalidate,
      handle: element.props.handle
    };

    if (element.props.children) {
      route.children = createRoutesFromChildren(element.props.children, treePath);
    }

    routes.push(route);
  });
  return routes;
}
/**
 * Renders the result of `matchRoutes()` into a React element.
 */

function renderMatches(matches) {
  return _renderMatches(matches);
}
/**
 * @private
 * Walk the route tree and add hasErrorBoundary if it's not provided, so that
 * users providing manual route arrays can just specify errorElement
 */

function enhanceManualRouteObjects(routes) {
  return routes.map(route => {
    let routeClone = dist_extends({}, route);

    if (routeClone.hasErrorBoundary == null) {
      routeClone.hasErrorBoundary = routeClone.errorElement != null;
    }

    if (routeClone.children) {
      routeClone.children = enhanceManualRouteObjects(routeClone.children);
    }

    return routeClone;
  });
}

function createMemoryRouter(routes, opts) {
  return createRouter({
    basename: opts == null ? void 0 : opts.basename,
    history: createMemoryHistory({
      initialEntries: opts == null ? void 0 : opts.initialEntries,
      initialIndex: opts == null ? void 0 : opts.initialIndex
    }),
    hydrationData: opts == null ? void 0 : opts.hydrationData,
    routes: enhanceManualRouteObjects(routes)
  }).initialize();
} ///////////////////////////////////////////////////////////////////////////////


//# sourceMappingURL=index.js.map

;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/typeof.js
function typeof_typeof(obj) {
  "@babel/helpers - typeof";

  return typeof_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
  }, typeof_typeof(obj);
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/toPrimitive.js

function _toPrimitive(input, hint) {
  if (typeof_typeof(input) !== "object" || input === null) return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== undefined) {
    var res = prim.call(input, hint || "default");
    if (typeof_typeof(res) !== "object") return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js


function _toPropertyKey(arg) {
  var key = _toPrimitive(arg, "string");
  return typeof_typeof(key) === "symbol" ? key : String(key);
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js

function defineProperty_defineProperty(obj, key, value) {
  key = _toPropertyKey(key);
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
;// CONCATENATED MODULE: ./node_modules/immer/dist/immer.esm.mjs
function n(n){for(var r=arguments.length,t=Array(r>1?r-1:0),e=1;e<r;e++)t[e-1]=arguments[e];if(false){ var i, o; }throw Error("[Immer] minified error nr: "+n+(t.length?" "+t.map((function(n){return"'"+n+"'"})).join(","):"")+". Find the full error at: https://bit.ly/3cXEKWf")}function r(n){return!!n&&!!n[Q]}function t(n){var r;return!!n&&(function(n){if(!n||"object"!=typeof n)return!1;var r=Object.getPrototypeOf(n);if(null===r)return!0;var t=Object.hasOwnProperty.call(r,"constructor")&&r.constructor;return t===Object||"function"==typeof t&&Function.toString.call(t)===Z}(n)||Array.isArray(n)||!!n[L]||!!(null===(r=n.constructor)||void 0===r?void 0:r[L])||s(n)||v(n))}function e(t){return r(t)||n(23,t),t[Q].t}function i(n,r,t){void 0===t&&(t=!1),0===o(n)?(t?Object.keys:nn)(n).forEach((function(e){t&&"symbol"==typeof e||r(e,n[e],n)})):n.forEach((function(t,e){return r(e,t,n)}))}function o(n){var r=n[Q];return r?r.i>3?r.i-4:r.i:Array.isArray(n)?1:s(n)?2:v(n)?3:0}function u(n,r){return 2===o(n)?n.has(r):Object.prototype.hasOwnProperty.call(n,r)}function a(n,r){return 2===o(n)?n.get(r):n[r]}function f(n,r,t){var e=o(n);2===e?n.set(r,t):3===e?(n.delete(r),n.add(t)):n[r]=t}function c(n,r){return n===r?0!==n||1/n==1/r:n!=n&&r!=r}function s(n){return X&&n instanceof Map}function v(n){return q&&n instanceof Set}function p(n){return n.o||n.t}function l(n){if(Array.isArray(n))return Array.prototype.slice.call(n);var r=rn(n);delete r[Q];for(var t=nn(r),e=0;e<t.length;e++){var i=t[e],o=r[i];!1===o.writable&&(o.writable=!0,o.configurable=!0),(o.get||o.set)&&(r[i]={configurable:!0,writable:!0,enumerable:o.enumerable,value:n[i]})}return Object.create(Object.getPrototypeOf(n),r)}function d(n,e){return void 0===e&&(e=!1),y(n)||r(n)||!t(n)||(o(n)>1&&(n.set=n.add=n.clear=n.delete=h),Object.freeze(n),e&&i(n,(function(n,r){return d(r,!0)}),!0)),n}function h(){n(2)}function y(n){return null==n||"object"!=typeof n||Object.isFrozen(n)}function b(r){var t=tn[r];return t||n(18,r),t}function m(n,r){tn[n]||(tn[n]=r)}function _(){return true||0,U}function j(n,r){r&&(b("Patches"),n.u=[],n.s=[],n.v=r)}function O(n){g(n),n.p.forEach(S),n.p=null}function g(n){n===U&&(U=n.l)}function w(n){return U={p:[],l:U,h:n,m:!0,_:0}}function S(n){var r=n[Q];0===r.i||1===r.i?r.j():r.O=!0}function P(r,e){e._=e.p.length;var i=e.p[0],o=void 0!==r&&r!==i;return e.h.g||b("ES5").S(e,r,o),o?(i[Q].P&&(O(e),n(4)),t(r)&&(r=M(e,r),e.l||x(e,r)),e.u&&b("Patches").M(i[Q].t,r,e.u,e.s)):r=M(e,i,[]),O(e),e.u&&e.v(e.u,e.s),r!==H?r:void 0}function M(n,r,t){if(y(r))return r;var e=r[Q];if(!e)return i(r,(function(i,o){return A(n,e,r,i,o,t)}),!0),r;if(e.A!==n)return r;if(!e.P)return x(n,e.t,!0),e.t;if(!e.I){e.I=!0,e.A._--;var o=4===e.i||5===e.i?e.o=l(e.k):e.o;i(3===e.i?new Set(o):o,(function(r,i){return A(n,e,o,r,i,t)})),x(n,o,!1),t&&n.u&&b("Patches").N(e,t,n.u,n.s)}return e.o}function A(e,i,o,a,c,s){if( false&&0,r(c)){var v=M(e,c,s&&i&&3!==i.i&&!u(i.R,a)?s.concat(a):void 0);if(f(o,a,v),!r(v))return;e.m=!1}if(t(c)&&!y(c)){if(!e.h.D&&e._<1)return;M(e,c),i&&i.A.l||x(e,c)}}function x(n,r,t){void 0===t&&(t=!1),n.h.D&&n.m&&d(r,t)}function z(n,r){var t=n[Q];return(t?p(t):n)[r]}function I(n,r){if(r in n)for(var t=Object.getPrototypeOf(n);t;){var e=Object.getOwnPropertyDescriptor(t,r);if(e)return e;t=Object.getPrototypeOf(t)}}function k(n){n.P||(n.P=!0,n.l&&k(n.l))}function E(n){n.o||(n.o=l(n.t))}function N(n,r,t){var e=s(r)?b("MapSet").F(r,t):v(r)?b("MapSet").T(r,t):n.g?function(n,r){var t=Array.isArray(n),e={i:t?1:0,A:r?r.A:_(),P:!1,I:!1,R:{},l:r,t:n,k:null,o:null,j:null,C:!1},i=e,o=en;t&&(i=[e],o=on);var u=Proxy.revocable(i,o),a=u.revoke,f=u.proxy;return e.k=f,e.j=a,f}(r,t):b("ES5").J(r,t);return(t?t.A:_()).p.push(e),e}function R(e){return r(e)||n(22,e),function n(r){if(!t(r))return r;var e,u=r[Q],c=o(r);if(u){if(!u.P&&(u.i<4||!b("ES5").K(u)))return u.t;u.I=!0,e=D(r,c),u.I=!1}else e=D(r,c);return i(e,(function(r,t){u&&a(u.t,r)===t||f(e,r,n(t))})),3===c?new Set(e):e}(e)}function D(n,r){switch(r){case 2:return new Map(n);case 3:return Array.from(n)}return l(n)}function F(){function t(n,r){var t=s[n];return t?t.enumerable=r:s[n]=t={configurable:!0,enumerable:r,get:function(){var r=this[Q];return false&&0,en.get(r,n)},set:function(r){var t=this[Q]; false&&0,en.set(t,n,r)}},t}function e(n){for(var r=n.length-1;r>=0;r--){var t=n[r][Q];if(!t.P)switch(t.i){case 5:a(t)&&k(t);break;case 4:o(t)&&k(t)}}}function o(n){for(var r=n.t,t=n.k,e=nn(t),i=e.length-1;i>=0;i--){var o=e[i];if(o!==Q){var a=r[o];if(void 0===a&&!u(r,o))return!0;var f=t[o],s=f&&f[Q];if(s?s.t!==a:!c(f,a))return!0}}var v=!!r[Q];return e.length!==nn(r).length+(v?0:1)}function a(n){var r=n.k;if(r.length!==n.t.length)return!0;var t=Object.getOwnPropertyDescriptor(r,r.length-1);if(t&&!t.get)return!0;for(var e=0;e<r.length;e++)if(!r.hasOwnProperty(e))return!0;return!1}function f(r){r.O&&n(3,JSON.stringify(p(r)))}var s={};m("ES5",{J:function(n,r){var e=Array.isArray(n),i=function(n,r){if(n){for(var e=Array(r.length),i=0;i<r.length;i++)Object.defineProperty(e,""+i,t(i,!0));return e}var o=rn(r);delete o[Q];for(var u=nn(o),a=0;a<u.length;a++){var f=u[a];o[f]=t(f,n||!!o[f].enumerable)}return Object.create(Object.getPrototypeOf(r),o)}(e,n),o={i:e?5:4,A:r?r.A:_(),P:!1,I:!1,R:{},l:r,t:n,k:i,o:null,O:!1,C:!1};return Object.defineProperty(i,Q,{value:o,writable:!0}),i},S:function(n,t,o){o?r(t)&&t[Q].A===n&&e(n.p):(n.u&&function n(r){if(r&&"object"==typeof r){var t=r[Q];if(t){var e=t.t,o=t.k,f=t.R,c=t.i;if(4===c)i(o,(function(r){r!==Q&&(void 0!==e[r]||u(e,r)?f[r]||n(o[r]):(f[r]=!0,k(t)))})),i(e,(function(n){void 0!==o[n]||u(o,n)||(f[n]=!1,k(t))}));else if(5===c){if(a(t)&&(k(t),f.length=!0),o.length<e.length)for(var s=o.length;s<e.length;s++)f[s]=!1;else for(var v=e.length;v<o.length;v++)f[v]=!0;for(var p=Math.min(o.length,e.length),l=0;l<p;l++)o.hasOwnProperty(l)||(f[l]=!0),void 0===f[l]&&n(o[l])}}}}(n.p[0]),e(n.p))},K:function(n){return 4===n.i?o(n):a(n)}})}function T(){function e(n){if(!t(n))return n;if(Array.isArray(n))return n.map(e);if(s(n))return new Map(Array.from(n.entries()).map((function(n){return[n[0],e(n[1])]})));if(v(n))return new Set(Array.from(n).map(e));var r=Object.create(Object.getPrototypeOf(n));for(var i in n)r[i]=e(n[i]);return u(n,L)&&(r[L]=n[L]),r}function f(n){return r(n)?e(n):n}var c="add";m("Patches",{$:function(r,t){return t.forEach((function(t){for(var i=t.path,u=t.op,f=r,s=0;s<i.length-1;s++){var v=o(f),p=""+i[s];0!==v&&1!==v||"__proto__"!==p&&"constructor"!==p||n(24),"function"==typeof f&&"prototype"===p&&n(24),"object"!=typeof(f=a(f,p))&&n(15,i.join("/"))}var l=o(f),d=e(t.value),h=i[i.length-1];switch(u){case"replace":switch(l){case 2:return f.set(h,d);case 3:n(16);default:return f[h]=d}case c:switch(l){case 1:return"-"===h?f.push(d):f.splice(h,0,d);case 2:return f.set(h,d);case 3:return f.add(d);default:return f[h]=d}case"remove":switch(l){case 1:return f.splice(h,1);case 2:return f.delete(h);case 3:return f.delete(t.value);default:return delete f[h]}default:n(17,u)}})),r},N:function(n,r,t,e){switch(n.i){case 0:case 4:case 2:return function(n,r,t,e){var o=n.t,s=n.o;i(n.R,(function(n,i){var v=a(o,n),p=a(s,n),l=i?u(o,n)?"replace":c:"remove";if(v!==p||"replace"!==l){var d=r.concat(n);t.push("remove"===l?{op:l,path:d}:{op:l,path:d,value:p}),e.push(l===c?{op:"remove",path:d}:"remove"===l?{op:c,path:d,value:f(v)}:{op:"replace",path:d,value:f(v)})}}))}(n,r,t,e);case 5:case 1:return function(n,r,t,e){var i=n.t,o=n.R,u=n.o;if(u.length<i.length){var a=[u,i];i=a[0],u=a[1];var s=[e,t];t=s[0],e=s[1]}for(var v=0;v<i.length;v++)if(o[v]&&u[v]!==i[v]){var p=r.concat([v]);t.push({op:"replace",path:p,value:f(u[v])}),e.push({op:"replace",path:p,value:f(i[v])})}for(var l=i.length;l<u.length;l++){var d=r.concat([l]);t.push({op:c,path:d,value:f(u[l])})}i.length<u.length&&e.push({op:"replace",path:r.concat(["length"]),value:i.length})}(n,r,t,e);case 3:return function(n,r,t,e){var i=n.t,o=n.o,u=0;i.forEach((function(n){if(!o.has(n)){var i=r.concat([u]);t.push({op:"remove",path:i,value:n}),e.unshift({op:c,path:i,value:n})}u++})),u=0,o.forEach((function(n){if(!i.has(n)){var o=r.concat([u]);t.push({op:c,path:o,value:n}),e.unshift({op:"remove",path:o,value:n})}u++}))}(n,r,t,e)}},M:function(n,r,t,e){t.push({op:"replace",path:[],value:r===H?void 0:r}),e.push({op:"replace",path:[],value:n})}})}function C(){function r(n,r){function t(){this.constructor=n}a(n,r),n.prototype=(t.prototype=r.prototype,new t)}function e(n){n.o||(n.R=new Map,n.o=new Map(n.t))}function o(n){n.o||(n.o=new Set,n.t.forEach((function(r){if(t(r)){var e=N(n.A.h,r,n);n.p.set(r,e),n.o.add(e)}else n.o.add(r)})))}function u(r){r.O&&n(3,JSON.stringify(p(r)))}var a=function(n,r){return(a=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,r){n.__proto__=r}||function(n,r){for(var t in r)r.hasOwnProperty(t)&&(n[t]=r[t])})(n,r)},f=function(){function n(n,r){return this[Q]={i:2,l:r,A:r?r.A:_(),P:!1,I:!1,o:void 0,R:void 0,t:n,k:this,C:!1,O:!1},this}r(n,Map);var o=n.prototype;return Object.defineProperty(o,"size",{get:function(){return p(this[Q]).size}}),o.has=function(n){return p(this[Q]).has(n)},o.set=function(n,r){var t=this[Q];return u(t),p(t).has(n)&&p(t).get(n)===r||(e(t),k(t),t.R.set(n,!0),t.o.set(n,r),t.R.set(n,!0)),this},o.delete=function(n){if(!this.has(n))return!1;var r=this[Q];return u(r),e(r),k(r),r.t.has(n)?r.R.set(n,!1):r.R.delete(n),r.o.delete(n),!0},o.clear=function(){var n=this[Q];u(n),p(n).size&&(e(n),k(n),n.R=new Map,i(n.t,(function(r){n.R.set(r,!1)})),n.o.clear())},o.forEach=function(n,r){var t=this;p(this[Q]).forEach((function(e,i){n.call(r,t.get(i),i,t)}))},o.get=function(n){var r=this[Q];u(r);var i=p(r).get(n);if(r.I||!t(i))return i;if(i!==r.t.get(n))return i;var o=N(r.A.h,i,r);return e(r),r.o.set(n,o),o},o.keys=function(){return p(this[Q]).keys()},o.values=function(){var n,r=this,t=this.keys();return(n={})[V]=function(){return r.values()},n.next=function(){var n=t.next();return n.done?n:{done:!1,value:r.get(n.value)}},n},o.entries=function(){var n,r=this,t=this.keys();return(n={})[V]=function(){return r.entries()},n.next=function(){var n=t.next();if(n.done)return n;var e=r.get(n.value);return{done:!1,value:[n.value,e]}},n},o[V]=function(){return this.entries()},n}(),c=function(){function n(n,r){return this[Q]={i:3,l:r,A:r?r.A:_(),P:!1,I:!1,o:void 0,t:n,k:this,p:new Map,O:!1,C:!1},this}r(n,Set);var t=n.prototype;return Object.defineProperty(t,"size",{get:function(){return p(this[Q]).size}}),t.has=function(n){var r=this[Q];return u(r),r.o?!!r.o.has(n)||!(!r.p.has(n)||!r.o.has(r.p.get(n))):r.t.has(n)},t.add=function(n){var r=this[Q];return u(r),this.has(n)||(o(r),k(r),r.o.add(n)),this},t.delete=function(n){if(!this.has(n))return!1;var r=this[Q];return u(r),o(r),k(r),r.o.delete(n)||!!r.p.has(n)&&r.o.delete(r.p.get(n))},t.clear=function(){var n=this[Q];u(n),p(n).size&&(o(n),k(n),n.o.clear())},t.values=function(){var n=this[Q];return u(n),o(n),n.o.values()},t.entries=function(){var n=this[Q];return u(n),o(n),n.o.entries()},t.keys=function(){return this.values()},t[V]=function(){return this.values()},t.forEach=function(n,r){for(var t=this.values(),e=t.next();!e.done;)n.call(r,e.value,e.value,this),e=t.next()},n}();m("MapSet",{F:function(n,r){return new f(n,r)},T:function(n,r){return new c(n,r)}})}function J(){F(),C(),T()}function K(n){return n}function $(n){return n}var G,U,W="undefined"!=typeof Symbol&&"symbol"==typeof Symbol("x"),X="undefined"!=typeof Map,q="undefined"!=typeof Set,B="undefined"!=typeof Proxy&&void 0!==Proxy.revocable&&"undefined"!=typeof Reflect,H=W?Symbol.for("immer-nothing"):((G={})["immer-nothing"]=!0,G),L=W?Symbol.for("immer-draftable"):"__$immer_draftable",Q=W?Symbol.for("immer-state"):"__$immer_state",V="undefined"!=typeof Symbol&&Symbol.iterator||"@@iterator",Y={0:"Illegal state",1:"Immer drafts cannot have computed properties",2:"This object has been frozen and should not be mutated",3:function(n){return"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? "+n},4:"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.",5:"Immer forbids circular references",6:"The first or second argument to `produce` must be a function",7:"The third argument to `produce` must be a function or undefined",8:"First argument to `createDraft` must be a plain object, an array, or an immerable object",9:"First argument to `finishDraft` must be a draft returned by `createDraft`",10:"The given draft is already finalized",11:"Object.defineProperty() cannot be used on an Immer draft",12:"Object.setPrototypeOf() cannot be used on an Immer draft",13:"Immer only supports deleting array indices",14:"Immer only supports setting array indices and the 'length' property",15:function(n){return"Cannot apply patch, path doesn't resolve: "+n},16:'Sets cannot have "replace" patches.',17:function(n){return"Unsupported patch operation: "+n},18:function(n){return"The plugin for '"+n+"' has not been loaded into Immer. To enable the plugin, import and call `enable"+n+"()` when initializing your application."},20:"Cannot use proxies if Proxy, Proxy.revocable or Reflect are not available",21:function(n){return"produce can only be called on things that are draftable: plain objects, arrays, Map, Set or classes that are marked with '[immerable]: true'. Got '"+n+"'"},22:function(n){return"'current' expects a draft, got: "+n},23:function(n){return"'original' expects a draft, got: "+n},24:"Patching reserved attributes like __proto__, prototype and constructor is not allowed"},Z=""+Object.prototype.constructor,nn="undefined"!=typeof Reflect&&Reflect.ownKeys?Reflect.ownKeys:void 0!==Object.getOwnPropertySymbols?function(n){return Object.getOwnPropertyNames(n).concat(Object.getOwnPropertySymbols(n))}:Object.getOwnPropertyNames,rn=Object.getOwnPropertyDescriptors||function(n){var r={};return nn(n).forEach((function(t){r[t]=Object.getOwnPropertyDescriptor(n,t)})),r},tn={},en={get:function(n,r){if(r===Q)return n;var e=p(n);if(!u(e,r))return function(n,r,t){var e,i=I(r,t);return i?"value"in i?i.value:null===(e=i.get)||void 0===e?void 0:e.call(n.k):void 0}(n,e,r);var i=e[r];return n.I||!t(i)?i:i===z(n.t,r)?(E(n),n.o[r]=N(n.A.h,i,n)):i},has:function(n,r){return r in p(n)},ownKeys:function(n){return Reflect.ownKeys(p(n))},set:function(n,r,t){var e=I(p(n),r);if(null==e?void 0:e.set)return e.set.call(n.k,t),!0;if(!n.P){var i=z(p(n),r),o=null==i?void 0:i[Q];if(o&&o.t===t)return n.o[r]=t,n.R[r]=!1,!0;if(c(t,i)&&(void 0!==t||u(n.t,r)))return!0;E(n),k(n)}return n.o[r]===t&&(void 0!==t||r in n.o)||Number.isNaN(t)&&Number.isNaN(n.o[r])||(n.o[r]=t,n.R[r]=!0),!0},deleteProperty:function(n,r){return void 0!==z(n.t,r)||r in n.t?(n.R[r]=!1,E(n),k(n)):delete n.R[r],n.o&&delete n.o[r],!0},getOwnPropertyDescriptor:function(n,r){var t=p(n),e=Reflect.getOwnPropertyDescriptor(t,r);return e?{writable:!0,configurable:1!==n.i||"length"!==r,enumerable:e.enumerable,value:t[r]}:e},defineProperty:function(){n(11)},getPrototypeOf:function(n){return Object.getPrototypeOf(n.t)},setPrototypeOf:function(){n(12)}},on={};i(en,(function(n,r){on[n]=function(){return arguments[0]=arguments[0][0],r.apply(this,arguments)}})),on.deleteProperty=function(r,t){return false&&0,on.set.call(this,r,t,void 0)},on.set=function(r,t,e){return false&&0,en.set.call(this,r[0],t,e,r[0])};var un=function(){function e(r){var e=this;this.g=B,this.D=!0,this.produce=function(r,i,o){if("function"==typeof r&&"function"!=typeof i){var u=i;i=r;var a=e;return function(n){var r=this;void 0===n&&(n=u);for(var t=arguments.length,e=Array(t>1?t-1:0),o=1;o<t;o++)e[o-1]=arguments[o];return a.produce(n,(function(n){var t;return(t=i).call.apply(t,[r,n].concat(e))}))}}var f;if("function"!=typeof i&&n(6),void 0!==o&&"function"!=typeof o&&n(7),t(r)){var c=w(e),s=N(e,r,void 0),v=!0;try{f=i(s),v=!1}finally{v?O(c):g(c)}return"undefined"!=typeof Promise&&f instanceof Promise?f.then((function(n){return j(c,o),P(n,c)}),(function(n){throw O(c),n})):(j(c,o),P(f,c))}if(!r||"object"!=typeof r){if(void 0===(f=i(r))&&(f=r),f===H&&(f=void 0),e.D&&d(f,!0),o){var p=[],l=[];b("Patches").M(r,f,p,l),o(p,l)}return f}n(21,r)},this.produceWithPatches=function(n,r){if("function"==typeof n)return function(r){for(var t=arguments.length,i=Array(t>1?t-1:0),o=1;o<t;o++)i[o-1]=arguments[o];return e.produceWithPatches(r,(function(r){return n.apply(void 0,[r].concat(i))}))};var t,i,o=e.produce(n,r,(function(n,r){t=n,i=r}));return"undefined"!=typeof Promise&&o instanceof Promise?o.then((function(n){return[n,t,i]})):[o,t,i]},"boolean"==typeof(null==r?void 0:r.useProxies)&&this.setUseProxies(r.useProxies),"boolean"==typeof(null==r?void 0:r.autoFreeze)&&this.setAutoFreeze(r.autoFreeze)}var i=e.prototype;return i.createDraft=function(e){t(e)||n(8),r(e)&&(e=R(e));var i=w(this),o=N(this,e,void 0);return o[Q].C=!0,g(i),o},i.finishDraft=function(r,t){var e=r&&r[Q]; false&&(0);var i=e.A;return j(i,t),P(void 0,i)},i.setAutoFreeze=function(n){this.D=n},i.setUseProxies=function(r){r&&!B&&n(20),this.g=r},i.applyPatches=function(n,t){var e;for(e=t.length-1;e>=0;e--){var i=t[e];if(0===i.path.length&&"replace"===i.op){n=i.value;break}}e>-1&&(t=t.slice(e+1));var o=b("Patches").$;return r(n)?o(n,t):this.produce(n,(function(n){return o(n,t)}))},e}(),an=new un,fn=an.produce,cn=an.produceWithPatches.bind(an),sn=an.setAutoFreeze.bind(an),vn=an.setUseProxies.bind(an),pn=an.applyPatches.bind(an),ln=an.createDraft.bind(an),dn=an.finishDraft.bind(an);/* harmony default export */ const immer_esm = (fn);
//# sourceMappingURL=immer.esm.js.map

;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/objectSpread2.js

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {
      defineProperty_defineProperty(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
;// CONCATENATED MODULE: ./node_modules/redux/es/redux.js


/**
 * Adapted from React: https://github.com/facebook/react/blob/master/packages/shared/formatProdErrorMessage.js
 *
 * Do not require this module directly! Use normal throw error calls. These messages will be replaced with error codes
 * during build.
 * @param {number} code
 */
function formatProdErrorMessage(code) {
  return "Minified Redux error #" + code + "; visit https://redux.js.org/Errors?code=" + code + " for the full message or " + 'use the non-minified dev environment for full errors. ';
}

// Inlined version of the `symbol-observable` polyfill
var $$observable = (function () {
  return typeof Symbol === 'function' && Symbol.observable || '@@observable';
})();

/**
 * These are private action types reserved by Redux.
 * For any unknown actions, you must return the current state.
 * If the current state is undefined, you must return the initial state.
 * Do not reference these action types directly in your code.
 */
var randomString = function randomString() {
  return Math.random().toString(36).substring(7).split('').join('.');
};

var ActionTypes = {
  INIT: "@@redux/INIT" + randomString(),
  REPLACE: "@@redux/REPLACE" + randomString(),
  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {
    return "@@redux/PROBE_UNKNOWN_ACTION" + randomString();
  }
};

/**
 * @param {any} obj The object to inspect.
 * @returns {boolean} True if the argument appears to be a plain object.
 */
function isPlainObject(obj) {
  if (typeof obj !== 'object' || obj === null) return false;
  var proto = obj;

  while (Object.getPrototypeOf(proto) !== null) {
    proto = Object.getPrototypeOf(proto);
  }

  return Object.getPrototypeOf(obj) === proto;
}

// Inlined / shortened version of `kindOf` from https://github.com/jonschlinkert/kind-of
function miniKindOf(val) {
  if (val === void 0) return 'undefined';
  if (val === null) return 'null';
  var type = typeof val;

  switch (type) {
    case 'boolean':
    case 'string':
    case 'number':
    case 'symbol':
    case 'function':
      {
        return type;
      }
  }

  if (Array.isArray(val)) return 'array';
  if (isDate(val)) return 'date';
  if (isError(val)) return 'error';
  var constructorName = ctorName(val);

  switch (constructorName) {
    case 'Symbol':
    case 'Promise':
    case 'WeakMap':
    case 'WeakSet':
    case 'Map':
    case 'Set':
      return constructorName;
  } // other


  return type.slice(8, -1).toLowerCase().replace(/\s/g, '');
}

function ctorName(val) {
  return typeof val.constructor === 'function' ? val.constructor.name : null;
}

function isError(val) {
  return val instanceof Error || typeof val.message === 'string' && val.constructor && typeof val.constructor.stackTraceLimit === 'number';
}

function isDate(val) {
  if (val instanceof Date) return true;
  return typeof val.toDateString === 'function' && typeof val.getDate === 'function' && typeof val.setDate === 'function';
}

function kindOf(val) {
  var typeOfVal = typeof val;

  if (false) {}

  return typeOfVal;
}

/**
 * @deprecated
 *
 * **We recommend using the `configureStore` method
 * of the `@reduxjs/toolkit` package**, which replaces `createStore`.
 *
 * Redux Toolkit is our recommended approach for writing Redux logic today,
 * including store setup, reducers, data fetching, and more.
 *
 * **For more details, please read this Redux docs page:**
 * **https://redux.js.org/introduction/why-rtk-is-redux-today**
 *
 * `configureStore` from Redux Toolkit is an improved version of `createStore` that
 * simplifies setup and helps avoid common bugs.
 *
 * You should not be using the `redux` core package by itself today, except for learning purposes.
 * The `createStore` method from the core `redux` package will not be removed, but we encourage
 * all users to migrate to using Redux Toolkit for all Redux code.
 *
 * If you want to use `createStore` without this visual deprecation warning, use
 * the `legacy_createStore` import instead:
 *
 * `import { legacy_createStore as createStore} from 'redux'`
 *
 */

function createStore(reducer, preloadedState, enhancer) {
  var _ref2;

  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {
    throw new Error( true ? formatProdErrorMessage(0) : 0);
  }

  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {
    enhancer = preloadedState;
    preloadedState = undefined;
  }

  if (typeof enhancer !== 'undefined') {
    if (typeof enhancer !== 'function') {
      throw new Error( true ? formatProdErrorMessage(1) : 0);
    }

    return enhancer(createStore)(reducer, preloadedState);
  }

  if (typeof reducer !== 'function') {
    throw new Error( true ? formatProdErrorMessage(2) : 0);
  }

  var currentReducer = reducer;
  var currentState = preloadedState;
  var currentListeners = [];
  var nextListeners = currentListeners;
  var isDispatching = false;
  /**
   * This makes a shallow copy of currentListeners so we can use
   * nextListeners as a temporary list while dispatching.
   *
   * This prevents any bugs around consumers calling
   * subscribe/unsubscribe in the middle of a dispatch.
   */

  function ensureCanMutateNextListeners() {
    if (nextListeners === currentListeners) {
      nextListeners = currentListeners.slice();
    }
  }
  /**
   * Reads the state tree managed by the store.
   *
   * @returns {any} The current state tree of your application.
   */


  function getState() {
    if (isDispatching) {
      throw new Error( true ? formatProdErrorMessage(3) : 0);
    }

    return currentState;
  }
  /**
   * Adds a change listener. It will be called any time an action is dispatched,
   * and some part of the state tree may potentially have changed. You may then
   * call `getState()` to read the current state tree inside the callback.
   *
   * You may call `dispatch()` from a change listener, with the following
   * caveats:
   *
   * 1. The subscriptions are snapshotted just before every `dispatch()` call.
   * If you subscribe or unsubscribe while the listeners are being invoked, this
   * will not have any effect on the `dispatch()` that is currently in progress.
   * However, the next `dispatch()` call, whether nested or not, will use a more
   * recent snapshot of the subscription list.
   *
   * 2. The listener should not expect to see all state changes, as the state
   * might have been updated multiple times during a nested `dispatch()` before
   * the listener is called. It is, however, guaranteed that all subscribers
   * registered before the `dispatch()` started will be called with the latest
   * state by the time it exits.
   *
   * @param {Function} listener A callback to be invoked on every dispatch.
   * @returns {Function} A function to remove this change listener.
   */


  function subscribe(listener) {
    if (typeof listener !== 'function') {
      throw new Error( true ? formatProdErrorMessage(4) : 0);
    }

    if (isDispatching) {
      throw new Error( true ? formatProdErrorMessage(5) : 0);
    }

    var isSubscribed = true;
    ensureCanMutateNextListeners();
    nextListeners.push(listener);
    return function unsubscribe() {
      if (!isSubscribed) {
        return;
      }

      if (isDispatching) {
        throw new Error( true ? formatProdErrorMessage(6) : 0);
      }

      isSubscribed = false;
      ensureCanMutateNextListeners();
      var index = nextListeners.indexOf(listener);
      nextListeners.splice(index, 1);
      currentListeners = null;
    };
  }
  /**
   * Dispatches an action. It is the only way to trigger a state change.
   *
   * The `reducer` function, used to create the store, will be called with the
   * current state tree and the given `action`. Its return value will
   * be considered the **next** state of the tree, and the change listeners
   * will be notified.
   *
   * The base implementation only supports plain object actions. If you want to
   * dispatch a Promise, an Observable, a thunk, or something else, you need to
   * wrap your store creating function into the corresponding middleware. For
   * example, see the documentation for the `redux-thunk` package. Even the
   * middleware will eventually dispatch plain object actions using this method.
   *
   * @param {Object} action A plain object representing “what changed”. It is
   * a good idea to keep actions serializable so you can record and replay user
   * sessions, or use the time travelling `redux-devtools`. An action must have
   * a `type` property which may not be `undefined`. It is a good idea to use
   * string constants for action types.
   *
   * @returns {Object} For convenience, the same action object you dispatched.
   *
   * Note that, if you use a custom middleware, it may wrap `dispatch()` to
   * return something else (for example, a Promise you can await).
   */


  function dispatch(action) {
    if (!isPlainObject(action)) {
      throw new Error( true ? formatProdErrorMessage(7) : 0);
    }

    if (typeof action.type === 'undefined') {
      throw new Error( true ? formatProdErrorMessage(8) : 0);
    }

    if (isDispatching) {
      throw new Error( true ? formatProdErrorMessage(9) : 0);
    }

    try {
      isDispatching = true;
      currentState = currentReducer(currentState, action);
    } finally {
      isDispatching = false;
    }

    var listeners = currentListeners = nextListeners;

    for (var i = 0; i < listeners.length; i++) {
      var listener = listeners[i];
      listener();
    }

    return action;
  }
  /**
   * Replaces the reducer currently used by the store to calculate the state.
   *
   * You might need this if your app implements code splitting and you want to
   * load some of the reducers dynamically. You might also need this if you
   * implement a hot reloading mechanism for Redux.
   *
   * @param {Function} nextReducer The reducer for the store to use instead.
   * @returns {void}
   */


  function replaceReducer(nextReducer) {
    if (typeof nextReducer !== 'function') {
      throw new Error( true ? formatProdErrorMessage(10) : 0);
    }

    currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.
    // Any reducers that existed in both the new and old rootReducer
    // will receive the previous state. This effectively populates
    // the new state tree with any relevant data from the old one.

    dispatch({
      type: ActionTypes.REPLACE
    });
  }
  /**
   * Interoperability point for observable/reactive libraries.
   * @returns {observable} A minimal observable of state changes.
   * For more information, see the observable proposal:
   * https://github.com/tc39/proposal-observable
   */


  function observable() {
    var _ref;

    var outerSubscribe = subscribe;
    return _ref = {
      /**
       * The minimal observable subscription method.
       * @param {Object} observer Any object that can be used as an observer.
       * The observer object should have a `next` method.
       * @returns {subscription} An object with an `unsubscribe` method that can
       * be used to unsubscribe the observable from the store, and prevent further
       * emission of values from the observable.
       */
      subscribe: function subscribe(observer) {
        if (typeof observer !== 'object' || observer === null) {
          throw new Error( true ? formatProdErrorMessage(11) : 0);
        }

        function observeState() {
          if (observer.next) {
            observer.next(getState());
          }
        }

        observeState();
        var unsubscribe = outerSubscribe(observeState);
        return {
          unsubscribe: unsubscribe
        };
      }
    }, _ref[$$observable] = function () {
      return this;
    }, _ref;
  } // When a store is created, an "INIT" action is dispatched so that every
  // reducer returns their initial state. This effectively populates
  // the initial state tree.


  dispatch({
    type: ActionTypes.INIT
  });
  return _ref2 = {
    dispatch: dispatch,
    subscribe: subscribe,
    getState: getState,
    replaceReducer: replaceReducer
  }, _ref2[$$observable] = observable, _ref2;
}
/**
 * Creates a Redux store that holds the state tree.
 *
 * **We recommend using `configureStore` from the
 * `@reduxjs/toolkit` package**, which replaces `createStore`:
 * **https://redux.js.org/introduction/why-rtk-is-redux-today**
 *
 * The only way to change the data in the store is to call `dispatch()` on it.
 *
 * There should only be a single store in your app. To specify how different
 * parts of the state tree respond to actions, you may combine several reducers
 * into a single reducer function by using `combineReducers`.
 *
 * @param {Function} reducer A function that returns the next state tree, given
 * the current state tree and the action to handle.
 *
 * @param {any} [preloadedState] The initial state. You may optionally specify it
 * to hydrate the state from the server in universal apps, or to restore a
 * previously serialized user session.
 * If you use `combineReducers` to produce the root reducer function, this must be
 * an object with the same shape as `combineReducers` keys.
 *
 * @param {Function} [enhancer] The store enhancer. You may optionally specify it
 * to enhance the store with third-party capabilities such as middleware,
 * time travel, persistence, etc. The only store enhancer that ships with Redux
 * is `applyMiddleware()`.
 *
 * @returns {Store} A Redux store that lets you read the state, dispatch actions
 * and subscribe to changes.
 */

var legacy_createStore = (/* unused pure expression or super */ null && (createStore));

/**
 * Prints a warning in the console if it exists.
 *
 * @param {String} message The warning message.
 * @returns {void}
 */
function redux_warning(message) {
  /* eslint-disable no-console */
  if (typeof console !== 'undefined' && typeof console.error === 'function') {
    console.error(message);
  }
  /* eslint-enable no-console */


  try {
    // This error was thrown as a convenience so that if you enable
    // "break on all exceptions" in your console,
    // it would pause the execution at this line.
    throw new Error(message);
  } catch (e) {} // eslint-disable-line no-empty

}

function getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {
  var reducerKeys = Object.keys(reducers);
  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';

  if (reducerKeys.length === 0) {
    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';
  }

  if (!isPlainObject(inputState)) {
    return "The " + argumentName + " has unexpected type of \"" + kindOf(inputState) + "\". Expected argument to be an object with the following " + ("keys: \"" + reducerKeys.join('", "') + "\"");
  }

  var unexpectedKeys = Object.keys(inputState).filter(function (key) {
    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];
  });
  unexpectedKeys.forEach(function (key) {
    unexpectedKeyCache[key] = true;
  });
  if (action && action.type === ActionTypes.REPLACE) return;

  if (unexpectedKeys.length > 0) {
    return "Unexpected " + (unexpectedKeys.length > 1 ? 'keys' : 'key') + " " + ("\"" + unexpectedKeys.join('", "') + "\" found in " + argumentName + ". ") + "Expected to find one of the known reducer keys instead: " + ("\"" + reducerKeys.join('", "') + "\". Unexpected keys will be ignored.");
  }
}

function assertReducerShape(reducers) {
  Object.keys(reducers).forEach(function (key) {
    var reducer = reducers[key];
    var initialState = reducer(undefined, {
      type: ActionTypes.INIT
    });

    if (typeof initialState === 'undefined') {
      throw new Error( true ? formatProdErrorMessage(12) : 0);
    }

    if (typeof reducer(undefined, {
      type: ActionTypes.PROBE_UNKNOWN_ACTION()
    }) === 'undefined') {
      throw new Error( true ? formatProdErrorMessage(13) : 0);
    }
  });
}
/**
 * Turns an object whose values are different reducer functions, into a single
 * reducer function. It will call every child reducer, and gather their results
 * into a single state object, whose keys correspond to the keys of the passed
 * reducer functions.
 *
 * @param {Object} reducers An object whose values correspond to different
 * reducer functions that need to be combined into one. One handy way to obtain
 * it is to use ES6 `import * as reducers` syntax. The reducers may never return
 * undefined for any action. Instead, they should return their initial state
 * if the state passed to them was undefined, and the current state for any
 * unrecognized action.
 *
 * @returns {Function} A reducer function that invokes every reducer inside the
 * passed object, and builds a state object with the same shape.
 */


function combineReducers(reducers) {
  var reducerKeys = Object.keys(reducers);
  var finalReducers = {};

  for (var i = 0; i < reducerKeys.length; i++) {
    var key = reducerKeys[i];

    if (false) {}

    if (typeof reducers[key] === 'function') {
      finalReducers[key] = reducers[key];
    }
  }

  var finalReducerKeys = Object.keys(finalReducers); // This is used to make sure we don't warn about the same
  // keys multiple times.

  var unexpectedKeyCache;

  if (false) {}

  var shapeAssertionError;

  try {
    assertReducerShape(finalReducers);
  } catch (e) {
    shapeAssertionError = e;
  }

  return function combination(state, action) {
    if (state === void 0) {
      state = {};
    }

    if (shapeAssertionError) {
      throw shapeAssertionError;
    }

    if (false) { var warningMessage; }

    var hasChanged = false;
    var nextState = {};

    for (var _i = 0; _i < finalReducerKeys.length; _i++) {
      var _key = finalReducerKeys[_i];
      var reducer = finalReducers[_key];
      var previousStateForKey = state[_key];
      var nextStateForKey = reducer(previousStateForKey, action);

      if (typeof nextStateForKey === 'undefined') {
        var actionType = action && action.type;
        throw new Error( true ? formatProdErrorMessage(14) : 0);
      }

      nextState[_key] = nextStateForKey;
      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;
    }

    hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;
    return hasChanged ? nextState : state;
  };
}

function bindActionCreator(actionCreator, dispatch) {
  return function () {
    return dispatch(actionCreator.apply(this, arguments));
  };
}
/**
 * Turns an object whose values are action creators, into an object with the
 * same keys, but with every function wrapped into a `dispatch` call so they
 * may be invoked directly. This is just a convenience method, as you can call
 * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.
 *
 * For convenience, you can also pass an action creator as the first argument,
 * and get a dispatch wrapped function in return.
 *
 * @param {Function|Object} actionCreators An object whose values are action
 * creator functions. One handy way to obtain it is to use ES6 `import * as`
 * syntax. You may also pass a single function.
 *
 * @param {Function} dispatch The `dispatch` function available on your Redux
 * store.
 *
 * @returns {Function|Object} The object mimicking the original object, but with
 * every action creator wrapped into the `dispatch` call. If you passed a
 * function as `actionCreators`, the return value will also be a single
 * function.
 */


function bindActionCreators(actionCreators, dispatch) {
  if (typeof actionCreators === 'function') {
    return bindActionCreator(actionCreators, dispatch);
  }

  if (typeof actionCreators !== 'object' || actionCreators === null) {
    throw new Error( true ? formatProdErrorMessage(16) : 0);
  }

  var boundActionCreators = {};

  for (var key in actionCreators) {
    var actionCreator = actionCreators[key];

    if (typeof actionCreator === 'function') {
      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);
    }
  }

  return boundActionCreators;
}

/**
 * Composes single-argument functions from right to left. The rightmost
 * function can take multiple arguments as it provides the signature for
 * the resulting composite function.
 *
 * @param {...Function} funcs The functions to compose.
 * @returns {Function} A function obtained by composing the argument functions
 * from right to left. For example, compose(f, g, h) is identical to doing
 * (...args) => f(g(h(...args))).
 */
function compose() {
  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {
    funcs[_key] = arguments[_key];
  }

  if (funcs.length === 0) {
    return function (arg) {
      return arg;
    };
  }

  if (funcs.length === 1) {
    return funcs[0];
  }

  return funcs.reduce(function (a, b) {
    return function () {
      return a(b.apply(void 0, arguments));
    };
  });
}

/**
 * Creates a store enhancer that applies middleware to the dispatch method
 * of the Redux store. This is handy for a variety of tasks, such as expressing
 * asynchronous actions in a concise manner, or logging every action payload.
 *
 * See `redux-thunk` package as an example of the Redux middleware.
 *
 * Because middleware is potentially asynchronous, this should be the first
 * store enhancer in the composition chain.
 *
 * Note that each middleware will be given the `dispatch` and `getState` functions
 * as named arguments.
 *
 * @param {...Function} middlewares The middleware chain to be applied.
 * @returns {Function} A store enhancer applying the middleware.
 */

function applyMiddleware() {
  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {
    middlewares[_key] = arguments[_key];
  }

  return function (createStore) {
    return function () {
      var store = createStore.apply(void 0, arguments);

      var _dispatch = function dispatch() {
        throw new Error( true ? formatProdErrorMessage(15) : 0);
      };

      var middlewareAPI = {
        getState: store.getState,
        dispatch: function dispatch() {
          return _dispatch.apply(void 0, arguments);
        }
      };
      var chain = middlewares.map(function (middleware) {
        return middleware(middlewareAPI);
      });
      _dispatch = compose.apply(void 0, chain)(store.dispatch);
      return _objectSpread2(_objectSpread2({}, store), {}, {
        dispatch: _dispatch
      });
    };
  };
}

/*
 * This is a dummy function to check if the function name has been altered by minification.
 * If the function has been minified and NODE_ENV !== 'production', warn the user.
 */

function isCrushed() {}

if (false) {}



;// CONCATENATED MODULE: ./node_modules/redux-thunk/es/index.js
/** A function that accepts a potential "extra argument" value to be injected later,
 * and returns an instance of the thunk middleware that uses that value
 */
function createThunkMiddleware(extraArgument) {
  // Standard Redux middleware definition pattern:
  // See: https://redux.js.org/tutorials/fundamentals/part-4-store#writing-custom-middleware
  var middleware = function middleware(_ref) {
    var dispatch = _ref.dispatch,
        getState = _ref.getState;
    return function (next) {
      return function (action) {
        // The thunk middleware looks for any functions that were passed to `store.dispatch`.
        // If this "action" is really a function, call it and return the result.
        if (typeof action === 'function') {
          // Inject the store's `dispatch` and `getState` methods, as well as any "extra arg"
          return action(dispatch, getState, extraArgument);
        } // Otherwise, pass the action down the middleware chain as usual


        return next(action);
      };
    };
  };

  return middleware;
}

var thunk = createThunkMiddleware(); // Attach the factory function so users can create a customized version
// with whatever "extra arg" they want to inject into their thunks

thunk.withExtraArgument = createThunkMiddleware;
/* harmony default export */ const es = (thunk);
;// CONCATENATED MODULE: ./node_modules/@reduxjs/toolkit/dist/redux-toolkit.esm.js
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __spreadArray = (undefined && undefined.__spreadArray) || function (to, from) {
    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
        to[j] = from[i];
    return to;
};
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = function (obj, key, value) { return key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value: value }) : obj[key] = value; };
var __spreadValues = function (a, b) {
    for (var prop in b || (b = {}))
        if (__hasOwnProp.call(b, prop))
            __defNormalProp(a, prop, b[prop]);
    if (__getOwnPropSymbols)
        for (var _i = 0, _c = __getOwnPropSymbols(b); _i < _c.length; _i++) {
            var prop = _c[_i];
            if (__propIsEnum.call(b, prop))
                __defNormalProp(a, prop, b[prop]);
        }
    return a;
};
var __spreadProps = function (a, b) { return __defProps(a, __getOwnPropDescs(b)); };
var __async = function (__this, __arguments, generator) {
    return new Promise(function (resolve, reject) {
        var fulfilled = function (value) {
            try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            }
        };
        var rejected = function (value) {
            try {
                step(generator.throw(value));
            }
            catch (e) {
                reject(e);
            }
        };
        var step = function (x) { return x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected); };
        step((generator = generator.apply(__this, __arguments)).next());
    });
};
// src/index.ts




// src/createDraftSafeSelector.ts


var createDraftSafeSelector = function () {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    var selector = createSelector.apply(void 0, args);
    var wrappedSelector = function (value) {
        var rest = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            rest[_i - 1] = arguments[_i];
        }
        return selector.apply(void 0, __spreadArray([isDraft(value) ? current(value) : value], rest));
    };
    return wrappedSelector;
};
// src/configureStore.ts

// src/devtoolsExtension.ts

var composeWithDevTools = typeof window !== "undefined" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : function () {
    if (arguments.length === 0)
        return void 0;
    if (typeof arguments[0] === "object")
        return compose;
    return compose.apply(null, arguments);
};
var devToolsEnhancer = typeof window !== "undefined" && window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__ : function () {
    return function (noop2) {
        return noop2;
    };
};
// src/isPlainObject.ts
function redux_toolkit_esm_isPlainObject(value) {
    if (typeof value !== "object" || value === null)
        return false;
    var proto = Object.getPrototypeOf(value);
    if (proto === null)
        return true;
    var baseProto = proto;
    while (Object.getPrototypeOf(baseProto) !== null) {
        baseProto = Object.getPrototypeOf(baseProto);
    }
    return proto === baseProto;
}
// src/getDefaultMiddleware.ts

// src/utils.ts

function getTimeMeasureUtils(maxDelay, fnName) {
    var elapsed = 0;
    return {
        measureTime: function (fn) {
            var started = Date.now();
            try {
                return fn();
            }
            finally {
                var finished = Date.now();
                elapsed += finished - started;
            }
        },
        warnIfExceeded: function () {
            if (elapsed > maxDelay) {
                console.warn(fnName + " took " + elapsed + "ms, which is more than the warning threshold of " + maxDelay + "ms. \nIf your state or actions are very large, you may want to disable the middleware as it might cause too much of a slowdown in development mode. See https://redux-toolkit.js.org/api/getDefaultMiddleware for instructions.\nIt is disabled in production builds, so you don't need to worry about that.");
            }
        }
    };
}
var MiddlewareArray = /** @class */ (function (_super) {
    __extends(MiddlewareArray, _super);
    function MiddlewareArray() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = _super.apply(this, args) || this;
        Object.setPrototypeOf(_this, MiddlewareArray.prototype);
        return _this;
    }
    Object.defineProperty(MiddlewareArray, Symbol.species, {
        get: function () {
            return MiddlewareArray;
        },
        enumerable: false,
        configurable: true
    });
    MiddlewareArray.prototype.concat = function () {
        var arr = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            arr[_i] = arguments[_i];
        }
        return _super.prototype.concat.apply(this, arr);
    };
    MiddlewareArray.prototype.prepend = function () {
        var arr = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            arr[_i] = arguments[_i];
        }
        if (arr.length === 1 && Array.isArray(arr[0])) {
            return new (MiddlewareArray.bind.apply(MiddlewareArray, __spreadArray([void 0], arr[0].concat(this))))();
        }
        return new (MiddlewareArray.bind.apply(MiddlewareArray, __spreadArray([void 0], arr.concat(this))))();
    };
    return MiddlewareArray;
}(Array));
function freezeDraftable(val) {
    return t(val) ? immer_esm(val, function () {
    }) : val;
}
// src/immutableStateInvariantMiddleware.ts
var isProduction = (/* unused pure expression or super */ null && ("production" === "production"));
var prefix = "Invariant failed";
function redux_toolkit_esm_invariant(condition, message) {
    if (condition) {
        return;
    }
    if (isProduction) {
        throw new Error(prefix);
    }
    throw new Error(prefix + ": " + (message || ""));
}
function stringify(obj, serializer, indent, decycler) {
    return JSON.stringify(obj, getSerialize(serializer, decycler), indent);
}
function getSerialize(serializer, decycler) {
    var stack = [], keys = [];
    if (!decycler)
        decycler = function (_, value) {
            if (stack[0] === value)
                return "[Circular ~]";
            return "[Circular ~." + keys.slice(0, stack.indexOf(value)).join(".") + "]";
        };
    return function (key, value) {
        if (stack.length > 0) {
            var thisPos = stack.indexOf(this);
            ~thisPos ? stack.splice(thisPos + 1) : stack.push(this);
            ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key);
            if (~stack.indexOf(value))
                value = decycler.call(this, key, value);
        }
        else
            stack.push(value);
        return serializer == null ? value : serializer.call(this, key, value);
    };
}
function isImmutableDefault(value) {
    return typeof value !== "object" || value == null || Object.isFrozen(value);
}
function trackForMutations(isImmutable, ignorePaths, obj) {
    var trackedProperties = trackProperties(isImmutable, ignorePaths, obj);
    return {
        detectMutations: function () {
            return detectMutations(isImmutable, ignorePaths, trackedProperties, obj);
        }
    };
}
function trackProperties(isImmutable, ignorePaths, obj, path) {
    if (ignorePaths === void 0) { ignorePaths = []; }
    if (path === void 0) { path = ""; }
    var tracked = { value: obj };
    if (!isImmutable(obj)) {
        tracked.children = {};
        for (var key in obj) {
            var childPath = path ? path + "." + key : key;
            if (ignorePaths.length && ignorePaths.indexOf(childPath) !== -1) {
                continue;
            }
            tracked.children[key] = trackProperties(isImmutable, ignorePaths, obj[key], childPath);
        }
    }
    return tracked;
}
function detectMutations(isImmutable, ignorePaths, trackedProperty, obj, sameParentRef, path) {
    if (ignorePaths === void 0) { ignorePaths = []; }
    if (sameParentRef === void 0) { sameParentRef = false; }
    if (path === void 0) { path = ""; }
    var prevObj = trackedProperty ? trackedProperty.value : void 0;
    var sameRef = prevObj === obj;
    if (sameParentRef && !sameRef && !Number.isNaN(obj)) {
        return { wasMutated: true, path: path };
    }
    if (isImmutable(prevObj) || isImmutable(obj)) {
        return { wasMutated: false };
    }
    var keysToDetect = {};
    for (var key in trackedProperty.children) {
        keysToDetect[key] = true;
    }
    for (var key in obj) {
        keysToDetect[key] = true;
    }
    for (var key in keysToDetect) {
        var childPath = path ? path + "." + key : key;
        if (ignorePaths.length && ignorePaths.indexOf(childPath) !== -1) {
            continue;
        }
        var result = detectMutations(isImmutable, ignorePaths, trackedProperty.children[key], obj[key], sameRef, childPath);
        if (result.wasMutated) {
            return result;
        }
    }
    return { wasMutated: false };
}
function createImmutableStateInvariantMiddleware(options) {
    if (options === void 0) { options = {}; }
    if (true) {
        return function () { return function (next) { return function (action) { return next(action); }; }; };
    }
    var _c = options.isImmutable, isImmutable = _c === void 0 ? isImmutableDefault : _c, ignoredPaths = options.ignoredPaths, _d = options.warnAfter, warnAfter = _d === void 0 ? 32 : _d, ignore = options.ignore;
    ignoredPaths = ignoredPaths || ignore;
    var track = trackForMutations.bind(null, isImmutable, ignoredPaths);
    return function (_c) {
        var getState = _c.getState;
        var state = getState();
        var tracker = track(state);
        var result;
        return function (next) { return function (action) {
            var measureUtils = getTimeMeasureUtils(warnAfter, "ImmutableStateInvariantMiddleware");
            measureUtils.measureTime(function () {
                state = getState();
                result = tracker.detectMutations();
                tracker = track(state);
                redux_toolkit_esm_invariant(!result.wasMutated, "A state mutation was detected between dispatches, in the path '" + (result.path || "") + "'.  This may cause incorrect behavior. (https://redux.js.org/style-guide/style-guide#do-not-mutate-state)");
            });
            var dispatchedAction = next(action);
            measureUtils.measureTime(function () {
                state = getState();
                result = tracker.detectMutations();
                tracker = track(state);
                result.wasMutated && redux_toolkit_esm_invariant(!result.wasMutated, "A state mutation was detected inside a dispatch, in the path: " + (result.path || "") + ". Take a look at the reducer(s) handling the action " + stringify(action) + ". (https://redux.js.org/style-guide/style-guide#do-not-mutate-state)");
            });
            measureUtils.warnIfExceeded();
            return dispatchedAction;
        }; };
    };
}
// src/serializableStateInvariantMiddleware.ts
function isPlain(val) {
    var type = typeof val;
    return val == null || type === "string" || type === "boolean" || type === "number" || Array.isArray(val) || redux_toolkit_esm_isPlainObject(val);
}
function findNonSerializableValue(value, path, isSerializable, getEntries, ignoredPaths) {
    if (path === void 0) { path = ""; }
    if (isSerializable === void 0) { isSerializable = isPlain; }
    if (ignoredPaths === void 0) { ignoredPaths = []; }
    var foundNestedSerializable;
    if (!isSerializable(value)) {
        return {
            keyPath: path || "<root>",
            value: value
        };
    }
    if (typeof value !== "object" || value === null) {
        return false;
    }
    var entries = getEntries != null ? getEntries(value) : Object.entries(value);
    var hasIgnoredPaths = ignoredPaths.length > 0;
    for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {
        var _c = entries_1[_i], key = _c[0], nestedValue = _c[1];
        var nestedPath = path ? path + "." + key : key;
        if (hasIgnoredPaths && ignoredPaths.indexOf(nestedPath) >= 0) {
            continue;
        }
        if (!isSerializable(nestedValue)) {
            return {
                keyPath: nestedPath,
                value: nestedValue
            };
        }
        if (typeof nestedValue === "object") {
            foundNestedSerializable = findNonSerializableValue(nestedValue, nestedPath, isSerializable, getEntries, ignoredPaths);
            if (foundNestedSerializable) {
                return foundNestedSerializable;
            }
        }
    }
    return false;
}
function createSerializableStateInvariantMiddleware(options) {
    if (options === void 0) { options = {}; }
    if (true) {
        return function () { return function (next) { return function (action) { return next(action); }; }; };
    }
    var _c = options.isSerializable, isSerializable = _c === void 0 ? isPlain : _c, getEntries = options.getEntries, _d = options.ignoredActions, ignoredActions = _d === void 0 ? [] : _d, _e = options.ignoredActionPaths, ignoredActionPaths = _e === void 0 ? ["meta.arg", "meta.baseQueryMeta"] : _e, _f = options.ignoredPaths, ignoredPaths = _f === void 0 ? [] : _f, _g = options.warnAfter, warnAfter = _g === void 0 ? 32 : _g, _h = options.ignoreState, ignoreState = _h === void 0 ? false : _h, _j = options.ignoreActions, ignoreActions = _j === void 0 ? false : _j;
    return function (storeAPI) { return function (next) { return function (action) {
        var result = next(action);
        var measureUtils = getTimeMeasureUtils(warnAfter, "SerializableStateInvariantMiddleware");
        if (!ignoreActions && !(ignoredActions.length && ignoredActions.indexOf(action.type) !== -1)) {
            measureUtils.measureTime(function () {
                var foundActionNonSerializableValue = findNonSerializableValue(action, "", isSerializable, getEntries, ignoredActionPaths);
                if (foundActionNonSerializableValue) {
                    var keyPath = foundActionNonSerializableValue.keyPath, value = foundActionNonSerializableValue.value;
                    console.error("A non-serializable value was detected in an action, in the path: `" + keyPath + "`. Value:", value, "\nTake a look at the logic that dispatched this action: ", action, "\n(See https://redux.js.org/faq/actions#why-should-type-be-a-string-or-at-least-serializable-why-should-my-action-types-be-constants)", "\n(To allow non-serializable values see: https://redux-toolkit.js.org/usage/usage-guide#working-with-non-serializable-data)");
                }
            });
        }
        if (!ignoreState) {
            measureUtils.measureTime(function () {
                var state = storeAPI.getState();
                var foundStateNonSerializableValue = findNonSerializableValue(state, "", isSerializable, getEntries, ignoredPaths);
                if (foundStateNonSerializableValue) {
                    var keyPath = foundStateNonSerializableValue.keyPath, value = foundStateNonSerializableValue.value;
                    console.error("A non-serializable value was detected in the state, in the path: `" + keyPath + "`. Value:", value, "\nTake a look at the reducer(s) handling this action type: " + action.type + ".\n(See https://redux.js.org/faq/organizing-state#can-i-put-functions-promises-or-other-non-serializable-items-in-my-store-state)");
                }
            });
            measureUtils.warnIfExceeded();
        }
        return result;
    }; }; };
}
// src/getDefaultMiddleware.ts
function isBoolean(x) {
    return typeof x === "boolean";
}
function curryGetDefaultMiddleware() {
    return function curriedGetDefaultMiddleware(options) {
        return getDefaultMiddleware(options);
    };
}
function getDefaultMiddleware(options) {
    if (options === void 0) { options = {}; }
    var _c = options.thunk, thunk = _c === void 0 ? true : _c, _d = options.immutableCheck, immutableCheck = _d === void 0 ? true : _d, _e = options.serializableCheck, serializableCheck = _e === void 0 ? true : _e;
    var middlewareArray = new MiddlewareArray();
    if (thunk) {
        if (isBoolean(thunk)) {
            middlewareArray.push(es);
        }
        else {
            middlewareArray.push(es.withExtraArgument(thunk.extraArgument));
        }
    }
    if (false) { var serializableOptions, immutableOptions; }
    return middlewareArray;
}
// src/configureStore.ts
var IS_PRODUCTION = "production" === "production";
function redux_toolkit_esm_configureStore(options) {
    var curriedGetDefaultMiddleware = curryGetDefaultMiddleware();
    var _c = options || {}, _d = _c.reducer, reducer = _d === void 0 ? void 0 : _d, _e = _c.middleware, middleware = _e === void 0 ? curriedGetDefaultMiddleware() : _e, _f = _c.devTools, devTools = _f === void 0 ? true : _f, _g = _c.preloadedState, preloadedState = _g === void 0 ? void 0 : _g, _h = _c.enhancers, enhancers = _h === void 0 ? void 0 : _h;
    var rootReducer;
    if (typeof reducer === "function") {
        rootReducer = reducer;
    }
    else if (redux_toolkit_esm_isPlainObject(reducer)) {
        rootReducer = combineReducers(reducer);
    }
    else {
        throw new Error('"reducer" is a required argument, and must be a function or an object of functions that can be passed to combineReducers');
    }
    var finalMiddleware = middleware;
    if (typeof finalMiddleware === "function") {
        finalMiddleware = finalMiddleware(curriedGetDefaultMiddleware);
        if (!IS_PRODUCTION && !Array.isArray(finalMiddleware)) {
            throw new Error("when using a middleware builder function, an array of middleware must be returned");
        }
    }
    if (!IS_PRODUCTION && finalMiddleware.some(function (item) { return typeof item !== "function"; })) {
        throw new Error("each middleware provided to configureStore must be a function");
    }
    var middlewareEnhancer = applyMiddleware.apply(void 0, finalMiddleware);
    var finalCompose = compose;
    if (devTools) {
        finalCompose = composeWithDevTools(__spreadValues({
            trace: !IS_PRODUCTION
        }, typeof devTools === "object" && devTools));
    }
    var storeEnhancers = [middlewareEnhancer];
    if (Array.isArray(enhancers)) {
        storeEnhancers = __spreadArray([middlewareEnhancer], enhancers);
    }
    else if (typeof enhancers === "function") {
        storeEnhancers = enhancers(storeEnhancers);
    }
    var composedEnhancer = finalCompose.apply(void 0, storeEnhancers);
    return createStore(rootReducer, preloadedState, composedEnhancer);
}
// src/createAction.ts
function createAction(type, prepareAction) {
    function actionCreator() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (prepareAction) {
            var prepared = prepareAction.apply(void 0, args);
            if (!prepared) {
                throw new Error("prepareAction did not return an object");
            }
            return __spreadValues(__spreadValues({
                type: type,
                payload: prepared.payload
            }, "meta" in prepared && { meta: prepared.meta }), "error" in prepared && { error: prepared.error });
        }
        return { type: type, payload: args[0] };
    }
    actionCreator.toString = function () { return "" + type; };
    actionCreator.type = type;
    actionCreator.match = function (action) { return action.type === type; };
    return actionCreator;
}
function isFSA(action) {
    return redux_toolkit_esm_isPlainObject(action) && typeof action.type === "string" && Object.keys(action).every(isValidKey);
}
function isValidKey(key) {
    return ["type", "payload", "error", "meta"].indexOf(key) > -1;
}
function getType(actionCreator) {
    return "" + actionCreator;
}
// src/createReducer.ts

// src/mapBuilders.ts
function executeReducerBuilderCallback(builderCallback) {
    var actionsMap = {};
    var actionMatchers = [];
    var defaultCaseReducer;
    var builder = {
        addCase: function (typeOrActionCreator, reducer) {
            if (false) {}
            var type = typeof typeOrActionCreator === "string" ? typeOrActionCreator : typeOrActionCreator.type;
            if (type in actionsMap) {
                throw new Error("addCase cannot be called with two reducers for the same action type");
            }
            actionsMap[type] = reducer;
            return builder;
        },
        addMatcher: function (matcher, reducer) {
            if (false) {}
            actionMatchers.push({ matcher: matcher, reducer: reducer });
            return builder;
        },
        addDefaultCase: function (reducer) {
            if (false) {}
            defaultCaseReducer = reducer;
            return builder;
        }
    };
    builderCallback(builder);
    return [actionsMap, actionMatchers, defaultCaseReducer];
}
// src/createReducer.ts
function isStateFunction(x) {
    return typeof x === "function";
}
var hasWarnedAboutObjectNotation = false;
function createReducer(initialState, mapOrBuilderCallback, actionMatchers, defaultCaseReducer) {
    if (actionMatchers === void 0) { actionMatchers = []; }
    if (false) {}
    var _c = typeof mapOrBuilderCallback === "function" ? executeReducerBuilderCallback(mapOrBuilderCallback) : [mapOrBuilderCallback, actionMatchers, defaultCaseReducer], actionsMap = _c[0], finalActionMatchers = _c[1], finalDefaultCaseReducer = _c[2];
    var getInitialState;
    if (isStateFunction(initialState)) {
        getInitialState = function () { return freezeDraftable(initialState()); };
    }
    else {
        var frozenInitialState_1 = freezeDraftable(initialState);
        getInitialState = function () { return frozenInitialState_1; };
    }
    function reducer(state, action) {
        if (state === void 0) { state = getInitialState(); }
        var caseReducers = __spreadArray([
            actionsMap[action.type]
        ], finalActionMatchers.filter(function (_c) {
            var matcher = _c.matcher;
            return matcher(action);
        }).map(function (_c) {
            var reducer2 = _c.reducer;
            return reducer2;
        }));
        if (caseReducers.filter(function (cr) { return !!cr; }).length === 0) {
            caseReducers = [finalDefaultCaseReducer];
        }
        return caseReducers.reduce(function (previousState, caseReducer) {
            if (caseReducer) {
                if (r(previousState)) {
                    var draft = previousState;
                    var result = caseReducer(draft, action);
                    if (result === void 0) {
                        return previousState;
                    }
                    return result;
                }
                else if (!t(previousState)) {
                    var result = caseReducer(previousState, action);
                    if (result === void 0) {
                        if (previousState === null) {
                            return previousState;
                        }
                        throw Error("A case reducer on a non-draftable value must not return undefined");
                    }
                    return result;
                }
                else {
                    return immer_esm(previousState, function (draft) {
                        return caseReducer(draft, action);
                    });
                }
            }
            return previousState;
        }, state);
    }
    reducer.getInitialState = getInitialState;
    return reducer;
}
// src/createSlice.ts
var hasWarnedAboutObjectNotation2 = false;
function getType2(slice, actionKey) {
    return slice + "/" + actionKey;
}
function createSlice(options) {
    var name = options.name;
    if (!name) {
        throw new Error("`name` is a required option for createSlice");
    }
    if (typeof process !== "undefined" && "production" === "development") {}
    var initialState = typeof options.initialState == "function" ? options.initialState : freezeDraftable(options.initialState);
    var reducers = options.reducers || {};
    var reducerNames = Object.keys(reducers);
    var sliceCaseReducersByName = {};
    var sliceCaseReducersByType = {};
    var actionCreators = {};
    reducerNames.forEach(function (reducerName) {
        var maybeReducerWithPrepare = reducers[reducerName];
        var type = getType2(name, reducerName);
        var caseReducer;
        var prepareCallback;
        if ("reducer" in maybeReducerWithPrepare) {
            caseReducer = maybeReducerWithPrepare.reducer;
            prepareCallback = maybeReducerWithPrepare.prepare;
        }
        else {
            caseReducer = maybeReducerWithPrepare;
        }
        sliceCaseReducersByName[reducerName] = caseReducer;
        sliceCaseReducersByType[type] = caseReducer;
        actionCreators[reducerName] = prepareCallback ? createAction(type, prepareCallback) : createAction(type);
    });
    function buildReducer() {
        if (false) {}
        var _c = typeof options.extraReducers === "function" ? executeReducerBuilderCallback(options.extraReducers) : [options.extraReducers], _d = _c[0], extraReducers = _d === void 0 ? {} : _d, _e = _c[1], actionMatchers = _e === void 0 ? [] : _e, _f = _c[2], defaultCaseReducer = _f === void 0 ? void 0 : _f;
        var finalCaseReducers = __spreadValues(__spreadValues({}, extraReducers), sliceCaseReducersByType);
        return createReducer(initialState, function (builder) {
            for (var key in finalCaseReducers) {
                builder.addCase(key, finalCaseReducers[key]);
            }
            for (var _i = 0, actionMatchers_1 = actionMatchers; _i < actionMatchers_1.length; _i++) {
                var m = actionMatchers_1[_i];
                builder.addMatcher(m.matcher, m.reducer);
            }
            if (defaultCaseReducer) {
                builder.addDefaultCase(defaultCaseReducer);
            }
        });
    }
    var _reducer;
    return {
        name: name,
        reducer: function (state, action) {
            if (!_reducer)
                _reducer = buildReducer();
            return _reducer(state, action);
        },
        actions: actionCreators,
        caseReducers: sliceCaseReducersByName,
        getInitialState: function () {
            if (!_reducer)
                _reducer = buildReducer();
            return _reducer.getInitialState();
        }
    };
}
// src/entities/entity_state.ts
function getInitialEntityState() {
    return {
        ids: [],
        entities: {}
    };
}
function createInitialStateFactory() {
    function getInitialState(additionalState) {
        if (additionalState === void 0) { additionalState = {}; }
        return Object.assign(getInitialEntityState(), additionalState);
    }
    return { getInitialState: getInitialState };
}
// src/entities/state_selectors.ts
function createSelectorsFactory() {
    function getSelectors(selectState) {
        var selectIds = function (state) { return state.ids; };
        var selectEntities = function (state) { return state.entities; };
        var selectAll = createDraftSafeSelector(selectIds, selectEntities, function (ids, entities) { return ids.map(function (id) { return entities[id]; }); });
        var selectId = function (_, id) { return id; };
        var selectById = function (entities, id) { return entities[id]; };
        var selectTotal = createDraftSafeSelector(selectIds, function (ids) { return ids.length; });
        if (!selectState) {
            return {
                selectIds: selectIds,
                selectEntities: selectEntities,
                selectAll: selectAll,
                selectTotal: selectTotal,
                selectById: createDraftSafeSelector(selectEntities, selectId, selectById)
            };
        }
        var selectGlobalizedEntities = createDraftSafeSelector(selectState, selectEntities);
        return {
            selectIds: createDraftSafeSelector(selectState, selectIds),
            selectEntities: selectGlobalizedEntities,
            selectAll: createDraftSafeSelector(selectState, selectAll),
            selectTotal: createDraftSafeSelector(selectState, selectTotal),
            selectById: createDraftSafeSelector(selectGlobalizedEntities, selectId, selectById)
        };
    }
    return { getSelectors: getSelectors };
}
// src/entities/state_adapter.ts

function createSingleArgumentStateOperator(mutator) {
    var operator = createStateOperator(function (_, state) { return mutator(state); });
    return function operation(state) {
        return operator(state, void 0);
    };
}
function createStateOperator(mutator) {
    return function operation(state, arg) {
        function isPayloadActionArgument(arg2) {
            return isFSA(arg2);
        }
        var runMutator = function (draft) {
            if (isPayloadActionArgument(arg)) {
                mutator(arg.payload, draft);
            }
            else {
                mutator(arg, draft);
            }
        };
        if (isDraft3(state)) {
            runMutator(state);
            return state;
        }
        else {
            return createNextState3(state, runMutator);
        }
    };
}
// src/entities/utils.ts
function selectIdValue(entity, selectId) {
    var key = selectId(entity);
    if (false) {}
    return key;
}
function ensureEntitiesArray(entities) {
    if (!Array.isArray(entities)) {
        entities = Object.values(entities);
    }
    return entities;
}
function splitAddedUpdatedEntities(newEntities, selectId, state) {
    newEntities = ensureEntitiesArray(newEntities);
    var added = [];
    var updated = [];
    for (var _i = 0, newEntities_1 = newEntities; _i < newEntities_1.length; _i++) {
        var entity = newEntities_1[_i];
        var id = selectIdValue(entity, selectId);
        if (id in state.entities) {
            updated.push({ id: id, changes: entity });
        }
        else {
            added.push(entity);
        }
    }
    return [added, updated];
}
// src/entities/unsorted_state_adapter.ts
function createUnsortedStateAdapter(selectId) {
    function addOneMutably(entity, state) {
        var key = selectIdValue(entity, selectId);
        if (key in state.entities) {
            return;
        }
        state.ids.push(key);
        state.entities[key] = entity;
    }
    function addManyMutably(newEntities, state) {
        newEntities = ensureEntitiesArray(newEntities);
        for (var _i = 0, newEntities_2 = newEntities; _i < newEntities_2.length; _i++) {
            var entity = newEntities_2[_i];
            addOneMutably(entity, state);
        }
    }
    function setOneMutably(entity, state) {
        var key = selectIdValue(entity, selectId);
        if (!(key in state.entities)) {
            state.ids.push(key);
        }
        state.entities[key] = entity;
    }
    function setManyMutably(newEntities, state) {
        newEntities = ensureEntitiesArray(newEntities);
        for (var _i = 0, newEntities_3 = newEntities; _i < newEntities_3.length; _i++) {
            var entity = newEntities_3[_i];
            setOneMutably(entity, state);
        }
    }
    function setAllMutably(newEntities, state) {
        newEntities = ensureEntitiesArray(newEntities);
        state.ids = [];
        state.entities = {};
        addManyMutably(newEntities, state);
    }
    function removeOneMutably(key, state) {
        return removeManyMutably([key], state);
    }
    function removeManyMutably(keys, state) {
        var didMutate = false;
        keys.forEach(function (key) {
            if (key in state.entities) {
                delete state.entities[key];
                didMutate = true;
            }
        });
        if (didMutate) {
            state.ids = state.ids.filter(function (id) { return id in state.entities; });
        }
    }
    function removeAllMutably(state) {
        Object.assign(state, {
            ids: [],
            entities: {}
        });
    }
    function takeNewKey(keys, update, state) {
        var original2 = state.entities[update.id];
        var updated = Object.assign({}, original2, update.changes);
        var newKey = selectIdValue(updated, selectId);
        var hasNewKey = newKey !== update.id;
        if (hasNewKey) {
            keys[update.id] = newKey;
            delete state.entities[update.id];
        }
        state.entities[newKey] = updated;
        return hasNewKey;
    }
    function updateOneMutably(update, state) {
        return updateManyMutably([update], state);
    }
    function updateManyMutably(updates, state) {
        var newKeys = {};
        var updatesPerEntity = {};
        updates.forEach(function (update) {
            if (update.id in state.entities) {
                updatesPerEntity[update.id] = {
                    id: update.id,
                    changes: __spreadValues(__spreadValues({}, updatesPerEntity[update.id] ? updatesPerEntity[update.id].changes : null), update.changes)
                };
            }
        });
        updates = Object.values(updatesPerEntity);
        var didMutateEntities = updates.length > 0;
        if (didMutateEntities) {
            var didMutateIds = updates.filter(function (update) { return takeNewKey(newKeys, update, state); }).length > 0;
            if (didMutateIds) {
                state.ids = Object.keys(state.entities);
            }
        }
    }
    function upsertOneMutably(entity, state) {
        return upsertManyMutably([entity], state);
    }
    function upsertManyMutably(newEntities, state) {
        var _c = splitAddedUpdatedEntities(newEntities, selectId, state), added = _c[0], updated = _c[1];
        updateManyMutably(updated, state);
        addManyMutably(added, state);
    }
    return {
        removeAll: createSingleArgumentStateOperator(removeAllMutably),
        addOne: createStateOperator(addOneMutably),
        addMany: createStateOperator(addManyMutably),
        setOne: createStateOperator(setOneMutably),
        setMany: createStateOperator(setManyMutably),
        setAll: createStateOperator(setAllMutably),
        updateOne: createStateOperator(updateOneMutably),
        updateMany: createStateOperator(updateManyMutably),
        upsertOne: createStateOperator(upsertOneMutably),
        upsertMany: createStateOperator(upsertManyMutably),
        removeOne: createStateOperator(removeOneMutably),
        removeMany: createStateOperator(removeManyMutably)
    };
}
// src/entities/sorted_state_adapter.ts
function createSortedStateAdapter(selectId, sort) {
    var _c = createUnsortedStateAdapter(selectId), removeOne = _c.removeOne, removeMany = _c.removeMany, removeAll = _c.removeAll;
    function addOneMutably(entity, state) {
        return addManyMutably([entity], state);
    }
    function addManyMutably(newEntities, state) {
        newEntities = ensureEntitiesArray(newEntities);
        var models = newEntities.filter(function (model) { return !(selectIdValue(model, selectId) in state.entities); });
        if (models.length !== 0) {
            merge(models, state);
        }
    }
    function setOneMutably(entity, state) {
        return setManyMutably([entity], state);
    }
    function setManyMutably(newEntities, state) {
        newEntities = ensureEntitiesArray(newEntities);
        if (newEntities.length !== 0) {
            merge(newEntities, state);
        }
    }
    function setAllMutably(newEntities, state) {
        newEntities = ensureEntitiesArray(newEntities);
        state.entities = {};
        state.ids = [];
        addManyMutably(newEntities, state);
    }
    function updateOneMutably(update, state) {
        return updateManyMutably([update], state);
    }
    function updateManyMutably(updates, state) {
        var appliedUpdates = false;
        for (var _i = 0, updates_1 = updates; _i < updates_1.length; _i++) {
            var update = updates_1[_i];
            var entity = state.entities[update.id];
            if (!entity) {
                continue;
            }
            appliedUpdates = true;
            Object.assign(entity, update.changes);
            var newId = selectId(entity);
            if (update.id !== newId) {
                delete state.entities[update.id];
                state.entities[newId] = entity;
            }
        }
        if (appliedUpdates) {
            resortEntities(state);
        }
    }
    function upsertOneMutably(entity, state) {
        return upsertManyMutably([entity], state);
    }
    function upsertManyMutably(newEntities, state) {
        var _c = splitAddedUpdatedEntities(newEntities, selectId, state), added = _c[0], updated = _c[1];
        updateManyMutably(updated, state);
        addManyMutably(added, state);
    }
    function areArraysEqual(a, b) {
        if (a.length !== b.length) {
            return false;
        }
        for (var i = 0; i < a.length && i < b.length; i++) {
            if (a[i] === b[i]) {
                continue;
            }
            return false;
        }
        return true;
    }
    function merge(models, state) {
        models.forEach(function (model) {
            state.entities[selectId(model)] = model;
        });
        resortEntities(state);
    }
    function resortEntities(state) {
        var allEntities = Object.values(state.entities);
        allEntities.sort(sort);
        var newSortedIds = allEntities.map(selectId);
        var ids = state.ids;
        if (!areArraysEqual(ids, newSortedIds)) {
            state.ids = newSortedIds;
        }
    }
    return {
        removeOne: removeOne,
        removeMany: removeMany,
        removeAll: removeAll,
        addOne: createStateOperator(addOneMutably),
        updateOne: createStateOperator(updateOneMutably),
        upsertOne: createStateOperator(upsertOneMutably),
        setOne: createStateOperator(setOneMutably),
        setMany: createStateOperator(setManyMutably),
        setAll: createStateOperator(setAllMutably),
        addMany: createStateOperator(addManyMutably),
        updateMany: createStateOperator(updateManyMutably),
        upsertMany: createStateOperator(upsertManyMutably)
    };
}
// src/entities/create_adapter.ts
function createEntityAdapter(options) {
    if (options === void 0) { options = {}; }
    var _c = __spreadValues({
        sortComparer: false,
        selectId: function (instance) { return instance.id; }
    }, options), selectId = _c.selectId, sortComparer = _c.sortComparer;
    var stateFactory = createInitialStateFactory();
    var selectorsFactory = createSelectorsFactory();
    var stateAdapter = sortComparer ? createSortedStateAdapter(selectId, sortComparer) : createUnsortedStateAdapter(selectId);
    return __spreadValues(__spreadValues(__spreadValues({
        selectId: selectId,
        sortComparer: sortComparer
    }, stateFactory), selectorsFactory), stateAdapter);
}
// src/nanoid.ts
var urlAlphabet = "ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW";
var nanoid = function (size) {
    if (size === void 0) { size = 21; }
    var id = "";
    var i = size;
    while (i--) {
        id += urlAlphabet[Math.random() * 64 | 0];
    }
    return id;
};
// src/createAsyncThunk.ts
var commonProperties = [
    "name",
    "message",
    "stack",
    "code"
];
var RejectWithValue = /** @class */ (function () {
    function RejectWithValue(payload, meta) {
        this.payload = payload;
        this.meta = meta;
    }
    return RejectWithValue;
}());
var FulfillWithMeta = /** @class */ (function () {
    function FulfillWithMeta(payload, meta) {
        this.payload = payload;
        this.meta = meta;
    }
    return FulfillWithMeta;
}());
var miniSerializeError = function (value) {
    if (typeof value === "object" && value !== null) {
        var simpleError = {};
        for (var _i = 0, commonProperties_1 = commonProperties; _i < commonProperties_1.length; _i++) {
            var property = commonProperties_1[_i];
            if (typeof value[property] === "string") {
                simpleError[property] = value[property];
            }
        }
        return simpleError;
    }
    return { message: String(value) };
};
var createAsyncThunk = (function () {
    function createAsyncThunk2(typePrefix, payloadCreator, options) {
        var fulfilled = createAction(typePrefix + "/fulfilled", function (payload, requestId, arg, meta) { return ({
            payload: payload,
            meta: __spreadProps(__spreadValues({}, meta || {}), {
                arg: arg,
                requestId: requestId,
                requestStatus: "fulfilled"
            })
        }); });
        var pending = createAction(typePrefix + "/pending", function (requestId, arg, meta) { return ({
            payload: void 0,
            meta: __spreadProps(__spreadValues({}, meta || {}), {
                arg: arg,
                requestId: requestId,
                requestStatus: "pending"
            })
        }); });
        var rejected = createAction(typePrefix + "/rejected", function (error, requestId, arg, payload, meta) { return ({
            payload: payload,
            error: (options && options.serializeError || miniSerializeError)(error || "Rejected"),
            meta: __spreadProps(__spreadValues({}, meta || {}), {
                arg: arg,
                requestId: requestId,
                rejectedWithValue: !!payload,
                requestStatus: "rejected",
                aborted: (error == null ? void 0 : error.name) === "AbortError",
                condition: (error == null ? void 0 : error.name) === "ConditionError"
            })
        }); });
        var displayedWarning = false;
        var AC = typeof AbortController !== "undefined" ? AbortController : /** @class */ (function () {
            function class_1() {
                this.signal = {
                    aborted: false,
                    addEventListener: function () {
                    },
                    dispatchEvent: function () {
                        return false;
                    },
                    onabort: function () {
                    },
                    removeEventListener: function () {
                    },
                    reason: void 0,
                    throwIfAborted: function () {
                    }
                };
            }
            class_1.prototype.abort = function () {
                if (false) {}
            };
            return class_1;
        }());
        function actionCreator(arg) {
            return function (dispatch, getState, extra) {
                var requestId = (options == null ? void 0 : options.idGenerator) ? options.idGenerator(arg) : nanoid();
                var abortController = new AC();
                var abortReason;
                var started = false;
                function abort(reason) {
                    abortReason = reason;
                    abortController.abort();
                }
                var promise2 = function () {
                    return __async(this, null, function () {
                        var _a, _b, finalAction, conditionResult, abortedPromise, err_1, skipDispatch;
                        return __generator(this, function (_c) {
                            switch (_c.label) {
                                case 0:
                                    _c.trys.push([0, 4, , 5]);
                                    conditionResult = (_a = options == null ? void 0 : options.condition) == null ? void 0 : _a.call(options, arg, { getState: getState, extra: extra });
                                    if (!isThenable(conditionResult)) return [3 /*break*/, 2];
                                    return [4 /*yield*/, conditionResult];
                                case 1:
                                    conditionResult = _c.sent();
                                    _c.label = 2;
                                case 2:
                                    if (conditionResult === false || abortController.signal.aborted) {
                                        throw {
                                            name: "ConditionError",
                                            message: "Aborted due to condition callback returning false."
                                        };
                                    }
                                    started = true;
                                    abortedPromise = new Promise(function (_, reject) { return abortController.signal.addEventListener("abort", function () { return reject({
                                        name: "AbortError",
                                        message: abortReason || "Aborted"
                                    }); }); });
                                    dispatch(pending(requestId, arg, (_b = options == null ? void 0 : options.getPendingMeta) == null ? void 0 : _b.call(options, { requestId: requestId, arg: arg }, { getState: getState, extra: extra })));
                                    return [4 /*yield*/, Promise.race([
                                            abortedPromise,
                                            Promise.resolve(payloadCreator(arg, {
                                                dispatch: dispatch,
                                                getState: getState,
                                                extra: extra,
                                                requestId: requestId,
                                                signal: abortController.signal,
                                                abort: abort,
                                                rejectWithValue: function (value, meta) {
                                                    return new RejectWithValue(value, meta);
                                                },
                                                fulfillWithValue: function (value, meta) {
                                                    return new FulfillWithMeta(value, meta);
                                                }
                                            })).then(function (result) {
                                                if (result instanceof RejectWithValue) {
                                                    throw result;
                                                }
                                                if (result instanceof FulfillWithMeta) {
                                                    return fulfilled(result.payload, requestId, arg, result.meta);
                                                }
                                                return fulfilled(result, requestId, arg);
                                            })
                                        ])];
                                case 3:
                                    finalAction = _c.sent();
                                    return [3 /*break*/, 5];
                                case 4:
                                    err_1 = _c.sent();
                                    finalAction = err_1 instanceof RejectWithValue ? rejected(null, requestId, arg, err_1.payload, err_1.meta) : rejected(err_1, requestId, arg);
                                    return [3 /*break*/, 5];
                                case 5:
                                    skipDispatch = options && !options.dispatchConditionRejection && rejected.match(finalAction) && finalAction.meta.condition;
                                    if (!skipDispatch) {
                                        dispatch(finalAction);
                                    }
                                    return [2 /*return*/, finalAction];
                            }
                        });
                    });
                }();
                return Object.assign(promise2, {
                    abort: abort,
                    requestId: requestId,
                    arg: arg,
                    unwrap: function () {
                        return promise2.then(unwrapResult);
                    }
                });
            };
        }
        return Object.assign(actionCreator, {
            pending: pending,
            rejected: rejected,
            fulfilled: fulfilled,
            typePrefix: typePrefix
        });
    }
    createAsyncThunk2.withTypes = function () { return createAsyncThunk2; };
    return createAsyncThunk2;
})();
function unwrapResult(action) {
    if (action.meta && action.meta.rejectedWithValue) {
        throw action.payload;
    }
    if (action.error) {
        throw action.error;
    }
    return action.payload;
}
function isThenable(value) {
    return value !== null && typeof value === "object" && typeof value.then === "function";
}
// src/tsHelpers.ts
var hasMatchFunction = function (v) {
    return v && typeof v.match === "function";
};
// src/matchers.ts
var matches = function (matcher, action) {
    if (hasMatchFunction(matcher)) {
        return matcher.match(action);
    }
    else {
        return matcher(action);
    }
};
function isAnyOf() {
    var matchers = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        matchers[_i] = arguments[_i];
    }
    return function (action) {
        return matchers.some(function (matcher) { return matches(matcher, action); });
    };
}
function isAllOf() {
    var matchers = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        matchers[_i] = arguments[_i];
    }
    return function (action) {
        return matchers.every(function (matcher) { return matches(matcher, action); });
    };
}
function hasExpectedRequestMetadata(action, validStatus) {
    if (!action || !action.meta)
        return false;
    var hasValidRequestId = typeof action.meta.requestId === "string";
    var hasValidRequestStatus = validStatus.indexOf(action.meta.requestStatus) > -1;
    return hasValidRequestId && hasValidRequestStatus;
}
function isAsyncThunkArray(a) {
    return typeof a[0] === "function" && "pending" in a[0] && "fulfilled" in a[0] && "rejected" in a[0];
}
function isPending() {
    var asyncThunks = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        asyncThunks[_i] = arguments[_i];
    }
    if (asyncThunks.length === 0) {
        return function (action) { return hasExpectedRequestMetadata(action, ["pending"]); };
    }
    if (!isAsyncThunkArray(asyncThunks)) {
        return isPending()(asyncThunks[0]);
    }
    return function (action) {
        var matchers = asyncThunks.map(function (asyncThunk) { return asyncThunk.pending; });
        var combinedMatcher = isAnyOf.apply(void 0, matchers);
        return combinedMatcher(action);
    };
}
function isRejected() {
    var asyncThunks = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        asyncThunks[_i] = arguments[_i];
    }
    if (asyncThunks.length === 0) {
        return function (action) { return hasExpectedRequestMetadata(action, ["rejected"]); };
    }
    if (!isAsyncThunkArray(asyncThunks)) {
        return isRejected()(asyncThunks[0]);
    }
    return function (action) {
        var matchers = asyncThunks.map(function (asyncThunk) { return asyncThunk.rejected; });
        var combinedMatcher = isAnyOf.apply(void 0, matchers);
        return combinedMatcher(action);
    };
}
function isRejectedWithValue() {
    var asyncThunks = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        asyncThunks[_i] = arguments[_i];
    }
    var hasFlag = function (action) {
        return action && action.meta && action.meta.rejectedWithValue;
    };
    if (asyncThunks.length === 0) {
        return function (action) {
            var combinedMatcher = isAllOf(isRejected.apply(void 0, asyncThunks), hasFlag);
            return combinedMatcher(action);
        };
    }
    if (!isAsyncThunkArray(asyncThunks)) {
        return isRejectedWithValue()(asyncThunks[0]);
    }
    return function (action) {
        var combinedMatcher = isAllOf(isRejected.apply(void 0, asyncThunks), hasFlag);
        return combinedMatcher(action);
    };
}
function isFulfilled() {
    var asyncThunks = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        asyncThunks[_i] = arguments[_i];
    }
    if (asyncThunks.length === 0) {
        return function (action) { return hasExpectedRequestMetadata(action, ["fulfilled"]); };
    }
    if (!isAsyncThunkArray(asyncThunks)) {
        return isFulfilled()(asyncThunks[0]);
    }
    return function (action) {
        var matchers = asyncThunks.map(function (asyncThunk) { return asyncThunk.fulfilled; });
        var combinedMatcher = isAnyOf.apply(void 0, matchers);
        return combinedMatcher(action);
    };
}
function isAsyncThunkAction() {
    var asyncThunks = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        asyncThunks[_i] = arguments[_i];
    }
    if (asyncThunks.length === 0) {
        return function (action) { return hasExpectedRequestMetadata(action, ["pending", "fulfilled", "rejected"]); };
    }
    if (!isAsyncThunkArray(asyncThunks)) {
        return isAsyncThunkAction()(asyncThunks[0]);
    }
    return function (action) {
        var matchers = [];
        for (var _i = 0, asyncThunks_1 = asyncThunks; _i < asyncThunks_1.length; _i++) {
            var asyncThunk = asyncThunks_1[_i];
            matchers.push(asyncThunk.pending, asyncThunk.rejected, asyncThunk.fulfilled);
        }
        var combinedMatcher = isAnyOf.apply(void 0, matchers);
        return combinedMatcher(action);
    };
}
// src/listenerMiddleware/utils.ts
var assertFunction = function (func, expected) {
    if (typeof func !== "function") {
        throw new TypeError(expected + " is not a function");
    }
};
var noop = function () {
};
var catchRejection = function (promise2, onError) {
    if (onError === void 0) { onError = noop; }
    promise2.catch(onError);
    return promise2;
};
var addAbortSignalListener = function (abortSignal, callback) {
    abortSignal.addEventListener("abort", callback, { once: true });
};
var abortControllerWithReason = function (abortController, reason) {
    var signal = abortController.signal;
    if (signal.aborted) {
        return;
    }
    if (!("reason" in signal)) {
        Object.defineProperty(signal, "reason", {
            enumerable: true,
            value: reason,
            configurable: true,
            writable: true
        });
    }
    ;
    abortController.abort(reason);
};
// src/listenerMiddleware/exceptions.ts
var task = "task";
var listener = "listener";
var completed = "completed";
var cancelled = "cancelled";
var taskCancelled = "task-" + cancelled;
var taskCompleted = "task-" + completed;
var listenerCancelled = listener + "-" + cancelled;
var listenerCompleted = listener + "-" + completed;
var TaskAbortError = /** @class */ (function () {
    function TaskAbortError(code) {
        this.code = code;
        this.name = "TaskAbortError";
        this.message = task + " " + cancelled + " (reason: " + code + ")";
    }
    return TaskAbortError;
}());
// src/listenerMiddleware/task.ts
var validateActive = function (signal) {
    if (signal.aborted) {
        throw new TaskAbortError(signal.reason);
    }
};
var promisifyAbortSignal = function (signal) {
    return catchRejection(new Promise(function (_, reject) {
        var notifyRejection = function () { return reject(new TaskAbortError(signal.reason)); };
        if (signal.aborted) {
            notifyRejection();
        }
        else {
            addAbortSignalListener(signal, notifyRejection);
        }
    }));
};
var runTask = function (task2, cleanUp) { return __async(void 0, null, function () {
    var value, error_1;
    return __generator(this, function (_c) {
        switch (_c.label) {
            case 0:
                _c.trys.push([0, 3, 4, 5]);
                return [4 /*yield*/, Promise.resolve()];
            case 1:
                _c.sent();
                return [4 /*yield*/, task2()];
            case 2:
                value = _c.sent();
                return [2 /*return*/, {
                        status: "ok",
                        value: value
                    }];
            case 3:
                error_1 = _c.sent();
                return [2 /*return*/, {
                        status: error_1 instanceof TaskAbortError ? "cancelled" : "rejected",
                        error: error_1
                    }];
            case 4:
                cleanUp == null ? void 0 : cleanUp();
                return [7 /*endfinally*/];
            case 5: return [2 /*return*/];
        }
    });
}); };
var createPause = function (signal) {
    return function (promise2) {
        return catchRejection(Promise.race([promisifyAbortSignal(signal), promise2]).then(function (output) {
            validateActive(signal);
            return output;
        }));
    };
};
var createDelay = function (signal) {
    var pause = createPause(signal);
    return function (timeoutMs) {
        return pause(new Promise(function (resolve) { return setTimeout(resolve, timeoutMs); }));
    };
};
// src/listenerMiddleware/index.ts
var redux_toolkit_esm_assign = Object.assign;
var INTERNAL_NIL_TOKEN = {};
var alm = "listenerMiddleware";
var createFork = function (parentAbortSignal) {
    var linkControllers = function (controller) { return addAbortSignalListener(parentAbortSignal, function () { return abortControllerWithReason(controller, parentAbortSignal.reason); }); };
    return function (taskExecutor) {
        assertFunction(taskExecutor, "taskExecutor");
        var childAbortController = new AbortController();
        linkControllers(childAbortController);
        var result = runTask(function () { return __async(void 0, null, function () {
            var result2;
            return __generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        validateActive(parentAbortSignal);
                        validateActive(childAbortController.signal);
                        return [4 /*yield*/, taskExecutor({
                                pause: createPause(childAbortController.signal),
                                delay: createDelay(childAbortController.signal),
                                signal: childAbortController.signal
                            })];
                    case 1:
                        result2 = _c.sent();
                        validateActive(childAbortController.signal);
                        return [2 /*return*/, result2];
                }
            });
        }); }, function () { return abortControllerWithReason(childAbortController, taskCompleted); });
        return {
            result: createPause(parentAbortSignal)(result),
            cancel: function () {
                abortControllerWithReason(childAbortController, taskCancelled);
            }
        };
    };
};
var createTakePattern = function (startListening, signal) {
    var take = function (predicate, timeout) { return __async(void 0, null, function () {
        var unsubscribe, tuplePromise, promises, output;
        return __generator(this, function (_c) {
            switch (_c.label) {
                case 0:
                    validateActive(signal);
                    unsubscribe = function () {
                    };
                    tuplePromise = new Promise(function (resolve) {
                        unsubscribe = startListening({
                            predicate: predicate,
                            effect: function (action, listenerApi) {
                                listenerApi.unsubscribe();
                                resolve([
                                    action,
                                    listenerApi.getState(),
                                    listenerApi.getOriginalState()
                                ]);
                            }
                        });
                    });
                    promises = [
                        promisifyAbortSignal(signal),
                        tuplePromise
                    ];
                    if (timeout != null) {
                        promises.push(new Promise(function (resolve) { return setTimeout(resolve, timeout, null); }));
                    }
                    _c.label = 1;
                case 1:
                    _c.trys.push([1, , 3, 4]);
                    return [4 /*yield*/, Promise.race(promises)];
                case 2:
                    output = _c.sent();
                    validateActive(signal);
                    return [2 /*return*/, output];
                case 3:
                    unsubscribe();
                    return [7 /*endfinally*/];
                case 4: return [2 /*return*/];
            }
        });
    }); };
    return function (predicate, timeout) { return catchRejection(take(predicate, timeout)); };
};
var getListenerEntryPropsFrom = function (options) {
    var type = options.type, actionCreator = options.actionCreator, matcher = options.matcher, predicate = options.predicate, effect = options.effect;
    if (type) {
        predicate = createAction(type).match;
    }
    else if (actionCreator) {
        type = actionCreator.type;
        predicate = actionCreator.match;
    }
    else if (matcher) {
        predicate = matcher;
    }
    else if (predicate) {
    }
    else {
        throw new Error("Creating or removing a listener requires one of the known fields for matching an action");
    }
    assertFunction(effect, "options.listener");
    return { predicate: predicate, type: type, effect: effect };
};
var createListenerEntry = function (options) {
    var _c = getListenerEntryPropsFrom(options), type = _c.type, predicate = _c.predicate, effect = _c.effect;
    var id = nanoid();
    var entry = {
        id: id,
        effect: effect,
        type: type,
        predicate: predicate,
        pending: new Set(),
        unsubscribe: function () {
            throw new Error("Unsubscribe not initialized");
        }
    };
    return entry;
};
var createClearListenerMiddleware = function (listenerMap) {
    return function () {
        listenerMap.forEach(cancelActiveListeners);
        listenerMap.clear();
    };
};
var safelyNotifyError = function (errorHandler, errorToNotify, errorInfo) {
    try {
        errorHandler(errorToNotify, errorInfo);
    }
    catch (errorHandlerError) {
        setTimeout(function () {
            throw errorHandlerError;
        }, 0);
    }
};
var addListener = createAction(alm + "/add");
var clearAllListeners = createAction(alm + "/removeAll");
var removeListener = createAction(alm + "/remove");
var defaultErrorHandler = function () {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    console.error.apply(console, __spreadArray([alm + "/error"], args));
};
var cancelActiveListeners = function (entry) {
    entry.pending.forEach(function (controller) {
        abortControllerWithReason(controller, listenerCancelled);
    });
};
function createListenerMiddleware(middlewareOptions) {
    var _this = this;
    if (middlewareOptions === void 0) { middlewareOptions = {}; }
    var listenerMap = new Map();
    var extra = middlewareOptions.extra, _c = middlewareOptions.onError, onError = _c === void 0 ? defaultErrorHandler : _c;
    assertFunction(onError, "onError");
    var insertEntry = function (entry) {
        entry.unsubscribe = function () { return listenerMap.delete(entry.id); };
        listenerMap.set(entry.id, entry);
        return function (cancelOptions) {
            entry.unsubscribe();
            if (cancelOptions == null ? void 0 : cancelOptions.cancelActive) {
                cancelActiveListeners(entry);
            }
        };
    };
    var findListenerEntry = function (comparator) {
        for (var _i = 0, _c = Array.from(listenerMap.values()); _i < _c.length; _i++) {
            var entry = _c[_i];
            if (comparator(entry)) {
                return entry;
            }
        }
        return void 0;
    };
    var startListening = function (options) {
        var entry = findListenerEntry(function (existingEntry) { return existingEntry.effect === options.effect; });
        if (!entry) {
            entry = createListenerEntry(options);
        }
        return insertEntry(entry);
    };
    var stopListening = function (options) {
        var _c = getListenerEntryPropsFrom(options), type = _c.type, effect = _c.effect, predicate = _c.predicate;
        var entry = findListenerEntry(function (entry2) {
            var matchPredicateOrType = typeof type === "string" ? entry2.type === type : entry2.predicate === predicate;
            return matchPredicateOrType && entry2.effect === effect;
        });
        if (entry) {
            entry.unsubscribe();
            if (options.cancelActive) {
                cancelActiveListeners(entry);
            }
        }
        return !!entry;
    };
    var notifyListener = function (entry, action, api, getOriginalState) { return __async(_this, null, function () {
        var internalTaskController, take, listenerError_1;
        return __generator(this, function (_c) {
            switch (_c.label) {
                case 0:
                    internalTaskController = new AbortController();
                    take = createTakePattern(startListening, internalTaskController.signal);
                    _c.label = 1;
                case 1:
                    _c.trys.push([1, 3, 4, 5]);
                    entry.pending.add(internalTaskController);
                    return [4 /*yield*/, Promise.resolve(entry.effect(action, redux_toolkit_esm_assign({}, api, {
                            getOriginalState: getOriginalState,
                            condition: function (predicate, timeout) { return take(predicate, timeout).then(Boolean); },
                            take: take,
                            delay: createDelay(internalTaskController.signal),
                            pause: createPause(internalTaskController.signal),
                            extra: extra,
                            signal: internalTaskController.signal,
                            fork: createFork(internalTaskController.signal),
                            unsubscribe: entry.unsubscribe,
                            subscribe: function () {
                                listenerMap.set(entry.id, entry);
                            },
                            cancelActiveListeners: function () {
                                entry.pending.forEach(function (controller, _, set) {
                                    if (controller !== internalTaskController) {
                                        abortControllerWithReason(controller, listenerCancelled);
                                        set.delete(controller);
                                    }
                                });
                            }
                        })))];
                case 2:
                    _c.sent();
                    return [3 /*break*/, 5];
                case 3:
                    listenerError_1 = _c.sent();
                    if (!(listenerError_1 instanceof TaskAbortError)) {
                        safelyNotifyError(onError, listenerError_1, {
                            raisedBy: "effect"
                        });
                    }
                    return [3 /*break*/, 5];
                case 4:
                    abortControllerWithReason(internalTaskController, listenerCompleted);
                    entry.pending.delete(internalTaskController);
                    return [7 /*endfinally*/];
                case 5: return [2 /*return*/];
            }
        });
    }); };
    var clearListenerMiddleware = createClearListenerMiddleware(listenerMap);
    var middleware = function (api) { return function (next) { return function (action) {
        if (addListener.match(action)) {
            return startListening(action.payload);
        }
        if (clearAllListeners.match(action)) {
            clearListenerMiddleware();
            return;
        }
        if (removeListener.match(action)) {
            return stopListening(action.payload);
        }
        var originalState = api.getState();
        var getOriginalState = function () {
            if (originalState === INTERNAL_NIL_TOKEN) {
                throw new Error(alm + ": getOriginalState can only be called synchronously");
            }
            return originalState;
        };
        var result;
        try {
            result = next(action);
            if (listenerMap.size > 0) {
                var currentState = api.getState();
                var listenerEntries = Array.from(listenerMap.values());
                for (var _i = 0, listenerEntries_1 = listenerEntries; _i < listenerEntries_1.length; _i++) {
                    var entry = listenerEntries_1[_i];
                    var runListener = false;
                    try {
                        runListener = entry.predicate(action, currentState, originalState);
                    }
                    catch (predicateError) {
                        runListener = false;
                        safelyNotifyError(onError, predicateError, {
                            raisedBy: "predicate"
                        });
                    }
                    if (!runListener) {
                        continue;
                    }
                    notifyListener(entry, action, api, getOriginalState);
                }
            }
        }
        finally {
            originalState = INTERNAL_NIL_TOKEN;
        }
        return result;
    }; }; };
    return {
        middleware: middleware,
        startListening: startListening,
        stopListening: stopListening,
        clearListeners: clearListenerMiddleware
    };
}
// src/autoBatchEnhancer.ts
var SHOULD_AUTOBATCH = "RTK_autoBatch";
var prepareAutoBatched = function () { return function (payload) {
    var _c;
    return ({
        payload: payload,
        meta: (_c = {}, _c[SHOULD_AUTOBATCH] = true, _c)
    });
}; };
var promise;
var queueMicrotaskShim = typeof queueMicrotask === "function" ? queueMicrotask.bind(typeof window !== "undefined" ? window : typeof __webpack_require__.g !== "undefined" ? __webpack_require__.g : globalThis) : function (cb) { return (promise || (promise = Promise.resolve())).then(cb).catch(function (err) { return setTimeout(function () {
    throw err;
}, 0); }); };
var createQueueWithTimer = function (timeout) {
    return function (notify) {
        setTimeout(notify, timeout);
    };
};
var rAF = typeof window !== "undefined" && window.requestAnimationFrame ? window.requestAnimationFrame : createQueueWithTimer(10);
var autoBatchEnhancer = function (options) {
    if (options === void 0) { options = { type: "raf" }; }
    return function (next) { return function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var store = next.apply(void 0, args);
        var notifying = true;
        var shouldNotifyAtEndOfTick = false;
        var notificationQueued = false;
        var listeners = new Set();
        var queueCallback = options.type === "tick" ? queueMicrotaskShim : options.type === "raf" ? rAF : options.type === "callback" ? options.queueNotification : createQueueWithTimer(options.timeout);
        var notifyListeners = function () {
            notificationQueued = false;
            if (shouldNotifyAtEndOfTick) {
                shouldNotifyAtEndOfTick = false;
                listeners.forEach(function (l) { return l(); });
            }
        };
        return Object.assign({}, store, {
            subscribe: function (listener2) {
                var wrappedListener = function () { return notifying && listener2(); };
                var unsubscribe = store.subscribe(wrappedListener);
                listeners.add(listener2);
                return function () {
                    unsubscribe();
                    listeners.delete(listener2);
                };
            },
            dispatch: function (action) {
                var _a;
                try {
                    notifying = !((_a = action == null ? void 0 : action.meta) == null ? void 0 : _a[SHOULD_AUTOBATCH]);
                    shouldNotifyAtEndOfTick = !notifying;
                    if (shouldNotifyAtEndOfTick) {
                        if (!notificationQueued) {
                            notificationQueued = true;
                            queueCallback(notifyListeners);
                        }
                    }
                    return store.dispatch(action);
                }
                finally {
                    notifying = true;
                }
            }
        });
    }; };
};
// src/index.ts
F();

//# sourceMappingURL=redux-toolkit.esm.js.map
;// CONCATENATED MODULE: ./src/App/constants.ts
var AUTH_DATA_STORAGE_KEY="authData";
;// CONCATENATED MODULE: ./src/App/slice.ts
var getInitialState=function(){var authData=null,storageData=localStorage.getItem(AUTH_DATA_STORAGE_KEY);return storageData&&(authData=JSON.parse(storageData)),{authData:authData,userData:null,breadcrumbs:null}},initialState=getInitialState();var appSlice=createSlice({name:"app",initialState:initialState,reducers:{setAuthData:function(state,action){state.authData=action.payload,localStorage.setItem(AUTH_DATA_STORAGE_KEY,JSON.stringify(action.payload))},removeAuthData:function(state){state.authData=null,localStorage.removeItem(AUTH_DATA_STORAGE_KEY)},setUserData:function(state,action){state.userData=action.payload},setBreadcrumb:function(state,action){state.breadcrumbs=action.payload}}});var _appSlice$actions=appSlice.actions,setAuthData=_appSlice$actions.setAuthData,removeAuthData=_appSlice$actions.removeAuthData,setUserData=_appSlice$actions.setUserData,setBreadcrumb=_appSlice$actions.setBreadcrumb;var selectUserData=function(state){return state.app.userData};var selectAuthToken=function(state){var _state$app$authData;return null===(_state$app$authData=state.app.authData)||void 0===_state$app$authData?void 0:_state$app$authData.token};var selectUserName=function(state){var _state$app$userData;return null===(_state$app$userData=state.app.userData)||void 0===_state$app$userData?void 0:_state$app$userData.user_name};var selectBreadcrumbs=function(state){return state.app.breadcrumbs};/* harmony default export */ const slice = (appSlice.reducer);
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray(arr);
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/iterableToArray.js
function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js




function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}
;// CONCATENATED MODULE: ./src/components/Notifications/slice.ts
var slice_initialState={items:[]};var notificationsSlice=createSlice({name:"notifications",initialState:slice_initialState,reducers:{push:function(state,action){state.items=[].concat(_toConsumableArray(state.items),[action.payload])},remove:function(state,action){state.items=state.items.filter(function(i){return i.id!==action.payload})}}});var _notificationsSlice$a=notificationsSlice.actions,remove=_notificationsSlice$a.remove,push=_notificationsSlice$a.push;var selectNotifications=function(state){return state.notifications.items};/* harmony default export */ const Notifications_slice = (notificationsSlice.reducer);
;// CONCATENATED MODULE: ./node_modules/reselect/es/defaultMemoize.js
// Cache implementation based on Erik Rasmussen's `lru-memoize`:
// https://github.com/erikras/lru-memoize
var NOT_FOUND = 'NOT_FOUND';

function createSingletonCache(equals) {
  var entry;
  return {
    get: function get(key) {
      if (entry && equals(entry.key, key)) {
        return entry.value;
      }

      return NOT_FOUND;
    },
    put: function put(key, value) {
      entry = {
        key: key,
        value: value
      };
    },
    getEntries: function getEntries() {
      return entry ? [entry] : [];
    },
    clear: function clear() {
      entry = undefined;
    }
  };
}

function createLruCache(maxSize, equals) {
  var entries = [];

  function get(key) {
    var cacheIndex = entries.findIndex(function (entry) {
      return equals(key, entry.key);
    }); // We found a cached entry

    if (cacheIndex > -1) {
      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top

      if (cacheIndex > 0) {
        entries.splice(cacheIndex, 1);
        entries.unshift(entry);
      }

      return entry.value;
    } // No entry found in cache, return sentinel


    return NOT_FOUND;
  }

  function put(key, value) {
    if (get(key) === NOT_FOUND) {
      // TODO Is unshift slow?
      entries.unshift({
        key: key,
        value: value
      });

      if (entries.length > maxSize) {
        entries.pop();
      }
    }
  }

  function getEntries() {
    return entries;
  }

  function clear() {
    entries = [];
  }

  return {
    get: get,
    put: put,
    getEntries: getEntries,
    clear: clear
  };
}

var defaultEqualityCheck = function defaultEqualityCheck(a, b) {
  return a === b;
};
function createCacheKeyComparator(equalityCheck) {
  return function areArgumentsShallowlyEqual(prev, next) {
    if (prev === null || next === null || prev.length !== next.length) {
      return false;
    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.


    var length = prev.length;

    for (var i = 0; i < length; i++) {
      if (!equalityCheck(prev[i], next[i])) {
        return false;
      }
    }

    return true;
  };
}
// defaultMemoize now supports a configurable cache size with LRU behavior,
// and optional comparison of the result value with existing values
function defaultMemoize(func, equalityCheckOrOptions) {
  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {
    equalityCheck: equalityCheckOrOptions
  };
  var _providedOptions$equa = providedOptions.equalityCheck,
      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,
      _providedOptions$maxS = providedOptions.maxSize,
      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,
      resultEqualityCheck = providedOptions.resultEqualityCheck;
  var comparator = createCacheKeyComparator(equalityCheck);
  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons

  function memoized() {
    var value = cache.get(arguments);

    if (value === NOT_FOUND) {
      // @ts-ignore
      value = func.apply(null, arguments);

      if (resultEqualityCheck) {
        var entries = cache.getEntries();
        var matchingEntry = entries.find(function (entry) {
          return resultEqualityCheck(entry.value, value);
        });

        if (matchingEntry) {
          value = matchingEntry.value;
        }
      }

      cache.put(arguments, value);
    }

    return value;
  }

  memoized.clearCache = function () {
    return cache.clear();
  };

  return memoized;
}
;// CONCATENATED MODULE: ./node_modules/reselect/es/index.js



function getDependencies(funcs) {
  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;

  if (!dependencies.every(function (dep) {
    return typeof dep === 'function';
  })) {
    var dependencyTypes = dependencies.map(function (dep) {
      return typeof dep === 'function' ? "function " + (dep.name || 'unnamed') + "()" : typeof dep;
    }).join(', ');
    throw new Error("createSelector expects all input-selectors to be functions, but received the following types: [" + dependencyTypes + "]");
  }

  return dependencies;
}

function createSelectorCreator(memoize) {
  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    memoizeOptionsFromArgs[_key - 1] = arguments[_key];
  }

  var createSelector = function createSelector() {
    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      funcs[_key2] = arguments[_key2];
    }

    var _recomputations = 0;

    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.
    // So, start by declaring the default value here.
    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)


    var directlyPassedOptions = {
      memoizeOptions: undefined
    }; // Normally, the result func or "output selector" is the last arg

    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object

    if (typeof resultFunc === 'object') {
      directlyPassedOptions = resultFunc; // and pop the real result func off

      resultFunc = funcs.pop();
    }

    if (typeof resultFunc !== 'function') {
      throw new Error("createSelector expects an output function after the inputs, but received: [" + typeof resultFunc + "]");
    } // Determine which set of options we're using. Prefer options passed directly,
    // but fall back to options given to createSelectorCreator.


    var _directlyPassedOption = directlyPassedOptions,
        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,
        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer
    // is an array. In most libs I've looked at, it's an equality function or options object.
    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full
    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so
    // we wrap it in an array so we can apply it.

    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];
    var dependencies = getDependencies(funcs);
    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {
      _recomputations++; // apply arguments instead of spreading for performance.

      return resultFunc.apply(null, arguments);
    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.

    var selector = memoize(function dependenciesChecker() {
      var params = [];
      var length = dependencies.length;

      for (var i = 0; i < length; i++) {
        // apply arguments instead of spreading and mutate a local list of params for performance.
        // @ts-ignore
        params.push(dependencies[i].apply(null, arguments));
      } // apply arguments instead of spreading for performance.


      _lastResult = memoizedResultFunc.apply(null, params);
      return _lastResult;
    });
    Object.assign(selector, {
      resultFunc: resultFunc,
      memoizedResultFunc: memoizedResultFunc,
      dependencies: dependencies,
      lastResult: function lastResult() {
        return _lastResult;
      },
      recomputations: function recomputations() {
        return _recomputations;
      },
      resetRecomputations: function resetRecomputations() {
        return _recomputations = 0;
      }
    });
    return selector;
  }; // @ts-ignore


  return createSelector;
}
var es_createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);
// Manual definition of state and output arguments
var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {
  if (selectorCreator === void 0) {
    selectorCreator = es_createSelector;
  }

  if (typeof selectors !== 'object') {
    throw new Error('createStructuredSelector expects first argument to be an object ' + ("where each property is a selector, instead received a " + typeof selectors));
  }

  var objectKeys = Object.keys(selectors);
  var resultSelector = selectorCreator( // @ts-ignore
  objectKeys.map(function (key) {
    return selectors[key];
  }), function () {
    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
      values[_key3] = arguments[_key3];
    }

    return values.reduce(function (composition, value, index) {
      composition[objectKeys[index]] = value;
      return composition;
    }, {});
  });
  return resultSelector;
};
;// CONCATENATED MODULE: ./node_modules/@reduxjs/toolkit/dist/query/rtk-query.esm.js
var rtk_query_esm_generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var rtk_query_esm_spreadArray = (undefined && undefined.__spreadArray) || function (to, from) {
    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
        to[j] = from[i];
    return to;
};
var rtk_query_esm_defProp = Object.defineProperty;
var rtk_query_esm_defProps = Object.defineProperties;
var rtk_query_esm_getOwnPropDescs = Object.getOwnPropertyDescriptors;
var rtk_query_esm_getOwnPropSymbols = Object.getOwnPropertySymbols;
var rtk_query_esm_hasOwnProp = Object.prototype.hasOwnProperty;
var rtk_query_esm_propIsEnum = Object.prototype.propertyIsEnumerable;
var rtk_query_esm_defNormalProp = function (obj, key, value) { return key in obj ? rtk_query_esm_defProp(obj, key, { enumerable: true, configurable: true, writable: true, value: value }) : obj[key] = value; };
var rtk_query_esm_spreadValues = function (a, b) {
    for (var prop in b || (b = {}))
        if (rtk_query_esm_hasOwnProp.call(b, prop))
            rtk_query_esm_defNormalProp(a, prop, b[prop]);
    if (rtk_query_esm_getOwnPropSymbols)
        for (var _j = 0, _k = rtk_query_esm_getOwnPropSymbols(b); _j < _k.length; _j++) {
            var prop = _k[_j];
            if (rtk_query_esm_propIsEnum.call(b, prop))
                rtk_query_esm_defNormalProp(a, prop, b[prop]);
        }
    return a;
};
var rtk_query_esm_spreadProps = function (a, b) { return rtk_query_esm_defProps(a, rtk_query_esm_getOwnPropDescs(b)); };
var __objRest = function (source, exclude) {
    var target = {};
    for (var prop in source)
        if (rtk_query_esm_hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
            target[prop] = source[prop];
    if (source != null && rtk_query_esm_getOwnPropSymbols)
        for (var _j = 0, _k = rtk_query_esm_getOwnPropSymbols(source); _j < _k.length; _j++) {
            var prop = _k[_j];
            if (exclude.indexOf(prop) < 0 && rtk_query_esm_propIsEnum.call(source, prop))
                target[prop] = source[prop];
        }
    return target;
};
var rtk_query_esm_async = function (__this, __arguments, generator) {
    return new Promise(function (resolve, reject) {
        var fulfilled = function (value) {
            try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            }
        };
        var rejected = function (value) {
            try {
                step(generator.throw(value));
            }
            catch (e) {
                reject(e);
            }
        };
        var step = function (x) { return x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected); };
        step((generator = generator.apply(__this, __arguments)).next());
    });
};
// src/query/core/apiState.ts
var QueryStatus;
(function (QueryStatus2) {
    QueryStatus2["uninitialized"] = "uninitialized";
    QueryStatus2["pending"] = "pending";
    QueryStatus2["fulfilled"] = "fulfilled";
    QueryStatus2["rejected"] = "rejected";
})(QueryStatus || (QueryStatus = {}));
function getRequestStatusFlags(status) {
    return {
        status: status,
        isUninitialized: status === QueryStatus.uninitialized,
        isLoading: status === QueryStatus.pending,
        isSuccess: status === QueryStatus.fulfilled,
        isError: status === QueryStatus.rejected
    };
}
// src/query/utils/isAbsoluteUrl.ts
function isAbsoluteUrl(url) {
    return new RegExp("(^|:)//").test(url);
}
// src/query/utils/joinUrls.ts
var withoutTrailingSlash = function (url) { return url.replace(/\/$/, ""); };
var withoutLeadingSlash = function (url) { return url.replace(/^\//, ""); };
function joinUrls(base, url) {
    if (!base) {
        return url;
    }
    if (!url) {
        return base;
    }
    if (isAbsoluteUrl(url)) {
        return url;
    }
    var delimiter = base.endsWith("/") || !url.startsWith("?") ? "/" : "";
    base = withoutTrailingSlash(base);
    url = withoutLeadingSlash(url);
    return "" + base + delimiter + url;
}
// src/query/utils/flatten.ts
var flatten = function (arr) { return [].concat.apply([], arr); };
// src/query/utils/isOnline.ts
function isOnline() {
    return typeof navigator === "undefined" ? true : navigator.onLine === void 0 ? true : navigator.onLine;
}
// src/query/utils/isDocumentVisible.ts
function isDocumentVisible() {
    if (typeof document === "undefined") {
        return true;
    }
    return document.visibilityState !== "hidden";
}
// src/query/utils/copyWithStructuralSharing.ts

var rtk_query_esm_isPlainObject = redux_toolkit_esm_isPlainObject;
function copyWithStructuralSharing(oldObj, newObj) {
    if (oldObj === newObj || !(rtk_query_esm_isPlainObject(oldObj) && rtk_query_esm_isPlainObject(newObj) || Array.isArray(oldObj) && Array.isArray(newObj))) {
        return newObj;
    }
    var newKeys = Object.keys(newObj);
    var oldKeys = Object.keys(oldObj);
    var isSameObject = newKeys.length === oldKeys.length;
    var mergeObj = Array.isArray(newObj) ? [] : {};
    for (var _j = 0, newKeys_1 = newKeys; _j < newKeys_1.length; _j++) {
        var key = newKeys_1[_j];
        mergeObj[key] = copyWithStructuralSharing(oldObj[key], newObj[key]);
        if (isSameObject)
            isSameObject = oldObj[key] === mergeObj[key];
    }
    return isSameObject ? oldObj : mergeObj;
}
// src/query/fetchBaseQuery.ts

var defaultFetchFn = function () {
    var args = [];
    for (var _j = 0; _j < arguments.length; _j++) {
        args[_j] = arguments[_j];
    }
    return fetch.apply(void 0, args);
};
var defaultValidateStatus = function (response) { return response.status >= 200 && response.status <= 299; };
var defaultIsJsonContentType = function (headers) { return /ion\/(vnd\.api\+)?json/.test(headers.get("content-type") || ""); };
function stripUndefined(obj) {
    if (!redux_toolkit_esm_isPlainObject(obj)) {
        return obj;
    }
    var copy = rtk_query_esm_spreadValues({}, obj);
    for (var _j = 0, _k = Object.entries(copy); _j < _k.length; _j++) {
        var _l = _k[_j], k = _l[0], v = _l[1];
        if (v === void 0)
            delete copy[k];
    }
    return copy;
}
function fetchBaseQuery(_a) {
    var _this = this;
    if (_a === void 0) { _a = {}; }
    var _b = _a, baseUrl = _b.baseUrl, _j = _b.prepareHeaders, prepareHeaders = _j === void 0 ? function (x) { return x; } : _j, _k = _b.fetchFn, fetchFn = _k === void 0 ? defaultFetchFn : _k, paramsSerializer = _b.paramsSerializer, _l = _b.isJsonContentType, isJsonContentType = _l === void 0 ? defaultIsJsonContentType : _l, _m = _b.jsonContentType, jsonContentType = _m === void 0 ? "application/json" : _m, defaultTimeout = _b.timeout, globalValidateStatus = _b.validateStatus, baseFetchOptions = __objRest(_b, [
        "baseUrl",
        "prepareHeaders",
        "fetchFn",
        "paramsSerializer",
        "isJsonContentType",
        "jsonContentType",
        "timeout",
        "validateStatus"
    ]);
    if (typeof fetch === "undefined" && fetchFn === defaultFetchFn) {
        console.warn("Warning: `fetch` is not available. Please supply a custom `fetchFn` property to use `fetchBaseQuery` on SSR environments.");
    }
    return function (arg, api) { return rtk_query_esm_async(_this, null, function () {
        var signal, getState, extra, endpoint, forced, type, meta, _a2, url, _j, method, _k, headers, _l, body, _m, params, _o, responseHandler, _p, validateStatus, _q, timeout, rest, config, _r, isJsonifiable, divider, query, request, requestClone, response, timedOut, timeoutId, e_1, responseClone, resultData, responseText, handleResponseError_1, e_2;
        return rtk_query_esm_generator(this, function (_s) {
            switch (_s.label) {
                case 0:
                    signal = api.signal, getState = api.getState, extra = api.extra, endpoint = api.endpoint, forced = api.forced, type = api.type;
                    _a2 = typeof arg == "string" ? { url: arg } : arg, url = _a2.url, _j = _a2.method, method = _j === void 0 ? "GET" : _j, _k = _a2.headers, headers = _k === void 0 ? new Headers(baseFetchOptions.headers) : _k, _l = _a2.body, body = _l === void 0 ? void 0 : _l, _m = _a2.params, params = _m === void 0 ? void 0 : _m, _o = _a2.responseHandler, responseHandler = _o === void 0 ? "json" : _o, _p = _a2.validateStatus, validateStatus = _p === void 0 ? globalValidateStatus != null ? globalValidateStatus : defaultValidateStatus : _p, _q = _a2.timeout, timeout = _q === void 0 ? defaultTimeout : _q, rest = __objRest(_a2, [
                        "url",
                        "method",
                        "headers",
                        "body",
                        "params",
                        "responseHandler",
                        "validateStatus",
                        "timeout"
                    ]);
                    config = rtk_query_esm_spreadValues(rtk_query_esm_spreadProps(rtk_query_esm_spreadValues({}, baseFetchOptions), {
                        method: method,
                        signal: signal,
                        body: body
                    }), rest);
                    headers = new Headers(stripUndefined(headers));
                    _r = config;
                    return [4 /*yield*/, prepareHeaders(headers, {
                            getState: getState,
                            extra: extra,
                            endpoint: endpoint,
                            forced: forced,
                            type: type
                        })];
                case 1:
                    _r.headers = (_s.sent()) || headers;
                    isJsonifiable = function (body2) { return typeof body2 === "object" && (redux_toolkit_esm_isPlainObject(body2) || Array.isArray(body2) || typeof body2.toJSON === "function"); };
                    if (!config.headers.has("content-type") && isJsonifiable(body)) {
                        config.headers.set("content-type", jsonContentType);
                    }
                    if (isJsonifiable(body) && isJsonContentType(config.headers)) {
                        config.body = JSON.stringify(body);
                    }
                    if (params) {
                        divider = ~url.indexOf("?") ? "&" : "?";
                        query = paramsSerializer ? paramsSerializer(params) : new URLSearchParams(stripUndefined(params));
                        url += divider + query;
                    }
                    url = joinUrls(baseUrl, url);
                    request = new Request(url, config);
                    requestClone = request.clone();
                    meta = { request: requestClone };
                    timedOut = false, timeoutId = timeout && setTimeout(function () {
                        timedOut = true;
                        api.abort();
                    }, timeout);
                    _s.label = 2;
                case 2:
                    _s.trys.push([2, 4, 5, 6]);
                    return [4 /*yield*/, fetchFn(request)];
                case 3:
                    response = _s.sent();
                    return [3 /*break*/, 6];
                case 4:
                    e_1 = _s.sent();
                    return [2 /*return*/, {
                            error: {
                                status: timedOut ? "TIMEOUT_ERROR" : "FETCH_ERROR",
                                error: String(e_1)
                            },
                            meta: meta
                        }];
                case 5:
                    if (timeoutId)
                        clearTimeout(timeoutId);
                    return [7 /*endfinally*/];
                case 6:
                    responseClone = response.clone();
                    meta.response = responseClone;
                    responseText = "";
                    _s.label = 7;
                case 7:
                    _s.trys.push([7, 9, , 10]);
                    return [4 /*yield*/, Promise.all([
                            handleResponse(response, responseHandler).then(function (r) { return resultData = r; }, function (e) { return handleResponseError_1 = e; }),
                            responseClone.text().then(function (r) { return responseText = r; }, function () {
                            })
                        ])];
                case 8:
                    _s.sent();
                    if (handleResponseError_1)
                        throw handleResponseError_1;
                    return [3 /*break*/, 10];
                case 9:
                    e_2 = _s.sent();
                    return [2 /*return*/, {
                            error: {
                                status: "PARSING_ERROR",
                                originalStatus: response.status,
                                data: responseText,
                                error: String(e_2)
                            },
                            meta: meta
                        }];
                case 10: return [2 /*return*/, validateStatus(response, resultData) ? {
                        data: resultData,
                        meta: meta
                    } : {
                        error: {
                            status: response.status,
                            data: resultData
                        },
                        meta: meta
                    }];
            }
        });
    }); };
    function handleResponse(response, responseHandler) {
        return rtk_query_esm_async(this, null, function () {
            var text;
            return rtk_query_esm_generator(this, function (_j) {
                switch (_j.label) {
                    case 0:
                        if (typeof responseHandler === "function") {
                            return [2 /*return*/, responseHandler(response)];
                        }
                        if (responseHandler === "content-type") {
                            responseHandler = isJsonContentType(response.headers) ? "json" : "text";
                        }
                        if (!(responseHandler === "json")) return [3 /*break*/, 2];
                        return [4 /*yield*/, response.text()];
                    case 1:
                        text = _j.sent();
                        return [2 /*return*/, text.length ? JSON.parse(text) : null];
                    case 2: return [2 /*return*/, response.text()];
                }
            });
        });
    }
}
// src/query/HandledError.ts
var HandledError = /** @class */ (function () {
    function HandledError(value, meta) {
        if (meta === void 0) { meta = void 0; }
        this.value = value;
        this.meta = meta;
    }
    return HandledError;
}());
// src/query/retry.ts
function defaultBackoff(attempt, maxRetries) {
    if (attempt === void 0) { attempt = 0; }
    if (maxRetries === void 0) { maxRetries = 5; }
    return rtk_query_esm_async(this, null, function () {
        var attempts, timeout;
        return rtk_query_esm_generator(this, function (_j) {
            switch (_j.label) {
                case 0:
                    attempts = Math.min(attempt, maxRetries);
                    timeout = ~~((Math.random() + 0.4) * (300 << attempts));
                    return [4 /*yield*/, new Promise(function (resolve) { return setTimeout(function (res) { return resolve(res); }, timeout); })];
                case 1:
                    _j.sent();
                    return [2 /*return*/];
            }
        });
    });
}
function fail(e) {
    throw Object.assign(new HandledError({ error: e }), {
        throwImmediately: true
    });
}
var EMPTY_OPTIONS = {};
var retryWithBackoff = function (baseQuery, defaultOptions) { return function (args, api, extraOptions) { return rtk_query_esm_async(void 0, null, function () {
    var possibleMaxRetries, maxRetries, defaultRetryCondition, options, retry2, result, e_3;
    return rtk_query_esm_generator(this, function (_j) {
        switch (_j.label) {
            case 0:
                possibleMaxRetries = [
                    5,
                    (defaultOptions || EMPTY_OPTIONS).maxRetries,
                    (extraOptions || EMPTY_OPTIONS).maxRetries
                ].filter(function (x) { return x !== void 0; });
                maxRetries = possibleMaxRetries.slice(-1)[0];
                defaultRetryCondition = function (_, __, _j) {
                    var attempt = _j.attempt;
                    return attempt <= maxRetries;
                };
                options = rtk_query_esm_spreadValues(rtk_query_esm_spreadValues({
                    maxRetries: maxRetries,
                    backoff: defaultBackoff,
                    retryCondition: defaultRetryCondition
                }, defaultOptions), extraOptions);
                retry2 = 0;
                _j.label = 1;
            case 1:
                if (false) {}
                _j.label = 2;
            case 2:
                _j.trys.push([2, 4, , 6]);
                return [4 /*yield*/, baseQuery(args, api, extraOptions)];
            case 3:
                result = _j.sent();
                if (result.error) {
                    throw new HandledError(result);
                }
                return [2 /*return*/, result];
            case 4:
                e_3 = _j.sent();
                retry2++;
                if (e_3.throwImmediately) {
                    if (e_3 instanceof HandledError) {
                        return [2 /*return*/, e_3.value];
                    }
                    throw e_3;
                }
                if (e_3 instanceof HandledError && !options.retryCondition(e_3.value.error, args, {
                    attempt: retry2,
                    baseQueryApi: api,
                    extraOptions: extraOptions
                })) {
                    return [2 /*return*/, e_3.value];
                }
                return [4 /*yield*/, options.backoff(retry2, options.maxRetries)];
            case 5:
                _j.sent();
                return [3 /*break*/, 6];
            case 6: return [3 /*break*/, 1];
            case 7: return [2 /*return*/];
        }
    });
}); }; };
var retry = /* @__PURE__ */ Object.assign(retryWithBackoff, { fail: fail });
// src/query/core/setupListeners.ts

var onFocus = /* @__PURE__ */ createAction("__rtkq/focused");
var onFocusLost = /* @__PURE__ */ createAction("__rtkq/unfocused");
var onOnline = /* @__PURE__ */ createAction("__rtkq/online");
var onOffline = /* @__PURE__ */ createAction("__rtkq/offline");
var initialized = false;
function rtk_query_esm_setupListeners(dispatch, customHandler) {
    function defaultHandler() {
        var handleFocus = function () { return dispatch(onFocus()); };
        var handleFocusLost = function () { return dispatch(onFocusLost()); };
        var handleOnline = function () { return dispatch(onOnline()); };
        var handleOffline = function () { return dispatch(onOffline()); };
        var handleVisibilityChange = function () {
            if (window.document.visibilityState === "visible") {
                handleFocus();
            }
            else {
                handleFocusLost();
            }
        };
        if (!initialized) {
            if (typeof window !== "undefined" && window.addEventListener) {
                window.addEventListener("visibilitychange", handleVisibilityChange, false);
                window.addEventListener("focus", handleFocus, false);
                window.addEventListener("online", handleOnline, false);
                window.addEventListener("offline", handleOffline, false);
                initialized = true;
            }
        }
        var unsubscribe = function () {
            window.removeEventListener("focus", handleFocus);
            window.removeEventListener("visibilitychange", handleVisibilityChange);
            window.removeEventListener("online", handleOnline);
            window.removeEventListener("offline", handleOffline);
            initialized = false;
        };
        return unsubscribe;
    }
    return customHandler ? customHandler(dispatch, { onFocus: onFocus, onFocusLost: onFocusLost, onOffline: onOffline, onOnline: onOnline }) : defaultHandler();
}
// src/query/core/buildSelectors.ts

// src/query/endpointDefinitions.ts
var DefinitionType;
(function (DefinitionType2) {
    DefinitionType2["query"] = "query";
    DefinitionType2["mutation"] = "mutation";
})(DefinitionType || (DefinitionType = {}));
function isQueryDefinition(e) {
    return e.type === DefinitionType.query;
}
function isMutationDefinition(e) {
    return e.type === DefinitionType.mutation;
}
function calculateProvidedBy(description, result, error, queryArg, meta, assertTagTypes) {
    if (isFunction(description)) {
        return description(result, error, queryArg, meta).map(expandTagDescription).map(assertTagTypes);
    }
    if (Array.isArray(description)) {
        return description.map(expandTagDescription).map(assertTagTypes);
    }
    return [];
}
function isFunction(t) {
    return typeof t === "function";
}
function expandTagDescription(description) {
    return typeof description === "string" ? { type: description } : description;
}
// src/query/core/buildSlice.ts

// src/query/utils/isNotNullish.ts
function isNotNullish(v) {
    return v != null;
}
// src/query/core/buildInitiate.ts
var forceQueryFnSymbol = Symbol("forceQueryFn");
var isUpsertQuery = function (arg) { return typeof arg[forceQueryFnSymbol] === "function"; };
function buildInitiate(_j) {
    var serializeQueryArgs = _j.serializeQueryArgs, queryThunk = _j.queryThunk, mutationThunk = _j.mutationThunk, api = _j.api, context = _j.context;
    var runningQueries = new Map();
    var runningMutations = new Map();
    var _k = api.internalActions, unsubscribeQueryResult = _k.unsubscribeQueryResult, removeMutationResult = _k.removeMutationResult, updateSubscriptionOptions = _k.updateSubscriptionOptions;
    return {
        buildInitiateQuery: buildInitiateQuery,
        buildInitiateMutation: buildInitiateMutation,
        getRunningQueryThunk: getRunningQueryThunk,
        getRunningMutationThunk: getRunningMutationThunk,
        getRunningQueriesThunk: getRunningQueriesThunk,
        getRunningMutationsThunk: getRunningMutationsThunk,
        getRunningOperationPromises: getRunningOperationPromises,
        removalWarning: removalWarning
    };
    function removalWarning() {
        throw new Error("This method had to be removed due to a conceptual bug in RTK.\n       Please see https://github.com/reduxjs/redux-toolkit/pull/2481 for details.\n       See https://redux-toolkit.js.org/rtk-query/usage/server-side-rendering for new guidance on SSR.");
    }
    function getRunningOperationPromises() {
        if (typeof process !== "undefined" && "production" === "development") {}
        else {
            var extract = function (v) { return Array.from(v.values()).flatMap(function (queriesForStore) { return queriesForStore ? Object.values(queriesForStore) : []; }); };
            return rtk_query_esm_spreadArray(rtk_query_esm_spreadArray([], extract(runningQueries)), extract(runningMutations)).filter(isNotNullish);
        }
    }
    function getRunningQueryThunk(endpointName, queryArgs) {
        return function (dispatch) {
            var _a;
            var endpointDefinition = context.endpointDefinitions[endpointName];
            var queryCacheKey = serializeQueryArgs({
                queryArgs: queryArgs,
                endpointDefinition: endpointDefinition,
                endpointName: endpointName
            });
            return (_a = runningQueries.get(dispatch)) == null ? void 0 : _a[queryCacheKey];
        };
    }
    function getRunningMutationThunk(_endpointName, fixedCacheKeyOrRequestId) {
        return function (dispatch) {
            var _a;
            return (_a = runningMutations.get(dispatch)) == null ? void 0 : _a[fixedCacheKeyOrRequestId];
        };
    }
    function getRunningQueriesThunk() {
        return function (dispatch) { return Object.values(runningQueries.get(dispatch) || {}).filter(isNotNullish); };
    }
    function getRunningMutationsThunk() {
        return function (dispatch) { return Object.values(runningMutations.get(dispatch) || {}).filter(isNotNullish); };
    }
    function middlewareWarning(dispatch) {
        if (false) { var registered; }
    }
    function buildInitiateQuery(endpointName, endpointDefinition) {
        var queryAction = function (arg, _j) {
            var _k = _j === void 0 ? {} : _j, _l = _k.subscribe, subscribe = _l === void 0 ? true : _l, forceRefetch = _k.forceRefetch, subscriptionOptions = _k.subscriptionOptions, _m = forceQueryFnSymbol, forceQueryFn = _k[_m];
            return function (dispatch, getState) {
                var _j;
                var _a;
                var queryCacheKey = serializeQueryArgs({
                    queryArgs: arg,
                    endpointDefinition: endpointDefinition,
                    endpointName: endpointName
                });
                var thunk = queryThunk((_j = {
                        type: "query",
                        subscribe: subscribe,
                        forceRefetch: forceRefetch,
                        subscriptionOptions: subscriptionOptions,
                        endpointName: endpointName,
                        originalArgs: arg,
                        queryCacheKey: queryCacheKey
                    },
                    _j[forceQueryFnSymbol] = forceQueryFn,
                    _j));
                var selector = api.endpoints[endpointName].select(arg);
                var thunkResult = dispatch(thunk);
                var stateAfter = selector(getState());
                middlewareWarning(dispatch);
                var requestId = thunkResult.requestId, abort = thunkResult.abort;
                var skippedSynchronously = stateAfter.requestId !== requestId;
                var runningQuery = (_a = runningQueries.get(dispatch)) == null ? void 0 : _a[queryCacheKey];
                var selectFromState = function () { return selector(getState()); };
                var statePromise = Object.assign(forceQueryFn ? thunkResult.then(selectFromState) : skippedSynchronously && !runningQuery ? Promise.resolve(stateAfter) : Promise.all([runningQuery, thunkResult]).then(selectFromState), {
                    arg: arg,
                    requestId: requestId,
                    subscriptionOptions: subscriptionOptions,
                    queryCacheKey: queryCacheKey,
                    abort: abort,
                    unwrap: function () {
                        return rtk_query_esm_async(this, null, function () {
                            var result;
                            return rtk_query_esm_generator(this, function (_j) {
                                switch (_j.label) {
                                    case 0: return [4 /*yield*/, statePromise];
                                    case 1:
                                        result = _j.sent();
                                        if (result.isError) {
                                            throw result.error;
                                        }
                                        return [2 /*return*/, result.data];
                                }
                            });
                        });
                    },
                    refetch: function () { return dispatch(queryAction(arg, { subscribe: false, forceRefetch: true })); },
                    unsubscribe: function () {
                        if (subscribe)
                            dispatch(unsubscribeQueryResult({
                                queryCacheKey: queryCacheKey,
                                requestId: requestId
                            }));
                    },
                    updateSubscriptionOptions: function (options) {
                        statePromise.subscriptionOptions = options;
                        dispatch(updateSubscriptionOptions({
                            endpointName: endpointName,
                            requestId: requestId,
                            queryCacheKey: queryCacheKey,
                            options: options
                        }));
                    }
                });
                if (!runningQuery && !skippedSynchronously && !forceQueryFn) {
                    var running_1 = runningQueries.get(dispatch) || {};
                    running_1[queryCacheKey] = statePromise;
                    runningQueries.set(dispatch, running_1);
                    statePromise.then(function () {
                        delete running_1[queryCacheKey];
                        if (!Object.keys(running_1).length) {
                            runningQueries.delete(dispatch);
                        }
                    });
                }
                return statePromise;
            };
        };
        return queryAction;
    }
    function buildInitiateMutation(endpointName) {
        return function (arg, _j) {
            var _k = _j === void 0 ? {} : _j, _l = _k.track, track = _l === void 0 ? true : _l, fixedCacheKey = _k.fixedCacheKey;
            return function (dispatch, getState) {
                var thunk = mutationThunk({
                    type: "mutation",
                    endpointName: endpointName,
                    originalArgs: arg,
                    track: track,
                    fixedCacheKey: fixedCacheKey
                });
                var thunkResult = dispatch(thunk);
                middlewareWarning(dispatch);
                var requestId = thunkResult.requestId, abort = thunkResult.abort, unwrap = thunkResult.unwrap;
                var returnValuePromise = thunkResult.unwrap().then(function (data) { return ({ data: data }); }).catch(function (error) { return ({ error: error }); });
                var reset = function () {
                    dispatch(removeMutationResult({ requestId: requestId, fixedCacheKey: fixedCacheKey }));
                };
                var ret = Object.assign(returnValuePromise, {
                    arg: thunkResult.arg,
                    requestId: requestId,
                    abort: abort,
                    unwrap: unwrap,
                    unsubscribe: reset,
                    reset: reset
                });
                var running = runningMutations.get(dispatch) || {};
                runningMutations.set(dispatch, running);
                running[requestId] = ret;
                ret.then(function () {
                    delete running[requestId];
                    if (!Object.keys(running).length) {
                        runningMutations.delete(dispatch);
                    }
                });
                if (fixedCacheKey) {
                    running[fixedCacheKey] = ret;
                    ret.then(function () {
                        if (running[fixedCacheKey] === ret) {
                            delete running[fixedCacheKey];
                            if (!Object.keys(running).length) {
                                runningMutations.delete(dispatch);
                            }
                        }
                    });
                }
                return ret;
            };
        };
    }
}
// src/query/core/buildThunks.ts



function defaultTransformResponse(baseQueryReturnValue) {
    return baseQueryReturnValue;
}
function buildThunks(_j) {
    var _this = this;
    var reducerPath = _j.reducerPath, baseQuery = _j.baseQuery, endpointDefinitions = _j.context.endpointDefinitions, serializeQueryArgs = _j.serializeQueryArgs, api = _j.api;
    var patchQueryData = function (endpointName, args, patches) { return function (dispatch) {
        var endpointDefinition = endpointDefinitions[endpointName];
        dispatch(api.internalActions.queryResultPatched({
            queryCacheKey: serializeQueryArgs({
                queryArgs: args,
                endpointDefinition: endpointDefinition,
                endpointName: endpointName
            }),
            patches: patches
        }));
    }; };
    var updateQueryData = function (endpointName, args, updateRecipe) { return function (dispatch, getState) {
        var _j, _k;
        var currentState = api.endpoints[endpointName].select(args)(getState());
        var ret = {
            patches: [],
            inversePatches: [],
            undo: function () { return dispatch(api.util.patchQueryData(endpointName, args, ret.inversePatches)); }
        };
        if (currentState.status === QueryStatus.uninitialized) {
            return ret;
        }
        if ("data" in currentState) {
            if (t(currentState.data)) {
                var _l = cn(currentState.data, updateRecipe), patches = _l[1], inversePatches = _l[2];
                (_j = ret.patches).push.apply(_j, patches);
                (_k = ret.inversePatches).push.apply(_k, inversePatches);
            }
            else {
                var value = updateRecipe(currentState.data);
                ret.patches.push({ op: "replace", path: [], value: value });
                ret.inversePatches.push({
                    op: "replace",
                    path: [],
                    value: currentState.data
                });
            }
        }
        dispatch(api.util.patchQueryData(endpointName, args, ret.patches));
        return ret;
    }; };
    var upsertQueryData = function (endpointName, args, value) { return function (dispatch) {
        var _j;
        return dispatch(api.endpoints[endpointName].initiate(args, (_j = {
                subscribe: false,
                forceRefetch: true
            },
            _j[forceQueryFnSymbol] = function () { return ({
                data: value
            }); },
            _j)));
    }; };
    var executeEndpoint = function (_0, _1) { return rtk_query_esm_async(_this, [_0, _1], function (arg, _j) {
        var endpointDefinition, transformResponse, result, baseQueryApi_1, forceQueryFn, what, err, _k, _l, key, _m, error_1, catchedError, transformErrorResponse, _o, e_4;
        var _p, _q;
        var signal = _j.signal, abort = _j.abort, rejectWithValue = _j.rejectWithValue, fulfillWithValue = _j.fulfillWithValue, dispatch = _j.dispatch, getState = _j.getState, extra = _j.extra;
        return rtk_query_esm_generator(this, function (_r) {
            switch (_r.label) {
                case 0:
                    endpointDefinition = endpointDefinitions[arg.endpointName];
                    _r.label = 1;
                case 1:
                    _r.trys.push([1, 8, , 13]);
                    transformResponse = defaultTransformResponse;
                    result = void 0;
                    baseQueryApi_1 = {
                        signal: signal,
                        abort: abort,
                        dispatch: dispatch,
                        getState: getState,
                        extra: extra,
                        endpoint: arg.endpointName,
                        type: arg.type,
                        forced: arg.type === "query" ? isForcedQuery(arg, getState()) : void 0
                    };
                    forceQueryFn = arg.type === "query" ? arg[forceQueryFnSymbol] : void 0;
                    if (!forceQueryFn) return [3 /*break*/, 2];
                    result = forceQueryFn();
                    return [3 /*break*/, 6];
                case 2:
                    if (!endpointDefinition.query) return [3 /*break*/, 4];
                    return [4 /*yield*/, baseQuery(endpointDefinition.query(arg.originalArgs), baseQueryApi_1, endpointDefinition.extraOptions)];
                case 3:
                    result = _r.sent();
                    if (endpointDefinition.transformResponse) {
                        transformResponse = endpointDefinition.transformResponse;
                    }
                    return [3 /*break*/, 6];
                case 4: return [4 /*yield*/, endpointDefinition.queryFn(arg.originalArgs, baseQueryApi_1, endpointDefinition.extraOptions, function (arg2) { return baseQuery(arg2, baseQueryApi_1, endpointDefinition.extraOptions); })];
                case 5:
                    result = _r.sent();
                    _r.label = 6;
                case 6:
                    if (typeof process !== "undefined" && "production" === "development") {}
                    if (result.error)
                        throw new HandledError(result.error, result.meta);
                    _m = fulfillWithValue;
                    return [4 /*yield*/, transformResponse(result.data, result.meta, arg.originalArgs)];
                case 7: return [2 /*return*/, _m.apply(void 0, [_r.sent(), (_p = {
                                fulfilledTimeStamp: Date.now(),
                                baseQueryMeta: result.meta
                            },
                            _p[SHOULD_AUTOBATCH] = true,
                            _p)])];
                case 8:
                    error_1 = _r.sent();
                    catchedError = error_1;
                    if (!(catchedError instanceof HandledError)) return [3 /*break*/, 12];
                    transformErrorResponse = defaultTransformResponse;
                    if (endpointDefinition.query && endpointDefinition.transformErrorResponse) {
                        transformErrorResponse = endpointDefinition.transformErrorResponse;
                    }
                    _r.label = 9;
                case 9:
                    _r.trys.push([9, 11, , 12]);
                    _o = rejectWithValue;
                    return [4 /*yield*/, transformErrorResponse(catchedError.value, catchedError.meta, arg.originalArgs)];
                case 10: return [2 /*return*/, _o.apply(void 0, [_r.sent(), (_q = { baseQueryMeta: catchedError.meta }, _q[SHOULD_AUTOBATCH] = true, _q)])];
                case 11:
                    e_4 = _r.sent();
                    catchedError = e_4;
                    return [3 /*break*/, 12];
                case 12:
                    if (typeof process !== "undefined" && "production" !== "production") {}
                    else {
                        console.error(catchedError);
                    }
                    throw catchedError;
                case 13: return [2 /*return*/];
            }
        });
    }); };
    function isForcedQuery(arg, state) {
        var _a, _b, _c, _d;
        var requestState = (_b = (_a = state[reducerPath]) == null ? void 0 : _a.queries) == null ? void 0 : _b[arg.queryCacheKey];
        var baseFetchOnMountOrArgChange = (_c = state[reducerPath]) == null ? void 0 : _c.config.refetchOnMountOrArgChange;
        var fulfilledVal = requestState == null ? void 0 : requestState.fulfilledTimeStamp;
        var refetchVal = (_d = arg.forceRefetch) != null ? _d : arg.subscribe && baseFetchOnMountOrArgChange;
        if (refetchVal) {
            return refetchVal === true || (Number(new Date()) - Number(fulfilledVal)) / 1e3 >= refetchVal;
        }
        return false;
    }
    var queryThunk = createAsyncThunk(reducerPath + "/executeQuery", executeEndpoint, {
        getPendingMeta: function () {
            var _j;
            return _j = { startedTimeStamp: Date.now() }, _j[SHOULD_AUTOBATCH] = true, _j;
        },
        condition: function (queryThunkArgs, _j) {
            var getState = _j.getState;
            var _a, _b, _c;
            var state = getState();
            var requestState = (_b = (_a = state[reducerPath]) == null ? void 0 : _a.queries) == null ? void 0 : _b[queryThunkArgs.queryCacheKey];
            var fulfilledVal = requestState == null ? void 0 : requestState.fulfilledTimeStamp;
            var currentArg = queryThunkArgs.originalArgs;
            var previousArg = requestState == null ? void 0 : requestState.originalArgs;
            var endpointDefinition = endpointDefinitions[queryThunkArgs.endpointName];
            if (isUpsertQuery(queryThunkArgs)) {
                return true;
            }
            if ((requestState == null ? void 0 : requestState.status) === "pending") {
                return false;
            }
            if (isForcedQuery(queryThunkArgs, state)) {
                return true;
            }
            if (isQueryDefinition(endpointDefinition) && ((_c = endpointDefinition == null ? void 0 : endpointDefinition.forceRefetch) == null ? void 0 : _c.call(endpointDefinition, {
                currentArg: currentArg,
                previousArg: previousArg,
                endpointState: requestState,
                state: state
            }))) {
                return true;
            }
            if (fulfilledVal) {
                return false;
            }
            return true;
        },
        dispatchConditionRejection: true
    });
    var mutationThunk = createAsyncThunk(reducerPath + "/executeMutation", executeEndpoint, {
        getPendingMeta: function () {
            var _j;
            return _j = { startedTimeStamp: Date.now() }, _j[SHOULD_AUTOBATCH] = true, _j;
        }
    });
    var hasTheForce = function (options) { return "force" in options; };
    var hasMaxAge = function (options) { return "ifOlderThan" in options; };
    var prefetch = function (endpointName, arg, options) { return function (dispatch, getState) {
        var force = hasTheForce(options) && options.force;
        var maxAge = hasMaxAge(options) && options.ifOlderThan;
        var queryAction = function (force2) {
            if (force2 === void 0) { force2 = true; }
            return api.endpoints[endpointName].initiate(arg, { forceRefetch: force2 });
        };
        var latestStateValue = api.endpoints[endpointName].select(arg)(getState());
        if (force) {
            dispatch(queryAction());
        }
        else if (maxAge) {
            var lastFulfilledTs = latestStateValue == null ? void 0 : latestStateValue.fulfilledTimeStamp;
            if (!lastFulfilledTs) {
                dispatch(queryAction());
                return;
            }
            var shouldRetrigger = (Number(new Date()) - Number(new Date(lastFulfilledTs))) / 1e3 >= maxAge;
            if (shouldRetrigger) {
                dispatch(queryAction());
            }
        }
        else {
            dispatch(queryAction(false));
        }
    }; };
    function matchesEndpoint(endpointName) {
        return function (action) {
            var _a, _b;
            return ((_b = (_a = action == null ? void 0 : action.meta) == null ? void 0 : _a.arg) == null ? void 0 : _b.endpointName) === endpointName;
        };
    }
    function buildMatchThunkActions(thunk, endpointName) {
        return {
            matchPending: isAllOf(isPending(thunk), matchesEndpoint(endpointName)),
            matchFulfilled: isAllOf(isFulfilled(thunk), matchesEndpoint(endpointName)),
            matchRejected: isAllOf(isRejected(thunk), matchesEndpoint(endpointName))
        };
    }
    return {
        queryThunk: queryThunk,
        mutationThunk: mutationThunk,
        prefetch: prefetch,
        updateQueryData: updateQueryData,
        upsertQueryData: upsertQueryData,
        patchQueryData: patchQueryData,
        buildMatchThunkActions: buildMatchThunkActions
    };
}
function calculateProvidedByThunk(action, type, endpointDefinitions, assertTagType) {
    return calculateProvidedBy(endpointDefinitions[action.meta.arg.endpointName][type], isFulfilled(action) ? action.payload : void 0, isRejectedWithValue(action) ? action.payload : void 0, action.meta.arg.originalArgs, "baseQueryMeta" in action.meta ? action.meta.baseQueryMeta : void 0, assertTagType);
}
// src/query/core/buildSlice.ts

function updateQuerySubstateIfExists(state, queryCacheKey, update) {
    var substate = state[queryCacheKey];
    if (substate) {
        update(substate);
    }
}
function getMutationCacheKey(id) {
    var _a;
    return (_a = "arg" in id ? id.arg.fixedCacheKey : id.fixedCacheKey) != null ? _a : id.requestId;
}
function updateMutationSubstateIfExists(state, id, update) {
    var substate = state[getMutationCacheKey(id)];
    if (substate) {
        update(substate);
    }
}
var rtk_query_esm_initialState = {};
function buildSlice(_j) {
    var reducerPath = _j.reducerPath, queryThunk = _j.queryThunk, mutationThunk = _j.mutationThunk, _k = _j.context, definitions = _k.endpointDefinitions, apiUid = _k.apiUid, extractRehydrationInfo = _k.extractRehydrationInfo, hasRehydrationInfo = _k.hasRehydrationInfo, assertTagType = _j.assertTagType, config = _j.config;
    var resetApiState = createAction(reducerPath + "/resetApiState");
    var querySlice = createSlice({
        name: reducerPath + "/queries",
        initialState: rtk_query_esm_initialState,
        reducers: {
            removeQueryResult: {
                reducer: function (draft, _j) {
                    var queryCacheKey = _j.payload.queryCacheKey;
                    delete draft[queryCacheKey];
                },
                prepare: prepareAutoBatched()
            },
            queryResultPatched: function (draft, _j) {
                var _k = _j.payload, queryCacheKey = _k.queryCacheKey, patches = _k.patches;
                updateQuerySubstateIfExists(draft, queryCacheKey, function (substate) {
                    substate.data = pn(substate.data, patches.concat());
                });
            }
        },
        extraReducers: function (builder) {
            builder.addCase(queryThunk.pending, function (draft, _j) {
                var meta = _j.meta, arg = _j.meta.arg;
                var _a, _b;
                var upserting = isUpsertQuery(arg);
                if (arg.subscribe || upserting) {
                    (_b = draft[_a = arg.queryCacheKey]) != null ? _b : draft[_a] = {
                        status: QueryStatus.uninitialized,
                        endpointName: arg.endpointName
                    };
                }
                updateQuerySubstateIfExists(draft, arg.queryCacheKey, function (substate) {
                    substate.status = QueryStatus.pending;
                    substate.requestId = upserting && substate.requestId ? substate.requestId : meta.requestId;
                    if (arg.originalArgs !== void 0) {
                        substate.originalArgs = arg.originalArgs;
                    }
                    substate.startedTimeStamp = meta.startedTimeStamp;
                });
            }).addCase(queryThunk.fulfilled, function (draft, _j) {
                var meta = _j.meta, payload = _j.payload;
                updateQuerySubstateIfExists(draft, meta.arg.queryCacheKey, function (substate) {
                    var _a;
                    if (substate.requestId !== meta.requestId && !isUpsertQuery(meta.arg))
                        return;
                    var merge = definitions[meta.arg.endpointName].merge;
                    substate.status = QueryStatus.fulfilled;
                    if (merge) {
                        if (substate.data !== void 0) {
                            var fulfilledTimeStamp_1 = meta.fulfilledTimeStamp, arg_1 = meta.arg, baseQueryMeta_1 = meta.baseQueryMeta, requestId_1 = meta.requestId;
                            var newData = immer_esm(substate.data, function (draftSubstateData) {
                                return merge(draftSubstateData, payload, {
                                    arg: arg_1.originalArgs,
                                    baseQueryMeta: baseQueryMeta_1,
                                    fulfilledTimeStamp: fulfilledTimeStamp_1,
                                    requestId: requestId_1
                                });
                            });
                            substate.data = newData;
                        }
                        else {
                            substate.data = payload;
                        }
                    }
                    else {
                        substate.data = ((_a = definitions[meta.arg.endpointName].structuralSharing) != null ? _a : true) ? copyWithStructuralSharing(substate.data, payload) : payload;
                    }
                    delete substate.error;
                    substate.fulfilledTimeStamp = meta.fulfilledTimeStamp;
                });
            }).addCase(queryThunk.rejected, function (draft, _j) {
                var _k = _j.meta, condition = _k.condition, arg = _k.arg, requestId = _k.requestId, error = _j.error, payload = _j.payload;
                updateQuerySubstateIfExists(draft, arg.queryCacheKey, function (substate) {
                    if (condition) {
                    }
                    else {
                        if (substate.requestId !== requestId)
                            return;
                        substate.status = QueryStatus.rejected;
                        substate.error = payload != null ? payload : error;
                    }
                });
            }).addMatcher(hasRehydrationInfo, function (draft, action) {
                var queries = extractRehydrationInfo(action).queries;
                for (var _j = 0, _k = Object.entries(queries); _j < _k.length; _j++) {
                    var _l = _k[_j], key = _l[0], entry = _l[1];
                    if ((entry == null ? void 0 : entry.status) === QueryStatus.fulfilled || (entry == null ? void 0 : entry.status) === QueryStatus.rejected) {
                        draft[key] = entry;
                    }
                }
            });
        }
    });
    var mutationSlice = createSlice({
        name: reducerPath + "/mutations",
        initialState: rtk_query_esm_initialState,
        reducers: {
            removeMutationResult: {
                reducer: function (draft, _j) {
                    var payload = _j.payload;
                    var cacheKey = getMutationCacheKey(payload);
                    if (cacheKey in draft) {
                        delete draft[cacheKey];
                    }
                },
                prepare: prepareAutoBatched()
            }
        },
        extraReducers: function (builder) {
            builder.addCase(mutationThunk.pending, function (draft, _j) {
                var meta = _j.meta, _k = _j.meta, requestId = _k.requestId, arg = _k.arg, startedTimeStamp = _k.startedTimeStamp;
                if (!arg.track)
                    return;
                draft[getMutationCacheKey(meta)] = {
                    requestId: requestId,
                    status: QueryStatus.pending,
                    endpointName: arg.endpointName,
                    startedTimeStamp: startedTimeStamp
                };
            }).addCase(mutationThunk.fulfilled, function (draft, _j) {
                var payload = _j.payload, meta = _j.meta;
                if (!meta.arg.track)
                    return;
                updateMutationSubstateIfExists(draft, meta, function (substate) {
                    if (substate.requestId !== meta.requestId)
                        return;
                    substate.status = QueryStatus.fulfilled;
                    substate.data = payload;
                    substate.fulfilledTimeStamp = meta.fulfilledTimeStamp;
                });
            }).addCase(mutationThunk.rejected, function (draft, _j) {
                var payload = _j.payload, error = _j.error, meta = _j.meta;
                if (!meta.arg.track)
                    return;
                updateMutationSubstateIfExists(draft, meta, function (substate) {
                    if (substate.requestId !== meta.requestId)
                        return;
                    substate.status = QueryStatus.rejected;
                    substate.error = payload != null ? payload : error;
                });
            }).addMatcher(hasRehydrationInfo, function (draft, action) {
                var mutations = extractRehydrationInfo(action).mutations;
                for (var _j = 0, _k = Object.entries(mutations); _j < _k.length; _j++) {
                    var _l = _k[_j], key = _l[0], entry = _l[1];
                    if (((entry == null ? void 0 : entry.status) === QueryStatus.fulfilled || (entry == null ? void 0 : entry.status) === QueryStatus.rejected) && key !== (entry == null ? void 0 : entry.requestId)) {
                        draft[key] = entry;
                    }
                }
            });
        }
    });
    var invalidationSlice = createSlice({
        name: reducerPath + "/invalidation",
        initialState: rtk_query_esm_initialState,
        reducers: {},
        extraReducers: function (builder) {
            builder.addCase(querySlice.actions.removeQueryResult, function (draft, _j) {
                var queryCacheKey = _j.payload.queryCacheKey;
                for (var _k = 0, _l = Object.values(draft); _k < _l.length; _k++) {
                    var tagTypeSubscriptions = _l[_k];
                    for (var _m = 0, _o = Object.values(tagTypeSubscriptions); _m < _o.length; _m++) {
                        var idSubscriptions = _o[_m];
                        var foundAt = idSubscriptions.indexOf(queryCacheKey);
                        if (foundAt !== -1) {
                            idSubscriptions.splice(foundAt, 1);
                        }
                    }
                }
            }).addMatcher(hasRehydrationInfo, function (draft, action) {
                var _a, _b, _c, _d;
                var provided = extractRehydrationInfo(action).provided;
                for (var _j = 0, _k = Object.entries(provided); _j < _k.length; _j++) {
                    var _l = _k[_j], type = _l[0], incomingTags = _l[1];
                    for (var _m = 0, _o = Object.entries(incomingTags); _m < _o.length; _m++) {
                        var _p = _o[_m], id = _p[0], cacheKeys = _p[1];
                        var subscribedQueries = (_d = (_b = (_a = draft[type]) != null ? _a : draft[type] = {})[_c = id || "__internal_without_id"]) != null ? _d : _b[_c] = [];
                        for (var _q = 0, cacheKeys_1 = cacheKeys; _q < cacheKeys_1.length; _q++) {
                            var queryCacheKey = cacheKeys_1[_q];
                            var alreadySubscribed = subscribedQueries.includes(queryCacheKey);
                            if (!alreadySubscribed) {
                                subscribedQueries.push(queryCacheKey);
                            }
                        }
                    }
                }
            }).addMatcher(isAnyOf(isFulfilled(queryThunk), isRejectedWithValue(queryThunk)), function (draft, action) {
                var _a, _b, _c, _d;
                var providedTags = calculateProvidedByThunk(action, "providesTags", definitions, assertTagType);
                var queryCacheKey = action.meta.arg.queryCacheKey;
                for (var _j = 0, _k = Object.values(draft); _j < _k.length; _j++) {
                    var tagTypeSubscriptions = _k[_j];
                    for (var _l = 0, _m = Object.values(tagTypeSubscriptions); _l < _m.length; _l++) {
                        var idSubscriptions = _m[_l];
                        var foundAt = idSubscriptions.indexOf(queryCacheKey);
                        if (foundAt !== -1) {
                            idSubscriptions.splice(foundAt, 1);
                        }
                    }
                }
                for (var _o = 0, providedTags_1 = providedTags; _o < providedTags_1.length; _o++) {
                    var _p = providedTags_1[_o], type = _p.type, id = _p.id;
                    var subscribedQueries = (_d = (_b = (_a = draft[type]) != null ? _a : draft[type] = {})[_c = id || "__internal_without_id"]) != null ? _d : _b[_c] = [];
                    var alreadySubscribed = subscribedQueries.includes(queryCacheKey);
                    if (!alreadySubscribed) {
                        subscribedQueries.push(queryCacheKey);
                    }
                }
            });
        }
    });
    var subscriptionSlice = createSlice({
        name: reducerPath + "/subscriptions",
        initialState: rtk_query_esm_initialState,
        reducers: {
            updateSubscriptionOptions: function (d, a) {
            },
            unsubscribeQueryResult: function (d, a) {
            },
            internal_probeSubscription: function (d, a) {
            }
        }
    });
    var internalSubscriptionsSlice = createSlice({
        name: reducerPath + "/internalSubscriptions",
        initialState: rtk_query_esm_initialState,
        reducers: {
            subscriptionsUpdated: function (state, action) {
                return pn(state, action.payload);
            }
        }
    });
    var configSlice = createSlice({
        name: reducerPath + "/config",
        initialState: rtk_query_esm_spreadValues({
            online: isOnline(),
            focused: isDocumentVisible(),
            middlewareRegistered: false
        }, config),
        reducers: {
            middlewareRegistered: function (state, _j) {
                var payload = _j.payload;
                state.middlewareRegistered = state.middlewareRegistered === "conflict" || apiUid !== payload ? "conflict" : true;
            }
        },
        extraReducers: function (builder) {
            builder.addCase(onOnline, function (state) {
                state.online = true;
            }).addCase(onOffline, function (state) {
                state.online = false;
            }).addCase(onFocus, function (state) {
                state.focused = true;
            }).addCase(onFocusLost, function (state) {
                state.focused = false;
            }).addMatcher(hasRehydrationInfo, function (draft) { return rtk_query_esm_spreadValues({}, draft); });
        }
    });
    var combinedReducer = combineReducers({
        queries: querySlice.reducer,
        mutations: mutationSlice.reducer,
        provided: invalidationSlice.reducer,
        subscriptions: internalSubscriptionsSlice.reducer,
        config: configSlice.reducer
    });
    var reducer = function (state, action) { return combinedReducer(resetApiState.match(action) ? void 0 : state, action); };
    var actions = rtk_query_esm_spreadProps(rtk_query_esm_spreadValues(rtk_query_esm_spreadValues(rtk_query_esm_spreadValues(rtk_query_esm_spreadValues(rtk_query_esm_spreadValues({}, configSlice.actions), querySlice.actions), subscriptionSlice.actions), internalSubscriptionsSlice.actions), mutationSlice.actions), {
        unsubscribeMutationResult: mutationSlice.actions.removeMutationResult,
        resetApiState: resetApiState
    });
    return { reducer: reducer, actions: actions };
}
// src/query/core/buildSelectors.ts
var skipToken = /* @__PURE__ */ Symbol.for("RTKQ/skipToken");
var skipSelector = (/* unused pure expression or super */ null && (skipToken));
var initialSubState = {
    status: QueryStatus.uninitialized
};
var defaultQuerySubState = /* @__PURE__ */ immer_esm(initialSubState, function () {
});
var defaultMutationSubState = /* @__PURE__ */ immer_esm(initialSubState, function () {
});
function buildSelectors(_j) {
    var serializeQueryArgs = _j.serializeQueryArgs, reducerPath = _j.reducerPath;
    var selectSkippedQuery = function (state) { return defaultQuerySubState; };
    var selectSkippedMutation = function (state) { return defaultMutationSubState; };
    return { buildQuerySelector: buildQuerySelector, buildMutationSelector: buildMutationSelector, selectInvalidatedBy: selectInvalidatedBy };
    function withRequestFlags(substate) {
        return rtk_query_esm_spreadValues(rtk_query_esm_spreadValues({}, substate), getRequestStatusFlags(substate.status));
    }
    function selectInternalState(rootState) {
        var state = rootState[reducerPath];
        if (false) {}
        return state;
    }
    function buildQuerySelector(endpointName, endpointDefinition) {
        return function (queryArgs) {
            var serializedArgs = serializeQueryArgs({
                queryArgs: queryArgs,
                endpointDefinition: endpointDefinition,
                endpointName: endpointName
            });
            var selectQuerySubstate = function (state) {
                var _a, _b, _c;
                return (_c = (_b = (_a = selectInternalState(state)) == null ? void 0 : _a.queries) == null ? void 0 : _b[serializedArgs]) != null ? _c : defaultQuerySubState;
            };
            var finalSelectQuerySubState = queryArgs === skipToken ? selectSkippedQuery : selectQuerySubstate;
            return es_createSelector(finalSelectQuerySubState, withRequestFlags);
        };
    }
    function buildMutationSelector() {
        return function (id) {
            var _a;
            var mutationId;
            if (typeof id === "object") {
                mutationId = (_a = getMutationCacheKey(id)) != null ? _a : skipToken;
            }
            else {
                mutationId = id;
            }
            var selectMutationSubstate = function (state) {
                var _a2, _b, _c;
                return (_c = (_b = (_a2 = selectInternalState(state)) == null ? void 0 : _a2.mutations) == null ? void 0 : _b[mutationId]) != null ? _c : defaultMutationSubState;
            };
            var finalSelectMutationSubstate = mutationId === skipToken ? selectSkippedMutation : selectMutationSubstate;
            return es_createSelector(finalSelectMutationSubstate, withRequestFlags);
        };
    }
    function selectInvalidatedBy(state, tags) {
        var _a;
        var apiState = state[reducerPath];
        var toInvalidate = new Set();
        for (var _j = 0, _k = tags.map(expandTagDescription); _j < _k.length; _j++) {
            var tag = _k[_j];
            var provided = apiState.provided[tag.type];
            if (!provided) {
                continue;
            }
            var invalidateSubscriptions = (_a = tag.id !== void 0 ? provided[tag.id] : flatten(Object.values(provided))) != null ? _a : [];
            for (var _l = 0, invalidateSubscriptions_1 = invalidateSubscriptions; _l < invalidateSubscriptions_1.length; _l++) {
                var invalidate = invalidateSubscriptions_1[_l];
                toInvalidate.add(invalidate);
            }
        }
        return flatten(Array.from(toInvalidate.values()).map(function (queryCacheKey) {
            var querySubState = apiState.queries[queryCacheKey];
            return querySubState ? [
                {
                    queryCacheKey: queryCacheKey,
                    endpointName: querySubState.endpointName,
                    originalArgs: querySubState.originalArgs
                }
            ] : [];
        }));
    }
}
// src/query/defaultSerializeQueryArgs.ts

var defaultSerializeQueryArgs = function (_j) {
    var endpointName = _j.endpointName, queryArgs = _j.queryArgs;
    return endpointName + "(" + JSON.stringify(queryArgs, function (key, value) { return redux_toolkit_esm_isPlainObject(value) ? Object.keys(value).sort().reduce(function (acc, key2) {
        acc[key2] = value[key2];
        return acc;
    }, {}) : value; }) + ")";
};
// src/query/createApi.ts


function buildCreateApi() {
    var modules = [];
    for (var _j = 0; _j < arguments.length; _j++) {
        modules[_j] = arguments[_j];
    }
    return function baseCreateApi(options) {
        var extractRehydrationInfo = defaultMemoize(function (action) {
            var _a, _b;
            return (_b = options.extractRehydrationInfo) == null ? void 0 : _b.call(options, action, {
                reducerPath: (_a = options.reducerPath) != null ? _a : "api"
            });
        });
        var optionsWithDefaults = rtk_query_esm_spreadProps(rtk_query_esm_spreadValues({
            reducerPath: "api",
            keepUnusedDataFor: 60,
            refetchOnMountOrArgChange: false,
            refetchOnFocus: false,
            refetchOnReconnect: false
        }, options), {
            extractRehydrationInfo: extractRehydrationInfo,
            serializeQueryArgs: function (queryArgsApi) {
                var finalSerializeQueryArgs = defaultSerializeQueryArgs;
                if ("serializeQueryArgs" in queryArgsApi.endpointDefinition) {
                    var endpointSQA_1 = queryArgsApi.endpointDefinition.serializeQueryArgs;
                    finalSerializeQueryArgs = function (queryArgsApi2) {
                        var initialResult = endpointSQA_1(queryArgsApi2);
                        if (typeof initialResult === "string") {
                            return initialResult;
                        }
                        else {
                            return defaultSerializeQueryArgs(rtk_query_esm_spreadProps(rtk_query_esm_spreadValues({}, queryArgsApi2), {
                                queryArgs: initialResult
                            }));
                        }
                    };
                }
                else if (options.serializeQueryArgs) {
                    finalSerializeQueryArgs = options.serializeQueryArgs;
                }
                return finalSerializeQueryArgs(queryArgsApi);
            },
            tagTypes: rtk_query_esm_spreadArray([], options.tagTypes || [])
        });
        var context = {
            endpointDefinitions: {},
            batch: function (fn) {
                fn();
            },
            apiUid: nanoid(),
            extractRehydrationInfo: extractRehydrationInfo,
            hasRehydrationInfo: defaultMemoize(function (action) { return extractRehydrationInfo(action) != null; })
        };
        var api = {
            injectEndpoints: injectEndpoints,
            enhanceEndpoints: function (_j) {
                var addTagTypes = _j.addTagTypes, endpoints = _j.endpoints;
                if (addTagTypes) {
                    for (var _k = 0, addTagTypes_1 = addTagTypes; _k < addTagTypes_1.length; _k++) {
                        var eT = addTagTypes_1[_k];
                        if (!optionsWithDefaults.tagTypes.includes(eT)) {
                            ;
                            optionsWithDefaults.tagTypes.push(eT);
                        }
                    }
                }
                if (endpoints) {
                    for (var _l = 0, _m = Object.entries(endpoints); _l < _m.length; _l++) {
                        var _o = _m[_l], endpointName = _o[0], partialDefinition = _o[1];
                        if (typeof partialDefinition === "function") {
                            partialDefinition(context.endpointDefinitions[endpointName]);
                        }
                        else {
                            Object.assign(context.endpointDefinitions[endpointName] || {}, partialDefinition);
                        }
                    }
                }
                return api;
            }
        };
        var initializedModules = modules.map(function (m) { return m.init(api, optionsWithDefaults, context); });
        function injectEndpoints(inject) {
            var evaluatedEndpoints = inject.endpoints({
                query: function (x) { return rtk_query_esm_spreadProps(rtk_query_esm_spreadValues({}, x), { type: DefinitionType.query }); },
                mutation: function (x) { return rtk_query_esm_spreadProps(rtk_query_esm_spreadValues({}, x), { type: DefinitionType.mutation }); }
            });
            for (var _j = 0, _k = Object.entries(evaluatedEndpoints); _j < _k.length; _j++) {
                var _l = _k[_j], endpointName = _l[0], definition = _l[1];
                if (!inject.overrideExisting && endpointName in context.endpointDefinitions) {
                    if (typeof process !== "undefined" && "production" === "development") {}
                    continue;
                }
                context.endpointDefinitions[endpointName] = definition;
                for (var _m = 0, initializedModules_1 = initializedModules; _m < initializedModules_1.length; _m++) {
                    var m = initializedModules_1[_m];
                    m.injectEndpoint(endpointName, definition);
                }
            }
            return api;
        }
        return api.injectEndpoints({ endpoints: options.endpoints });
    };
}
// src/query/fakeBaseQuery.ts
function fakeBaseQuery() {
    return function () {
        throw new Error("When using `fakeBaseQuery`, all queries & mutations must use the `queryFn` definition syntax.");
    };
}
// src/query/core/buildMiddleware/index.ts

// src/query/core/buildMiddleware/cacheCollection.ts
function isObjectEmpty(obj) {
    for (var k in obj) {
        return false;
    }
    return true;
}
var THIRTY_TWO_BIT_MAX_TIMER_SECONDS = 2147483647 / 1e3 - 1;
var buildCacheCollectionHandler = function (_j) {
    var reducerPath = _j.reducerPath, api = _j.api, context = _j.context, internalState = _j.internalState;
    var _k = api.internalActions, removeQueryResult = _k.removeQueryResult, unsubscribeQueryResult = _k.unsubscribeQueryResult;
    function anySubscriptionsRemainingForKey(queryCacheKey) {
        var subscriptions = internalState.currentSubscriptions[queryCacheKey];
        return !!subscriptions && !isObjectEmpty(subscriptions);
    }
    var currentRemovalTimeouts = {};
    var handler = function (action, mwApi, internalState2) {
        var _a;
        if (unsubscribeQueryResult.match(action)) {
            var state = mwApi.getState()[reducerPath];
            var queryCacheKey = action.payload.queryCacheKey;
            handleUnsubscribe(queryCacheKey, (_a = state.queries[queryCacheKey]) == null ? void 0 : _a.endpointName, mwApi, state.config);
        }
        if (api.util.resetApiState.match(action)) {
            for (var _j = 0, _k = Object.entries(currentRemovalTimeouts); _j < _k.length; _j++) {
                var _l = _k[_j], key = _l[0], timeout = _l[1];
                if (timeout)
                    clearTimeout(timeout);
                delete currentRemovalTimeouts[key];
            }
        }
        if (context.hasRehydrationInfo(action)) {
            var state = mwApi.getState()[reducerPath];
            var queries = context.extractRehydrationInfo(action).queries;
            for (var _m = 0, _o = Object.entries(queries); _m < _o.length; _m++) {
                var _p = _o[_m], queryCacheKey = _p[0], queryState = _p[1];
                handleUnsubscribe(queryCacheKey, queryState == null ? void 0 : queryState.endpointName, mwApi, state.config);
            }
        }
    };
    function handleUnsubscribe(queryCacheKey, endpointName, api2, config) {
        var _a;
        var endpointDefinition = context.endpointDefinitions[endpointName];
        var keepUnusedDataFor = (_a = endpointDefinition == null ? void 0 : endpointDefinition.keepUnusedDataFor) != null ? _a : config.keepUnusedDataFor;
        if (keepUnusedDataFor === Infinity) {
            return;
        }
        var finalKeepUnusedDataFor = Math.max(0, Math.min(keepUnusedDataFor, THIRTY_TWO_BIT_MAX_TIMER_SECONDS));
        if (!anySubscriptionsRemainingForKey(queryCacheKey)) {
            var currentTimeout = currentRemovalTimeouts[queryCacheKey];
            if (currentTimeout) {
                clearTimeout(currentTimeout);
            }
            currentRemovalTimeouts[queryCacheKey] = setTimeout(function () {
                if (!anySubscriptionsRemainingForKey(queryCacheKey)) {
                    api2.dispatch(removeQueryResult({ queryCacheKey: queryCacheKey }));
                }
                delete currentRemovalTimeouts[queryCacheKey];
            }, finalKeepUnusedDataFor * 1e3);
        }
    }
    return handler;
};
// src/query/core/buildMiddleware/invalidationByTags.ts

var buildInvalidationByTagsHandler = function (_j) {
    var reducerPath = _j.reducerPath, context = _j.context, endpointDefinitions = _j.context.endpointDefinitions, mutationThunk = _j.mutationThunk, api = _j.api, assertTagType = _j.assertTagType, refetchQuery = _j.refetchQuery;
    var removeQueryResult = api.internalActions.removeQueryResult;
    var isThunkActionWithTags = isAnyOf(isFulfilled(mutationThunk), isRejectedWithValue(mutationThunk));
    var handler = function (action, mwApi) {
        if (isThunkActionWithTags(action)) {
            invalidateTags(calculateProvidedByThunk(action, "invalidatesTags", endpointDefinitions, assertTagType), mwApi);
        }
        if (api.util.invalidateTags.match(action)) {
            invalidateTags(calculateProvidedBy(action.payload, void 0, void 0, void 0, void 0, assertTagType), mwApi);
        }
    };
    function invalidateTags(tags, mwApi) {
        var rootState = mwApi.getState();
        var state = rootState[reducerPath];
        var toInvalidate = api.util.selectInvalidatedBy(rootState, tags);
        context.batch(function () {
            var _a;
            var valuesArray = Array.from(toInvalidate.values());
            for (var _j = 0, valuesArray_1 = valuesArray; _j < valuesArray_1.length; _j++) {
                var queryCacheKey = valuesArray_1[_j].queryCacheKey;
                var querySubState = state.queries[queryCacheKey];
                var subscriptionSubState = (_a = state.subscriptions[queryCacheKey]) != null ? _a : {};
                if (querySubState) {
                    if (Object.keys(subscriptionSubState).length === 0) {
                        mwApi.dispatch(removeQueryResult({
                            queryCacheKey: queryCacheKey
                        }));
                    }
                    else if (querySubState.status !== QueryStatus.uninitialized) {
                        mwApi.dispatch(refetchQuery(querySubState, queryCacheKey));
                    }
                }
            }
        });
    }
    return handler;
};
// src/query/core/buildMiddleware/polling.ts
var buildPollingHandler = function (_j) {
    var reducerPath = _j.reducerPath, queryThunk = _j.queryThunk, api = _j.api, refetchQuery = _j.refetchQuery, internalState = _j.internalState;
    var currentPolls = {};
    var handler = function (action, mwApi) {
        if (api.internalActions.updateSubscriptionOptions.match(action) || api.internalActions.unsubscribeQueryResult.match(action)) {
            updatePollingInterval(action.payload, mwApi);
        }
        if (queryThunk.pending.match(action) || queryThunk.rejected.match(action) && action.meta.condition) {
            updatePollingInterval(action.meta.arg, mwApi);
        }
        if (queryThunk.fulfilled.match(action) || queryThunk.rejected.match(action) && !action.meta.condition) {
            startNextPoll(action.meta.arg, mwApi);
        }
        if (api.util.resetApiState.match(action)) {
            clearPolls();
        }
    };
    function startNextPoll(_j, api2) {
        var queryCacheKey = _j.queryCacheKey;
        var state = api2.getState()[reducerPath];
        var querySubState = state.queries[queryCacheKey];
        var subscriptions = internalState.currentSubscriptions[queryCacheKey];
        if (!querySubState || querySubState.status === QueryStatus.uninitialized)
            return;
        var lowestPollingInterval = findLowestPollingInterval(subscriptions);
        if (!Number.isFinite(lowestPollingInterval))
            return;
        var currentPoll = currentPolls[queryCacheKey];
        if (currentPoll == null ? void 0 : currentPoll.timeout) {
            clearTimeout(currentPoll.timeout);
            currentPoll.timeout = void 0;
        }
        var nextPollTimestamp = Date.now() + lowestPollingInterval;
        var currentInterval = currentPolls[queryCacheKey] = {
            nextPollTimestamp: nextPollTimestamp,
            pollingInterval: lowestPollingInterval,
            timeout: setTimeout(function () {
                currentInterval.timeout = void 0;
                api2.dispatch(refetchQuery(querySubState, queryCacheKey));
            }, lowestPollingInterval)
        };
    }
    function updatePollingInterval(_j, api2) {
        var queryCacheKey = _j.queryCacheKey;
        var state = api2.getState()[reducerPath];
        var querySubState = state.queries[queryCacheKey];
        var subscriptions = internalState.currentSubscriptions[queryCacheKey];
        if (!querySubState || querySubState.status === QueryStatus.uninitialized) {
            return;
        }
        var lowestPollingInterval = findLowestPollingInterval(subscriptions);
        if (!Number.isFinite(lowestPollingInterval)) {
            cleanupPollForKey(queryCacheKey);
            return;
        }
        var currentPoll = currentPolls[queryCacheKey];
        var nextPollTimestamp = Date.now() + lowestPollingInterval;
        if (!currentPoll || nextPollTimestamp < currentPoll.nextPollTimestamp) {
            startNextPoll({ queryCacheKey: queryCacheKey }, api2);
        }
    }
    function cleanupPollForKey(key) {
        var existingPoll = currentPolls[key];
        if (existingPoll == null ? void 0 : existingPoll.timeout) {
            clearTimeout(existingPoll.timeout);
        }
        delete currentPolls[key];
    }
    function clearPolls() {
        for (var _j = 0, _k = Object.keys(currentPolls); _j < _k.length; _j++) {
            var key = _k[_j];
            cleanupPollForKey(key);
        }
    }
    function findLowestPollingInterval(subscribers) {
        if (subscribers === void 0) { subscribers = {}; }
        var lowestPollingInterval = Number.POSITIVE_INFINITY;
        for (var key in subscribers) {
            if (!!subscribers[key].pollingInterval) {
                lowestPollingInterval = Math.min(subscribers[key].pollingInterval, lowestPollingInterval);
            }
        }
        return lowestPollingInterval;
    }
    return handler;
};
// src/query/core/buildMiddleware/windowEventHandling.ts
var buildWindowEventHandler = function (_j) {
    var reducerPath = _j.reducerPath, context = _j.context, api = _j.api, refetchQuery = _j.refetchQuery, internalState = _j.internalState;
    var removeQueryResult = api.internalActions.removeQueryResult;
    var handler = function (action, mwApi) {
        if (onFocus.match(action)) {
            refetchValidQueries(mwApi, "refetchOnFocus");
        }
        if (onOnline.match(action)) {
            refetchValidQueries(mwApi, "refetchOnReconnect");
        }
    };
    function refetchValidQueries(api2, type) {
        var state = api2.getState()[reducerPath];
        var queries = state.queries;
        var subscriptions = internalState.currentSubscriptions;
        context.batch(function () {
            for (var _j = 0, _k = Object.keys(subscriptions); _j < _k.length; _j++) {
                var queryCacheKey = _k[_j];
                var querySubState = queries[queryCacheKey];
                var subscriptionSubState = subscriptions[queryCacheKey];
                if (!subscriptionSubState || !querySubState)
                    continue;
                var shouldRefetch = Object.values(subscriptionSubState).some(function (sub) { return sub[type] === true; }) || Object.values(subscriptionSubState).every(function (sub) { return sub[type] === void 0; }) && state.config[type];
                if (shouldRefetch) {
                    if (Object.keys(subscriptionSubState).length === 0) {
                        api2.dispatch(removeQueryResult({
                            queryCacheKey: queryCacheKey
                        }));
                    }
                    else if (querySubState.status !== QueryStatus.uninitialized) {
                        api2.dispatch(refetchQuery(querySubState, queryCacheKey));
                    }
                }
            }
        });
    }
    return handler;
};
// src/query/core/buildMiddleware/cacheLifecycle.ts

var neverResolvedError = new Error("Promise never resolved before cacheEntryRemoved.");
var buildCacheLifecycleHandler = function (_j) {
    var api = _j.api, reducerPath = _j.reducerPath, context = _j.context, queryThunk = _j.queryThunk, mutationThunk = _j.mutationThunk, internalState = _j.internalState;
    var isQueryThunk = isAsyncThunkAction(queryThunk);
    var isMutationThunk = isAsyncThunkAction(mutationThunk);
    var isFulfilledThunk = isFulfilled(queryThunk, mutationThunk);
    var lifecycleMap = {};
    var handler = function (action, mwApi, stateBefore) {
        var cacheKey = getCacheKey(action);
        if (queryThunk.pending.match(action)) {
            var oldState = stateBefore[reducerPath].queries[cacheKey];
            var state = mwApi.getState()[reducerPath].queries[cacheKey];
            if (!oldState && state) {
                handleNewKey(action.meta.arg.endpointName, action.meta.arg.originalArgs, cacheKey, mwApi, action.meta.requestId);
            }
        }
        else if (mutationThunk.pending.match(action)) {
            var state = mwApi.getState()[reducerPath].mutations[cacheKey];
            if (state) {
                handleNewKey(action.meta.arg.endpointName, action.meta.arg.originalArgs, cacheKey, mwApi, action.meta.requestId);
            }
        }
        else if (isFulfilledThunk(action)) {
            var lifecycle = lifecycleMap[cacheKey];
            if (lifecycle == null ? void 0 : lifecycle.valueResolved) {
                lifecycle.valueResolved({
                    data: action.payload,
                    meta: action.meta.baseQueryMeta
                });
                delete lifecycle.valueResolved;
            }
        }
        else if (api.internalActions.removeQueryResult.match(action) || api.internalActions.removeMutationResult.match(action)) {
            var lifecycle = lifecycleMap[cacheKey];
            if (lifecycle) {
                delete lifecycleMap[cacheKey];
                lifecycle.cacheEntryRemoved();
            }
        }
        else if (api.util.resetApiState.match(action)) {
            for (var _j = 0, _k = Object.entries(lifecycleMap); _j < _k.length; _j++) {
                var _l = _k[_j], cacheKey2 = _l[0], lifecycle = _l[1];
                delete lifecycleMap[cacheKey2];
                lifecycle.cacheEntryRemoved();
            }
        }
    };
    function getCacheKey(action) {
        if (isQueryThunk(action))
            return action.meta.arg.queryCacheKey;
        if (isMutationThunk(action))
            return action.meta.requestId;
        if (api.internalActions.removeQueryResult.match(action))
            return action.payload.queryCacheKey;
        if (api.internalActions.removeMutationResult.match(action))
            return getMutationCacheKey(action.payload);
        return "";
    }
    function handleNewKey(endpointName, originalArgs, queryCacheKey, mwApi, requestId) {
        var endpointDefinition = context.endpointDefinitions[endpointName];
        var onCacheEntryAdded = endpointDefinition == null ? void 0 : endpointDefinition.onCacheEntryAdded;
        if (!onCacheEntryAdded)
            return;
        var lifecycle = {};
        var cacheEntryRemoved = new Promise(function (resolve) {
            lifecycle.cacheEntryRemoved = resolve;
        });
        var cacheDataLoaded = Promise.race([
            new Promise(function (resolve) {
                lifecycle.valueResolved = resolve;
            }),
            cacheEntryRemoved.then(function () {
                throw neverResolvedError;
            })
        ]);
        cacheDataLoaded.catch(function () {
        });
        lifecycleMap[queryCacheKey] = lifecycle;
        var selector = api.endpoints[endpointName].select(endpointDefinition.type === DefinitionType.query ? originalArgs : queryCacheKey);
        var extra = mwApi.dispatch(function (_, __, extra2) { return extra2; });
        var lifecycleApi = rtk_query_esm_spreadProps(rtk_query_esm_spreadValues({}, mwApi), {
            getCacheEntry: function () { return selector(mwApi.getState()); },
            requestId: requestId,
            extra: extra,
            updateCachedData: endpointDefinition.type === DefinitionType.query ? function (updateRecipe) { return mwApi.dispatch(api.util.updateQueryData(endpointName, originalArgs, updateRecipe)); } : void 0,
            cacheDataLoaded: cacheDataLoaded,
            cacheEntryRemoved: cacheEntryRemoved
        });
        var runningHandler = onCacheEntryAdded(originalArgs, lifecycleApi);
        Promise.resolve(runningHandler).catch(function (e) {
            if (e === neverResolvedError)
                return;
            throw e;
        });
    }
    return handler;
};
// src/query/core/buildMiddleware/queryLifecycle.ts

var buildQueryLifecycleHandler = function (_j) {
    var api = _j.api, context = _j.context, queryThunk = _j.queryThunk, mutationThunk = _j.mutationThunk;
    var isPendingThunk = isPending(queryThunk, mutationThunk);
    var isRejectedThunk = isRejected(queryThunk, mutationThunk);
    var isFullfilledThunk = isFulfilled(queryThunk, mutationThunk);
    var lifecycleMap = {};
    var handler = function (action, mwApi) {
        var _a, _b, _c;
        if (isPendingThunk(action)) {
            var _j = action.meta, requestId = _j.requestId, _k = _j.arg, endpointName_1 = _k.endpointName, originalArgs_1 = _k.originalArgs;
            var endpointDefinition = context.endpointDefinitions[endpointName_1];
            var onQueryStarted = endpointDefinition == null ? void 0 : endpointDefinition.onQueryStarted;
            if (onQueryStarted) {
                var lifecycle_1 = {};
                var queryFulfilled = new Promise(function (resolve, reject) {
                    lifecycle_1.resolve = resolve;
                    lifecycle_1.reject = reject;
                });
                queryFulfilled.catch(function () {
                });
                lifecycleMap[requestId] = lifecycle_1;
                var selector_1 = api.endpoints[endpointName_1].select(endpointDefinition.type === DefinitionType.query ? originalArgs_1 : requestId);
                var extra = mwApi.dispatch(function (_, __, extra2) { return extra2; });
                var lifecycleApi = rtk_query_esm_spreadProps(rtk_query_esm_spreadValues({}, mwApi), {
                    getCacheEntry: function () { return selector_1(mwApi.getState()); },
                    requestId: requestId,
                    extra: extra,
                    updateCachedData: endpointDefinition.type === DefinitionType.query ? function (updateRecipe) { return mwApi.dispatch(api.util.updateQueryData(endpointName_1, originalArgs_1, updateRecipe)); } : void 0,
                    queryFulfilled: queryFulfilled
                });
                onQueryStarted(originalArgs_1, lifecycleApi);
            }
        }
        else if (isFullfilledThunk(action)) {
            var _l = action.meta, requestId = _l.requestId, baseQueryMeta = _l.baseQueryMeta;
            (_a = lifecycleMap[requestId]) == null ? void 0 : _a.resolve({
                data: action.payload,
                meta: baseQueryMeta
            });
            delete lifecycleMap[requestId];
        }
        else if (isRejectedThunk(action)) {
            var _m = action.meta, requestId = _m.requestId, rejectedWithValue = _m.rejectedWithValue, baseQueryMeta = _m.baseQueryMeta;
            (_c = lifecycleMap[requestId]) == null ? void 0 : _c.reject({
                error: (_b = action.payload) != null ? _b : action.error,
                isUnhandledError: !rejectedWithValue,
                meta: baseQueryMeta
            });
            delete lifecycleMap[requestId];
        }
    };
    return handler;
};
// src/query/core/buildMiddleware/devMiddleware.ts
var buildDevCheckHandler = function (_j) {
    var api = _j.api, apiUid = _j.context.apiUid, reducerPath = _j.reducerPath;
    return function (action, mwApi) {
        var _a, _b;
        if (api.util.resetApiState.match(action)) {
            mwApi.dispatch(api.internalActions.middlewareRegistered(apiUid));
        }
        if (typeof process !== "undefined" && "production" === "development") {}
    };
};
// src/query/core/buildMiddleware/batchActions.ts

var rtk_query_esm_promise;
var rtk_query_esm_queueMicrotaskShim = typeof queueMicrotask === "function" ? queueMicrotask.bind(typeof window !== "undefined" ? window : typeof __webpack_require__.g !== "undefined" ? __webpack_require__.g : globalThis) : function (cb) { return (rtk_query_esm_promise || (rtk_query_esm_promise = Promise.resolve())).then(cb).catch(function (err) { return setTimeout(function () {
    throw err;
}, 0); }); };
var buildBatchedActionsHandler = function (_j) {
    var api = _j.api, queryThunk = _j.queryThunk, internalState = _j.internalState;
    var subscriptionsPrefix = api.reducerPath + "/subscriptions";
    var previousSubscriptions = null;
    var dispatchQueued = false;
    var _k = api.internalActions, updateSubscriptionOptions = _k.updateSubscriptionOptions, unsubscribeQueryResult = _k.unsubscribeQueryResult;
    var actuallyMutateSubscriptions = function (mutableState, action) {
        var _a, _b, _c, _d, _e, _f, _g, _h, _i;
        if (updateSubscriptionOptions.match(action)) {
            var _j = action.payload, queryCacheKey = _j.queryCacheKey, requestId = _j.requestId, options = _j.options;
            if ((_a = mutableState == null ? void 0 : mutableState[queryCacheKey]) == null ? void 0 : _a[requestId]) {
                mutableState[queryCacheKey][requestId] = options;
            }
            return true;
        }
        if (unsubscribeQueryResult.match(action)) {
            var _k = action.payload, queryCacheKey = _k.queryCacheKey, requestId = _k.requestId;
            if (mutableState[queryCacheKey]) {
                delete mutableState[queryCacheKey][requestId];
            }
            return true;
        }
        if (api.internalActions.removeQueryResult.match(action)) {
            delete mutableState[action.payload.queryCacheKey];
            return true;
        }
        if (queryThunk.pending.match(action)) {
            var _l = action.meta, arg = _l.arg, requestId = _l.requestId;
            if (arg.subscribe) {
                var substate = (_c = mutableState[_b = arg.queryCacheKey]) != null ? _c : mutableState[_b] = {};
                substate[requestId] = (_e = (_d = arg.subscriptionOptions) != null ? _d : substate[requestId]) != null ? _e : {};
                return true;
            }
        }
        if (queryThunk.rejected.match(action)) {
            var _m = action.meta, condition = _m.condition, arg = _m.arg, requestId = _m.requestId;
            if (condition && arg.subscribe) {
                var substate = (_g = mutableState[_f = arg.queryCacheKey]) != null ? _g : mutableState[_f] = {};
                substate[requestId] = (_i = (_h = arg.subscriptionOptions) != null ? _h : substate[requestId]) != null ? _i : {};
                return true;
            }
        }
        return false;
    };
    return function (action, mwApi) {
        var _a, _b;
        if (!previousSubscriptions) {
            previousSubscriptions = JSON.parse(JSON.stringify(internalState.currentSubscriptions));
        }
        if (api.internalActions.internal_probeSubscription.match(action)) {
            var _j = action.payload, queryCacheKey = _j.queryCacheKey, requestId = _j.requestId;
            var hasSubscription = !!((_a = internalState.currentSubscriptions[queryCacheKey]) == null ? void 0 : _a[requestId]);
            return [false, hasSubscription];
        }
        var didMutate = actuallyMutateSubscriptions(internalState.currentSubscriptions, action);
        if (didMutate) {
            if (!dispatchQueued) {
                rtk_query_esm_queueMicrotaskShim(function () {
                    var newSubscriptions = JSON.parse(JSON.stringify(internalState.currentSubscriptions));
                    var _j = cn(previousSubscriptions, function () { return newSubscriptions; }), patches = _j[1];
                    mwApi.next(api.internalActions.subscriptionsUpdated(patches));
                    previousSubscriptions = newSubscriptions;
                    dispatchQueued = false;
                });
                dispatchQueued = true;
            }
            var isSubscriptionSliceAction = !!((_b = action.type) == null ? void 0 : _b.startsWith(subscriptionsPrefix));
            var isAdditionalSubscriptionAction = queryThunk.rejected.match(action) && action.meta.condition && !!action.meta.arg.subscribe;
            var actionShouldContinue = !isSubscriptionSliceAction && !isAdditionalSubscriptionAction;
            return [actionShouldContinue, false];
        }
        return [true, false];
    };
};
// src/query/core/buildMiddleware/index.ts
function buildMiddleware(input) {
    var reducerPath = input.reducerPath, queryThunk = input.queryThunk, api = input.api, context = input.context;
    var apiUid = context.apiUid;
    var actions = {
        invalidateTags: createAction(reducerPath + "/invalidateTags")
    };
    var isThisApiSliceAction = function (action) {
        return !!action && typeof action.type === "string" && action.type.startsWith(reducerPath + "/");
    };
    var handlerBuilders = [
        buildDevCheckHandler,
        buildCacheCollectionHandler,
        buildInvalidationByTagsHandler,
        buildPollingHandler,
        buildCacheLifecycleHandler,
        buildQueryLifecycleHandler
    ];
    var middleware = function (mwApi) {
        var initialized2 = false;
        var internalState = {
            currentSubscriptions: {}
        };
        var builderArgs = rtk_query_esm_spreadProps(rtk_query_esm_spreadValues({}, input), {
            internalState: internalState,
            refetchQuery: refetchQuery
        });
        var handlers = handlerBuilders.map(function (build) { return build(builderArgs); });
        var batchedActionsHandler = buildBatchedActionsHandler(builderArgs);
        var windowEventsHandler = buildWindowEventHandler(builderArgs);
        return function (next) {
            return function (action) {
                if (!initialized2) {
                    initialized2 = true;
                    mwApi.dispatch(api.internalActions.middlewareRegistered(apiUid));
                }
                var mwApiWithNext = rtk_query_esm_spreadProps(rtk_query_esm_spreadValues({}, mwApi), { next: next });
                var stateBefore = mwApi.getState();
                var _j = batchedActionsHandler(action, mwApiWithNext, stateBefore), actionShouldContinue = _j[0], hasSubscription = _j[1];
                var res;
                if (actionShouldContinue) {
                    res = next(action);
                }
                else {
                    res = hasSubscription;
                }
                if (!!mwApi.getState()[reducerPath]) {
                    windowEventsHandler(action, mwApiWithNext, stateBefore);
                    if (isThisApiSliceAction(action) || context.hasRehydrationInfo(action)) {
                        for (var _k = 0, handlers_1 = handlers; _k < handlers_1.length; _k++) {
                            var handler = handlers_1[_k];
                            handler(action, mwApiWithNext, stateBefore);
                        }
                    }
                }
                return res;
            };
        };
    };
    return { middleware: middleware, actions: actions };
    function refetchQuery(querySubState, queryCacheKey, override) {
        if (override === void 0) { override = {}; }
        return queryThunk(rtk_query_esm_spreadValues({
            type: "query",
            endpointName: querySubState.endpointName,
            originalArgs: querySubState.originalArgs,
            subscribe: false,
            forceRefetch: true,
            queryCacheKey: queryCacheKey
        }, override));
    }
}
// src/query/tsHelpers.ts
function assertCast(v) {
}
function safeAssign(target) {
    var args = [];
    for (var _j = 1; _j < arguments.length; _j++) {
        args[_j - 1] = arguments[_j];
    }
    Object.assign.apply(Object, rtk_query_esm_spreadArray([target], args));
}
// src/query/core/module.ts

var coreModuleName = /* @__PURE__ */ Symbol();
var coreModule = function () { return ({
    name: coreModuleName,
    init: function (api, _j, context) {
        var baseQuery = _j.baseQuery, tagTypes = _j.tagTypes, reducerPath = _j.reducerPath, serializeQueryArgs = _j.serializeQueryArgs, keepUnusedDataFor = _j.keepUnusedDataFor, refetchOnMountOrArgChange = _j.refetchOnMountOrArgChange, refetchOnFocus = _j.refetchOnFocus, refetchOnReconnect = _j.refetchOnReconnect;
        T();
        assertCast(serializeQueryArgs);
        var assertTagType = function (tag) {
            if (typeof process !== "undefined" && "production" === "development") {}
            return tag;
        };
        Object.assign(api, {
            reducerPath: reducerPath,
            endpoints: {},
            internalActions: {
                onOnline: onOnline,
                onOffline: onOffline,
                onFocus: onFocus,
                onFocusLost: onFocusLost
            },
            util: {}
        });
        var _k = buildThunks({
            baseQuery: baseQuery,
            reducerPath: reducerPath,
            context: context,
            api: api,
            serializeQueryArgs: serializeQueryArgs
        }), queryThunk = _k.queryThunk, mutationThunk = _k.mutationThunk, patchQueryData = _k.patchQueryData, updateQueryData = _k.updateQueryData, upsertQueryData = _k.upsertQueryData, prefetch = _k.prefetch, buildMatchThunkActions = _k.buildMatchThunkActions;
        var _l = buildSlice({
            context: context,
            queryThunk: queryThunk,
            mutationThunk: mutationThunk,
            reducerPath: reducerPath,
            assertTagType: assertTagType,
            config: {
                refetchOnFocus: refetchOnFocus,
                refetchOnReconnect: refetchOnReconnect,
                refetchOnMountOrArgChange: refetchOnMountOrArgChange,
                keepUnusedDataFor: keepUnusedDataFor,
                reducerPath: reducerPath
            }
        }), reducer = _l.reducer, sliceActions = _l.actions;
        safeAssign(api.util, {
            patchQueryData: patchQueryData,
            updateQueryData: updateQueryData,
            upsertQueryData: upsertQueryData,
            prefetch: prefetch,
            resetApiState: sliceActions.resetApiState
        });
        safeAssign(api.internalActions, sliceActions);
        var _m = buildMiddleware({
            reducerPath: reducerPath,
            context: context,
            queryThunk: queryThunk,
            mutationThunk: mutationThunk,
            api: api,
            assertTagType: assertTagType
        }), middleware = _m.middleware, middlewareActions = _m.actions;
        safeAssign(api.util, middlewareActions);
        safeAssign(api, { reducer: reducer, middleware: middleware });
        var _o = buildSelectors({
            serializeQueryArgs: serializeQueryArgs,
            reducerPath: reducerPath
        }), buildQuerySelector = _o.buildQuerySelector, buildMutationSelector = _o.buildMutationSelector, selectInvalidatedBy = _o.selectInvalidatedBy;
        safeAssign(api.util, { selectInvalidatedBy: selectInvalidatedBy });
        var _p = buildInitiate({
            queryThunk: queryThunk,
            mutationThunk: mutationThunk,
            api: api,
            serializeQueryArgs: serializeQueryArgs,
            context: context
        }), buildInitiateQuery = _p.buildInitiateQuery, buildInitiateMutation = _p.buildInitiateMutation, getRunningMutationThunk = _p.getRunningMutationThunk, getRunningMutationsThunk = _p.getRunningMutationsThunk, getRunningQueriesThunk = _p.getRunningQueriesThunk, getRunningQueryThunk = _p.getRunningQueryThunk, getRunningOperationPromises = _p.getRunningOperationPromises, removalWarning = _p.removalWarning;
        safeAssign(api.util, {
            getRunningOperationPromises: getRunningOperationPromises,
            getRunningOperationPromise: removalWarning,
            getRunningMutationThunk: getRunningMutationThunk,
            getRunningMutationsThunk: getRunningMutationsThunk,
            getRunningQueryThunk: getRunningQueryThunk,
            getRunningQueriesThunk: getRunningQueriesThunk
        });
        return {
            name: coreModuleName,
            injectEndpoint: function (endpointName, definition) {
                var _a, _b;
                var anyApi = api;
                (_b = (_a = anyApi.endpoints)[endpointName]) != null ? _b : _a[endpointName] = {};
                if (isQueryDefinition(definition)) {
                    safeAssign(anyApi.endpoints[endpointName], {
                        name: endpointName,
                        select: buildQuerySelector(endpointName, definition),
                        initiate: buildInitiateQuery(endpointName, definition)
                    }, buildMatchThunkActions(queryThunk, endpointName));
                }
                else if (isMutationDefinition(definition)) {
                    safeAssign(anyApi.endpoints[endpointName], {
                        name: endpointName,
                        select: buildMutationSelector(),
                        initiate: buildInitiateMutation(endpointName)
                    }, buildMatchThunkActions(mutationThunk, endpointName));
                }
            }
        };
    }
}); };
// src/query/core/index.ts
var createApi = /* @__PURE__ */ buildCreateApi(coreModule());

//# sourceMappingURL=rtk-query.esm.js.map
;// CONCATENATED MODULE: ./node_modules/@reduxjs/toolkit/dist/query/react/rtk-query-react.esm.js
var rtk_query_react_esm_spreadArray = (undefined && undefined.__spreadArray) || function (to, from) {
    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
        to[j] = from[i];
    return to;
};
var rtk_query_react_esm_defProp = Object.defineProperty;
var rtk_query_react_esm_defProps = Object.defineProperties;
var rtk_query_react_esm_getOwnPropDescs = Object.getOwnPropertyDescriptors;
var rtk_query_react_esm_getOwnPropSymbols = Object.getOwnPropertySymbols;
var rtk_query_react_esm_hasOwnProp = Object.prototype.hasOwnProperty;
var rtk_query_react_esm_propIsEnum = Object.prototype.propertyIsEnumerable;
var rtk_query_react_esm_defNormalProp = function (obj, key, value) { return key in obj ? rtk_query_react_esm_defProp(obj, key, { enumerable: true, configurable: true, writable: true, value: value }) : obj[key] = value; };
var rtk_query_react_esm_spreadValues = function (a, b) {
    for (var prop in b || (b = {}))
        if (rtk_query_react_esm_hasOwnProp.call(b, prop))
            rtk_query_react_esm_defNormalProp(a, prop, b[prop]);
    if (rtk_query_react_esm_getOwnPropSymbols)
        for (var _i = 0, _c = rtk_query_react_esm_getOwnPropSymbols(b); _i < _c.length; _i++) {
            var prop = _c[_i];
            if (rtk_query_react_esm_propIsEnum.call(b, prop))
                rtk_query_react_esm_defNormalProp(a, prop, b[prop]);
        }
    return a;
};
var rtk_query_react_esm_spreadProps = function (a, b) { return rtk_query_react_esm_defProps(a, rtk_query_react_esm_getOwnPropDescs(b)); };
// src/query/react/index.ts

// src/query/react/buildHooks.ts




// src/query/react/useSerializedStableValue.ts

function useStableQueryArgs(queryArgs, serialize, endpointDefinition, endpointName) {
    var incoming = (0,react.useMemo)(function () { return ({
        queryArgs: queryArgs,
        serialized: typeof queryArgs == "object" ? serialize({ queryArgs: queryArgs, endpointDefinition: endpointDefinition, endpointName: endpointName }) : queryArgs
    }); }, [queryArgs, serialize, endpointDefinition, endpointName]);
    var cache = (0,react.useRef)(incoming);
    (0,react.useEffect)(function () {
        if (cache.current.serialized !== incoming.serialized) {
            cache.current = incoming;
        }
    }, [incoming]);
    return cache.current.serialized === incoming.serialized ? cache.current.queryArgs : queryArgs;
}
// src/query/react/constants.ts
var UNINITIALIZED_VALUE = Symbol();
// src/query/react/useShallowStableValue.ts


function useShallowStableValue(value) {
    var cache = (0,react.useRef)(value);
    (0,react.useEffect)(function () {
        if (!shallowEqual_shallowEqual(cache.current, value)) {
            cache.current = value;
        }
    }, [value]);
    return shallowEqual_shallowEqual(cache.current, value) ? cache.current : value;
}
// src/query/defaultSerializeQueryArgs.ts

var rtk_query_react_esm_defaultSerializeQueryArgs = function (_c) {
    var endpointName = _c.endpointName, queryArgs = _c.queryArgs;
    return endpointName + "(" + JSON.stringify(queryArgs, function (key, value) { return redux_toolkit_esm_isPlainObject(value) ? Object.keys(value).sort().reduce(function (acc, key2) {
        acc[key2] = value[key2];
        return acc;
    }, {}) : value; }) + ")";
};
// src/query/react/buildHooks.ts
var rtk_query_react_esm_useIsomorphicLayoutEffect = typeof window !== "undefined" && !!window.document && !!window.document.createElement ? react.useLayoutEffect : react.useEffect;
var defaultMutationStateSelector = function (x) { return x; };
var noPendingQueryStateSelector = function (selected) {
    if (selected.isUninitialized) {
        return rtk_query_react_esm_spreadProps(rtk_query_react_esm_spreadValues({}, selected), {
            isUninitialized: false,
            isFetching: true,
            isLoading: selected.data !== void 0 ? false : true,
            status: QueryStatus.pending
        });
    }
    return selected;
};
function buildHooks(_c) {
    var api = _c.api, _d = _c.moduleOptions, batch = _d.batch, useDispatch = _d.useDispatch, useSelector = _d.useSelector, useStore = _d.useStore, unstable__sideEffectsInRender = _d.unstable__sideEffectsInRender, serializeQueryArgs = _c.serializeQueryArgs, context = _c.context;
    var usePossiblyImmediateEffect = unstable__sideEffectsInRender ? function (cb) { return cb(); } : react.useEffect;
    return { buildQueryHooks: buildQueryHooks, buildMutationHook: buildMutationHook, usePrefetch: usePrefetch };
    function queryStatePreSelector(currentState, lastResult, queryArgs) {
        if ((lastResult == null ? void 0 : lastResult.endpointName) && currentState.isUninitialized) {
            var endpointName = lastResult.endpointName;
            var endpointDefinition = context.endpointDefinitions[endpointName];
            if (serializeQueryArgs({
                queryArgs: lastResult.originalArgs,
                endpointDefinition: endpointDefinition,
                endpointName: endpointName
            }) === serializeQueryArgs({
                queryArgs: queryArgs,
                endpointDefinition: endpointDefinition,
                endpointName: endpointName
            }))
                lastResult = void 0;
        }
        if (queryArgs === skipToken) {
            lastResult = void 0;
        }
        var data = currentState.isSuccess ? currentState.data : lastResult == null ? void 0 : lastResult.data;
        if (data === void 0)
            data = currentState.data;
        var hasData = data !== void 0;
        var isFetching = currentState.isLoading;
        var isLoading = !hasData && isFetching;
        var isSuccess = currentState.isSuccess || isFetching && hasData;
        return rtk_query_react_esm_spreadProps(rtk_query_react_esm_spreadValues({}, currentState), {
            data: data,
            currentData: currentState.data,
            isFetching: isFetching,
            isLoading: isLoading,
            isSuccess: isSuccess
        });
    }
    function usePrefetch(endpointName, defaultOptions) {
        var dispatch = useDispatch();
        var stableDefaultOptions = useShallowStableValue(defaultOptions);
        return (0,react.useCallback)(function (arg, options) { return dispatch(api.util.prefetch(endpointName, arg, rtk_query_react_esm_spreadValues(rtk_query_react_esm_spreadValues({}, stableDefaultOptions), options))); }, [endpointName, dispatch, stableDefaultOptions]);
    }
    function buildQueryHooks(name) {
        var useQuerySubscription = function (arg, _c) {
            var _d = _c === void 0 ? {} : _c, refetchOnReconnect = _d.refetchOnReconnect, refetchOnFocus = _d.refetchOnFocus, refetchOnMountOrArgChange = _d.refetchOnMountOrArgChange, _e = _d.skip, skip = _e === void 0 ? false : _e, _f = _d.pollingInterval, pollingInterval = _f === void 0 ? 0 : _f;
            var initiate = api.endpoints[name].initiate;
            var dispatch = useDispatch();
            var stableArg = useStableQueryArgs(skip ? skipToken : arg, rtk_query_react_esm_defaultSerializeQueryArgs, context.endpointDefinitions[name], name);
            var stableSubscriptionOptions = useShallowStableValue({
                refetchOnReconnect: refetchOnReconnect,
                refetchOnFocus: refetchOnFocus,
                pollingInterval: pollingInterval
            });
            var lastRenderHadSubscription = (0,react.useRef)(false);
            var promiseRef = (0,react.useRef)();
            var _g = promiseRef.current || {}, queryCacheKey = _g.queryCacheKey, requestId = _g.requestId;
            var currentRenderHasSubscription = false;
            if (queryCacheKey && requestId) {
                var returnedValue = dispatch(api.internalActions.internal_probeSubscription({
                    queryCacheKey: queryCacheKey,
                    requestId: requestId
                }));
                if (false) {}
                currentRenderHasSubscription = !!returnedValue;
            }
            var subscriptionRemoved = !currentRenderHasSubscription && lastRenderHadSubscription.current;
            usePossiblyImmediateEffect(function () {
                lastRenderHadSubscription.current = currentRenderHasSubscription;
            });
            usePossiblyImmediateEffect(function () {
                promiseRef.current = void 0;
            }, [subscriptionRemoved]);
            usePossiblyImmediateEffect(function () {
                var _a;
                var lastPromise = promiseRef.current;
                if (typeof process !== "undefined" && "production" === "removeMeOnCompilation") {}
                if (stableArg === skipToken) {
                    lastPromise == null ? void 0 : lastPromise.unsubscribe();
                    promiseRef.current = void 0;
                    return;
                }
                var lastSubscriptionOptions = (_a = promiseRef.current) == null ? void 0 : _a.subscriptionOptions;
                if (!lastPromise || lastPromise.arg !== stableArg) {
                    lastPromise == null ? void 0 : lastPromise.unsubscribe();
                    var promise = dispatch(initiate(stableArg, {
                        subscriptionOptions: stableSubscriptionOptions,
                        forceRefetch: refetchOnMountOrArgChange
                    }));
                    promiseRef.current = promise;
                }
                else if (stableSubscriptionOptions !== lastSubscriptionOptions) {
                    lastPromise.updateSubscriptionOptions(stableSubscriptionOptions);
                }
            }, [
                dispatch,
                initiate,
                refetchOnMountOrArgChange,
                stableArg,
                stableSubscriptionOptions,
                subscriptionRemoved
            ]);
            (0,react.useEffect)(function () {
                return function () {
                    var _a;
                    (_a = promiseRef.current) == null ? void 0 : _a.unsubscribe();
                    promiseRef.current = void 0;
                };
            }, []);
            return (0,react.useMemo)(function () { return ({
                refetch: function () {
                    var _a;
                    if (!promiseRef.current)
                        throw new Error("Cannot refetch a query that has not been started yet.");
                    return (_a = promiseRef.current) == null ? void 0 : _a.refetch();
                }
            }); }, []);
        };
        var useLazyQuerySubscription = function (_c) {
            var _d = _c === void 0 ? {} : _c, refetchOnReconnect = _d.refetchOnReconnect, refetchOnFocus = _d.refetchOnFocus, _e = _d.pollingInterval, pollingInterval = _e === void 0 ? 0 : _e;
            var initiate = api.endpoints[name].initiate;
            var dispatch = useDispatch();
            var _f = (0,react.useState)(UNINITIALIZED_VALUE), arg = _f[0], setArg = _f[1];
            var promiseRef = (0,react.useRef)();
            var stableSubscriptionOptions = useShallowStableValue({
                refetchOnReconnect: refetchOnReconnect,
                refetchOnFocus: refetchOnFocus,
                pollingInterval: pollingInterval
            });
            usePossiblyImmediateEffect(function () {
                var _a, _b;
                var lastSubscriptionOptions = (_a = promiseRef.current) == null ? void 0 : _a.subscriptionOptions;
                if (stableSubscriptionOptions !== lastSubscriptionOptions) {
                    (_b = promiseRef.current) == null ? void 0 : _b.updateSubscriptionOptions(stableSubscriptionOptions);
                }
            }, [stableSubscriptionOptions]);
            var subscriptionOptionsRef = (0,react.useRef)(stableSubscriptionOptions);
            usePossiblyImmediateEffect(function () {
                subscriptionOptionsRef.current = stableSubscriptionOptions;
            }, [stableSubscriptionOptions]);
            var trigger = (0,react.useCallback)(function (arg2, preferCacheValue) {
                if (preferCacheValue === void 0) { preferCacheValue = false; }
                var promise;
                batch(function () {
                    var _a;
                    (_a = promiseRef.current) == null ? void 0 : _a.unsubscribe();
                    promiseRef.current = promise = dispatch(initiate(arg2, {
                        subscriptionOptions: subscriptionOptionsRef.current,
                        forceRefetch: !preferCacheValue
                    }));
                    setArg(arg2);
                });
                return promise;
            }, [dispatch, initiate]);
            (0,react.useEffect)(function () {
                return function () {
                    var _a;
                    (_a = promiseRef == null ? void 0 : promiseRef.current) == null ? void 0 : _a.unsubscribe();
                };
            }, []);
            (0,react.useEffect)(function () {
                if (arg !== UNINITIALIZED_VALUE && !promiseRef.current) {
                    trigger(arg, true);
                }
            }, [arg, trigger]);
            return (0,react.useMemo)(function () { return [trigger, arg]; }, [trigger, arg]);
        };
        var useQueryState = function (arg, _c) {
            var _d = _c === void 0 ? {} : _c, _e = _d.skip, skip = _e === void 0 ? false : _e, selectFromResult = _d.selectFromResult;
            var select = api.endpoints[name].select;
            var stableArg = useStableQueryArgs(skip ? skipToken : arg, serializeQueryArgs, context.endpointDefinitions[name], name);
            var lastValue = (0,react.useRef)();
            var selectDefaultResult = (0,react.useMemo)(function () { return es_createSelector([
                select(stableArg),
                function (_, lastResult) { return lastResult; },
                function (_) { return stableArg; }
            ], queryStatePreSelector); }, [select, stableArg]);
            var querySelector = (0,react.useMemo)(function () { return selectFromResult ? es_createSelector([selectDefaultResult], selectFromResult) : selectDefaultResult; }, [selectDefaultResult, selectFromResult]);
            var currentState = useSelector(function (state) { return querySelector(state, lastValue.current); }, shallowEqual_shallowEqual);
            var store = useStore();
            var newLastValue = selectDefaultResult(store.getState(), lastValue.current);
            rtk_query_react_esm_useIsomorphicLayoutEffect(function () {
                lastValue.current = newLastValue;
            }, [newLastValue]);
            return currentState;
        };
        return {
            useQueryState: useQueryState,
            useQuerySubscription: useQuerySubscription,
            useLazyQuerySubscription: useLazyQuerySubscription,
            useLazyQuery: function (options) {
                var _c = useLazyQuerySubscription(options), trigger = _c[0], arg = _c[1];
                var queryStateResults = useQueryState(arg, rtk_query_react_esm_spreadProps(rtk_query_react_esm_spreadValues({}, options), {
                    skip: arg === UNINITIALIZED_VALUE
                }));
                var info = (0,react.useMemo)(function () { return ({ lastArg: arg }); }, [arg]);
                return (0,react.useMemo)(function () { return [trigger, queryStateResults, info]; }, [trigger, queryStateResults, info]);
            },
            useQuery: function (arg, options) {
                var querySubscriptionResults = useQuerySubscription(arg, options);
                var queryStateResults = useQueryState(arg, rtk_query_react_esm_spreadValues({
                    selectFromResult: arg === skipToken || (options == null ? void 0 : options.skip) ? void 0 : noPendingQueryStateSelector
                }, options));
                var data = queryStateResults.data, status = queryStateResults.status, isLoading = queryStateResults.isLoading, isSuccess = queryStateResults.isSuccess, isError = queryStateResults.isError, error = queryStateResults.error;
                (0,react.useDebugValue)({ data: data, status: status, isLoading: isLoading, isSuccess: isSuccess, isError: isError, error: error });
                return (0,react.useMemo)(function () { return rtk_query_react_esm_spreadValues(rtk_query_react_esm_spreadValues({}, queryStateResults), querySubscriptionResults); }, [queryStateResults, querySubscriptionResults]);
            }
        };
    }
    function buildMutationHook(name) {
        return function (_c) {
            var _d = _c === void 0 ? {} : _c, _e = _d.selectFromResult, selectFromResult = _e === void 0 ? defaultMutationStateSelector : _e, fixedCacheKey = _d.fixedCacheKey;
            var _f = api.endpoints[name], select = _f.select, initiate = _f.initiate;
            var dispatch = useDispatch();
            var _g = (0,react.useState)(), promise = _g[0], setPromise = _g[1];
            (0,react.useEffect)(function () { return function () {
                if (!(promise == null ? void 0 : promise.arg.fixedCacheKey)) {
                    promise == null ? void 0 : promise.reset();
                }
            }; }, [promise]);
            var triggerMutation = (0,react.useCallback)(function (arg) {
                var promise2 = dispatch(initiate(arg, { fixedCacheKey: fixedCacheKey }));
                setPromise(promise2);
                return promise2;
            }, [dispatch, initiate, fixedCacheKey]);
            var requestId = (promise || {}).requestId;
            var mutationSelector = (0,react.useMemo)(function () { return es_createSelector([select({ fixedCacheKey: fixedCacheKey, requestId: promise == null ? void 0 : promise.requestId })], selectFromResult); }, [select, promise, selectFromResult, fixedCacheKey]);
            var currentState = useSelector(mutationSelector, shallowEqual_shallowEqual);
            var originalArgs = fixedCacheKey == null ? promise == null ? void 0 : promise.arg.originalArgs : void 0;
            var reset = (0,react.useCallback)(function () {
                batch(function () {
                    if (promise) {
                        setPromise(void 0);
                    }
                    if (fixedCacheKey) {
                        dispatch(api.internalActions.removeMutationResult({
                            requestId: requestId,
                            fixedCacheKey: fixedCacheKey
                        }));
                    }
                });
            }, [dispatch, fixedCacheKey, promise, requestId]);
            var endpointName = currentState.endpointName, data = currentState.data, status = currentState.status, isLoading = currentState.isLoading, isSuccess = currentState.isSuccess, isError = currentState.isError, error = currentState.error;
            (0,react.useDebugValue)({
                endpointName: endpointName,
                data: data,
                status: status,
                isLoading: isLoading,
                isSuccess: isSuccess,
                isError: isError,
                error: error
            });
            var finalState = (0,react.useMemo)(function () { return rtk_query_react_esm_spreadProps(rtk_query_react_esm_spreadValues({}, currentState), { originalArgs: originalArgs, reset: reset }); }, [currentState, originalArgs, reset]);
            return (0,react.useMemo)(function () { return [triggerMutation, finalState]; }, [triggerMutation, finalState]);
        };
    }
}
// src/query/endpointDefinitions.ts
var rtk_query_react_esm_DefinitionType;
(function (DefinitionType2) {
    DefinitionType2["query"] = "query";
    DefinitionType2["mutation"] = "mutation";
})(rtk_query_react_esm_DefinitionType || (rtk_query_react_esm_DefinitionType = {}));
function rtk_query_react_esm_isQueryDefinition(e) {
    return e.type === rtk_query_react_esm_DefinitionType.query;
}
function rtk_query_react_esm_isMutationDefinition(e) {
    return e.type === rtk_query_react_esm_DefinitionType.mutation;
}
// src/query/utils/capitalize.ts
function capitalize(str) {
    return str.replace(str[0], str[0].toUpperCase());
}
// src/query/tsHelpers.ts
function rtk_query_react_esm_safeAssign(target) {
    var args = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        args[_i - 1] = arguments[_i];
    }
    Object.assign.apply(Object, rtk_query_react_esm_spreadArray([target], args));
}
// src/query/react/module.ts

var reactHooksModuleName = /* @__PURE__ */ Symbol();
var reactHooksModule = function (_c) {
    var _d = _c === void 0 ? {} : _c, _e = _d.batch, batch = _e === void 0 ? react_dom.unstable_batchedUpdates : _e, _f = _d.useDispatch, useDispatch = _f === void 0 ? useDispatch_useDispatch : _f, _g = _d.useSelector, useSelector = _g === void 0 ? useSelector_useSelector : _g, _h = _d.useStore, useStore = _h === void 0 ? useStore_useStore : _h, _j = _d.unstable__sideEffectsInRender, unstable__sideEffectsInRender = _j === void 0 ? false : _j;
    return ({
        name: reactHooksModuleName,
        init: function (api, _c, context) {
            var serializeQueryArgs = _c.serializeQueryArgs;
            var anyApi = api;
            var _d = buildHooks({
                api: api,
                moduleOptions: {
                    batch: batch,
                    useDispatch: useDispatch,
                    useSelector: useSelector,
                    useStore: useStore,
                    unstable__sideEffectsInRender: unstable__sideEffectsInRender
                },
                serializeQueryArgs: serializeQueryArgs,
                context: context
            }), buildQueryHooks = _d.buildQueryHooks, buildMutationHook = _d.buildMutationHook, usePrefetch = _d.usePrefetch;
            rtk_query_react_esm_safeAssign(anyApi, { usePrefetch: usePrefetch });
            rtk_query_react_esm_safeAssign(context, { batch: batch });
            return {
                injectEndpoint: function (endpointName, definition) {
                    if (rtk_query_react_esm_isQueryDefinition(definition)) {
                        var _c = buildQueryHooks(endpointName), useQuery = _c.useQuery, useLazyQuery = _c.useLazyQuery, useLazyQuerySubscription = _c.useLazyQuerySubscription, useQueryState = _c.useQueryState, useQuerySubscription = _c.useQuerySubscription;
                        rtk_query_react_esm_safeAssign(anyApi.endpoints[endpointName], {
                            useQuery: useQuery,
                            useLazyQuery: useLazyQuery,
                            useLazyQuerySubscription: useLazyQuerySubscription,
                            useQueryState: useQueryState,
                            useQuerySubscription: useQuerySubscription
                        });
                        api["use" + capitalize(endpointName) + "Query"] = useQuery;
                        api["useLazy" + capitalize(endpointName) + "Query"] = useLazyQuery;
                    }
                    else if (rtk_query_react_esm_isMutationDefinition(definition)) {
                        var useMutation = buildMutationHook(endpointName);
                        rtk_query_react_esm_safeAssign(anyApi.endpoints[endpointName], {
                            useMutation: useMutation
                        });
                        api["use" + capitalize(endpointName) + "Mutation"] = useMutation;
                    }
                }
            };
        }
    });
};
// src/query/react/index.ts

// src/query/react/ApiProvider.tsx





function ApiProvider(props) {
    var store = React.useState(function () {
        var _c;
        return configureStore({
            reducer: (_c = {},
                _c[props.api.reducerPath] = props.api.reducer,
                _c),
            middleware: function (gDM) { return gDM().concat(props.api.middleware); }
        });
    })[0];
    useEffect4(function () { return props.setupListeners === false ? void 0 : setupListeners(store.dispatch, props.setupListeners); }, [props.setupListeners]);
    return /* @__PURE__ */ React.createElement(Provider, {
        store: store,
        context: props.context
    }, props.children);
}
// src/query/react/index.ts
var rtk_query_react_esm_createApi = /* @__PURE__ */ buildCreateApi(coreModule(), reactHooksModule());

//# sourceMappingURL=rtk-query-react.esm.js.map
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }
  if (info.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}
function _asyncToGenerator(fn) {
  return function () {
    var self = this,
      args = arguments;
    return new Promise(function (resolve, reject) {
      var gen = fn.apply(self, args);
      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }
      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }
      _next(undefined);
    });
  };
}
// EXTERNAL MODULE: ./node_modules/@babel/runtime/regenerator/index.js
var regenerator = __webpack_require__(687);
var regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);
;// CONCATENATED MODULE: ./src/api.ts
var BASE_URL="/api";var API={BASE:function BASE(){return"".concat(BASE_URL)},USERS:{BASE:function BASE(){return"".concat(API.BASE(),"/users")},LIST:function LIST(){return"".concat(API.USERS.BASE(),"/list")},DETAILS:function DETAILS(name){return"".concat(API.USERS.BASE(),"/").concat(name)},INFO:function INFO(){return"".concat(API.USERS.BASE(),"/info")},REFRESH_TOKEN:function REFRESH_TOKEN(name){return"".concat(API.USERS.DETAILS(name),"/refresh-token")}},HUBS:{BASE:function BASE(){return"".concat(API.BASE(),"/hubs")},LIST:function LIST(){return"".concat(API.HUBS.BASE(),"/list")},DETAILS:function DETAILS(name){return"".concat(API.HUBS.BASE(),"/").concat(name)},MEMBERS:function MEMBERS(name){return"".concat(API.HUBS.DETAILS(name),"/members")},BACKEND_VALUES:function BACKEND_VALUES(){return"".concat(API.HUBS.BASE(),"/backends/values")}}};
;// CONCATENATED MODULE: ./src/mocks/user.ts
var successInfo={user_name:"test_user"},failedInfo={status:403,error:"Forbidden"};function broofa(){return"xxxxxxxxxxxxxxxxxxxxxxxxxxxxx".replace(/[xy]/g,function(c){var r=0|16*Math.random(),v="x"==c?r:8|3&r;return v.toString(16)})}var successList=Array(50).fill({}).map(function(i,index){return{user_name:"user_".concat(index),token:broofa(),global_role:function(){var val=Math.random(),permission="read";switch(!0){case .65<val:permission="read";break;case .65>=val&&.3<=val:permission="admin";break;case .3>val:permission="run";}return permission}()}});/* harmony default export */ const user = ({info:{success:successInfo,failed:failedInfo},list:{success:successList}});
;// CONCATENATED MODULE: ./src/mocks/hub.ts
var listSuccess=Array(50).fill({}).map(function(i,index){return{hub_name:"hub_".concat(index),backend:{type:"aws",access_key:"hub_".concat(index,"_access_key"),secret_key:"hub_".concat(index,"_secret_key"),region_name:"hub_".concat(index,"_region_name"),region_name_title:"Hub ".concat(index," Region"),s3_bucket_name:"hub_".concat(index,"_s3_bucket_name"),ec2_subnet_id:"hub_".concat(index,"_ec2_subnet_id")},members:["test_user","old_user","new_user"].map(function(userName){return{user_name:userName,hub_role:function(){var val=Math.random(),permission="read";switch(!0){case .65<val||4>index:permission="admin";break;case .65>=val&&.3<=val:permission="read";break;case .3>val:permission="run";}return permission}()}})}}),backendValuesSuccess={type:"aws",region_name:{selected:"region_1",values:Array(10).fill({}).map(function(_,index){return{value:"region_".concat(index),label:"Region ".concat(index)}})},s3_bucket_name:{selected:"s3://bucket_1",values:Array(10).fill({}).map(function(_,index){return{name:"bucket_".concat(index),created:"bucket_".concat(index,"_date"),region:"bucket_".concat(index,"_region")}})},ec2_subnet_id:{// selected: 'subnet_1',
values:Array(10).fill({}).map(function(_,index){return{value:"subnet_".concat(index),label:"Subnet ".concat(index)}})}};/* harmony default export */ const hub = ({list:{success:listSuccess},backendValues:{success:backendValuesSuccess}});
;// CONCATENATED MODULE: ./src/mocks/index.ts
var _mocksMap;var mocksMap=(_mocksMap={},defineProperty_defineProperty(_mocksMap,API.USERS.INFO(),{GET:{success:user.info.success,failed:user.info.failed}}),defineProperty_defineProperty(_mocksMap,API.USERS.LIST(),{GET:{success:user.list.success,failed:{status:403}}}),defineProperty_defineProperty(_mocksMap,API.USERS.DETAILS(":name"),{GET:{success:user.list.success[0],failed:{status:403}},PATCH:{success:user.list.success[0],failed:{status:403}}}),defineProperty_defineProperty(_mocksMap,API.USERS.REFRESH_TOKEN(":name"),{POST:{success:{token:user.list.success[0].token},failed:{status:403}}}),defineProperty_defineProperty(_mocksMap,API.USERS.BASE(),{DELETE:{success:{},failed:{status:403}},POST:{success:user.list.success[0],failed:{status:403}}}),defineProperty_defineProperty(_mocksMap,API.HUBS.LIST(),{GET:{success:hub.list.success,failed:{status:403}}}),defineProperty_defineProperty(_mocksMap,API.HUBS.DETAILS(":name"),{GET:{success:hub.list.success[0],failed:{status:403}},PATCH:{success:hub.list.success[0],failed:{status:403}}}),defineProperty_defineProperty(_mocksMap,API.HUBS.MEMBERS(":name"),{POST:{success:hub.list.success[0].members,failed:{status:403}}}),defineProperty_defineProperty(_mocksMap,API.HUBS.BASE(),{DELETE:{success:{},failed:{status:403}},POST:{success:hub.list.success[0],failed:{status:403}}}),defineProperty_defineProperty(_mocksMap,API.HUBS.BACKEND_VALUES(),{POST:{success:hub.backendValues.success,failed:{status:400}}}),_mocksMap);var getResponse=function(_ref){var url=_ref.url,_ref$method=_ref.method,method=void 0===_ref$method?"GET":_ref$method,_ref$responseType=_ref.responseType,responseType=void 0===_ref$responseType?"success":_ref$responseType,formattedUrl=url.replace(/\?.+/gi,""),matchUrl=Object.keys(mocksMap).find(function(path){return!!router_matchPath(path,formattedUrl)});return matchUrl?"failed"===responseType?{error:mocksMap[matchUrl][method][responseType]}:{data:mocksMap[matchUrl][method][responseType]}:{error:{status:404}}};
;// CONCATENATED MODULE: ./src/libs/index.ts
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function arrayToRecordByKeyName(array,selector){return array.reduce(function(acc,item){return acc[item[selector]]=item,acc},{})}function wait(delayInMS){return new Promise(function(resolve){return setTimeout(resolve,delayInMS)})}function goToUrl(url,blank){var link=document.createElement("a");link.style.opacity="0",link.style.position="absolute",link.style.top="-2000px",blank&&(link.target="_blank"),link.href=url,document.body.append(link),link.click(),link.remove()}var copyToClipboard=function(copyText,success,failed){navigator.clipboard.writeText(copyText).then(success,failed)};var compareSimpleObject=function(object,twoObject){return JSON.stringify(object)===JSON.stringify(twoObject)};var MINUTE=6e4;var getDateAgoSting=function(time){try{return Date.now()-time<MINUTE?"Just now":Date.now()-time<24*(60*MINUTE)?formatDistanceToNowStrict(new Date(time),{addSuffix:!0}):format(new Date(time),"dd/MM/yyyy")}catch(err){return""}};var getDateFewDaysAgo=function(daysAgo){var timestamp=1<arguments.length&&void 0!==arguments[1]?arguments[1]:new Date().getTime(),date=new Date(timestamp);return date.setDate(date.getDate()-daysAgo),date.getTime()};var getYesterdayTimeStamp=function(){return getDateFewDaysAgo(1)};var getUid=function(a){return a?(0|16*Math.random()).toString(16):(""+1e11+1e11).replace(/1|0/g,getUid)};var mibToBytes=function(value){return 1048576*value};var formatBytes=function(bytes){var decimals=1<arguments.length&&arguments[1]!==void 0?arguments[1]:2;if(0===bytes)return"0Bytes";var k=1024,dm=0>=decimals?0:decimals,i=Math.floor(Math.log(bytes)/Math.log(k));return parseFloat((bytes/Math.pow(k,i)).toFixed(dm))+["Bytes","KB","MB","GB","TB","PB","EB","ZB","YB"][i]};var maskText=function(text){return text.length?Array(text.length).fill("*").join(""):""};var stopPropagation=function(event){event.preventDefault(),event.stopPropagation()};var buildRoute=function(route,params){return Object.keys(params).reduce(function(acc,key){var regExp=new RegExp(":".concat(key));return acc.replace(regExp,params[key])},route)};
;// CONCATENATED MODULE: ./src/libs/fetchBaseQuery/index.ts
var isMockingEnabled=false;// const isMockingEnabled = false;
var fetchBaseQuery_fetchBaseQuery=function(params// eslint-disable-next-line @typescript-eslint/ban-types
){return isMockingEnabled?/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/regenerator_default().mark(function _callee(_ref){var url,method,body,params,response,_response;return regenerator_default().wrap(function(_context){for(;;)switch(_context.prev=_context.next){case 0:return url=_ref.url,method=_ref.method,body=_ref.body,params=_ref.params,_context.prev=1,response=getResponse({url:url,method:method}),console.log("Mock request",{url:url,method:method,response:response,body:body,params:params}),_context.next=6,wait(Math.floor(3e3*Math.random()));case 6:return _context.abrupt("return",response);case 9:return _context.prev=9,_context.t0=_context["catch"](1),_response={error:{status:500}},console.log("Mock request",{url:url,method:method,response:_response,body:body,params:params}),_context.abrupt("return",_response);case 14:case"end":return _context.stop();}},_callee,null,[[1,9]])}));return function(){return _ref2.apply(this,arguments)}}():fetchBaseQuery(params)};
;// CONCATENATED MODULE: ./src/libs/fetchBaseQueryHeaders.ts
function baseQueryHeaders(headers,_ref){var _app$authData,getState=_ref.getState,token=null===(_app$authData=getState().app.authData)||void 0===_app$authData?void 0:_app$authData.token;return token&&headers.set("Authorization","Bearer ".concat(token)),headers}/* harmony default export */ const fetchBaseQueryHeaders = (baseQueryHeaders);
;// CONCATENATED MODULE: ./src/services/user.ts
var userApi=rtk_query_react_esm_createApi({reducerPath:"userApi",baseQuery:fetchBaseQuery_fetchBaseQuery({prepareHeaders:fetchBaseQueryHeaders}),tagTypes:["User"],endpoints:function endpoints(builder){return{getUserData:builder.query({query:function query(){return{url:API.USERS.INFO()}}}),getUserList:builder.query({query:function query(){return{url:API.USERS.LIST()}},providesTags:function providesTags(result){return result?[].concat(_toConsumableArray(result.map(function(_ref){var user_name=_ref.user_name;return{type:"User",id:user_name}})),["User"]):["User"]}}),getUser:builder.query({query:function query(arg){return{url:API.USERS.DETAILS(arg.name)}},providesTags:function providesTags(result){return result?[{type:"User",id:result.user_name}]:[]}}),createUser:builder.mutation({query:function query(user){return{url:API.USERS.BASE(),method:"POST",body:user}},invalidatesTags:function invalidatesTags(result){return[{type:"User",id:null===result||void 0===result?void 0:result.user_name}]}}),updateUser:builder.mutation({query:function query(user){return{url:API.USERS.DETAILS(user.user_name),method:"PATCH",body:user}},invalidatesTags:function invalidatesTags(result){return[{type:"User",id:null===result||void 0===result?void 0:result.user_name}]}}),refreshToken:builder.mutation({query:function query(_ref2){var user_name=_ref2.user_name;return{url:API.USERS.REFRESH_TOKEN(user_name),method:"POST"}},invalidatesTags:function invalidatesTags(result,error,_ref3){var user_name=_ref3.user_name;return[{type:"User",id:user_name}]}}),deleteUsers:builder.mutation({query:function query(userNames){return{url:API.USERS.BASE(),method:"DELETE",body:{users:userNames}}}})}}});var useGetUserDataQuery=userApi.useGetUserDataQuery,useGetUserListQuery=userApi.useGetUserListQuery,useGetUserQuery=userApi.useGetUserQuery,useCreateUserMutation=userApi.useCreateUserMutation,useDeleteUsersMutation=userApi.useDeleteUsersMutation,useUpdateUserMutation=userApi.useUpdateUserMutation,useRefreshTokenMutation=userApi.useRefreshTokenMutation;
;// CONCATENATED MODULE: ./src/services/hub.ts
var hubApi=rtk_query_react_esm_createApi({reducerPath:"hubApi",baseQuery:fetchBaseQuery_fetchBaseQuery({prepareHeaders:fetchBaseQueryHeaders}),tagTypes:["Hubs"],endpoints:function endpoints(builder){return{getHubs:builder.query({query:function query(){return{url:API.HUBS.LIST()}},providesTags:function providesTags(result){return result?[].concat(_toConsumableArray(result.map(function(_ref){var hub_name=_ref.hub_name;return{type:"Hubs",id:hub_name}})),["Hubs"]):["Hubs"]}}),getHub:builder.query({query:function query(_ref2){var name=_ref2.name;return{url:API.HUBS.DETAILS(name)}},providesTags:function providesTags(result){return result?[{type:"Hubs",id:result.hub_name}]:[]}}),createHub:builder.mutation({query:function query(hub){return{url:API.HUBS.BASE(),method:"POST",body:hub}},invalidatesTags:function invalidatesTags(result){return[{type:"Hubs",id:null===result||void 0===result?void 0:result.hub_name}]}}),updateHub:builder.mutation({query:function query(hub){return{url:API.HUBS.DETAILS(hub.hub_name),method:"PATCH",body:hub}},invalidatesTags:function invalidatesTags(result){return[{type:"Hubs",id:null===result||void 0===result?void 0:result.hub_name}]}}),updateHubMembers:builder.mutation({query:function query(hub){return{url:API.HUBS.MEMBERS(hub.hub_name),method:"POST",params:hub.members}},invalidatesTags:function invalidatesTags(result,error,params){return[{type:"Hubs",id:null===params||void 0===params?void 0:params.hub_name}]}}),deleteHubs:builder.mutation({query:function query(hubNames){return{url:API.HUBS.BASE(),method:"DELETE",params:{hubs:hubNames}}}}),backendValues:builder.mutation({query:function query(data){return{url:API.HUBS.BACKEND_VALUES(),method:"POST",params:data}}})}}});var useGetHubsQuery=hubApi.useGetHubsQuery,useGetHubQuery=hubApi.useGetHubQuery,useCreateHubMutation=hubApi.useCreateHubMutation,useUpdateHubMutation=hubApi.useUpdateHubMutation,useUpdateHubMembersMutation=hubApi.useUpdateHubMembersMutation,useDeleteHubsMutation=hubApi.useDeleteHubsMutation,useBackendValuesMutation=hubApi.useBackendValuesMutation;
;// CONCATENATED MODULE: ./src/store.ts
var _reducer;var store=redux_toolkit_esm_configureStore({reducer:(_reducer={app:slice,notifications:Notifications_slice},defineProperty_defineProperty(_reducer,userApi.reducerPath,userApi.reducer),defineProperty_defineProperty(_reducer,hubApi.reducerPath,hubApi.reducer),_reducer),middleware:function middleware(getDefaultMiddleware){return getDefaultMiddleware({serializableCheck:!1}).concat(hubApi.middleware).concat(userApi.middleware)}});
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/classCallCheck.js
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/createClass.js

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
  }
}
function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js
function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js
function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };
  return _setPrototypeOf(o, p);
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/inherits.js

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  Object.defineProperty(subClass, "prototype", {
    writable: false
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js


function _possibleConstructorReturn(self, call) {
  if (call && (typeof_typeof(call) === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return _assertThisInitialized(self);
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js
function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js
function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/toArray.js




function _toArray(arr) {
  return _arrayWithHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableRest();
}
;// CONCATENATED MODULE: ./node_modules/i18next/dist/esm/i18next.js










function ownKeys$6(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$6(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$6(Object(source), !0).forEach(function (key) { defineProperty_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$6(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var consoleLogger = {
  type: 'logger',
  log: function log(args) {
    this.output('log', args);
  },
  warn: function warn(args) {
    this.output('warn', args);
  },
  error: function error(args) {
    this.output('error', args);
  },
  output: function output(type, args) {
    if (console && console[type]) console[type].apply(console, args);
  }
};
var Logger = function () {
  function Logger(concreteLogger) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    _classCallCheck(this, Logger);
    this.init(concreteLogger, options);
  }
  _createClass(Logger, [{
    key: "init",
    value: function init(concreteLogger) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      this.prefix = options.prefix || 'i18next:';
      this.logger = concreteLogger || consoleLogger;
      this.options = options;
      this.debug = options.debug;
    }
  }, {
    key: "setDebug",
    value: function setDebug(bool) {
      this.debug = bool;
    }
  }, {
    key: "log",
    value: function log() {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      return this.forward(args, 'log', '', true);
    }
  }, {
    key: "warn",
    value: function warn() {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }
      return this.forward(args, 'warn', '', true);
    }
  }, {
    key: "error",
    value: function error() {
      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        args[_key3] = arguments[_key3];
      }
      return this.forward(args, 'error', '');
    }
  }, {
    key: "deprecate",
    value: function deprecate() {
      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
        args[_key4] = arguments[_key4];
      }
      return this.forward(args, 'warn', 'WARNING DEPRECATED: ', true);
    }
  }, {
    key: "forward",
    value: function forward(args, lvl, prefix, debugOnly) {
      if (debugOnly && !this.debug) return null;
      if (typeof args[0] === 'string') args[0] = "".concat(prefix).concat(this.prefix, " ").concat(args[0]);
      return this.logger[lvl](args);
    }
  }, {
    key: "create",
    value: function create(moduleName) {
      return new Logger(this.logger, _objectSpread$6(_objectSpread$6({}, {
        prefix: "".concat(this.prefix, ":").concat(moduleName, ":")
      }), this.options));
    }
  }, {
    key: "clone",
    value: function clone(options) {
      options = options || this.options;
      options.prefix = options.prefix || this.prefix;
      return new Logger(this.logger, options);
    }
  }]);
  return Logger;
}();
var baseLogger = new Logger();

var EventEmitter = function () {
  function EventEmitter() {
    _classCallCheck(this, EventEmitter);
    this.observers = {};
  }
  _createClass(EventEmitter, [{
    key: "on",
    value: function on(events, listener) {
      var _this = this;
      events.split(' ').forEach(function (event) {
        _this.observers[event] = _this.observers[event] || [];
        _this.observers[event].push(listener);
      });
      return this;
    }
  }, {
    key: "off",
    value: function off(event, listener) {
      if (!this.observers[event]) return;
      if (!listener) {
        delete this.observers[event];
        return;
      }
      this.observers[event] = this.observers[event].filter(function (l) {
        return l !== listener;
      });
    }
  }, {
    key: "emit",
    value: function emit(event) {
      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }
      if (this.observers[event]) {
        var cloned = [].concat(this.observers[event]);
        cloned.forEach(function (observer) {
          observer.apply(void 0, args);
        });
      }
      if (this.observers['*']) {
        var _cloned = [].concat(this.observers['*']);
        _cloned.forEach(function (observer) {
          observer.apply(observer, [event].concat(args));
        });
      }
    }
  }]);
  return EventEmitter;
}();

function i18next_defer() {
  var res;
  var rej;
  var promise = new Promise(function (resolve, reject) {
    res = resolve;
    rej = reject;
  });
  promise.resolve = res;
  promise.reject = rej;
  return promise;
}
function makeString(object) {
  if (object == null) return '';
  return '' + object;
}
function copy(a, s, t) {
  a.forEach(function (m) {
    if (s[m]) t[m] = s[m];
  });
}
function getLastOfPath(object, path, Empty) {
  function cleanKey(key) {
    return key && key.indexOf('###') > -1 ? key.replace(/###/g, '.') : key;
  }
  function canNotTraverseDeeper() {
    return !object || typeof object === 'string';
  }
  var stack = typeof path !== 'string' ? [].concat(path) : path.split('.');
  while (stack.length > 1) {
    if (canNotTraverseDeeper()) return {};
    var key = cleanKey(stack.shift());
    if (!object[key] && Empty) object[key] = new Empty();
    if (Object.prototype.hasOwnProperty.call(object, key)) {
      object = object[key];
    } else {
      object = {};
    }
  }
  if (canNotTraverseDeeper()) return {};
  return {
    obj: object,
    k: cleanKey(stack.shift())
  };
}
function setPath(object, path, newValue) {
  var _getLastOfPath = getLastOfPath(object, path, Object),
    obj = _getLastOfPath.obj,
    k = _getLastOfPath.k;
  obj[k] = newValue;
}
function pushPath(object, path, newValue, concat) {
  var _getLastOfPath2 = getLastOfPath(object, path, Object),
    obj = _getLastOfPath2.obj,
    k = _getLastOfPath2.k;
  obj[k] = obj[k] || [];
  if (concat) obj[k] = obj[k].concat(newValue);
  if (!concat) obj[k].push(newValue);
}
function getPath(object, path) {
  var _getLastOfPath3 = getLastOfPath(object, path),
    obj = _getLastOfPath3.obj,
    k = _getLastOfPath3.k;
  if (!obj) return undefined;
  return obj[k];
}
function getPathWithDefaults(data, defaultData, key) {
  var value = getPath(data, key);
  if (value !== undefined) {
    return value;
  }
  return getPath(defaultData, key);
}
function deepExtend(target, source, overwrite) {
  for (var prop in source) {
    if (prop !== '__proto__' && prop !== 'constructor') {
      if (prop in target) {
        if (typeof target[prop] === 'string' || target[prop] instanceof String || typeof source[prop] === 'string' || source[prop] instanceof String) {
          if (overwrite) target[prop] = source[prop];
        } else {
          deepExtend(target[prop], source[prop], overwrite);
        }
      } else {
        target[prop] = source[prop];
      }
    }
  }
  return target;
}
function regexEscape(str) {
  return str.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, '\\$&');
}
var _entityMap = {
  '&': '&amp;',
  '<': '&lt;',
  '>': '&gt;',
  '"': '&quot;',
  "'": '&#39;',
  '/': '&#x2F;'
};
function i18next_escape(data) {
  if (typeof data === 'string') {
    return data.replace(/[&<>"'\/]/g, function (s) {
      return _entityMap[s];
    });
  }
  return data;
}
var isIE10 = typeof window !== 'undefined' && window.navigator && typeof window.navigator.userAgentData === 'undefined' && window.navigator.userAgent && window.navigator.userAgent.indexOf('MSIE') > -1;
var chars = [' ', ',', '?', '!', ';'];
function looksLikeObjectPath(key, nsSeparator, keySeparator) {
  nsSeparator = nsSeparator || '';
  keySeparator = keySeparator || '';
  var possibleChars = chars.filter(function (c) {
    return nsSeparator.indexOf(c) < 0 && keySeparator.indexOf(c) < 0;
  });
  if (possibleChars.length === 0) return true;
  var r = new RegExp("(".concat(possibleChars.map(function (c) {
    return c === '?' ? '\\?' : c;
  }).join('|'), ")"));
  var matched = !r.test(key);
  if (!matched) {
    var ki = key.indexOf(keySeparator);
    if (ki > 0 && !r.test(key.substring(0, ki))) {
      matched = true;
    }
  }
  return matched;
}

function ownKeys$5(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$5(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$5(Object(source), !0).forEach(function (key) { defineProperty_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$5(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper$3(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$3(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }
function _isNativeReflectConstruct$3() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
function deepFind(obj, path) {
  var keySeparator = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '.';
  if (!obj) return undefined;
  if (obj[path]) return obj[path];
  var paths = path.split(keySeparator);
  var current = obj;
  for (var i = 0; i < paths.length; ++i) {
    if (!current) return undefined;
    if (typeof current[paths[i]] === 'string' && i + 1 < paths.length) {
      return undefined;
    }
    if (current[paths[i]] === undefined) {
      var j = 2;
      var p = paths.slice(i, i + j).join(keySeparator);
      var mix = current[p];
      while (mix === undefined && paths.length > i + j) {
        j++;
        p = paths.slice(i, i + j).join(keySeparator);
        mix = current[p];
      }
      if (mix === undefined) return undefined;
      if (mix === null) return null;
      if (path.endsWith(p)) {
        if (typeof mix === 'string') return mix;
        if (p && typeof mix[p] === 'string') return mix[p];
      }
      var joinedPath = paths.slice(i + j).join(keySeparator);
      if (joinedPath) return deepFind(mix, joinedPath, keySeparator);
      return undefined;
    }
    current = current[paths[i]];
  }
  return current;
}
var ResourceStore = function (_EventEmitter) {
  _inherits(ResourceStore, _EventEmitter);
  var _super = _createSuper$3(ResourceStore);
  function ResourceStore(data) {
    var _this;
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
      ns: ['translation'],
      defaultNS: 'translation'
    };
    _classCallCheck(this, ResourceStore);
    _this = _super.call(this);
    if (isIE10) {
      EventEmitter.call(_assertThisInitialized(_this));
    }
    _this.data = data || {};
    _this.options = options;
    if (_this.options.keySeparator === undefined) {
      _this.options.keySeparator = '.';
    }
    if (_this.options.ignoreJSONStructure === undefined) {
      _this.options.ignoreJSONStructure = true;
    }
    return _this;
  }
  _createClass(ResourceStore, [{
    key: "addNamespaces",
    value: function addNamespaces(ns) {
      if (this.options.ns.indexOf(ns) < 0) {
        this.options.ns.push(ns);
      }
    }
  }, {
    key: "removeNamespaces",
    value: function removeNamespaces(ns) {
      var index = this.options.ns.indexOf(ns);
      if (index > -1) {
        this.options.ns.splice(index, 1);
      }
    }
  }, {
    key: "getResource",
    value: function getResource(lng, ns, key) {
      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
      var keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;
      var ignoreJSONStructure = options.ignoreJSONStructure !== undefined ? options.ignoreJSONStructure : this.options.ignoreJSONStructure;
      var path = [lng, ns];
      if (key && typeof key !== 'string') path = path.concat(key);
      if (key && typeof key === 'string') path = path.concat(keySeparator ? key.split(keySeparator) : key);
      if (lng.indexOf('.') > -1) {
        path = lng.split('.');
      }
      var result = getPath(this.data, path);
      if (result || !ignoreJSONStructure || typeof key !== 'string') return result;
      return deepFind(this.data && this.data[lng] && this.data[lng][ns], key, keySeparator);
    }
  }, {
    key: "addResource",
    value: function addResource(lng, ns, key, value) {
      var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {
        silent: false
      };
      var keySeparator = this.options.keySeparator;
      if (keySeparator === undefined) keySeparator = '.';
      var path = [lng, ns];
      if (key) path = path.concat(keySeparator ? key.split(keySeparator) : key);
      if (lng.indexOf('.') > -1) {
        path = lng.split('.');
        value = ns;
        ns = path[1];
      }
      this.addNamespaces(ns);
      setPath(this.data, path, value);
      if (!options.silent) this.emit('added', lng, ns, key, value);
    }
  }, {
    key: "addResources",
    value: function addResources(lng, ns, resources) {
      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {
        silent: false
      };
      for (var m in resources) {
        if (typeof resources[m] === 'string' || Object.prototype.toString.apply(resources[m]) === '[object Array]') this.addResource(lng, ns, m, resources[m], {
          silent: true
        });
      }
      if (!options.silent) this.emit('added', lng, ns, resources);
    }
  }, {
    key: "addResourceBundle",
    value: function addResourceBundle(lng, ns, resources, deep, overwrite) {
      var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {
        silent: false
      };
      var path = [lng, ns];
      if (lng.indexOf('.') > -1) {
        path = lng.split('.');
        deep = resources;
        resources = ns;
        ns = path[1];
      }
      this.addNamespaces(ns);
      var pack = getPath(this.data, path) || {};
      if (deep) {
        deepExtend(pack, resources, overwrite);
      } else {
        pack = _objectSpread$5(_objectSpread$5({}, pack), resources);
      }
      setPath(this.data, path, pack);
      if (!options.silent) this.emit('added', lng, ns, resources);
    }
  }, {
    key: "removeResourceBundle",
    value: function removeResourceBundle(lng, ns) {
      if (this.hasResourceBundle(lng, ns)) {
        delete this.data[lng][ns];
      }
      this.removeNamespaces(ns);
      this.emit('removed', lng, ns);
    }
  }, {
    key: "hasResourceBundle",
    value: function hasResourceBundle(lng, ns) {
      return this.getResource(lng, ns) !== undefined;
    }
  }, {
    key: "getResourceBundle",
    value: function getResourceBundle(lng, ns) {
      if (!ns) ns = this.options.defaultNS;
      if (this.options.compatibilityAPI === 'v1') return _objectSpread$5(_objectSpread$5({}, {}), this.getResource(lng, ns));
      return this.getResource(lng, ns);
    }
  }, {
    key: "getDataByLanguage",
    value: function getDataByLanguage(lng) {
      return this.data[lng];
    }
  }, {
    key: "hasLanguageSomeTranslations",
    value: function hasLanguageSomeTranslations(lng) {
      var data = this.getDataByLanguage(lng);
      var n = data && Object.keys(data) || [];
      return !!n.find(function (v) {
        return data[v] && Object.keys(data[v]).length > 0;
      });
    }
  }, {
    key: "toJSON",
    value: function toJSON() {
      return this.data;
    }
  }]);
  return ResourceStore;
}(EventEmitter);

var postProcessor = {
  processors: {},
  addPostProcessor: function addPostProcessor(module) {
    this.processors[module.name] = module;
  },
  handle: function handle(processors, value, key, options, translator) {
    var _this = this;
    processors.forEach(function (processor) {
      if (_this.processors[processor]) value = _this.processors[processor].process(value, key, options, translator);
    });
    return value;
  }
};

function ownKeys$4(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$4(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$4(Object(source), !0).forEach(function (key) { defineProperty_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$4(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper$2(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$2(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }
function _isNativeReflectConstruct$2() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var checkedLoadedFor = {};
var Translator = function (_EventEmitter) {
  _inherits(Translator, _EventEmitter);
  var _super = _createSuper$2(Translator);
  function Translator(services) {
    var _this;
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    _classCallCheck(this, Translator);
    _this = _super.call(this);
    if (isIE10) {
      EventEmitter.call(_assertThisInitialized(_this));
    }
    copy(['resourceStore', 'languageUtils', 'pluralResolver', 'interpolator', 'backendConnector', 'i18nFormat', 'utils'], services, _assertThisInitialized(_this));
    _this.options = options;
    if (_this.options.keySeparator === undefined) {
      _this.options.keySeparator = '.';
    }
    _this.logger = baseLogger.create('translator');
    return _this;
  }
  _createClass(Translator, [{
    key: "changeLanguage",
    value: function changeLanguage(lng) {
      if (lng) this.language = lng;
    }
  }, {
    key: "exists",
    value: function exists(key) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
        interpolation: {}
      };
      if (key === undefined || key === null) {
        return false;
      }
      var resolved = this.resolve(key, options);
      return resolved && resolved.res !== undefined;
    }
  }, {
    key: "extractFromKey",
    value: function extractFromKey(key, options) {
      var nsSeparator = options.nsSeparator !== undefined ? options.nsSeparator : this.options.nsSeparator;
      if (nsSeparator === undefined) nsSeparator = ':';
      var keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;
      var namespaces = options.ns || this.options.defaultNS || [];
      var wouldCheckForNsInKey = nsSeparator && key.indexOf(nsSeparator) > -1;
      var seemsNaturalLanguage = !this.options.userDefinedKeySeparator && !options.keySeparator && !this.options.userDefinedNsSeparator && !options.nsSeparator && !looksLikeObjectPath(key, nsSeparator, keySeparator);
      if (wouldCheckForNsInKey && !seemsNaturalLanguage) {
        var m = key.match(this.interpolator.nestingRegexp);
        if (m && m.length > 0) {
          return {
            key: key,
            namespaces: namespaces
          };
        }
        var parts = key.split(nsSeparator);
        if (nsSeparator !== keySeparator || nsSeparator === keySeparator && this.options.ns.indexOf(parts[0]) > -1) namespaces = parts.shift();
        key = parts.join(keySeparator);
      }
      if (typeof namespaces === 'string') namespaces = [namespaces];
      return {
        key: key,
        namespaces: namespaces
      };
    }
  }, {
    key: "translate",
    value: function translate(keys, options, lastKey) {
      var _this2 = this;
      if (typeof_typeof(options) !== 'object' && this.options.overloadTranslationOptionHandler) {
        options = this.options.overloadTranslationOptionHandler(arguments);
      }
      if (!options) options = {};
      if (keys === undefined || keys === null) return '';
      if (!Array.isArray(keys)) keys = [String(keys)];
      var returnDetails = options.returnDetails !== undefined ? options.returnDetails : this.options.returnDetails;
      var keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;
      var _this$extractFromKey = this.extractFromKey(keys[keys.length - 1], options),
        key = _this$extractFromKey.key,
        namespaces = _this$extractFromKey.namespaces;
      var namespace = namespaces[namespaces.length - 1];
      var lng = options.lng || this.language;
      var appendNamespaceToCIMode = options.appendNamespaceToCIMode || this.options.appendNamespaceToCIMode;
      if (lng && lng.toLowerCase() === 'cimode') {
        if (appendNamespaceToCIMode) {
          var nsSeparator = options.nsSeparator || this.options.nsSeparator;
          if (returnDetails) {
            resolved.res = "".concat(namespace).concat(nsSeparator).concat(key);
            return resolved;
          }
          return "".concat(namespace).concat(nsSeparator).concat(key);
        }
        if (returnDetails) {
          resolved.res = key;
          return resolved;
        }
        return key;
      }
      var resolved = this.resolve(keys, options);
      var res = resolved && resolved.res;
      var resUsedKey = resolved && resolved.usedKey || key;
      var resExactUsedKey = resolved && resolved.exactUsedKey || key;
      var resType = Object.prototype.toString.apply(res);
      var noObject = ['[object Number]', '[object Function]', '[object RegExp]'];
      var joinArrays = options.joinArrays !== undefined ? options.joinArrays : this.options.joinArrays;
      var handleAsObjectInI18nFormat = !this.i18nFormat || this.i18nFormat.handleAsObject;
      var handleAsObject = typeof res !== 'string' && typeof res !== 'boolean' && typeof res !== 'number';
      if (handleAsObjectInI18nFormat && res && handleAsObject && noObject.indexOf(resType) < 0 && !(typeof joinArrays === 'string' && resType === '[object Array]')) {
        if (!options.returnObjects && !this.options.returnObjects) {
          if (!this.options.returnedObjectHandler) {
            this.logger.warn('accessing an object - but returnObjects options is not enabled!');
          }
          var r = this.options.returnedObjectHandler ? this.options.returnedObjectHandler(resUsedKey, res, _objectSpread$4(_objectSpread$4({}, options), {}, {
            ns: namespaces
          })) : "key '".concat(key, " (").concat(this.language, ")' returned an object instead of string.");
          if (returnDetails) {
            resolved.res = r;
            return resolved;
          }
          return r;
        }
        if (keySeparator) {
          var resTypeIsArray = resType === '[object Array]';
          var copy = resTypeIsArray ? [] : {};
          var newKeyToUse = resTypeIsArray ? resExactUsedKey : resUsedKey;
          for (var m in res) {
            if (Object.prototype.hasOwnProperty.call(res, m)) {
              var deepKey = "".concat(newKeyToUse).concat(keySeparator).concat(m);
              copy[m] = this.translate(deepKey, _objectSpread$4(_objectSpread$4({}, options), {
                joinArrays: false,
                ns: namespaces
              }));
              if (copy[m] === deepKey) copy[m] = res[m];
            }
          }
          res = copy;
        }
      } else if (handleAsObjectInI18nFormat && typeof joinArrays === 'string' && resType === '[object Array]') {
        res = res.join(joinArrays);
        if (res) res = this.extendTranslation(res, keys, options, lastKey);
      } else {
        var usedDefault = false;
        var usedKey = false;
        var needsPluralHandling = options.count !== undefined && typeof options.count !== 'string';
        var hasDefaultValue = Translator.hasDefaultValue(options);
        var defaultValueSuffix = needsPluralHandling ? this.pluralResolver.getSuffix(lng, options.count, options) : '';
        var defaultValue = options["defaultValue".concat(defaultValueSuffix)] || options.defaultValue;
        if (!this.isValidLookup(res) && hasDefaultValue) {
          usedDefault = true;
          res = defaultValue;
        }
        if (!this.isValidLookup(res)) {
          usedKey = true;
          res = key;
        }
        var missingKeyNoValueFallbackToKey = options.missingKeyNoValueFallbackToKey || this.options.missingKeyNoValueFallbackToKey;
        var resForMissing = missingKeyNoValueFallbackToKey && usedKey ? undefined : res;
        var updateMissing = hasDefaultValue && defaultValue !== res && this.options.updateMissing;
        if (usedKey || usedDefault || updateMissing) {
          this.logger.log(updateMissing ? 'updateKey' : 'missingKey', lng, namespace, key, updateMissing ? defaultValue : res);
          if (keySeparator) {
            var fk = this.resolve(key, _objectSpread$4(_objectSpread$4({}, options), {}, {
              keySeparator: false
            }));
            if (fk && fk.res) this.logger.warn('Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.');
          }
          var lngs = [];
          var fallbackLngs = this.languageUtils.getFallbackCodes(this.options.fallbackLng, options.lng || this.language);
          if (this.options.saveMissingTo === 'fallback' && fallbackLngs && fallbackLngs[0]) {
            for (var i = 0; i < fallbackLngs.length; i++) {
              lngs.push(fallbackLngs[i]);
            }
          } else if (this.options.saveMissingTo === 'all') {
            lngs = this.languageUtils.toResolveHierarchy(options.lng || this.language);
          } else {
            lngs.push(options.lng || this.language);
          }
          var send = function send(l, k, specificDefaultValue) {
            var defaultForMissing = hasDefaultValue && specificDefaultValue !== res ? specificDefaultValue : resForMissing;
            if (_this2.options.missingKeyHandler) {
              _this2.options.missingKeyHandler(l, namespace, k, defaultForMissing, updateMissing, options);
            } else if (_this2.backendConnector && _this2.backendConnector.saveMissing) {
              _this2.backendConnector.saveMissing(l, namespace, k, defaultForMissing, updateMissing, options);
            }
            _this2.emit('missingKey', l, namespace, k, res);
          };
          if (this.options.saveMissing) {
            if (this.options.saveMissingPlurals && needsPluralHandling) {
              lngs.forEach(function (language) {
                _this2.pluralResolver.getSuffixes(language, options).forEach(function (suffix) {
                  send([language], key + suffix, options["defaultValue".concat(suffix)] || defaultValue);
                });
              });
            } else {
              send(lngs, key, defaultValue);
            }
          }
        }
        res = this.extendTranslation(res, keys, options, resolved, lastKey);
        if (usedKey && res === key && this.options.appendNamespaceToMissingKey) res = "".concat(namespace, ":").concat(key);
        if ((usedKey || usedDefault) && this.options.parseMissingKeyHandler) {
          if (this.options.compatibilityAPI !== 'v1') {
            res = this.options.parseMissingKeyHandler(this.options.appendNamespaceToMissingKey ? "".concat(namespace, ":").concat(key) : key, usedDefault ? res : undefined);
          } else {
            res = this.options.parseMissingKeyHandler(res);
          }
        }
      }
      if (returnDetails) {
        resolved.res = res;
        return resolved;
      }
      return res;
    }
  }, {
    key: "extendTranslation",
    value: function extendTranslation(res, key, options, resolved, lastKey) {
      var _this3 = this;
      if (this.i18nFormat && this.i18nFormat.parse) {
        res = this.i18nFormat.parse(res, _objectSpread$4(_objectSpread$4({}, this.options.interpolation.defaultVariables), options), resolved.usedLng, resolved.usedNS, resolved.usedKey, {
          resolved: resolved
        });
      } else if (!options.skipInterpolation) {
        if (options.interpolation) this.interpolator.init(_objectSpread$4(_objectSpread$4({}, options), {
          interpolation: _objectSpread$4(_objectSpread$4({}, this.options.interpolation), options.interpolation)
        }));
        var skipOnVariables = typeof res === 'string' && (options && options.interpolation && options.interpolation.skipOnVariables !== undefined ? options.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables);
        var nestBef;
        if (skipOnVariables) {
          var nb = res.match(this.interpolator.nestingRegexp);
          nestBef = nb && nb.length;
        }
        var data = options.replace && typeof options.replace !== 'string' ? options.replace : options;
        if (this.options.interpolation.defaultVariables) data = _objectSpread$4(_objectSpread$4({}, this.options.interpolation.defaultVariables), data);
        res = this.interpolator.interpolate(res, data, options.lng || this.language, options);
        if (skipOnVariables) {
          var na = res.match(this.interpolator.nestingRegexp);
          var nestAft = na && na.length;
          if (nestBef < nestAft) options.nest = false;
        }
        if (options.nest !== false) res = this.interpolator.nest(res, function () {
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          if (lastKey && lastKey[0] === args[0] && !options.context) {
            _this3.logger.warn("It seems you are nesting recursively key: ".concat(args[0], " in key: ").concat(key[0]));
            return null;
          }
          return _this3.translate.apply(_this3, args.concat([key]));
        }, options);
        if (options.interpolation) this.interpolator.reset();
      }
      var postProcess = options.postProcess || this.options.postProcess;
      var postProcessorNames = typeof postProcess === 'string' ? [postProcess] : postProcess;
      if (res !== undefined && res !== null && postProcessorNames && postProcessorNames.length && options.applyPostProcessor !== false) {
        res = postProcessor.handle(postProcessorNames, res, key, this.options && this.options.postProcessPassResolved ? _objectSpread$4({
          i18nResolved: resolved
        }, options) : options, this);
      }
      return res;
    }
  }, {
    key: "resolve",
    value: function resolve(keys) {
      var _this4 = this;
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var found;
      var usedKey;
      var exactUsedKey;
      var usedLng;
      var usedNS;
      if (typeof keys === 'string') keys = [keys];
      keys.forEach(function (k) {
        if (_this4.isValidLookup(found)) return;
        var extracted = _this4.extractFromKey(k, options);
        var key = extracted.key;
        usedKey = key;
        var namespaces = extracted.namespaces;
        if (_this4.options.fallbackNS) namespaces = namespaces.concat(_this4.options.fallbackNS);
        var needsPluralHandling = options.count !== undefined && typeof options.count !== 'string';
        var needsZeroSuffixLookup = needsPluralHandling && !options.ordinal && options.count === 0 && _this4.pluralResolver.shouldUseIntlApi();
        var needsContextHandling = options.context !== undefined && (typeof options.context === 'string' || typeof options.context === 'number') && options.context !== '';
        var codes = options.lngs ? options.lngs : _this4.languageUtils.toResolveHierarchy(options.lng || _this4.language, options.fallbackLng);
        namespaces.forEach(function (ns) {
          if (_this4.isValidLookup(found)) return;
          usedNS = ns;
          if (!checkedLoadedFor["".concat(codes[0], "-").concat(ns)] && _this4.utils && _this4.utils.hasLoadedNamespace && !_this4.utils.hasLoadedNamespace(usedNS)) {
            checkedLoadedFor["".concat(codes[0], "-").concat(ns)] = true;
            _this4.logger.warn("key \"".concat(usedKey, "\" for languages \"").concat(codes.join(', '), "\" won't get resolved as namespace \"").concat(usedNS, "\" was not yet loaded"), 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');
          }
          codes.forEach(function (code) {
            if (_this4.isValidLookup(found)) return;
            usedLng = code;
            var finalKeys = [key];
            if (_this4.i18nFormat && _this4.i18nFormat.addLookupKeys) {
              _this4.i18nFormat.addLookupKeys(finalKeys, key, code, ns, options);
            } else {
              var pluralSuffix;
              if (needsPluralHandling) pluralSuffix = _this4.pluralResolver.getSuffix(code, options.count, options);
              var zeroSuffix = "".concat(_this4.options.pluralSeparator, "zero");
              if (needsPluralHandling) {
                finalKeys.push(key + pluralSuffix);
                if (needsZeroSuffixLookup) {
                  finalKeys.push(key + zeroSuffix);
                }
              }
              if (needsContextHandling) {
                var contextKey = "".concat(key).concat(_this4.options.contextSeparator).concat(options.context);
                finalKeys.push(contextKey);
                if (needsPluralHandling) {
                  finalKeys.push(contextKey + pluralSuffix);
                  if (needsZeroSuffixLookup) {
                    finalKeys.push(contextKey + zeroSuffix);
                  }
                }
              }
            }
            var possibleKey;
            while (possibleKey = finalKeys.pop()) {
              if (!_this4.isValidLookup(found)) {
                exactUsedKey = possibleKey;
                found = _this4.getResource(code, ns, possibleKey, options);
              }
            }
          });
        });
      });
      return {
        res: found,
        usedKey: usedKey,
        exactUsedKey: exactUsedKey,
        usedLng: usedLng,
        usedNS: usedNS
      };
    }
  }, {
    key: "isValidLookup",
    value: function isValidLookup(res) {
      return res !== undefined && !(!this.options.returnNull && res === null) && !(!this.options.returnEmptyString && res === '');
    }
  }, {
    key: "getResource",
    value: function getResource(code, ns, key) {
      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
      if (this.i18nFormat && this.i18nFormat.getResource) return this.i18nFormat.getResource(code, ns, key, options);
      return this.resourceStore.getResource(code, ns, key, options);
    }
  }], [{
    key: "hasDefaultValue",
    value: function hasDefaultValue(options) {
      var prefix = 'defaultValue';
      for (var option in options) {
        if (Object.prototype.hasOwnProperty.call(options, option) && prefix === option.substring(0, prefix.length) && undefined !== options[option]) {
          return true;
        }
      }
      return false;
    }
  }]);
  return Translator;
}(EventEmitter);

function i18next_capitalize(string) {
  return string.charAt(0).toUpperCase() + string.slice(1);
}
var LanguageUtil = function () {
  function LanguageUtil(options) {
    _classCallCheck(this, LanguageUtil);
    this.options = options;
    this.supportedLngs = this.options.supportedLngs || false;
    this.logger = baseLogger.create('languageUtils');
  }
  _createClass(LanguageUtil, [{
    key: "getScriptPartFromCode",
    value: function getScriptPartFromCode(code) {
      if (!code || code.indexOf('-') < 0) return null;
      var p = code.split('-');
      if (p.length === 2) return null;
      p.pop();
      if (p[p.length - 1].toLowerCase() === 'x') return null;
      return this.formatLanguageCode(p.join('-'));
    }
  }, {
    key: "getLanguagePartFromCode",
    value: function getLanguagePartFromCode(code) {
      if (!code || code.indexOf('-') < 0) return code;
      var p = code.split('-');
      return this.formatLanguageCode(p[0]);
    }
  }, {
    key: "formatLanguageCode",
    value: function formatLanguageCode(code) {
      if (typeof code === 'string' && code.indexOf('-') > -1) {
        var specialCases = ['hans', 'hant', 'latn', 'cyrl', 'cans', 'mong', 'arab'];
        var p = code.split('-');
        if (this.options.lowerCaseLng) {
          p = p.map(function (part) {
            return part.toLowerCase();
          });
        } else if (p.length === 2) {
          p[0] = p[0].toLowerCase();
          p[1] = p[1].toUpperCase();
          if (specialCases.indexOf(p[1].toLowerCase()) > -1) p[1] = i18next_capitalize(p[1].toLowerCase());
        } else if (p.length === 3) {
          p[0] = p[0].toLowerCase();
          if (p[1].length === 2) p[1] = p[1].toUpperCase();
          if (p[0] !== 'sgn' && p[2].length === 2) p[2] = p[2].toUpperCase();
          if (specialCases.indexOf(p[1].toLowerCase()) > -1) p[1] = i18next_capitalize(p[1].toLowerCase());
          if (specialCases.indexOf(p[2].toLowerCase()) > -1) p[2] = i18next_capitalize(p[2].toLowerCase());
        }
        return p.join('-');
      }
      return this.options.cleanCode || this.options.lowerCaseLng ? code.toLowerCase() : code;
    }
  }, {
    key: "isSupportedCode",
    value: function isSupportedCode(code) {
      if (this.options.load === 'languageOnly' || this.options.nonExplicitSupportedLngs) {
        code = this.getLanguagePartFromCode(code);
      }
      return !this.supportedLngs || !this.supportedLngs.length || this.supportedLngs.indexOf(code) > -1;
    }
  }, {
    key: "getBestMatchFromCodes",
    value: function getBestMatchFromCodes(codes) {
      var _this = this;
      if (!codes) return null;
      var found;
      codes.forEach(function (code) {
        if (found) return;
        var cleanedLng = _this.formatLanguageCode(code);
        if (!_this.options.supportedLngs || _this.isSupportedCode(cleanedLng)) found = cleanedLng;
      });
      if (!found && this.options.supportedLngs) {
        codes.forEach(function (code) {
          if (found) return;
          var lngOnly = _this.getLanguagePartFromCode(code);
          if (_this.isSupportedCode(lngOnly)) return found = lngOnly;
          found = _this.options.supportedLngs.find(function (supportedLng) {
            if (supportedLng.indexOf(lngOnly) === 0) return supportedLng;
          });
        });
      }
      if (!found) found = this.getFallbackCodes(this.options.fallbackLng)[0];
      return found;
    }
  }, {
    key: "getFallbackCodes",
    value: function getFallbackCodes(fallbacks, code) {
      if (!fallbacks) return [];
      if (typeof fallbacks === 'function') fallbacks = fallbacks(code);
      if (typeof fallbacks === 'string') fallbacks = [fallbacks];
      if (Object.prototype.toString.apply(fallbacks) === '[object Array]') return fallbacks;
      if (!code) return fallbacks["default"] || [];
      var found = fallbacks[code];
      if (!found) found = fallbacks[this.getScriptPartFromCode(code)];
      if (!found) found = fallbacks[this.formatLanguageCode(code)];
      if (!found) found = fallbacks[this.getLanguagePartFromCode(code)];
      if (!found) found = fallbacks["default"];
      return found || [];
    }
  }, {
    key: "toResolveHierarchy",
    value: function toResolveHierarchy(code, fallbackCode) {
      var _this2 = this;
      var fallbackCodes = this.getFallbackCodes(fallbackCode || this.options.fallbackLng || [], code);
      var codes = [];
      var addCode = function addCode(c) {
        if (!c) return;
        if (_this2.isSupportedCode(c)) {
          codes.push(c);
        } else {
          _this2.logger.warn("rejecting language code not found in supportedLngs: ".concat(c));
        }
      };
      if (typeof code === 'string' && code.indexOf('-') > -1) {
        if (this.options.load !== 'languageOnly') addCode(this.formatLanguageCode(code));
        if (this.options.load !== 'languageOnly' && this.options.load !== 'currentOnly') addCode(this.getScriptPartFromCode(code));
        if (this.options.load !== 'currentOnly') addCode(this.getLanguagePartFromCode(code));
      } else if (typeof code === 'string') {
        addCode(this.formatLanguageCode(code));
      }
      fallbackCodes.forEach(function (fc) {
        if (codes.indexOf(fc) < 0) addCode(_this2.formatLanguageCode(fc));
      });
      return codes;
    }
  }]);
  return LanguageUtil;
}();

var sets = [{
  lngs: ['ach', 'ak', 'am', 'arn', 'br', 'fil', 'gun', 'ln', 'mfe', 'mg', 'mi', 'oc', 'pt', 'pt-BR', 'tg', 'tl', 'ti', 'tr', 'uz', 'wa'],
  nr: [1, 2],
  fc: 1
}, {
  lngs: ['af', 'an', 'ast', 'az', 'bg', 'bn', 'ca', 'da', 'de', 'dev', 'el', 'en', 'eo', 'es', 'et', 'eu', 'fi', 'fo', 'fur', 'fy', 'gl', 'gu', 'ha', 'hi', 'hu', 'hy', 'ia', 'it', 'kk', 'kn', 'ku', 'lb', 'mai', 'ml', 'mn', 'mr', 'nah', 'nap', 'nb', 'ne', 'nl', 'nn', 'no', 'nso', 'pa', 'pap', 'pms', 'ps', 'pt-PT', 'rm', 'sco', 'se', 'si', 'so', 'son', 'sq', 'sv', 'sw', 'ta', 'te', 'tk', 'ur', 'yo'],
  nr: [1, 2],
  fc: 2
}, {
  lngs: ['ay', 'bo', 'cgg', 'fa', 'ht', 'id', 'ja', 'jbo', 'ka', 'km', 'ko', 'ky', 'lo', 'ms', 'sah', 'su', 'th', 'tt', 'ug', 'vi', 'wo', 'zh'],
  nr: [1],
  fc: 3
}, {
  lngs: ['be', 'bs', 'cnr', 'dz', 'hr', 'ru', 'sr', 'uk'],
  nr: [1, 2, 5],
  fc: 4
}, {
  lngs: ['ar'],
  nr: [0, 1, 2, 3, 11, 100],
  fc: 5
}, {
  lngs: ['cs', 'sk'],
  nr: [1, 2, 5],
  fc: 6
}, {
  lngs: ['csb', 'pl'],
  nr: [1, 2, 5],
  fc: 7
}, {
  lngs: ['cy'],
  nr: [1, 2, 3, 8],
  fc: 8
}, {
  lngs: ['fr'],
  nr: [1, 2],
  fc: 9
}, {
  lngs: ['ga'],
  nr: [1, 2, 3, 7, 11],
  fc: 10
}, {
  lngs: ['gd'],
  nr: [1, 2, 3, 20],
  fc: 11
}, {
  lngs: ['is'],
  nr: [1, 2],
  fc: 12
}, {
  lngs: ['jv'],
  nr: [0, 1],
  fc: 13
}, {
  lngs: ['kw'],
  nr: [1, 2, 3, 4],
  fc: 14
}, {
  lngs: ['lt'],
  nr: [1, 2, 10],
  fc: 15
}, {
  lngs: ['lv'],
  nr: [1, 2, 0],
  fc: 16
}, {
  lngs: ['mk'],
  nr: [1, 2],
  fc: 17
}, {
  lngs: ['mnk'],
  nr: [0, 1, 2],
  fc: 18
}, {
  lngs: ['mt'],
  nr: [1, 2, 11, 20],
  fc: 19
}, {
  lngs: ['or'],
  nr: [2, 1],
  fc: 2
}, {
  lngs: ['ro'],
  nr: [1, 2, 20],
  fc: 20
}, {
  lngs: ['sl'],
  nr: [5, 1, 2, 3],
  fc: 21
}, {
  lngs: ['he', 'iw'],
  nr: [1, 2, 20, 21],
  fc: 22
}];
var _rulesPluralsTypes = {
  1: function _(n) {
    return Number(n > 1);
  },
  2: function _(n) {
    return Number(n != 1);
  },
  3: function _(n) {
    return 0;
  },
  4: function _(n) {
    return Number(n % 10 == 1 && n % 100 != 11 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);
  },
  5: function _(n) {
    return Number(n == 0 ? 0 : n == 1 ? 1 : n == 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5);
  },
  6: function _(n) {
    return Number(n == 1 ? 0 : n >= 2 && n <= 4 ? 1 : 2);
  },
  7: function _(n) {
    return Number(n == 1 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);
  },
  8: function _(n) {
    return Number(n == 1 ? 0 : n == 2 ? 1 : n != 8 && n != 11 ? 2 : 3);
  },
  9: function _(n) {
    return Number(n >= 2);
  },
  10: function _(n) {
    return Number(n == 1 ? 0 : n == 2 ? 1 : n < 7 ? 2 : n < 11 ? 3 : 4);
  },
  11: function _(n) {
    return Number(n == 1 || n == 11 ? 0 : n == 2 || n == 12 ? 1 : n > 2 && n < 20 ? 2 : 3);
  },
  12: function _(n) {
    return Number(n % 10 != 1 || n % 100 == 11);
  },
  13: function _(n) {
    return Number(n !== 0);
  },
  14: function _(n) {
    return Number(n == 1 ? 0 : n == 2 ? 1 : n == 3 ? 2 : 3);
  },
  15: function _(n) {
    return Number(n % 10 == 1 && n % 100 != 11 ? 0 : n % 10 >= 2 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);
  },
  16: function _(n) {
    return Number(n % 10 == 1 && n % 100 != 11 ? 0 : n !== 0 ? 1 : 2);
  },
  17: function _(n) {
    return Number(n == 1 || n % 10 == 1 && n % 100 != 11 ? 0 : 1);
  },
  18: function _(n) {
    return Number(n == 0 ? 0 : n == 1 ? 1 : 2);
  },
  19: function _(n) {
    return Number(n == 1 ? 0 : n == 0 || n % 100 > 1 && n % 100 < 11 ? 1 : n % 100 > 10 && n % 100 < 20 ? 2 : 3);
  },
  20: function _(n) {
    return Number(n == 1 ? 0 : n == 0 || n % 100 > 0 && n % 100 < 20 ? 1 : 2);
  },
  21: function _(n) {
    return Number(n % 100 == 1 ? 1 : n % 100 == 2 ? 2 : n % 100 == 3 || n % 100 == 4 ? 3 : 0);
  },
  22: function _(n) {
    return Number(n == 1 ? 0 : n == 2 ? 1 : (n < 0 || n > 10) && n % 10 == 0 ? 2 : 3);
  }
};
var deprecatedJsonVersions = ['v1', 'v2', 'v3'];
var suffixesOrder = {
  zero: 0,
  one: 1,
  two: 2,
  few: 3,
  many: 4,
  other: 5
};
function createRules() {
  var rules = {};
  sets.forEach(function (set) {
    set.lngs.forEach(function (l) {
      rules[l] = {
        numbers: set.nr,
        plurals: _rulesPluralsTypes[set.fc]
      };
    });
  });
  return rules;
}
var PluralResolver = function () {
  function PluralResolver(languageUtils) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    _classCallCheck(this, PluralResolver);
    this.languageUtils = languageUtils;
    this.options = options;
    this.logger = baseLogger.create('pluralResolver');
    if ((!this.options.compatibilityJSON || this.options.compatibilityJSON === 'v4') && (typeof Intl === 'undefined' || !Intl.PluralRules)) {
      this.options.compatibilityJSON = 'v3';
      this.logger.error('Your environment seems not to be Intl API compatible, use an Intl.PluralRules polyfill. Will fallback to the compatibilityJSON v3 format handling.');
    }
    this.rules = createRules();
  }
  _createClass(PluralResolver, [{
    key: "addRule",
    value: function addRule(lng, obj) {
      this.rules[lng] = obj;
    }
  }, {
    key: "getRule",
    value: function getRule(code) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      if (this.shouldUseIntlApi()) {
        try {
          return new Intl.PluralRules(code, {
            type: options.ordinal ? 'ordinal' : 'cardinal'
          });
        } catch (_unused) {
          return;
        }
      }
      return this.rules[code] || this.rules[this.languageUtils.getLanguagePartFromCode(code)];
    }
  }, {
    key: "needsPlural",
    value: function needsPlural(code) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var rule = this.getRule(code, options);
      if (this.shouldUseIntlApi()) {
        return rule && rule.resolvedOptions().pluralCategories.length > 1;
      }
      return rule && rule.numbers.length > 1;
    }
  }, {
    key: "getPluralFormsOfKey",
    value: function getPluralFormsOfKey(code, key) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      return this.getSuffixes(code, options).map(function (suffix) {
        return "".concat(key).concat(suffix);
      });
    }
  }, {
    key: "getSuffixes",
    value: function getSuffixes(code) {
      var _this = this;
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var rule = this.getRule(code, options);
      if (!rule) {
        return [];
      }
      if (this.shouldUseIntlApi()) {
        return rule.resolvedOptions().pluralCategories.sort(function (pluralCategory1, pluralCategory2) {
          return suffixesOrder[pluralCategory1] - suffixesOrder[pluralCategory2];
        }).map(function (pluralCategory) {
          return "".concat(_this.options.prepend).concat(pluralCategory);
        });
      }
      return rule.numbers.map(function (number) {
        return _this.getSuffix(code, number, options);
      });
    }
  }, {
    key: "getSuffix",
    value: function getSuffix(code, count) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      var rule = this.getRule(code, options);
      if (rule) {
        if (this.shouldUseIntlApi()) {
          return "".concat(this.options.prepend).concat(rule.select(count));
        }
        return this.getSuffixRetroCompatible(rule, count);
      }
      this.logger.warn("no plural rule found for: ".concat(code));
      return '';
    }
  }, {
    key: "getSuffixRetroCompatible",
    value: function getSuffixRetroCompatible(rule, count) {
      var _this2 = this;
      var idx = rule.noAbs ? rule.plurals(count) : rule.plurals(Math.abs(count));
      var suffix = rule.numbers[idx];
      if (this.options.simplifyPluralSuffix && rule.numbers.length === 2 && rule.numbers[0] === 1) {
        if (suffix === 2) {
          suffix = 'plural';
        } else if (suffix === 1) {
          suffix = '';
        }
      }
      var returnSuffix = function returnSuffix() {
        return _this2.options.prepend && suffix.toString() ? _this2.options.prepend + suffix.toString() : suffix.toString();
      };
      if (this.options.compatibilityJSON === 'v1') {
        if (suffix === 1) return '';
        if (typeof suffix === 'number') return "_plural_".concat(suffix.toString());
        return returnSuffix();
      } else if (this.options.compatibilityJSON === 'v2') {
        return returnSuffix();
      } else if (this.options.simplifyPluralSuffix && rule.numbers.length === 2 && rule.numbers[0] === 1) {
        return returnSuffix();
      }
      return this.options.prepend && idx.toString() ? this.options.prepend + idx.toString() : idx.toString();
    }
  }, {
    key: "shouldUseIntlApi",
    value: function shouldUseIntlApi() {
      return !deprecatedJsonVersions.includes(this.options.compatibilityJSON);
    }
  }]);
  return PluralResolver;
}();

function ownKeys$3(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$3(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$3(Object(source), !0).forEach(function (key) { defineProperty_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$3(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var Interpolator = function () {
  function Interpolator() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    _classCallCheck(this, Interpolator);
    this.logger = baseLogger.create('interpolator');
    this.options = options;
    this.format = options.interpolation && options.interpolation.format || function (value) {
      return value;
    };
    this.init(options);
  }
  _createClass(Interpolator, [{
    key: "init",
    value: function init() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      if (!options.interpolation) options.interpolation = {
        escapeValue: true
      };
      var iOpts = options.interpolation;
      this.escape = iOpts.escape !== undefined ? iOpts.escape : i18next_escape;
      this.escapeValue = iOpts.escapeValue !== undefined ? iOpts.escapeValue : true;
      this.useRawValueToEscape = iOpts.useRawValueToEscape !== undefined ? iOpts.useRawValueToEscape : false;
      this.prefix = iOpts.prefix ? regexEscape(iOpts.prefix) : iOpts.prefixEscaped || '{{';
      this.suffix = iOpts.suffix ? regexEscape(iOpts.suffix) : iOpts.suffixEscaped || '}}';
      this.formatSeparator = iOpts.formatSeparator ? iOpts.formatSeparator : iOpts.formatSeparator || ',';
      this.unescapePrefix = iOpts.unescapeSuffix ? '' : iOpts.unescapePrefix || '-';
      this.unescapeSuffix = this.unescapePrefix ? '' : iOpts.unescapeSuffix || '';
      this.nestingPrefix = iOpts.nestingPrefix ? regexEscape(iOpts.nestingPrefix) : iOpts.nestingPrefixEscaped || regexEscape('$t(');
      this.nestingSuffix = iOpts.nestingSuffix ? regexEscape(iOpts.nestingSuffix) : iOpts.nestingSuffixEscaped || regexEscape(')');
      this.nestingOptionsSeparator = iOpts.nestingOptionsSeparator ? iOpts.nestingOptionsSeparator : iOpts.nestingOptionsSeparator || ',';
      this.maxReplaces = iOpts.maxReplaces ? iOpts.maxReplaces : 1000;
      this.alwaysFormat = iOpts.alwaysFormat !== undefined ? iOpts.alwaysFormat : false;
      this.resetRegExp();
    }
  }, {
    key: "reset",
    value: function reset() {
      if (this.options) this.init(this.options);
    }
  }, {
    key: "resetRegExp",
    value: function resetRegExp() {
      var regexpStr = "".concat(this.prefix, "(.+?)").concat(this.suffix);
      this.regexp = new RegExp(regexpStr, 'g');
      var regexpUnescapeStr = "".concat(this.prefix).concat(this.unescapePrefix, "(.+?)").concat(this.unescapeSuffix).concat(this.suffix);
      this.regexpUnescape = new RegExp(regexpUnescapeStr, 'g');
      var nestingRegexpStr = "".concat(this.nestingPrefix, "(.+?)").concat(this.nestingSuffix);
      this.nestingRegexp = new RegExp(nestingRegexpStr, 'g');
    }
  }, {
    key: "interpolate",
    value: function interpolate(str, data, lng, options) {
      var _this = this;
      var match;
      var value;
      var replaces;
      var defaultData = this.options && this.options.interpolation && this.options.interpolation.defaultVariables || {};
      function regexSafe(val) {
        return val.replace(/\$/g, '$$$$');
      }
      var handleFormat = function handleFormat(key) {
        if (key.indexOf(_this.formatSeparator) < 0) {
          var path = getPathWithDefaults(data, defaultData, key);
          return _this.alwaysFormat ? _this.format(path, undefined, lng, _objectSpread$3(_objectSpread$3(_objectSpread$3({}, options), data), {}, {
            interpolationkey: key
          })) : path;
        }
        var p = key.split(_this.formatSeparator);
        var k = p.shift().trim();
        var f = p.join(_this.formatSeparator).trim();
        return _this.format(getPathWithDefaults(data, defaultData, k), f, lng, _objectSpread$3(_objectSpread$3(_objectSpread$3({}, options), data), {}, {
          interpolationkey: k
        }));
      };
      this.resetRegExp();
      var missingInterpolationHandler = options && options.missingInterpolationHandler || this.options.missingInterpolationHandler;
      var skipOnVariables = options && options.interpolation && options.interpolation.skipOnVariables !== undefined ? options.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables;
      var todos = [{
        regex: this.regexpUnescape,
        safeValue: function safeValue(val) {
          return regexSafe(val);
        }
      }, {
        regex: this.regexp,
        safeValue: function safeValue(val) {
          return _this.escapeValue ? regexSafe(_this.escape(val)) : regexSafe(val);
        }
      }];
      todos.forEach(function (todo) {
        replaces = 0;
        while (match = todo.regex.exec(str)) {
          var matchedVar = match[1].trim();
          value = handleFormat(matchedVar);
          if (value === undefined) {
            if (typeof missingInterpolationHandler === 'function') {
              var temp = missingInterpolationHandler(str, match, options);
              value = typeof temp === 'string' ? temp : '';
            } else if (options && options.hasOwnProperty(matchedVar)) {
              value = '';
            } else if (skipOnVariables) {
              value = match[0];
              continue;
            } else {
              _this.logger.warn("missed to pass in variable ".concat(matchedVar, " for interpolating ").concat(str));
              value = '';
            }
          } else if (typeof value !== 'string' && !_this.useRawValueToEscape) {
            value = makeString(value);
          }
          var safeValue = todo.safeValue(value);
          str = str.replace(match[0], safeValue);
          if (skipOnVariables) {
            todo.regex.lastIndex += value.length;
            todo.regex.lastIndex -= match[0].length;
          } else {
            todo.regex.lastIndex = 0;
          }
          replaces++;
          if (replaces >= _this.maxReplaces) {
            break;
          }
        }
      });
      return str;
    }
  }, {
    key: "nest",
    value: function nest(str, fc) {
      var _this2 = this;
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      var match;
      var value;
      var clonedOptions;
      function handleHasOptions(key, inheritedOptions) {
        var sep = this.nestingOptionsSeparator;
        if (key.indexOf(sep) < 0) return key;
        var c = key.split(new RegExp("".concat(sep, "[ ]*{")));
        var optionsString = "{".concat(c[1]);
        key = c[0];
        optionsString = this.interpolate(optionsString, clonedOptions);
        var matchedSingleQuotes = optionsString.match(/'/g);
        var matchedDoubleQuotes = optionsString.match(/"/g);
        if (matchedSingleQuotes && matchedSingleQuotes.length % 2 === 0 && !matchedDoubleQuotes || matchedDoubleQuotes.length % 2 !== 0) {
          optionsString = optionsString.replace(/'/g, '"');
        }
        try {
          clonedOptions = JSON.parse(optionsString);
          if (inheritedOptions) clonedOptions = _objectSpread$3(_objectSpread$3({}, inheritedOptions), clonedOptions);
        } catch (e) {
          this.logger.warn("failed parsing options string in nesting for key ".concat(key), e);
          return "".concat(key).concat(sep).concat(optionsString);
        }
        delete clonedOptions.defaultValue;
        return key;
      }
      while (match = this.nestingRegexp.exec(str)) {
        var formatters = [];
        clonedOptions = _objectSpread$3({}, options);
        clonedOptions = clonedOptions.replace && typeof clonedOptions.replace !== 'string' ? clonedOptions.replace : clonedOptions;
        clonedOptions.applyPostProcessor = false;
        delete clonedOptions.defaultValue;
        var doReduce = false;
        if (match[0].indexOf(this.formatSeparator) !== -1 && !/{.*}/.test(match[1])) {
          var r = match[1].split(this.formatSeparator).map(function (elem) {
            return elem.trim();
          });
          match[1] = r.shift();
          formatters = r;
          doReduce = true;
        }
        value = fc(handleHasOptions.call(this, match[1].trim(), clonedOptions), clonedOptions);
        if (value && match[0] === str && typeof value !== 'string') return value;
        if (typeof value !== 'string') value = makeString(value);
        if (!value) {
          this.logger.warn("missed to resolve ".concat(match[1], " for nesting ").concat(str));
          value = '';
        }
        if (doReduce) {
          value = formatters.reduce(function (v, f) {
            return _this2.format(v, f, options.lng, _objectSpread$3(_objectSpread$3({}, options), {}, {
              interpolationkey: match[1].trim()
            }));
          }, value.trim());
        }
        str = str.replace(match[0], value);
        this.regexp.lastIndex = 0;
      }
      return str;
    }
  }]);
  return Interpolator;
}();

function ownKeys$2(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$2(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$2(Object(source), !0).forEach(function (key) { defineProperty_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$2(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function parseFormatStr(formatStr) {
  var formatName = formatStr.toLowerCase().trim();
  var formatOptions = {};
  if (formatStr.indexOf('(') > -1) {
    var p = formatStr.split('(');
    formatName = p[0].toLowerCase().trim();
    var optStr = p[1].substring(0, p[1].length - 1);
    if (formatName === 'currency' && optStr.indexOf(':') < 0) {
      if (!formatOptions.currency) formatOptions.currency = optStr.trim();
    } else if (formatName === 'relativetime' && optStr.indexOf(':') < 0) {
      if (!formatOptions.range) formatOptions.range = optStr.trim();
    } else {
      var opts = optStr.split(';');
      opts.forEach(function (opt) {
        if (!opt) return;
        var _opt$split = opt.split(':'),
          _opt$split2 = _toArray(_opt$split),
          key = _opt$split2[0],
          rest = _opt$split2.slice(1);
        var val = rest.join(':').trim().replace(/^'+|'+$/g, '');
        if (!formatOptions[key.trim()]) formatOptions[key.trim()] = val;
        if (val === 'false') formatOptions[key.trim()] = false;
        if (val === 'true') formatOptions[key.trim()] = true;
        if (!isNaN(val)) formatOptions[key.trim()] = parseInt(val, 10);
      });
    }
  }
  return {
    formatName: formatName,
    formatOptions: formatOptions
  };
}
function createCachedFormatter(fn) {
  var cache = {};
  return function invokeFormatter(val, lng, options) {
    var key = lng + JSON.stringify(options);
    var formatter = cache[key];
    if (!formatter) {
      formatter = fn(lng, options);
      cache[key] = formatter;
    }
    return formatter(val);
  };
}
var Formatter = function () {
  function Formatter() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    _classCallCheck(this, Formatter);
    this.logger = baseLogger.create('formatter');
    this.options = options;
    this.formats = {
      number: createCachedFormatter(function (lng, options) {
        var formatter = new Intl.NumberFormat(lng, options);
        return function (val) {
          return formatter.format(val);
        };
      }),
      currency: createCachedFormatter(function (lng, options) {
        var formatter = new Intl.NumberFormat(lng, _objectSpread$2(_objectSpread$2({}, options), {}, {
          style: 'currency'
        }));
        return function (val) {
          return formatter.format(val);
        };
      }),
      datetime: createCachedFormatter(function (lng, options) {
        var formatter = new Intl.DateTimeFormat(lng, _objectSpread$2({}, options));
        return function (val) {
          return formatter.format(val);
        };
      }),
      relativetime: createCachedFormatter(function (lng, options) {
        var formatter = new Intl.RelativeTimeFormat(lng, _objectSpread$2({}, options));
        return function (val) {
          return formatter.format(val, options.range || 'day');
        };
      }),
      list: createCachedFormatter(function (lng, options) {
        var formatter = new Intl.ListFormat(lng, _objectSpread$2({}, options));
        return function (val) {
          return formatter.format(val);
        };
      })
    };
    this.init(options);
  }
  _createClass(Formatter, [{
    key: "init",
    value: function init(services) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
        interpolation: {}
      };
      var iOpts = options.interpolation;
      this.formatSeparator = iOpts.formatSeparator ? iOpts.formatSeparator : iOpts.formatSeparator || ',';
    }
  }, {
    key: "add",
    value: function add(name, fc) {
      this.formats[name.toLowerCase().trim()] = fc;
    }
  }, {
    key: "addCached",
    value: function addCached(name, fc) {
      this.formats[name.toLowerCase().trim()] = createCachedFormatter(fc);
    }
  }, {
    key: "format",
    value: function format(value, _format, lng, options) {
      var _this = this;
      var formats = _format.split(this.formatSeparator);
      var result = formats.reduce(function (mem, f) {
        var _parseFormatStr = parseFormatStr(f),
          formatName = _parseFormatStr.formatName,
          formatOptions = _parseFormatStr.formatOptions;
        if (_this.formats[formatName]) {
          var formatted = mem;
          try {
            var valOptions = options && options.formatParams && options.formatParams[options.interpolationkey] || {};
            var l = valOptions.locale || valOptions.lng || options.locale || options.lng || lng;
            formatted = _this.formats[formatName](mem, l, _objectSpread$2(_objectSpread$2(_objectSpread$2({}, formatOptions), options), valOptions));
          } catch (error) {
            _this.logger.warn(error);
          }
          return formatted;
        } else {
          _this.logger.warn("there was no format function for ".concat(formatName));
        }
        return mem;
      }, value);
      return result;
    }
  }]);
  return Formatter;
}();

function ownKeys$1(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) { defineProperty_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper$1(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$1(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }
function _isNativeReflectConstruct$1() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
function removePending(q, name) {
  if (q.pending[name] !== undefined) {
    delete q.pending[name];
    q.pendingCount--;
  }
}
var Connector = function (_EventEmitter) {
  _inherits(Connector, _EventEmitter);
  var _super = _createSuper$1(Connector);
  function Connector(backend, store, services) {
    var _this;
    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
    _classCallCheck(this, Connector);
    _this = _super.call(this);
    if (isIE10) {
      EventEmitter.call(_assertThisInitialized(_this));
    }
    _this.backend = backend;
    _this.store = store;
    _this.services = services;
    _this.languageUtils = services.languageUtils;
    _this.options = options;
    _this.logger = baseLogger.create('backendConnector');
    _this.waitingReads = [];
    _this.maxParallelReads = options.maxParallelReads || 10;
    _this.readingCalls = 0;
    _this.maxRetries = options.maxRetries >= 0 ? options.maxRetries : 5;
    _this.retryTimeout = options.retryTimeout >= 1 ? options.retryTimeout : 350;
    _this.state = {};
    _this.queue = [];
    if (_this.backend && _this.backend.init) {
      _this.backend.init(services, options.backend, options);
    }
    return _this;
  }
  _createClass(Connector, [{
    key: "queueLoad",
    value: function queueLoad(languages, namespaces, options, callback) {
      var _this2 = this;
      var toLoad = {};
      var pending = {};
      var toLoadLanguages = {};
      var toLoadNamespaces = {};
      languages.forEach(function (lng) {
        var hasAllNamespaces = true;
        namespaces.forEach(function (ns) {
          var name = "".concat(lng, "|").concat(ns);
          if (!options.reload && _this2.store.hasResourceBundle(lng, ns)) {
            _this2.state[name] = 2;
          } else if (_this2.state[name] < 0) ; else if (_this2.state[name] === 1) {
            if (pending[name] === undefined) pending[name] = true;
          } else {
            _this2.state[name] = 1;
            hasAllNamespaces = false;
            if (pending[name] === undefined) pending[name] = true;
            if (toLoad[name] === undefined) toLoad[name] = true;
            if (toLoadNamespaces[ns] === undefined) toLoadNamespaces[ns] = true;
          }
        });
        if (!hasAllNamespaces) toLoadLanguages[lng] = true;
      });
      if (Object.keys(toLoad).length || Object.keys(pending).length) {
        this.queue.push({
          pending: pending,
          pendingCount: Object.keys(pending).length,
          loaded: {},
          errors: [],
          callback: callback
        });
      }
      return {
        toLoad: Object.keys(toLoad),
        pending: Object.keys(pending),
        toLoadLanguages: Object.keys(toLoadLanguages),
        toLoadNamespaces: Object.keys(toLoadNamespaces)
      };
    }
  }, {
    key: "loaded",
    value: function loaded(name, err, data) {
      var s = name.split('|');
      var lng = s[0];
      var ns = s[1];
      if (err) this.emit('failedLoading', lng, ns, err);
      if (data) {
        this.store.addResourceBundle(lng, ns, data);
      }
      this.state[name] = err ? -1 : 2;
      var loaded = {};
      this.queue.forEach(function (q) {
        pushPath(q.loaded, [lng], ns);
        removePending(q, name);
        if (err) q.errors.push(err);
        if (q.pendingCount === 0 && !q.done) {
          Object.keys(q.loaded).forEach(function (l) {
            if (!loaded[l]) loaded[l] = {};
            var loadedKeys = q.loaded[l];
            if (loadedKeys.length) {
              loadedKeys.forEach(function (ns) {
                if (loaded[l][ns] === undefined) loaded[l][ns] = true;
              });
            }
          });
          q.done = true;
          if (q.errors.length) {
            q.callback(q.errors);
          } else {
            q.callback();
          }
        }
      });
      this.emit('loaded', loaded);
      this.queue = this.queue.filter(function (q) {
        return !q.done;
      });
    }
  }, {
    key: "read",
    value: function read(lng, ns, fcName) {
      var _this3 = this;
      var tried = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;
      var wait = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : this.retryTimeout;
      var callback = arguments.length > 5 ? arguments[5] : undefined;
      if (!lng.length) return callback(null, {});
      if (this.readingCalls >= this.maxParallelReads) {
        this.waitingReads.push({
          lng: lng,
          ns: ns,
          fcName: fcName,
          tried: tried,
          wait: wait,
          callback: callback
        });
        return;
      }
      this.readingCalls++;
      var resolver = function resolver(err, data) {
        _this3.readingCalls--;
        if (_this3.waitingReads.length > 0) {
          var next = _this3.waitingReads.shift();
          _this3.read(next.lng, next.ns, next.fcName, next.tried, next.wait, next.callback);
        }
        if (err && data && tried < _this3.maxRetries) {
          setTimeout(function () {
            _this3.read.call(_this3, lng, ns, fcName, tried + 1, wait * 2, callback);
          }, wait);
          return;
        }
        callback(err, data);
      };
      var fc = this.backend[fcName].bind(this.backend);
      if (fc.length === 2) {
        try {
          var r = fc(lng, ns);
          if (r && typeof r.then === 'function') {
            r.then(function (data) {
              return resolver(null, data);
            })["catch"](resolver);
          } else {
            resolver(null, r);
          }
        } catch (err) {
          resolver(err);
        }
        return;
      }
      return fc(lng, ns, resolver);
    }
  }, {
    key: "prepareLoading",
    value: function prepareLoading(languages, namespaces) {
      var _this4 = this;
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      var callback = arguments.length > 3 ? arguments[3] : undefined;
      if (!this.backend) {
        this.logger.warn('No backend was added via i18next.use. Will not load resources.');
        return callback && callback();
      }
      if (typeof languages === 'string') languages = this.languageUtils.toResolveHierarchy(languages);
      if (typeof namespaces === 'string') namespaces = [namespaces];
      var toLoad = this.queueLoad(languages, namespaces, options, callback);
      if (!toLoad.toLoad.length) {
        if (!toLoad.pending.length) callback();
        return null;
      }
      toLoad.toLoad.forEach(function (name) {
        _this4.loadOne(name);
      });
    }
  }, {
    key: "load",
    value: function load(languages, namespaces, callback) {
      this.prepareLoading(languages, namespaces, {}, callback);
    }
  }, {
    key: "reload",
    value: function reload(languages, namespaces, callback) {
      this.prepareLoading(languages, namespaces, {
        reload: true
      }, callback);
    }
  }, {
    key: "loadOne",
    value: function loadOne(name) {
      var _this5 = this;
      var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
      var s = name.split('|');
      var lng = s[0];
      var ns = s[1];
      this.read(lng, ns, 'read', undefined, undefined, function (err, data) {
        if (err) _this5.logger.warn("".concat(prefix, "loading namespace ").concat(ns, " for language ").concat(lng, " failed"), err);
        if (!err && data) _this5.logger.log("".concat(prefix, "loaded namespace ").concat(ns, " for language ").concat(lng), data);
        _this5.loaded(name, err, data);
      });
    }
  }, {
    key: "saveMissing",
    value: function saveMissing(languages, namespace, key, fallbackValue, isUpdate) {
      var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};
      var clb = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : function () {};
      if (this.services.utils && this.services.utils.hasLoadedNamespace && !this.services.utils.hasLoadedNamespace(namespace)) {
        this.logger.warn("did not save key \"".concat(key, "\" as the namespace \"").concat(namespace, "\" was not yet loaded"), 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');
        return;
      }
      if (key === undefined || key === null || key === '') return;
      if (this.backend && this.backend.create) {
        var opts = _objectSpread$1(_objectSpread$1({}, options), {}, {
          isUpdate: isUpdate
        });
        var fc = this.backend.create.bind(this.backend);
        if (fc.length < 6) {
          try {
            var r;
            if (fc.length === 5) {
              r = fc(languages, namespace, key, fallbackValue, opts);
            } else {
              r = fc(languages, namespace, key, fallbackValue);
            }
            if (r && typeof r.then === 'function') {
              r.then(function (data) {
                return clb(null, data);
              })["catch"](clb);
            } else {
              clb(null, r);
            }
          } catch (err) {
            clb(err);
          }
        } else {
          fc(languages, namespace, key, fallbackValue, clb, opts);
        }
      }
      if (!languages || !languages[0]) return;
      this.store.addResource(languages[0], namespace, key, fallbackValue);
    }
  }]);
  return Connector;
}(EventEmitter);

function get() {
  return {
    debug: false,
    initImmediate: true,
    ns: ['translation'],
    defaultNS: ['translation'],
    fallbackLng: ['dev'],
    fallbackNS: false,
    supportedLngs: false,
    nonExplicitSupportedLngs: false,
    load: 'all',
    preload: false,
    simplifyPluralSuffix: true,
    keySeparator: '.',
    nsSeparator: ':',
    pluralSeparator: '_',
    contextSeparator: '_',
    partialBundledLanguages: false,
    saveMissing: false,
    updateMissing: false,
    saveMissingTo: 'fallback',
    saveMissingPlurals: true,
    missingKeyHandler: false,
    missingInterpolationHandler: false,
    postProcess: false,
    postProcessPassResolved: false,
    returnNull: true,
    returnEmptyString: true,
    returnObjects: false,
    joinArrays: false,
    returnedObjectHandler: false,
    parseMissingKeyHandler: false,
    appendNamespaceToMissingKey: false,
    appendNamespaceToCIMode: false,
    overloadTranslationOptionHandler: function handle(args) {
      var ret = {};
      if (typeof_typeof(args[1]) === 'object') ret = args[1];
      if (typeof args[1] === 'string') ret.defaultValue = args[1];
      if (typeof args[2] === 'string') ret.tDescription = args[2];
      if (typeof_typeof(args[2]) === 'object' || typeof_typeof(args[3]) === 'object') {
        var options = args[3] || args[2];
        Object.keys(options).forEach(function (key) {
          ret[key] = options[key];
        });
      }
      return ret;
    },
    interpolation: {
      escapeValue: true,
      format: function format(value, _format, lng, options) {
        return value;
      },
      prefix: '{{',
      suffix: '}}',
      formatSeparator: ',',
      unescapePrefix: '-',
      nestingPrefix: '$t(',
      nestingSuffix: ')',
      nestingOptionsSeparator: ',',
      maxReplaces: 1000,
      skipOnVariables: true
    }
  };
}
function transformOptions(options) {
  if (typeof options.ns === 'string') options.ns = [options.ns];
  if (typeof options.fallbackLng === 'string') options.fallbackLng = [options.fallbackLng];
  if (typeof options.fallbackNS === 'string') options.fallbackNS = [options.fallbackNS];
  if (options.supportedLngs && options.supportedLngs.indexOf('cimode') < 0) {
    options.supportedLngs = options.supportedLngs.concat(['cimode']);
  }
  return options;
}

function i18next_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? i18next_ownKeys(Object(source), !0).forEach(function (key) { defineProperty_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : i18next_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
function i18next_noop() {}
function bindMemberFunctions(inst) {
  var mems = Object.getOwnPropertyNames(Object.getPrototypeOf(inst));
  mems.forEach(function (mem) {
    if (typeof inst[mem] === 'function') {
      inst[mem] = inst[mem].bind(inst);
    }
  });
}
var I18n = function (_EventEmitter) {
  _inherits(I18n, _EventEmitter);
  var _super = _createSuper(I18n);
  function I18n() {
    var _this;
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var callback = arguments.length > 1 ? arguments[1] : undefined;
    _classCallCheck(this, I18n);
    _this = _super.call(this);
    if (isIE10) {
      EventEmitter.call(_assertThisInitialized(_this));
    }
    _this.options = transformOptions(options);
    _this.services = {};
    _this.logger = baseLogger;
    _this.modules = {
      external: []
    };
    bindMemberFunctions(_assertThisInitialized(_this));
    if (callback && !_this.isInitialized && !options.isClone) {
      if (!_this.options.initImmediate) {
        _this.init(options, callback);
        return _possibleConstructorReturn(_this, _assertThisInitialized(_this));
      }
      setTimeout(function () {
        _this.init(options, callback);
      }, 0);
    }
    return _this;
  }
  _createClass(I18n, [{
    key: "init",
    value: function init() {
      var _this2 = this;
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var callback = arguments.length > 1 ? arguments[1] : undefined;
      if (typeof options === 'function') {
        callback = options;
        options = {};
      }
      if (!options.defaultNS && options.defaultNS !== false && options.ns) {
        if (typeof options.ns === 'string') {
          options.defaultNS = options.ns;
        } else if (options.ns.indexOf('translation') < 0) {
          options.defaultNS = options.ns[0];
        }
      }
      var defOpts = get();
      this.options = _objectSpread(_objectSpread(_objectSpread({}, defOpts), this.options), transformOptions(options));
      if (this.options.compatibilityAPI !== 'v1') {
        this.options.interpolation = _objectSpread(_objectSpread({}, defOpts.interpolation), this.options.interpolation);
      }
      if (options.keySeparator !== undefined) {
        this.options.userDefinedKeySeparator = options.keySeparator;
      }
      if (options.nsSeparator !== undefined) {
        this.options.userDefinedNsSeparator = options.nsSeparator;
      }
      function createClassOnDemand(ClassOrObject) {
        if (!ClassOrObject) return null;
        if (typeof ClassOrObject === 'function') return new ClassOrObject();
        return ClassOrObject;
      }
      if (!this.options.isClone) {
        if (this.modules.logger) {
          baseLogger.init(createClassOnDemand(this.modules.logger), this.options);
        } else {
          baseLogger.init(null, this.options);
        }
        var formatter;
        if (this.modules.formatter) {
          formatter = this.modules.formatter;
        } else if (typeof Intl !== 'undefined') {
          formatter = Formatter;
        }
        var lu = new LanguageUtil(this.options);
        this.store = new ResourceStore(this.options.resources, this.options);
        var s = this.services;
        s.logger = baseLogger;
        s.resourceStore = this.store;
        s.languageUtils = lu;
        s.pluralResolver = new PluralResolver(lu, {
          prepend: this.options.pluralSeparator,
          compatibilityJSON: this.options.compatibilityJSON,
          simplifyPluralSuffix: this.options.simplifyPluralSuffix
        });
        if (formatter && (!this.options.interpolation.format || this.options.interpolation.format === defOpts.interpolation.format)) {
          s.formatter = createClassOnDemand(formatter);
          s.formatter.init(s, this.options);
          this.options.interpolation.format = s.formatter.format.bind(s.formatter);
        }
        s.interpolator = new Interpolator(this.options);
        s.utils = {
          hasLoadedNamespace: this.hasLoadedNamespace.bind(this)
        };
        s.backendConnector = new Connector(createClassOnDemand(this.modules.backend), s.resourceStore, s, this.options);
        s.backendConnector.on('*', function (event) {
          for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
            args[_key - 1] = arguments[_key];
          }
          _this2.emit.apply(_this2, [event].concat(args));
        });
        if (this.modules.languageDetector) {
          s.languageDetector = createClassOnDemand(this.modules.languageDetector);
          if (s.languageDetector.init) s.languageDetector.init(s, this.options.detection, this.options);
        }
        if (this.modules.i18nFormat) {
          s.i18nFormat = createClassOnDemand(this.modules.i18nFormat);
          if (s.i18nFormat.init) s.i18nFormat.init(this);
        }
        this.translator = new Translator(this.services, this.options);
        this.translator.on('*', function (event) {
          for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
            args[_key2 - 1] = arguments[_key2];
          }
          _this2.emit.apply(_this2, [event].concat(args));
        });
        this.modules.external.forEach(function (m) {
          if (m.init) m.init(_this2);
        });
      }
      this.format = this.options.interpolation.format;
      if (!callback) callback = i18next_noop;
      if (this.options.fallbackLng && !this.services.languageDetector && !this.options.lng) {
        var codes = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);
        if (codes.length > 0 && codes[0] !== 'dev') this.options.lng = codes[0];
      }
      if (!this.services.languageDetector && !this.options.lng) {
        this.logger.warn('init: no languageDetector is used and no lng is defined');
      }
      var storeApi = ['getResource', 'hasResourceBundle', 'getResourceBundle', 'getDataByLanguage'];
      storeApi.forEach(function (fcName) {
        _this2[fcName] = function () {
          var _this2$store;
          return (_this2$store = _this2.store)[fcName].apply(_this2$store, arguments);
        };
      });
      var storeApiChained = ['addResource', 'addResources', 'addResourceBundle', 'removeResourceBundle'];
      storeApiChained.forEach(function (fcName) {
        _this2[fcName] = function () {
          var _this2$store2;
          (_this2$store2 = _this2.store)[fcName].apply(_this2$store2, arguments);
          return _this2;
        };
      });
      var deferred = i18next_defer();
      var load = function load() {
        var finish = function finish(err, t) {
          if (_this2.isInitialized && !_this2.initializedStoreOnce) _this2.logger.warn('init: i18next is already initialized. You should call init just once!');
          _this2.isInitialized = true;
          if (!_this2.options.isClone) _this2.logger.log('initialized', _this2.options);
          _this2.emit('initialized', _this2.options);
          deferred.resolve(t);
          callback(err, t);
        };
        if (_this2.languages && _this2.options.compatibilityAPI !== 'v1' && !_this2.isInitialized) return finish(null, _this2.t.bind(_this2));
        _this2.changeLanguage(_this2.options.lng, finish);
      };
      if (this.options.resources || !this.options.initImmediate) {
        load();
      } else {
        setTimeout(load, 0);
      }
      return deferred;
    }
  }, {
    key: "loadResources",
    value: function loadResources(language) {
      var _this3 = this;
      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : i18next_noop;
      var usedCallback = callback;
      var usedLng = typeof language === 'string' ? language : this.language;
      if (typeof language === 'function') usedCallback = language;
      if (!this.options.resources || this.options.partialBundledLanguages) {
        if (usedLng && usedLng.toLowerCase() === 'cimode') return usedCallback();
        var toLoad = [];
        var append = function append(lng) {
          if (!lng) return;
          var lngs = _this3.services.languageUtils.toResolveHierarchy(lng);
          lngs.forEach(function (l) {
            if (toLoad.indexOf(l) < 0) toLoad.push(l);
          });
        };
        if (!usedLng) {
          var fallbacks = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);
          fallbacks.forEach(function (l) {
            return append(l);
          });
        } else {
          append(usedLng);
        }
        if (this.options.preload) {
          this.options.preload.forEach(function (l) {
            return append(l);
          });
        }
        this.services.backendConnector.load(toLoad, this.options.ns, function (e) {
          if (!e && !_this3.resolvedLanguage && _this3.language) _this3.setResolvedLanguage(_this3.language);
          usedCallback(e);
        });
      } else {
        usedCallback(null);
      }
    }
  }, {
    key: "reloadResources",
    value: function reloadResources(lngs, ns, callback) {
      var deferred = i18next_defer();
      if (!lngs) lngs = this.languages;
      if (!ns) ns = this.options.ns;
      if (!callback) callback = i18next_noop;
      this.services.backendConnector.reload(lngs, ns, function (err) {
        deferred.resolve();
        callback(err);
      });
      return deferred;
    }
  }, {
    key: "use",
    value: function use(module) {
      if (!module) throw new Error('You are passing an undefined module! Please check the object you are passing to i18next.use()');
      if (!module.type) throw new Error('You are passing a wrong module! Please check the object you are passing to i18next.use()');
      if (module.type === 'backend') {
        this.modules.backend = module;
      }
      if (module.type === 'logger' || module.log && module.warn && module.error) {
        this.modules.logger = module;
      }
      if (module.type === 'languageDetector') {
        this.modules.languageDetector = module;
      }
      if (module.type === 'i18nFormat') {
        this.modules.i18nFormat = module;
      }
      if (module.type === 'postProcessor') {
        postProcessor.addPostProcessor(module);
      }
      if (module.type === 'formatter') {
        this.modules.formatter = module;
      }
      if (module.type === '3rdParty') {
        this.modules.external.push(module);
      }
      return this;
    }
  }, {
    key: "setResolvedLanguage",
    value: function setResolvedLanguage(l) {
      if (!l || !this.languages) return;
      if (['cimode', 'dev'].indexOf(l) > -1) return;
      for (var li = 0; li < this.languages.length; li++) {
        var lngInLngs = this.languages[li];
        if (['cimode', 'dev'].indexOf(lngInLngs) > -1) continue;
        if (this.store.hasLanguageSomeTranslations(lngInLngs)) {
          this.resolvedLanguage = lngInLngs;
          break;
        }
      }
    }
  }, {
    key: "changeLanguage",
    value: function changeLanguage(lng, callback) {
      var _this4 = this;
      this.isLanguageChangingTo = lng;
      var deferred = i18next_defer();
      this.emit('languageChanging', lng);
      var setLngProps = function setLngProps(l) {
        _this4.language = l;
        _this4.languages = _this4.services.languageUtils.toResolveHierarchy(l);
        _this4.resolvedLanguage = undefined;
        _this4.setResolvedLanguage(l);
      };
      var done = function done(err, l) {
        if (l) {
          setLngProps(l);
          _this4.translator.changeLanguage(l);
          _this4.isLanguageChangingTo = undefined;
          _this4.emit('languageChanged', l);
          _this4.logger.log('languageChanged', l);
        } else {
          _this4.isLanguageChangingTo = undefined;
        }
        deferred.resolve(function () {
          return _this4.t.apply(_this4, arguments);
        });
        if (callback) callback(err, function () {
          return _this4.t.apply(_this4, arguments);
        });
      };
      var setLng = function setLng(lngs) {
        if (!lng && !lngs && _this4.services.languageDetector) lngs = [];
        var l = typeof lngs === 'string' ? lngs : _this4.services.languageUtils.getBestMatchFromCodes(lngs);
        if (l) {
          if (!_this4.language) {
            setLngProps(l);
          }
          if (!_this4.translator.language) _this4.translator.changeLanguage(l);
          if (_this4.services.languageDetector && _this4.services.languageDetector.cacheUserLanguage) _this4.services.languageDetector.cacheUserLanguage(l);
        }
        _this4.loadResources(l, function (err) {
          done(err, l);
        });
      };
      if (!lng && this.services.languageDetector && !this.services.languageDetector.async) {
        setLng(this.services.languageDetector.detect());
      } else if (!lng && this.services.languageDetector && this.services.languageDetector.async) {
        if (this.services.languageDetector.detect.length === 0) {
          this.services.languageDetector.detect().then(setLng);
        } else {
          this.services.languageDetector.detect(setLng);
        }
      } else {
        setLng(lng);
      }
      return deferred;
    }
  }, {
    key: "getFixedT",
    value: function getFixedT(lng, ns, keyPrefix) {
      var _this5 = this;
      var fixedT = function fixedT(key, opts) {
        var options;
        if (typeof_typeof(opts) !== 'object') {
          for (var _len3 = arguments.length, rest = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {
            rest[_key3 - 2] = arguments[_key3];
          }
          options = _this5.options.overloadTranslationOptionHandler([key, opts].concat(rest));
        } else {
          options = _objectSpread({}, opts);
        }
        options.lng = options.lng || fixedT.lng;
        options.lngs = options.lngs || fixedT.lngs;
        options.ns = options.ns || fixedT.ns;
        options.keyPrefix = options.keyPrefix || keyPrefix || fixedT.keyPrefix;
        var keySeparator = _this5.options.keySeparator || '.';
        var resultKey;
        if (options.keyPrefix && Array.isArray(key)) {
          resultKey = key.map(function (k) {
            return "".concat(options.keyPrefix).concat(keySeparator).concat(k);
          });
        } else {
          resultKey = options.keyPrefix ? "".concat(options.keyPrefix).concat(keySeparator).concat(key) : key;
        }
        return _this5.t(resultKey, options);
      };
      if (typeof lng === 'string') {
        fixedT.lng = lng;
      } else {
        fixedT.lngs = lng;
      }
      fixedT.ns = ns;
      fixedT.keyPrefix = keyPrefix;
      return fixedT;
    }
  }, {
    key: "t",
    value: function t() {
      var _this$translator;
      return this.translator && (_this$translator = this.translator).translate.apply(_this$translator, arguments);
    }
  }, {
    key: "exists",
    value: function exists() {
      var _this$translator2;
      return this.translator && (_this$translator2 = this.translator).exists.apply(_this$translator2, arguments);
    }
  }, {
    key: "setDefaultNamespace",
    value: function setDefaultNamespace(ns) {
      this.options.defaultNS = ns;
    }
  }, {
    key: "hasLoadedNamespace",
    value: function hasLoadedNamespace(ns) {
      var _this6 = this;
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      if (!this.isInitialized) {
        this.logger.warn('hasLoadedNamespace: i18next was not initialized', this.languages);
        return false;
      }
      if (!this.languages || !this.languages.length) {
        this.logger.warn('hasLoadedNamespace: i18n.languages were undefined or empty', this.languages);
        return false;
      }
      var lng = this.resolvedLanguage || this.languages[0];
      var fallbackLng = this.options ? this.options.fallbackLng : false;
      var lastLng = this.languages[this.languages.length - 1];
      if (lng.toLowerCase() === 'cimode') return true;
      var loadNotPending = function loadNotPending(l, n) {
        var loadState = _this6.services.backendConnector.state["".concat(l, "|").concat(n)];
        return loadState === -1 || loadState === 2;
      };
      if (options.precheck) {
        var preResult = options.precheck(this, loadNotPending);
        if (preResult !== undefined) return preResult;
      }
      if (this.hasResourceBundle(lng, ns)) return true;
      if (!this.services.backendConnector.backend || this.options.resources && !this.options.partialBundledLanguages) return true;
      if (loadNotPending(lng, ns) && (!fallbackLng || loadNotPending(lastLng, ns))) return true;
      return false;
    }
  }, {
    key: "loadNamespaces",
    value: function loadNamespaces(ns, callback) {
      var _this7 = this;
      var deferred = i18next_defer();
      if (!this.options.ns) {
        callback && callback();
        return Promise.resolve();
      }
      if (typeof ns === 'string') ns = [ns];
      ns.forEach(function (n) {
        if (_this7.options.ns.indexOf(n) < 0) _this7.options.ns.push(n);
      });
      this.loadResources(function (err) {
        deferred.resolve();
        if (callback) callback(err);
      });
      return deferred;
    }
  }, {
    key: "loadLanguages",
    value: function loadLanguages(lngs, callback) {
      var deferred = i18next_defer();
      if (typeof lngs === 'string') lngs = [lngs];
      var preloaded = this.options.preload || [];
      var newLngs = lngs.filter(function (lng) {
        return preloaded.indexOf(lng) < 0;
      });
      if (!newLngs.length) {
        if (callback) callback();
        return Promise.resolve();
      }
      this.options.preload = preloaded.concat(newLngs);
      this.loadResources(function (err) {
        deferred.resolve();
        if (callback) callback(err);
      });
      return deferred;
    }
  }, {
    key: "dir",
    value: function dir(lng) {
      if (!lng) lng = this.resolvedLanguage || (this.languages && this.languages.length > 0 ? this.languages[0] : this.language);
      if (!lng) return 'rtl';
      var rtlLngs = ['ar', 'shu', 'sqr', 'ssh', 'xaa', 'yhd', 'yud', 'aao', 'abh', 'abv', 'acm', 'acq', 'acw', 'acx', 'acy', 'adf', 'ads', 'aeb', 'aec', 'afb', 'ajp', 'apc', 'apd', 'arb', 'arq', 'ars', 'ary', 'arz', 'auz', 'avl', 'ayh', 'ayl', 'ayn', 'ayp', 'bbz', 'pga', 'he', 'iw', 'ps', 'pbt', 'pbu', 'pst', 'prp', 'prd', 'ug', 'ur', 'ydd', 'yds', 'yih', 'ji', 'yi', 'hbo', 'men', 'xmn', 'fa', 'jpr', 'peo', 'pes', 'prs', 'dv', 'sam', 'ckb'];
      var languageUtils = this.services && this.services.languageUtils || new LanguageUtil(get());
      return rtlLngs.indexOf(languageUtils.getLanguagePartFromCode(lng)) > -1 || lng.toLowerCase().indexOf('-arab') > 1 ? 'rtl' : 'ltr';
    }
  }, {
    key: "cloneInstance",
    value: function cloneInstance() {
      var _this8 = this;
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : i18next_noop;
      var mergedOptions = _objectSpread(_objectSpread(_objectSpread({}, this.options), options), {
        isClone: true
      });
      var clone = new I18n(mergedOptions);
      if (options.debug !== undefined || options.prefix !== undefined) {
        clone.logger = clone.logger.clone(options);
      }
      var membersToCopy = ['store', 'services', 'language'];
      membersToCopy.forEach(function (m) {
        clone[m] = _this8[m];
      });
      clone.services = _objectSpread({}, this.services);
      clone.services.utils = {
        hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)
      };
      clone.translator = new Translator(clone.services, clone.options);
      clone.translator.on('*', function (event) {
        for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {
          args[_key4 - 1] = arguments[_key4];
        }
        clone.emit.apply(clone, [event].concat(args));
      });
      clone.init(mergedOptions, callback);
      clone.translator.options = clone.options;
      clone.translator.backendConnector.services.utils = {
        hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)
      };
      return clone;
    }
  }, {
    key: "toJSON",
    value: function toJSON() {
      return {
        options: this.options,
        store: this.store,
        language: this.language,
        languages: this.languages,
        resolvedLanguage: this.resolvedLanguage
      };
    }
  }]);
  return I18n;
}(EventEmitter);
defineProperty_defineProperty(I18n, "createInstance", function () {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var callback = arguments.length > 1 ? arguments[1] : undefined;
  return new I18n(options, callback);
});
var instance = I18n.createInstance();
instance.createInstance = I18n.createInstance;

var createInstance = instance.createInstance;
var dir = instance.dir;
var init = instance.init;
var loadResources = instance.loadResources;
var reloadResources = instance.reloadResources;
var use = instance.use;
var changeLanguage = instance.changeLanguage;
var getFixedT = instance.getFixedT;
var i18next_t = instance.t;
var exists = instance.exists;
var setDefaultNamespace = instance.setDefaultNamespace;
var hasLoadedNamespace = instance.hasLoadedNamespace;
var loadNamespaces = instance.loadNamespaces;
var loadLanguages = instance.loadLanguages;



// EXTERNAL MODULE: ./node_modules/void-elements/index.js
var void_elements = __webpack_require__(739);
var void_elements_default = /*#__PURE__*/__webpack_require__.n(void_elements);
;// CONCATENATED MODULE: ./node_modules/html-parse-stringify/dist/html-parse-stringify.module.js
var html_parse_stringify_module_t=/\s([^'"/\s><]+?)[\s/>]|([^\s=]+)=\s?(".*?"|'.*?')/g;function html_parse_stringify_module_n(n){var r={type:"tag",name:"",voidElement:!1,attrs:{},children:[]},i=n.match(/<\/?([^\s]+?)[/\s>]/);if(i&&(r.name=i[1],((void_elements_default())[i[1]]||"/"===n.charAt(n.length-2))&&(r.voidElement=!0),r.name.startsWith("!--"))){var s=n.indexOf("--\x3e");return{type:"comment",comment:-1!==s?n.slice(4,s):""}}for(var a=new RegExp(html_parse_stringify_module_t),c=null;null!==(c=a.exec(n));)if(c[0].trim())if(c[1]){var o=c[1].trim(),l=[o,""];o.indexOf("=")>-1&&(l=o.split("=")),r.attrs[l[0]]=l[1],a.lastIndex--}else c[2]&&(r.attrs[c[2]]=c[3].trim().substring(1,c[3].length-1));return r}var html_parse_stringify_module_r=/<[a-zA-Z0-9\-\!\/](?:"[^"]*"|'[^']*'|[^'">])*>/g,html_parse_stringify_module_i=/^\s*$/,html_parse_stringify_module_s=Object.create(null);function html_parse_stringify_module_a(e,t){switch(t.type){case"text":return e+t.content;case"tag":return e+="<"+t.name+(t.attrs?function(e){var t=[];for(var n in e)t.push(n+'="'+e[n]+'"');return t.length?" "+t.join(" "):""}(t.attrs):"")+(t.voidElement?"/>":">"),t.voidElement?e:e+t.children.reduce(html_parse_stringify_module_a,"")+"</"+t.name+">";case"comment":return e+"\x3c!--"+t.comment+"--\x3e"}}var html_parse_stringify_module_c={parse:function(e,t){t||(t={}),t.components||(t.components=html_parse_stringify_module_s);var a,c=[],o=[],l=-1,m=!1;if(0!==e.indexOf("<")){var u=e.indexOf("<");c.push({type:"text",content:-1===u?e:e.substring(0,u)})}return e.replace(html_parse_stringify_module_r,function(r,s){if(m){if(r!=="</"+a.name+">")return;m=!1}var u,f="/"!==r.charAt(1),h=r.startsWith("\x3c!--"),p=s+r.length,d=e.charAt(p);if(h){var v=html_parse_stringify_module_n(r);return l<0?(c.push(v),c):((u=o[l]).children.push(v),c)}if(f&&(l++,"tag"===(a=html_parse_stringify_module_n(r)).type&&t.components[a.name]&&(a.type="component",m=!0),a.voidElement||m||!d||"<"===d||a.children.push({type:"text",content:e.slice(p,e.indexOf("<",p))}),0===l&&c.push(a),(u=o[l-1])&&u.children.push(a),o[l]=a),(!f||a.voidElement)&&(l>-1&&(a.voidElement||a.name===r.slice(2,-1))&&(l--,a=-1===l?c:o[l]),!m&&"<"!==d&&d)){u=-1===l?c:o[l].children;var x=e.indexOf("<",p),g=e.slice(p,-1===x?void 0:x);html_parse_stringify_module_i.test(g)&&(g=" "),(x>-1&&l+u.length>=0||" "!==g)&&u.push({type:"text",content:g})}}),c},stringify:function(e){return e.reduce(function(e,t){return e+html_parse_stringify_module_a("",t)},"")}};/* harmony default export */ const html_parse_stringify_module = ((/* unused pure expression or super */ null && (html_parse_stringify_module_c)));
//# sourceMappingURL=html-parse-stringify.module.js.map

;// CONCATENATED MODULE: ./node_modules/react-i18next/dist/es/utils.js
function utils_warn() {
  if (console && console.warn) {
    var _console;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (typeof args[0] === 'string') args[0] = "react-i18next:: ".concat(args[0]);

    (_console = console).warn.apply(_console, args);
  }
}
var utils_alreadyWarned = {};
function utils_warnOnce() {
  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    args[_key2] = arguments[_key2];
  }

  if (typeof args[0] === 'string' && utils_alreadyWarned[args[0]]) return;
  if (typeof args[0] === 'string') utils_alreadyWarned[args[0]] = new Date();
  utils_warn.apply(void 0, args);
}
function utils_loadNamespaces(i18n, ns, cb) {
  i18n.loadNamespaces(ns, function () {
    if (i18n.isInitialized) {
      cb();
    } else {
      var initialized = function initialized() {
        setTimeout(function () {
          i18n.off('initialized', initialized);
        }, 0);
        cb();
      };

      i18n.on('initialized', initialized);
    }
  });
}

function oldI18nextHasLoadedNamespace(ns, i18n) {
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  var lng = i18n.languages[0];
  var fallbackLng = i18n.options ? i18n.options.fallbackLng : false;
  var lastLng = i18n.languages[i18n.languages.length - 1];
  if (lng.toLowerCase() === 'cimode') return true;

  var loadNotPending = function loadNotPending(l, n) {
    var loadState = i18n.services.backendConnector.state["".concat(l, "|").concat(n)];
    return loadState === -1 || loadState === 2;
  };

  if (options.bindI18n && options.bindI18n.indexOf('languageChanging') > -1 && i18n.services.backendConnector.backend && i18n.isLanguageChangingTo && !loadNotPending(i18n.isLanguageChangingTo, ns)) return false;
  if (i18n.hasResourceBundle(lng, ns)) return true;
  if (!i18n.services.backendConnector.backend || i18n.options.resources && !i18n.options.partialBundledLanguages) return true;
  if (loadNotPending(lng, ns) && (!fallbackLng || loadNotPending(lastLng, ns))) return true;
  return false;
}

function utils_hasLoadedNamespace(ns, i18n) {
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

  if (!i18n.languages || !i18n.languages.length) {
    utils_warnOnce('i18n.languages were undefined or empty', i18n.languages);
    return true;
  }

  var isNewerI18next = i18n.options.ignoreJSONStructure !== undefined;

  if (!isNewerI18next) {
    return oldI18nextHasLoadedNamespace(ns, i18n, options);
  }

  return i18n.hasLoadedNamespace(ns, {
    precheck: function precheck(i18nInstance, loadNotPending) {
      if (options.bindI18n && options.bindI18n.indexOf('languageChanging') > -1 && i18nInstance.services.backendConnector.backend && i18nInstance.isLanguageChangingTo && !loadNotPending(i18nInstance.isLanguageChangingTo, ns)) return false;
    }
  });
}
function utils_getDisplayName(Component) {
  return Component.displayName || Component.name || (typeof Component === 'string' && Component.length > 0 ? Component : 'Unknown');
}
;// CONCATENATED MODULE: ./node_modules/react-i18next/dist/es/unescape.js
var matchHtmlEntity = /&(?:amp|#38|lt|#60|gt|#62|apos|#39|quot|#34|nbsp|#160|copy|#169|reg|#174|hellip|#8230|#x2F|#47);/g;
var htmlEntities = {
  '&amp;': '&',
  '&#38;': '&',
  '&lt;': '<',
  '&#60;': '<',
  '&gt;': '>',
  '&#62;': '>',
  '&apos;': "'",
  '&#39;': "'",
  '&quot;': '"',
  '&#34;': '"',
  '&nbsp;': ' ',
  '&#160;': ' ',
  '&copy;': '©',
  '&#169;': '©',
  '&reg;': '®',
  '&#174;': '®',
  '&hellip;': '…',
  '&#8230;': '…',
  '&#x2F;': '/',
  '&#47;': '/'
};

var unescapeHtmlEntity = function unescapeHtmlEntity(m) {
  return htmlEntities[m];
};

var unescape_unescape = function unescape(text) {
  return text.replace(matchHtmlEntity, unescapeHtmlEntity);
};
;// CONCATENATED MODULE: ./node_modules/react-i18next/dist/es/defaults.js


function defaults_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function defaults_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { defaults_ownKeys(Object(source), true).forEach(function (key) { defineProperty_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { defaults_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }


var defaultOptions = {
  bindI18n: 'languageChanged',
  bindI18nStore: '',
  transEmptyNodeValue: '',
  transSupportBasicHtmlNodes: true,
  transWrapTextNodes: '',
  transKeepBasicHtmlNodesFor: ['br', 'strong', 'i', 'p'],
  useSuspense: true,
  unescape: unescape_unescape
};
function setDefaults() {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  defaultOptions = defaults_objectSpread(defaults_objectSpread({}, defaultOptions), options);
}
function defaults_getDefaults() {
  return defaultOptions;
}
;// CONCATENATED MODULE: ./node_modules/react-i18next/dist/es/TransWithoutContext.js



var TransWithoutContext_excluded = (/* unused pure expression or super */ null && (["format"])),
    _excluded2 = (/* unused pure expression or super */ null && (["children", "count", "parent", "i18nKey", "context", "tOptions", "values", "defaults", "components", "ns", "i18n", "t", "shouldUnescape"]));

function TransWithoutContext_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function TransWithoutContext_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { TransWithoutContext_ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { TransWithoutContext_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }







function hasChildren(node, checkLength) {
  if (!node) return false;
  var base = node.props ? node.props.children : node.children;
  if (checkLength) return base.length > 0;
  return !!base;
}

function getChildren(node) {
  if (!node) return [];
  return node.props ? node.props.children : node.children;
}

function hasValidReactChildren(children) {
  if (Object.prototype.toString.call(children) !== '[object Array]') return false;
  return children.every(function (child) {
    return isValidElement(child);
  });
}

function getAsArray(data) {
  return Array.isArray(data) ? data : [data];
}

function mergeProps(source, target) {
  var newTarget = TransWithoutContext_objectSpread({}, target);

  newTarget.props = Object.assign(source.props, target.props);
  return newTarget;
}

function nodesToString(children, i18nOptions) {
  if (!children) return '';
  var stringNode = '';
  var childrenArray = getAsArray(children);
  var keepArray = i18nOptions.transSupportBasicHtmlNodes && i18nOptions.transKeepBasicHtmlNodesFor ? i18nOptions.transKeepBasicHtmlNodesFor : [];
  childrenArray.forEach(function (child, childIndex) {
    if (typeof child === 'string') {
      stringNode += "".concat(child);
    } else if (isValidElement(child)) {
      var childPropsCount = Object.keys(child.props).length;
      var shouldKeepChild = keepArray.indexOf(child.type) > -1;
      var childChildren = child.props.children;

      if (!childChildren && shouldKeepChild && childPropsCount === 0) {
        stringNode += "<".concat(child.type, "/>");
      } else if (!childChildren && (!shouldKeepChild || childPropsCount !== 0)) {
        stringNode += "<".concat(childIndex, "></").concat(childIndex, ">");
      } else if (child.props.i18nIsDynamicList) {
        stringNode += "<".concat(childIndex, "></").concat(childIndex, ">");
      } else if (shouldKeepChild && childPropsCount === 1 && typeof childChildren === 'string') {
        stringNode += "<".concat(child.type, ">").concat(childChildren, "</").concat(child.type, ">");
      } else {
        var content = nodesToString(childChildren, i18nOptions);
        stringNode += "<".concat(childIndex, ">").concat(content, "</").concat(childIndex, ">");
      }
    } else if (child === null) {
      warn("Trans: the passed in value is invalid - seems you passed in a null child.");
    } else if (_typeof(child) === 'object') {
      var format = child.format,
          clone = _objectWithoutProperties(child, TransWithoutContext_excluded);

      var keys = Object.keys(clone);

      if (keys.length === 1) {
        var value = format ? "".concat(keys[0], ", ").concat(format) : keys[0];
        stringNode += "{{".concat(value, "}}");
      } else {
        warn("react-i18next: the passed in object contained more than one variable - the object should look like {{ value, format }} where format is optional.", child);
      }
    } else {
      warn("Trans: the passed in value is invalid - seems you passed in a variable like {number} - please pass in variables for interpolation as full objects like {{number}}.", child);
    }
  });
  return stringNode;
}

function renderNodes(children, targetString, i18n, i18nOptions, combinedTOpts, shouldUnescape) {
  if (targetString === '') return [];
  var keepArray = i18nOptions.transKeepBasicHtmlNodesFor || [];
  var emptyChildrenButNeedsHandling = targetString && new RegExp(keepArray.join('|')).test(targetString);
  if (!children && !emptyChildrenButNeedsHandling) return [targetString];
  var data = {};

  function getData(childs) {
    var childrenArray = getAsArray(childs);
    childrenArray.forEach(function (child) {
      if (typeof child === 'string') return;
      if (hasChildren(child)) getData(getChildren(child));else if (_typeof(child) === 'object' && !isValidElement(child)) Object.assign(data, child);
    });
  }

  getData(children);
  var ast = HTML.parse("<0>".concat(targetString, "</0>"));

  var opts = TransWithoutContext_objectSpread(TransWithoutContext_objectSpread({}, data), combinedTOpts);

  function renderInner(child, node, rootReactNode) {
    var childs = getChildren(child);
    var mappedChildren = mapAST(childs, node.children, rootReactNode);
    return hasValidReactChildren(childs) && mappedChildren.length === 0 ? childs : mappedChildren;
  }

  function pushTranslatedJSX(child, inner, mem, i, isVoid) {
    if (child.dummy) child.children = inner;
    mem.push(cloneElement(child, TransWithoutContext_objectSpread(TransWithoutContext_objectSpread({}, child.props), {}, {
      key: i
    }), isVoid ? undefined : inner));
  }

  function mapAST(reactNode, astNode, rootReactNode) {
    var reactNodes = getAsArray(reactNode);
    var astNodes = getAsArray(astNode);
    return astNodes.reduce(function (mem, node, i) {
      var translationContent = node.children && node.children[0] && node.children[0].content && i18n.services.interpolator.interpolate(node.children[0].content, opts, i18n.language);

      if (node.type === 'tag') {
        var tmp = reactNodes[parseInt(node.name, 10)];
        if (!tmp && rootReactNode.length === 1 && rootReactNode[0][node.name]) tmp = rootReactNode[0][node.name];
        if (!tmp) tmp = {};
        var child = Object.keys(node.attrs).length !== 0 ? mergeProps({
          props: node.attrs
        }, tmp) : tmp;
        var isElement = isValidElement(child);
        var isValidTranslationWithChildren = isElement && hasChildren(node, true) && !node.voidElement;
        var isEmptyTransWithHTML = emptyChildrenButNeedsHandling && _typeof(child) === 'object' && child.dummy && !isElement;
        var isKnownComponent = _typeof(children) === 'object' && children !== null && Object.hasOwnProperty.call(children, node.name);

        if (typeof child === 'string') {
          var value = i18n.services.interpolator.interpolate(child, opts, i18n.language);
          mem.push(value);
        } else if (hasChildren(child) || isValidTranslationWithChildren) {
            var inner = renderInner(child, node, rootReactNode);
            pushTranslatedJSX(child, inner, mem, i);
          } else if (isEmptyTransWithHTML) {
          var _inner = mapAST(reactNodes, node.children, rootReactNode);

          mem.push(cloneElement(child, TransWithoutContext_objectSpread(TransWithoutContext_objectSpread({}, child.props), {}, {
            key: i
          }), _inner));
        } else if (Number.isNaN(parseFloat(node.name))) {
          if (isKnownComponent) {
            var _inner2 = renderInner(child, node, rootReactNode);

            pushTranslatedJSX(child, _inner2, mem, i, node.voidElement);
          } else if (i18nOptions.transSupportBasicHtmlNodes && keepArray.indexOf(node.name) > -1) {
            if (node.voidElement) {
              mem.push(createElement(node.name, {
                key: "".concat(node.name, "-").concat(i)
              }));
            } else {
              var _inner3 = mapAST(reactNodes, node.children, rootReactNode);

              mem.push(createElement(node.name, {
                key: "".concat(node.name, "-").concat(i)
              }, _inner3));
            }
          } else if (node.voidElement) {
            mem.push("<".concat(node.name, " />"));
          } else {
            var _inner4 = mapAST(reactNodes, node.children, rootReactNode);

            mem.push("<".concat(node.name, ">").concat(_inner4, "</").concat(node.name, ">"));
          }
        } else if (_typeof(child) === 'object' && !isElement) {
          var content = node.children[0] ? translationContent : null;
          if (content) mem.push(content);
        } else if (node.children.length === 1 && translationContent) {
          mem.push(cloneElement(child, TransWithoutContext_objectSpread(TransWithoutContext_objectSpread({}, child.props), {}, {
            key: i
          }), translationContent));
        } else {
          mem.push(cloneElement(child, TransWithoutContext_objectSpread(TransWithoutContext_objectSpread({}, child.props), {}, {
            key: i
          })));
        }
      } else if (node.type === 'text') {
        var wrapTextNodes = i18nOptions.transWrapTextNodes;

        var _content = shouldUnescape ? i18nOptions.unescape(i18n.services.interpolator.interpolate(node.content, opts, i18n.language)) : i18n.services.interpolator.interpolate(node.content, opts, i18n.language);

        if (wrapTextNodes) {
          mem.push(createElement(wrapTextNodes, {
            key: "".concat(node.name, "-").concat(i)
          }, _content));
        } else {
          mem.push(_content);
        }
      }

      return mem;
    }, []);
  }

  var result = mapAST([{
    dummy: true,
    children: children || []
  }], ast, getAsArray(children || []));
  return getChildren(result[0]);
}

function Trans(_ref) {
  var children = _ref.children,
      count = _ref.count,
      parent = _ref.parent,
      i18nKey = _ref.i18nKey,
      context = _ref.context,
      _ref$tOptions = _ref.tOptions,
      tOptions = _ref$tOptions === void 0 ? {} : _ref$tOptions,
      values = _ref.values,
      defaults = _ref.defaults,
      components = _ref.components,
      ns = _ref.ns,
      i18nFromProps = _ref.i18n,
      tFromProps = _ref.t,
      shouldUnescape = _ref.shouldUnescape,
      additionalProps = _objectWithoutProperties(_ref, _excluded2);

  var i18n = i18nFromProps || getI18n();

  if (!i18n) {
    warnOnce('You will need to pass in an i18next instance by using i18nextReactModule');
    return children;
  }

  var t = tFromProps || i18n.t.bind(i18n) || function (k) {
    return k;
  };

  if (context) tOptions.context = context;

  var reactI18nextOptions = TransWithoutContext_objectSpread(TransWithoutContext_objectSpread({}, getDefaults()), i18n.options && i18n.options.react);

  var namespaces = ns || t.ns || i18n.options && i18n.options.defaultNS;
  namespaces = typeof namespaces === 'string' ? [namespaces] : namespaces || ['translation'];
  var defaultValue = defaults || nodesToString(children, reactI18nextOptions) || reactI18nextOptions.transEmptyNodeValue || i18nKey;
  var hashTransKey = reactI18nextOptions.hashTransKey;
  var key = i18nKey || (hashTransKey ? hashTransKey(defaultValue) : defaultValue);
  var interpolationOverride = values ? tOptions.interpolation : {
    interpolation: TransWithoutContext_objectSpread(TransWithoutContext_objectSpread({}, tOptions.interpolation), {}, {
      prefix: '#$?',
      suffix: '?$#'
    })
  };

  var combinedTOpts = TransWithoutContext_objectSpread(TransWithoutContext_objectSpread(TransWithoutContext_objectSpread(TransWithoutContext_objectSpread({}, tOptions), {}, {
    count: count
  }, values), interpolationOverride), {}, {
    defaultValue: defaultValue,
    ns: namespaces
  });

  var translation = key ? t(key, combinedTOpts) : defaultValue;
  var content = renderNodes(components || children, translation, i18n, reactI18nextOptions, combinedTOpts, shouldUnescape);
  var useAsParent = parent !== undefined ? parent : reactI18nextOptions.defaultTransParent;
  return useAsParent ? createElement(useAsParent, additionalProps, content) : content;
}
;// CONCATENATED MODULE: ./node_modules/react-i18next/dist/es/i18nInstance.js
var i18nInstance;
function setI18n(instance) {
  i18nInstance = instance;
}
function i18nInstance_getI18n() {
  return i18nInstance;
}
;// CONCATENATED MODULE: ./node_modules/react-i18next/dist/es/initReactI18next.js


var initReactI18next = {
  type: '3rdParty',
  init: function init(instance) {
    setDefaults(instance.options.react);
    setI18n(instance);
  }
};
;// CONCATENATED MODULE: ./node_modules/react-i18next/dist/es/context.js




function context_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function context_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { context_ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { context_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }






var context_I18nContext = (0,react.createContext)();
var ReportNamespaces = function () {
  function ReportNamespaces() {
    _classCallCheck(this, ReportNamespaces);

    this.usedNamespaces = {};
  }

  _createClass(ReportNamespaces, [{
    key: "addUsedNamespaces",
    value: function addUsedNamespaces(namespaces) {
      var _this = this;

      namespaces.forEach(function (ns) {
        if (!_this.usedNamespaces[ns]) _this.usedNamespaces[ns] = true;
      });
    }
  }, {
    key: "getUsedNamespaces",
    value: function getUsedNamespaces() {
      return Object.keys(this.usedNamespaces);
    }
  }]);

  return ReportNamespaces;
}();
function context_composeInitialProps(ForComponent) {
  return function (ctx) {
    return new Promise(function (resolve) {
      var i18nInitialProps = getInitialProps();

      if (ForComponent.getInitialProps) {
        ForComponent.getInitialProps(ctx).then(function (componentsInitialProps) {
          resolve(context_objectSpread(context_objectSpread({}, componentsInitialProps), i18nInitialProps));
        });
      } else {
        resolve(i18nInitialProps);
      }
    });
  };
}
function getInitialProps() {
  var i18n = getI18n();
  var namespaces = i18n.reportNamespaces ? i18n.reportNamespaces.getUsedNamespaces() : [];
  var ret = {};
  var initialI18nStore = {};
  i18n.languages.forEach(function (l) {
    initialI18nStore[l] = {};
    namespaces.forEach(function (ns) {
      initialI18nStore[l][ns] = i18n.getResourceBundle(l, ns) || {};
    });
  });
  ret.initialI18nStore = initialI18nStore;
  ret.initialLanguage = i18n.language;
  return ret;
}
;// CONCATENATED MODULE: ./node_modules/react-i18next/dist/es/Trans.js


var Trans_excluded = (/* unused pure expression or super */ null && (["children", "count", "parent", "i18nKey", "context", "tOptions", "values", "defaults", "components", "ns", "i18n", "t", "shouldUnescape"]));

function Trans_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function Trans_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { Trans_ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { Trans_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }





function Trans_Trans(_ref) {
  var children = _ref.children,
      count = _ref.count,
      parent = _ref.parent,
      i18nKey = _ref.i18nKey,
      context = _ref.context,
      _ref$tOptions = _ref.tOptions,
      tOptions = _ref$tOptions === void 0 ? {} : _ref$tOptions,
      values = _ref.values,
      defaults = _ref.defaults,
      components = _ref.components,
      ns = _ref.ns,
      i18nFromProps = _ref.i18n,
      tFromProps = _ref.t,
      shouldUnescape = _ref.shouldUnescape,
      additionalProps = _objectWithoutProperties(_ref, Trans_excluded);

  var _ref2 = useContext(I18nContext) || {},
      i18nFromContext = _ref2.i18n,
      defaultNSFromContext = _ref2.defaultNS;

  var i18n = i18nFromProps || i18nFromContext || getI18n();
  var t = tFromProps || i18n && i18n.t.bind(i18n);
  return TransWithoutContext(Trans_objectSpread({
    children: children,
    count: count,
    parent: parent,
    i18nKey: i18nKey,
    context: context,
    tOptions: tOptions,
    values: values,
    defaults: defaults,
    components: components,
    ns: ns || t && t.ns || defaultNSFromContext || i18n && i18n.options && i18n.options.defaultNS,
    i18n: i18n,
    t: tFromProps,
    shouldUnescape: shouldUnescape
  }, additionalProps));
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js
function _iterableToArrayLimit(arr, i) {
  var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"];
  if (null != _i) {
    var _s,
      _e,
      _x,
      _r,
      _arr = [],
      _n = !0,
      _d = !1;
    try {
      if (_x = (_i = _i.call(arr)).next, 0 === i) {
        if (Object(_i) !== _i) return;
        _n = !1;
      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);
    } catch (err) {
      _d = !0, _e = err;
    } finally {
      try {
        if (!_n && null != _i["return"] && (_r = _i["return"](), Object(_r) !== _r)) return;
      } finally {
        if (_d) throw _e;
      }
    }
    return _arr;
  }
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/slicedToArray.js




function slicedToArray_slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}
;// CONCATENATED MODULE: ./node_modules/react-i18next/dist/es/useTranslation.js



function useTranslation_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function useTranslation_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { useTranslation_ownKeys(Object(source), true).forEach(function (key) { defineProperty_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { useTranslation_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }





var usePrevious = function usePrevious(value, ignore) {
  var ref = (0,react.useRef)();
  (0,react.useEffect)(function () {
    ref.current = ignore ? ref.current : value;
  }, [value, ignore]);
  return ref.current;
};

function useTranslation_useTranslation(ns) {
  var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var i18nFromProps = props.i18n;

  var _ref = (0,react.useContext)(context_I18nContext) || {},
      i18nFromContext = _ref.i18n,
      defaultNSFromContext = _ref.defaultNS;

  var i18n = i18nFromProps || i18nFromContext || i18nInstance_getI18n();
  if (i18n && !i18n.reportNamespaces) i18n.reportNamespaces = new ReportNamespaces();

  if (!i18n) {
    utils_warnOnce('You will need to pass in an i18next instance by using initReactI18next');

    var notReadyT = function notReadyT(k) {
      return Array.isArray(k) ? k[k.length - 1] : k;
    };

    var retNotReady = [notReadyT, {}, false];
    retNotReady.t = notReadyT;
    retNotReady.i18n = {};
    retNotReady.ready = false;
    return retNotReady;
  }

  if (i18n.options.react && i18n.options.react.wait !== undefined) utils_warnOnce('It seems you are still using the old wait option, you may migrate to the new useSuspense behaviour.');

  var i18nOptions = useTranslation_objectSpread(useTranslation_objectSpread(useTranslation_objectSpread({}, defaults_getDefaults()), i18n.options.react), props);

  var useSuspense = i18nOptions.useSuspense,
      keyPrefix = i18nOptions.keyPrefix;
  var namespaces = ns || defaultNSFromContext || i18n.options && i18n.options.defaultNS;
  namespaces = typeof namespaces === 'string' ? [namespaces] : namespaces || ['translation'];
  if (i18n.reportNamespaces.addUsedNamespaces) i18n.reportNamespaces.addUsedNamespaces(namespaces);
  var ready = (i18n.isInitialized || i18n.initializedStoreOnce) && namespaces.every(function (n) {
    return utils_hasLoadedNamespace(n, i18n, i18nOptions);
  });

  function getT() {
    return i18n.getFixedT(null, i18nOptions.nsMode === 'fallback' ? namespaces : namespaces[0], keyPrefix);
  }

  var _useState = (0,react.useState)(getT),
      _useState2 = slicedToArray_slicedToArray(_useState, 2),
      t = _useState2[0],
      setT = _useState2[1];

  var joinedNS = namespaces.join();
  var previousJoinedNS = usePrevious(joinedNS);
  var isMounted = (0,react.useRef)(true);
  (0,react.useEffect)(function () {
    var bindI18n = i18nOptions.bindI18n,
        bindI18nStore = i18nOptions.bindI18nStore;
    isMounted.current = true;

    if (!ready && !useSuspense) {
      utils_loadNamespaces(i18n, namespaces, function () {
        if (isMounted.current) setT(getT);
      });
    }

    if (ready && previousJoinedNS && previousJoinedNS !== joinedNS && isMounted.current) {
      setT(getT);
    }

    function boundReset() {
      if (isMounted.current) setT(getT);
    }

    if (bindI18n && i18n) i18n.on(bindI18n, boundReset);
    if (bindI18nStore && i18n) i18n.store.on(bindI18nStore, boundReset);
    return function () {
      isMounted.current = false;
      if (bindI18n && i18n) bindI18n.split(' ').forEach(function (e) {
        return i18n.off(e, boundReset);
      });
      if (bindI18nStore && i18n) bindI18nStore.split(' ').forEach(function (e) {
        return i18n.store.off(e, boundReset);
      });
    };
  }, [i18n, joinedNS]);
  var isInitial = (0,react.useRef)(true);
  (0,react.useEffect)(function () {
    if (isMounted.current && !isInitial.current) {
      setT(getT);
    }

    isInitial.current = false;
  }, [i18n, keyPrefix]);
  var ret = [t, i18n, ready];
  ret.t = t;
  ret.i18n = i18n;
  ret.ready = ready;
  if (ready) return ret;
  if (!ready && !useSuspense) return ret;
  throw new Promise(function (resolve) {
    utils_loadNamespaces(i18n, namespaces, function () {
      resolve();
    });
  });
}
;// CONCATENATED MODULE: ./node_modules/react-i18next/dist/es/withTranslation.js



var withTranslation_excluded = (/* unused pure expression or super */ null && (["forwardedRef"]));

function withTranslation_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function withTranslation_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { withTranslation_ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { withTranslation_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }




function withTranslation(ns) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  return function Extend(WrappedComponent) {
    function I18nextWithTranslation(_ref) {
      var forwardedRef = _ref.forwardedRef,
          rest = _objectWithoutProperties(_ref, withTranslation_excluded);

      var _useTranslation = useTranslation(ns, withTranslation_objectSpread(withTranslation_objectSpread({}, rest), {}, {
        keyPrefix: options.keyPrefix
      })),
          _useTranslation2 = _slicedToArray(_useTranslation, 3),
          t = _useTranslation2[0],
          i18n = _useTranslation2[1],
          ready = _useTranslation2[2];

      var passDownProps = withTranslation_objectSpread(withTranslation_objectSpread({}, rest), {}, {
        t: t,
        i18n: i18n,
        tReady: ready
      });

      if (options.withRef && forwardedRef) {
        passDownProps.ref = forwardedRef;
      } else if (!options.withRef && forwardedRef) {
        passDownProps.forwardedRef = forwardedRef;
      }

      return createElement(WrappedComponent, passDownProps);
    }

    I18nextWithTranslation.displayName = "withI18nextTranslation(".concat(getDisplayName(WrappedComponent), ")");
    I18nextWithTranslation.WrappedComponent = WrappedComponent;

    var forwardRef = function forwardRef(props, ref) {
      return createElement(I18nextWithTranslation, Object.assign({}, props, {
        forwardedRef: ref
      }));
    };

    return options.withRef ? forwardRefReact(forwardRef) : I18nextWithTranslation;
  };
}
;// CONCATENATED MODULE: ./node_modules/react-i18next/dist/es/Translation.js


var Translation_excluded = (/* unused pure expression or super */ null && (["ns", "children"]));

function Translation(props) {
  var ns = props.ns,
      children = props.children,
      options = _objectWithoutProperties(props, Translation_excluded);

  var _useTranslation = useTranslation(ns, options),
      _useTranslation2 = _slicedToArray(_useTranslation, 3),
      t = _useTranslation2[0],
      i18n = _useTranslation2[1],
      ready = _useTranslation2[2];

  return children(t, {
    i18n: i18n,
    lng: i18n.language
  }, ready);
}
;// CONCATENATED MODULE: ./node_modules/react-i18next/dist/es/I18nextProvider.js


function I18nextProvider(_ref) {
  var i18n = _ref.i18n,
      defaultNS = _ref.defaultNS,
      children = _ref.children;
  var value = useMemo(function () {
    return {
      i18n: i18n,
      defaultNS: defaultNS
    };
  }, [i18n, defaultNS]);
  return createElement(I18nContext.Provider, {
    value: value
  }, children);
}
;// CONCATENATED MODULE: ./node_modules/react-i18next/dist/es/useSSR.js


function useSSR_useSSR(initialI18nStore, initialLanguage) {
  var props = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  var i18nFromProps = props.i18n;

  var _ref = useContext(I18nContext) || {},
      i18nFromContext = _ref.i18n;

  var i18n = i18nFromProps || i18nFromContext || getI18n();
  if (i18n.options && i18n.options.isClone) return;

  if (initialI18nStore && !i18n.initializedStoreOnce) {
    i18n.services.resourceStore.data = initialI18nStore;
    i18n.options.ns = Object.values(initialI18nStore).reduce(function (mem, lngResources) {
      Object.keys(lngResources).forEach(function (ns) {
        if (mem.indexOf(ns) < 0) mem.push(ns);
      });
      return mem;
    }, i18n.options.ns);
    i18n.initializedStoreOnce = true;
    i18n.isInitialized = true;
  }

  if (initialLanguage && !i18n.initializedLanguageOnce) {
    i18n.changeLanguage(initialLanguage);
    i18n.initializedLanguageOnce = true;
  }
}
;// CONCATENATED MODULE: ./node_modules/react-i18next/dist/es/withSSR.js


var withSSR_excluded = (/* unused pure expression or super */ null && (["initialI18nStore", "initialLanguage"]));

function withSSR_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function withSSR_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { withSSR_ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { withSSR_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }





function withSSR() {
  return function Extend(WrappedComponent) {
    function I18nextWithSSR(_ref) {
      var initialI18nStore = _ref.initialI18nStore,
          initialLanguage = _ref.initialLanguage,
          rest = _objectWithoutProperties(_ref, withSSR_excluded);

      useSSR(initialI18nStore, initialLanguage);
      return createElement(WrappedComponent, withSSR_objectSpread({}, rest));
    }

    I18nextWithSSR.getInitialProps = composeInitialProps(WrappedComponent);
    I18nextWithSSR.displayName = "withI18nextSSR(".concat(getDisplayName(WrappedComponent), ")");
    I18nextWithSSR.WrappedComponent = WrappedComponent;
    return I18nextWithSSR;
  };
}
;// CONCATENATED MODULE: ./node_modules/react-i18next/dist/es/index.js









var date = function date() {
  return '';
};
var time = function time() {
  return '';
};
var number = function number() {
  return '';
};
var es_select = function select() {
  return '';
};
var plural = function plural() {
  return '';
};
var selectOrdinal = function selectOrdinal() {
  return '';
};
;// CONCATENATED MODULE: ./src/locale/en.json
const en_namespaceObject = JSON.parse('{"dstack":"Dstack","common":{"loading":"Loading","add":"Add","create":"Create","edit":"Edit","delete":"Remove","match_count_with_value_one":"{{count}} match","match_count_with_value_other":"{{count}} matches","sign_out":"Sign out","cancel":"Cancel","save":"Save","profile":"Profile","copied":"Copied","copy":"Copy"},"auth":{"invalid_token":"Invalid token","you_are_not_logged_in":"You are not logged in","contact_to_administrator":"For getting the authorization token, contact to the administrator"},"navigation":{"settings":"Settings","hubs":"Hubs","users":"Users"},"hubs":{"page_title":"Hubs","search_placeholder":"Find hubs","empty_message_title":"No hubs","empty_message_text":"No hubs to display.","nomatch_message_title":"No matches","nomatch_message_text":"We can\'t find a match.","nomatch_message_button_label":"Clear filter","card":{"backend":"Backend","region":"Region","bucket":"Bucket"},"backend_type":{"aws":"AWS","aws_description":"Amazon Web Services","gcp":"GCP","gcp_description":"Google Cloud Platform","azure":"Azure","azure_description":"Microsoft Azure"},"edit":{"general":"General","edit_backend":"Edit backend","hub_name":"Hub name","backend":"Backend","backend_type":"Type","members_empty_message_title":"No members","members_empty_message_text":"Select hub\'s members","cli":"CLI","aws":{"access_key":"Access key","secret_key":"Secret key","access_key_id":"Access key ID","secret_key_id":"Secret key ID","region_name":"Region","s3_bucket_name":"Bucket","ec2_subnet_id":"Subnet ID"},"members":{"section_title":"Members","name":"User name","role":"Hub role"},"error_notification":"Update hub error","success_notification":"Hub updating is successful"},"create":{"page_title":"Create hub","error_notification":"Create hub error","success_notification":"Hub is created"}},"users":{"page_title":"Users","search_placeholder":"Find members","empty_message_title":"No members","empty_message_text":"No members to display.","nomatch_message_title":"No matches","nomatch_message_text":"We can\'t find a match.","nomatch_message_button_label":"Clear filter","user_name":"User name","token":"Token","global_role":"Global role","account_settings":"Account settings","create":{"page_title":"Create user","error_notification":"Create user error","success_notification":"User is created"},"edit":{"error_notification":"Update user error","success_notification":"User updating is successful","refresh_token_success_notification":"Token rotating is successful","refresh_token_error_notification":"Token rotating error","refresh_token_confirm_title":"Rotate token","refresh_token_confirm_message":"Do you sure want to rotate token?","refresh_token_button_label":"Rotate"}},"users_autosuggest":{"placeholder":"Add member","loading":"Loading users","no_match":"No matches found"},"roles":{"run":"Run","admin":"Admin","read":"Read"},"confirm_dialog":{"title":"Confirm delete","message":"Do you sure want to delete?"}}');
;// CONCATENATED MODULE: ./src/locale/index.ts
instance.use(initReactI18next).init({returnNull:!1,resources:{en:{translation:en_namespaceObject}},fallbackLng:"en",interpolation:{escapeValue:!1}});
;// CONCATENATED MODULE: ./node_modules/react-router-dom/dist/index.js
/**
 * React Router DOM v6.6.2
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */





function react_router_dom_dist_extends() {
  react_router_dom_dist_extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };
  return react_router_dom_dist_extends.apply(this, arguments);
}

function dist_objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

const defaultMethod = "get";
const defaultEncType = "application/x-www-form-urlencoded";
function isHtmlElement(object) {
  return object != null && typeof object.tagName === "string";
}
function isButtonElement(object) {
  return isHtmlElement(object) && object.tagName.toLowerCase() === "button";
}
function isFormElement(object) {
  return isHtmlElement(object) && object.tagName.toLowerCase() === "form";
}
function isInputElement(object) {
  return isHtmlElement(object) && object.tagName.toLowerCase() === "input";
}

function isModifiedEvent(event) {
  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
}

function shouldProcessLinkClick(event, target) {
  return event.button === 0 && ( // Ignore everything but left clicks
  !target || target === "_self") && // Let browser handle "target=_blank" etc.
  !isModifiedEvent(event) // Ignore clicks with modifier keys
  ;
}
/**
 * Creates a URLSearchParams object using the given initializer.
 *
 * This is identical to `new URLSearchParams(init)` except it also
 * supports arrays as values in the object form of the initializer
 * instead of just strings. This is convenient when you need multiple
 * values for a given key, but don't want to use an array initializer.
 *
 * For example, instead of:
 *
 *   let searchParams = new URLSearchParams([
 *     ['sort', 'name'],
 *     ['sort', 'price']
 *   ]);
 *
 * you can do:
 *
 *   let searchParams = createSearchParams({
 *     sort: ['name', 'price']
 *   });
 */

function createSearchParams(init) {
  if (init === void 0) {
    init = "";
  }

  return new URLSearchParams(typeof init === "string" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo, key) => {
    let value = init[key];
    return memo.concat(Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]]);
  }, []));
}
function getSearchParamsForLocation(locationSearch, defaultSearchParams) {
  let searchParams = createSearchParams(locationSearch);

  for (let key of defaultSearchParams.keys()) {
    if (!searchParams.has(key)) {
      defaultSearchParams.getAll(key).forEach(value => {
        searchParams.append(key, value);
      });
    }
  }

  return searchParams;
}
function getFormSubmissionInfo(target, defaultAction, options) {
  let method;
  let action;
  let encType;
  let formData;

  if (isFormElement(target)) {
    let submissionTrigger = options.submissionTrigger;
    method = options.method || target.getAttribute("method") || defaultMethod;
    action = options.action || target.getAttribute("action") || defaultAction;
    encType = options.encType || target.getAttribute("enctype") || defaultEncType;
    formData = new FormData(target);

    if (submissionTrigger && submissionTrigger.name) {
      formData.append(submissionTrigger.name, submissionTrigger.value);
    }
  } else if (isButtonElement(target) || isInputElement(target) && (target.type === "submit" || target.type === "image")) {
    let form = target.form;

    if (form == null) {
      throw new Error("Cannot submit a <button> or <input type=\"submit\"> without a <form>");
    } // <button>/<input type="submit"> may override attributes of <form>


    method = options.method || target.getAttribute("formmethod") || form.getAttribute("method") || defaultMethod;
    action = options.action || target.getAttribute("formaction") || form.getAttribute("action") || defaultAction;
    encType = options.encType || target.getAttribute("formenctype") || form.getAttribute("enctype") || defaultEncType;
    formData = new FormData(form); // Include name + value from a <button>, appending in case the button name
    // matches an existing input name

    if (target.name) {
      formData.append(target.name, target.value);
    }
  } else if (isHtmlElement(target)) {
    throw new Error("Cannot submit element that is not <form>, <button>, or " + "<input type=\"submit|image\">");
  } else {
    method = options.method || defaultMethod;
    action = options.action || defaultAction;
    encType = options.encType || defaultEncType;

    if (target instanceof FormData) {
      formData = target;
    } else {
      formData = new FormData();

      if (target instanceof URLSearchParams) {
        for (let [name, value] of target) {
          formData.append(name, value);
        }
      } else if (target != null) {
        for (let name of Object.keys(target)) {
          formData.append(name, target[name]);
        }
      }
    }
  }

  let {
    protocol,
    host
  } = window.location;
  let url = new URL(action, protocol + "//" + host);
  return {
    url,
    method: method.toLowerCase(),
    encType,
    formData
  };
}

const dist_excluded = (/* unused pure expression or super */ null && (["onClick", "relative", "reloadDocument", "replace", "state", "target", "to", "preventScrollReset"])),
      dist_excluded2 = (/* unused pure expression or super */ null && (["aria-current", "caseSensitive", "className", "end", "style", "to", "children"])),
      _excluded3 = (/* unused pure expression or super */ null && (["reloadDocument", "replace", "method", "action", "onSubmit", "fetcherKey", "routeId", "relative"]));
//#region Routers
////////////////////////////////////////////////////////////////////////////////

function createBrowserRouter(routes, opts) {
  return router_createRouter({
    basename: opts == null ? void 0 : opts.basename,
    history: router_createBrowserHistory({
      window: opts == null ? void 0 : opts.window
    }),
    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),
    routes: enhanceManualRouteObjects(routes)
  }).initialize();
}
function createHashRouter(routes, opts) {
  return createRouter({
    basename: opts == null ? void 0 : opts.basename,
    history: createHashHistory({
      window: opts == null ? void 0 : opts.window
    }),
    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),
    routes: UNSAFE_enhanceManualRouteObjects(routes)
  }).initialize();
}

function parseHydrationData() {
  var _window;

  let state = (_window = window) == null ? void 0 : _window.__staticRouterHydrationData;

  if (state && state.errors) {
    state = react_router_dom_dist_extends({}, state, {
      errors: deserializeErrors(state.errors)
    });
  }

  return state;
}

function deserializeErrors(errors) {
  if (!errors) return null;
  let entries = Object.entries(errors);
  let serialized = {};

  for (let [key, val] of entries) {
    // Hey you!  If you change this, please change the corresponding logic in
    // serializeErrors in react-router-dom/server.tsx :)
    if (val && val.__type === "RouteErrorResponse") {
      serialized[key] = new ErrorResponse(val.status, val.statusText, val.data, val.internal === true);
    } else if (val && val.__type === "Error") {
      let error = new Error(val.message); // Wipe away the client-side stack trace.  Nothing to fill it in with
      // because we don't serialize SSR stack traces for security reasons

      error.stack = "";
      serialized[key] = error;
    } else {
      serialized[key] = val;
    }
  }

  return serialized;
}
/**
 * A `<Router>` for use in web browsers. Provides the cleanest URLs.
 */


function BrowserRouter(_ref) {
  let {
    basename,
    children,
    window
  } = _ref;
  let historyRef = React.useRef();

  if (historyRef.current == null) {
    historyRef.current = createBrowserHistory({
      window,
      v5Compat: true
    });
  }

  let history = historyRef.current;
  let [state, setState] = React.useState({
    action: history.action,
    location: history.location
  });
  React.useLayoutEffect(() => history.listen(setState), [history]);
  return /*#__PURE__*/React.createElement(Router, {
    basename: basename,
    children: children,
    location: state.location,
    navigationType: state.action,
    navigator: history
  });
}
/**
 * A `<Router>` for use in web browsers. Stores the location in the hash
 * portion of the URL so it is not sent to the server.
 */

function HashRouter(_ref2) {
  let {
    basename,
    children,
    window
  } = _ref2;
  let historyRef = React.useRef();

  if (historyRef.current == null) {
    historyRef.current = createHashHistory({
      window,
      v5Compat: true
    });
  }

  let history = historyRef.current;
  let [state, setState] = React.useState({
    action: history.action,
    location: history.location
  });
  React.useLayoutEffect(() => history.listen(setState), [history]);
  return /*#__PURE__*/React.createElement(Router, {
    basename: basename,
    children: children,
    location: state.location,
    navigationType: state.action,
    navigator: history
  });
}
/**
 * A `<Router>` that accepts a pre-instantiated history object. It's important
 * to note that using your own history object is highly discouraged and may add
 * two versions of the history library to your bundles unless you use the same
 * version of the history library that React Router uses internally.
 */

function HistoryRouter(_ref3) {
  let {
    basename,
    children,
    history
  } = _ref3;
  const [state, setState] = React.useState({
    action: history.action,
    location: history.location
  });
  React.useLayoutEffect(() => history.listen(setState), [history]);
  return /*#__PURE__*/React.createElement(Router, {
    basename: basename,
    children: children,
    location: state.location,
    navigationType: state.action,
    navigator: history
  });
}

if (false) {}
/**
 * The public API for rendering a history-aware <a>.
 */

const Link = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function LinkWithRef(_ref4, ref) {
  let {
    onClick,
    relative,
    reloadDocument,
    replace,
    state,
    target,
    to,
    preventScrollReset
  } = _ref4,
      rest = dist_objectWithoutPropertiesLoose(_ref4, dist_excluded);

  let href = useHref(to, {
    relative
  });
  let internalOnClick = useLinkClickHandler(to, {
    replace,
    state,
    target,
    preventScrollReset,
    relative
  });

  function handleClick(event) {
    if (onClick) onClick(event);

    if (!event.defaultPrevented) {
      internalOnClick(event);
    }
  }

  return (
    /*#__PURE__*/
    // eslint-disable-next-line jsx-a11y/anchor-has-content
    React.createElement("a", react_router_dom_dist_extends({}, rest, {
      href: href,
      onClick: reloadDocument ? onClick : handleClick,
      ref: ref,
      target: target
    }))
  );
})));

if (false) {}
/**
 * A <Link> wrapper that knows if it's "active" or not.
 */


const NavLink = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function NavLinkWithRef(_ref5, ref) {
  let {
    "aria-current": ariaCurrentProp = "page",
    caseSensitive = false,
    className: classNameProp = "",
    end = false,
    style: styleProp,
    to,
    children
  } = _ref5,
      rest = dist_objectWithoutPropertiesLoose(_ref5, dist_excluded2);

  let path = useResolvedPath(to, {
    relative: rest.relative
  });
  let location = useLocation();
  let routerState = React.useContext(UNSAFE_DataRouterStateContext);
  let {
    navigator
  } = React.useContext(UNSAFE_NavigationContext);
  let toPathname = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;
  let locationPathname = location.pathname;
  let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;

  if (!caseSensitive) {
    locationPathname = locationPathname.toLowerCase();
    nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;
    toPathname = toPathname.toLowerCase();
  }

  let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(toPathname.length) === "/";
  let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === "/");
  let ariaCurrent = isActive ? ariaCurrentProp : undefined;
  let className;

  if (typeof classNameProp === "function") {
    className = classNameProp({
      isActive,
      isPending
    });
  } else {
    // If the className prop is not a function, we use a default `active`
    // class for <NavLink />s that are active. In v5 `active` was the default
    // value for `activeClassName`, but we are removing that API and can still
    // use the old default behavior for a cleaner upgrade path and keep the
    // simple styling rules working as they currently do.
    className = [classNameProp, isActive ? "active" : null, isPending ? "pending" : null].filter(Boolean).join(" ");
  }

  let style = typeof styleProp === "function" ? styleProp({
    isActive,
    isPending
  }) : styleProp;
  return /*#__PURE__*/React.createElement(Link, react_router_dom_dist_extends({}, rest, {
    "aria-current": ariaCurrent,
    className: className,
    ref: ref,
    style: style,
    to: to
  }), typeof children === "function" ? children({
    isActive,
    isPending
  }) : children);
})));

if (false) {}
/**
 * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except
 * that the interaction with the server is with `fetch` instead of new document
 * requests, allowing components to add nicer UX to the page as the form is
 * submitted and returns with data.
 */


const Form = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef((props, ref) => {
  return /*#__PURE__*/React.createElement(FormImpl, react_router_dom_dist_extends({}, props, {
    ref: ref
  }));
})));

if (false) {}

const FormImpl = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef((_ref6, forwardedRef) => {
  let {
    reloadDocument,
    replace,
    method = defaultMethod,
    action,
    onSubmit,
    fetcherKey,
    routeId,
    relative
  } = _ref6,
      props = dist_objectWithoutPropertiesLoose(_ref6, _excluded3);

  let submit = useSubmitImpl(fetcherKey, routeId);
  let formMethod = method.toLowerCase() === "get" ? "get" : "post";
  let formAction = useFormAction(action, {
    relative
  });

  let submitHandler = event => {
    onSubmit && onSubmit(event);
    if (event.defaultPrevented) return;
    event.preventDefault();
    let submitter = event.nativeEvent.submitter;
    let submitMethod = (submitter == null ? void 0 : submitter.getAttribute("formmethod")) || method;
    submit(submitter || event.currentTarget, {
      method: submitMethod,
      replace,
      relative
    });
  };

  return /*#__PURE__*/React.createElement("form", react_router_dom_dist_extends({
    ref: forwardedRef,
    method: formMethod,
    action: formAction,
    onSubmit: reloadDocument ? onSubmit : submitHandler
  }, props));
})));

if (false) {}
/**
 * This component will emulate the browser's scroll restoration on location
 * changes.
 */


function ScrollRestoration(_ref7) {
  let {
    getKey,
    storageKey
  } = _ref7;
  useScrollRestoration({
    getKey,
    storageKey
  });
  return null;
}

if (false) {} //#endregion
////////////////////////////////////////////////////////////////////////////////
//#region Hooks
////////////////////////////////////////////////////////////////////////////////


var dist_DataRouterHook;

(function (DataRouterHook) {
  DataRouterHook["UseScrollRestoration"] = "useScrollRestoration";
  DataRouterHook["UseSubmitImpl"] = "useSubmitImpl";
  DataRouterHook["UseFetcher"] = "useFetcher";
})(dist_DataRouterHook || (dist_DataRouterHook = {}));

var dist_DataRouterStateHook;

(function (DataRouterStateHook) {
  DataRouterStateHook["UseFetchers"] = "useFetchers";
  DataRouterStateHook["UseScrollRestoration"] = "useScrollRestoration";
})(dist_DataRouterStateHook || (dist_DataRouterStateHook = {}));

function dist_getDataRouterConsoleError(hookName) {
  return hookName + " must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.";
}

function dist_useDataRouterContext(hookName) {
  let ctx = React.useContext(UNSAFE_DataRouterContext);
  !ctx ?  false ? 0 : invariant(false) : void 0;
  return ctx;
}

function dist_useDataRouterState(hookName) {
  let state = React.useContext(UNSAFE_DataRouterStateContext);
  !state ?  false ? 0 : invariant(false) : void 0;
  return state;
}
/**
 * Handles the click behavior for router `<Link>` components. This is useful if
 * you need to create custom `<Link>` components with the same click behavior we
 * use in our exported `<Link>`.
 */


function useLinkClickHandler(to, _temp) {
  let {
    target,
    replace: replaceProp,
    state,
    preventScrollReset,
    relative
  } = _temp === void 0 ? {} : _temp;
  let navigate = useNavigate();
  let location = useLocation();
  let path = useResolvedPath(to, {
    relative
  });
  return React.useCallback(event => {
    if (shouldProcessLinkClick(event, target)) {
      event.preventDefault(); // If the URL hasn't changed, a regular <a> will do a replace instead of
      // a push, so do the same here unless the replace prop is explicitly set

      let replace = replaceProp !== undefined ? replaceProp : createPath(location) === createPath(path);
      navigate(to, {
        replace,
        state,
        preventScrollReset,
        relative
      });
    }
  }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative]);
}
/**
 * A convenient wrapper for reading and writing search parameters via the
 * URLSearchParams interface.
 */

function useSearchParams(defaultInit) {
   false ? 0 : void 0;
  let defaultSearchParamsRef = react.useRef(createSearchParams(defaultInit));
  let location = dist_useLocation();
  let searchParams = react.useMemo(() => getSearchParamsForLocation(location.search, defaultSearchParamsRef.current), [location.search]);
  let navigate = dist_useNavigate();
  let setSearchParams = react.useCallback((nextInit, navigateOptions) => {
    const newSearchParams = createSearchParams(typeof nextInit === "function" ? nextInit(searchParams) : nextInit);
    navigate("?" + newSearchParams, navigateOptions);
  }, [navigate, searchParams]);
  return [searchParams, setSearchParams];
}
/**
 * Returns a function that may be used to programmatically submit a form (or
 * some arbitrary data) to the server.
 */

function useSubmit() {
  return useSubmitImpl();
}

function useSubmitImpl(fetcherKey, routeId) {
  let {
    router
  } = dist_useDataRouterContext(dist_DataRouterHook.UseSubmitImpl);
  let defaultAction = useFormAction();
  return React.useCallback(function (target, options) {
    if (options === void 0) {
      options = {};
    }

    if (typeof document === "undefined") {
      throw new Error("You are calling submit during the server render. " + "Try calling submit within a `useEffect` or callback instead.");
    }

    let {
      method,
      encType,
      formData,
      url
    } = getFormSubmissionInfo(target, defaultAction, options);
    let href = url.pathname + url.search;
    let opts = {
      replace: options.replace,
      formData,
      formMethod: method,
      formEncType: encType
    };

    if (fetcherKey) {
      !(routeId != null) ?  false ? 0 : invariant(false) : void 0;
      router.fetch(fetcherKey, routeId, href, opts);
    } else {
      router.navigate(href, opts);
    }
  }, [defaultAction, router, fetcherKey, routeId]);
}

function useFormAction(action, _temp2) {
  let {
    relative
  } = _temp2 === void 0 ? {} : _temp2;
  let {
    basename
  } = React.useContext(UNSAFE_NavigationContext);
  let routeContext = React.useContext(UNSAFE_RouteContext);
  !routeContext ?  false ? 0 : invariant(false) : void 0;
  let [match] = routeContext.matches.slice(-1); // Shallow clone path so we can modify it below, otherwise we modify the
  // object referenced by useMemo inside useResolvedPath

  let path = react_router_dom_dist_extends({}, useResolvedPath(action ? action : ".", {
    relative
  })); // Previously we set the default action to ".". The problem with this is that
  // `useResolvedPath(".")` excludes search params and the hash of the resolved
  // URL. This is the intended behavior of when "." is specifically provided as
  // the form action, but inconsistent w/ browsers when the action is omitted.
  // https://github.com/remix-run/remix/issues/927


  let location = useLocation();

  if (action == null) {
    // Safe to write to these directly here since if action was undefined, we
    // would have called useResolvedPath(".") which will never include a search
    // or hash
    path.search = location.search;
    path.hash = location.hash; // When grabbing search params from the URL, remove the automatically
    // inserted ?index param so we match the useResolvedPath search behavior
    // which would not include ?index

    if (match.route.index) {
      let params = new URLSearchParams(path.search);
      params.delete("index");
      path.search = params.toString() ? "?" + params.toString() : "";
    }
  }

  if ((!action || action === ".") && match.route.index) {
    path.search = path.search ? path.search.replace(/^\?/, "?index&") : "?index";
  } // If we're operating within a basename, prepend it to the pathname prior
  // to creating the form action.  If this is a root navigation, then just use
  // the raw basename which allows the basename to have full control over the
  // presence of a trailing slash on root actions


  if (basename !== "/") {
    path.pathname = path.pathname === "/" ? basename : joinPaths([basename, path.pathname]);
  }

  return createPath(path);
}

function createFetcherForm(fetcherKey, routeId) {
  let FetcherForm = /*#__PURE__*/React.forwardRef((props, ref) => {
    return /*#__PURE__*/React.createElement(FormImpl, react_router_dom_dist_extends({}, props, {
      ref: ref,
      fetcherKey: fetcherKey,
      routeId: routeId
    }));
  });

  if (false) {}

  return FetcherForm;
}

let fetcherId = 0;
/**
 * Interacts with route loaders and actions without causing a navigation. Great
 * for any interaction that stays on the same page.
 */

function useFetcher() {
  var _route$matches;

  let {
    router
  } = dist_useDataRouterContext(dist_DataRouterHook.UseFetcher);
  let route = React.useContext(UNSAFE_RouteContext);
  !route ?  false ? 0 : invariant(false) : void 0;
  let routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;
  !(routeId != null) ?  false ? 0 : invariant(false) : void 0;
  let [fetcherKey] = React.useState(() => String(++fetcherId));
  let [Form] = React.useState(() => {
    !routeId ?  false ? 0 : invariant(false) : void 0;
    return createFetcherForm(fetcherKey, routeId);
  });
  let [load] = React.useState(() => href => {
    !router ?  false ? 0 : invariant(false) : void 0;
    !routeId ?  false ? 0 : invariant(false) : void 0;
    router.fetch(fetcherKey, routeId, href);
  });
  let submit = useSubmitImpl(fetcherKey, routeId);
  let fetcher = router.getFetcher(fetcherKey);
  let fetcherWithComponents = React.useMemo(() => react_router_dom_dist_extends({
    Form,
    submit,
    load
  }, fetcher), [fetcher, Form, submit, load]);
  React.useEffect(() => {
    // Is this busted when the React team gets real weird and calls effects
    // twice on mount?  We really just need to garbage collect here when this
    // fetcher is no longer around.
    return () => {
      if (!router) {
        console.warn("No fetcher available to clean up from useFetcher()");
        return;
      }

      router.deleteFetcher(fetcherKey);
    };
  }, [router, fetcherKey]);
  return fetcherWithComponents;
}
/**
 * Provides all fetchers currently on the page. Useful for layouts and parent
 * routes that need to provide pending/optimistic UI regarding the fetch.
 */

function useFetchers() {
  let state = dist_useDataRouterState(dist_DataRouterStateHook.UseFetchers);
  return [...state.fetchers.values()];
}
const SCROLL_RESTORATION_STORAGE_KEY = "react-router-scroll-positions";
let savedScrollPositions = {};
/**
 * When rendered inside a RouterProvider, will restore scroll positions on navigations
 */

function useScrollRestoration(_temp3) {
  let {
    getKey,
    storageKey
  } = _temp3 === void 0 ? {} : _temp3;
  let {
    router
  } = dist_useDataRouterContext(dist_DataRouterHook.UseScrollRestoration);
  let {
    restoreScrollPosition,
    preventScrollReset
  } = dist_useDataRouterState(dist_DataRouterStateHook.UseScrollRestoration);
  let location = useLocation();
  let matches = useMatches();
  let navigation = useNavigation(); // Trigger manual scroll restoration while we're active

  React.useEffect(() => {
    window.history.scrollRestoration = "manual";
    return () => {
      window.history.scrollRestoration = "auto";
    };
  }, []); // Save positions on unload

  useBeforeUnload(React.useCallback(() => {
    if (navigation.state === "idle") {
      let key = (getKey ? getKey(location, matches) : null) || location.key;
      savedScrollPositions[key] = window.scrollY;
    }

    sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));
    window.history.scrollRestoration = "auto";
  }, [storageKey, getKey, navigation.state, location, matches])); // Read in any saved scroll locations

  if (typeof document !== "undefined") {
    // eslint-disable-next-line react-hooks/rules-of-hooks
    React.useLayoutEffect(() => {
      try {
        let sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);

        if (sessionPositions) {
          savedScrollPositions = JSON.parse(sessionPositions);
        }
      } catch (e) {// no-op, use default empty object
      }
    }, [storageKey]); // Enable scroll restoration in the router
    // eslint-disable-next-line react-hooks/rules-of-hooks

    React.useLayoutEffect(() => {
      let disableScrollRestoration = router == null ? void 0 : router.enableScrollRestoration(savedScrollPositions, () => window.scrollY, getKey);
      return () => disableScrollRestoration && disableScrollRestoration();
    }, [router, getKey]); // Restore scrolling when state.restoreScrollPosition changes
    // eslint-disable-next-line react-hooks/rules-of-hooks

    React.useLayoutEffect(() => {
      // Explicit false means don't do anything (used for submissions)
      if (restoreScrollPosition === false) {
        return;
      } // been here before, scroll to it


      if (typeof restoreScrollPosition === "number") {
        window.scrollTo(0, restoreScrollPosition);
        return;
      } // try to scroll to the hash


      if (location.hash) {
        let el = document.getElementById(location.hash.slice(1));

        if (el) {
          el.scrollIntoView();
          return;
        }
      } // Opt out of scroll reset if this link requested it


      if (preventScrollReset === true) {
        return;
      } // otherwise go to the top on new locations


      window.scrollTo(0, 0);
    }, [location, restoreScrollPosition, preventScrollReset]);
  }
}
/**
 * Setup a callback to be fired on the window's `beforeunload` event. This is
 * useful for saving some data to `window.localStorage` just before the page
 * refreshes.
 *
 * Note: The `callback` argument should be a function created with
 * `React.useCallback()`.
 */


function useBeforeUnload(callback) {
  React.useEffect(() => {
    window.addEventListener("beforeunload", callback);
    return () => {
      window.removeEventListener("beforeunload", callback);
    };
  }, [callback]);
} //#endregion
////////////////////////////////////////////////////////////////////////////////
//#region Utils
////////////////////////////////////////////////////////////////////////////////

function dist_warning(cond, message) {
  if (!cond) {
    // eslint-disable-next-line no-console
    if (typeof console !== "undefined") console.warn(message);

    try {
      // Welcome to debugging React Router!
      //
      // This error is thrown as a convenience so you can more easily
      // find the source for a warning that appears in the console by
      // enabling "pause on exceptions" in your JavaScript debugger.
      throw new Error(message); // eslint-disable-next-line no-empty
    } catch (e) {}
  }
} //#endregion


//# sourceMappingURL=index.js.map

;// CONCATENATED MODULE: ./src/hooks/useIsMounted.ts
function useIsMounted(){var isMounted=useRef(!1);return useEffect(function(){return isMounted.current=!0,function(){isMounted.current=!1}},[]),useCallback(function(){return isMounted.current},[])}/* harmony default export */ const hooks_useIsMounted = ((/* unused pure expression or super */ null && (useIsMounted)));
;// CONCATENATED MODULE: ./src/hooks/useOnClickOutside.ts
function useOnClickOutside(ref,handler){useEffect(function(){var listener=function(event){!ref.current||ref.current.contains(event.target)||handler(event)};return document.addEventListener("mousedown",listener),document.addEventListener("touchstart",listener),function(){document.removeEventListener("mousedown",listener),document.removeEventListener("touchstart",listener)}},[ref,handler])}/* harmony default export */ const hooks_useOnClickOutside = ((/* unused pure expression or super */ null && (useOnClickOutside)));
;// CONCATENATED MODULE: ./src/hooks/usePrevious.ts
function usePrevious_usePrevious(value){var ref=useRef(value);return useEffect(function(){ref.current=value},[value]),ref.current}/* harmony default export */ const hooks_usePrevious = ((/* unused pure expression or super */ null && (usePrevious_usePrevious)));
;// CONCATENATED MODULE: ./src/hooks/useAppDispatch.ts
var useAppDispatch=function(){return useDispatch_useDispatch()};/* harmony default export */ const hooks_useAppDispatch = (useAppDispatch);
;// CONCATENATED MODULE: ./src/hooks/useAppSelector.ts
var useAppSelector=useSelector_useSelector;/* harmony default export */ const hooks_useAppSelector = (useAppSelector);
;// CONCATENATED MODULE: ./src/hooks/useLocalStorageState.ts
function useLocalStorageState(value,key){var _useState=useState(function(){var storageValue=localStorage.getItem(key);return storageValue?JSON.parse(storageValue):value}),_useState2=_slicedToArray(_useState,2),stateValue=_useState2[0],setState=_useState2[1];return[stateValue,function set(newVal){setState(newVal),localStorage.setItem(key,JSON.stringify(newVal))}]}
;// CONCATENATED MODULE: ./src/hooks/useBreadcrumbs.ts
var useBreadcrumbs=function(breadcrumbs){var dispatch=hooks_useAppDispatch();(0,react.useEffect)(function(){return dispatch(setBreadcrumb(breadcrumbs)),function(){dispatch(setBreadcrumb(null))}},[breadcrumbs])};
;// CONCATENATED MODULE: ./src/hooks/useNotifications.ts
function useNotifications_ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function useNotifications_objectSpread(target){for(var source,i=1;i<arguments.length;i++)source=null==arguments[i]?{}:arguments[i],i%2?useNotifications_ownKeys(Object(source),!0).forEach(function(key){defineProperty_defineProperty(target,key,source[key])}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):useNotifications_ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))});return target}var NOTIFICATION_LIFE_TIME=6e3;var useNotifications=function(){var dispatch=hooks_useAppDispatch(),removeNotification=function(id){dispatch(remove(id))};return[function pushNotification(notification){var id=getUid();dispatch(push(useNotifications_objectSpread(useNotifications_objectSpread({id:id},notification),{},{dismissible:!0,onDismiss:function onDismiss(){removeNotification(id)}}))),setTimeout(function(){removeNotification(id)},NOTIFICATION_LIFE_TIME)}]};
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/collection-hooks/dist/mjs/operations/filter.js
function defaultFilteringFunction(item, filteringText, filteringFields) {
    if (filteringText.length === 0) {
        return true;
    }
    filteringFields = filteringFields || Object.keys(item);
    var lowFilteringText = filteringText.toLowerCase();
    return filteringFields.some(function (key) {
        return String(item[key])
            .toLowerCase()
            .indexOf(lowFilteringText) > -1;
    });
}
function filter(items, filteringText, _a) {
    if (filteringText === void 0) { filteringText = ''; }
    var _b = _a.filteringFunction, filteringFunction = _b === void 0 ? defaultFilteringFunction : _b, fields = _a.fields;
    return items.filter(function (item) { return filteringFunction(item, filteringText, fields); });
}

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/collection-hooks/dist/mjs/date-utils/parse-iso-date.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
function parseIsoDate(isoDate) {
    if (typeof isoDate === 'string') {
        if (isoDate.includes('T')) {
            return new Date(isoDate);
        }
        else {
            return new Date(isoDate + 'T00:00:00');
        }
    }
    return new Date(NaN);
}

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/collection-hooks/dist/mjs/date-utils/compare-dates.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

/**
 * Compares dates up to a day.
 * @param date - item value as Date.
 * @param dateToCompare - token value as ISO8601 date string.
 * @returns diff in milliseconds between date and dateToCompare with a step of one day.
 */
function compareDates(date, dateToCompare) {
    if (date instanceof Date && typeof dateToCompare === 'string') {
        return startOfDay(date).getTime() - startOfDay(parseIsoDate(dateToCompare)).getTime();
    }
    return NaN;
}
/**
 * Compares dates up to a millisecond.
 * @param date - item value as Date.
 * @param dateToCompare - token value as ISO8601 date string.
 * @returns diff in milliseconds between date and dateToCompare with a step of one millisecond.
 */
function compareTimestamps(date, dateToCompare) {
    if (date instanceof Date && typeof dateToCompare === 'string') {
        return date.getTime() - parseIsoDate(dateToCompare).getTime();
    }
    return NaN;
}
function startOfDay(date) {
    var copy = new Date(date.getTime());
    copy.setHours(0, 0, 0, 0);
    return copy;
}

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/collection-hooks/dist/mjs/operations/property-filter.js

var filterUsingOperator = function (itemValue, tokenValue, _a) {
    var operator = _a.operator, match = _a.match;
    if (match === 'date' || match === 'datetime') {
        var comparator = match === 'date' ? compareDates : compareTimestamps;
        var comparisonResult = comparator(itemValue, tokenValue);
        switch (operator) {
            case '<':
                return comparisonResult < 0;
            case '<=':
                return comparisonResult <= 0;
            case '>':
                return comparisonResult > 0;
            case '>=':
                return comparisonResult >= 0;
            case '=':
                return comparisonResult === 0;
            case '!=':
                return comparisonResult !== 0;
            default:
                return false;
        }
    }
    else if (typeof match === 'function') {
        return match(itemValue, tokenValue);
    }
    else if (match) {
        throw new Error('Unsupported `operator.match` type given.');
    }
    switch (operator) {
        case '<':
            return itemValue < tokenValue;
        case '<=':
            return itemValue <= tokenValue;
        case '>':
            return itemValue > tokenValue;
        case '>=':
            return itemValue >= tokenValue;
        case '=':
            // eslint-disable-next-line eqeqeq
            return itemValue == tokenValue;
        case '!=':
            // eslint-disable-next-line eqeqeq
            return itemValue != tokenValue;
        case ':':
            return (itemValue + '').toLowerCase().indexOf((tokenValue + '').toLowerCase()) > -1;
        case '!:':
            return (itemValue + '').toLowerCase().indexOf((tokenValue + '').toLowerCase()) === -1;
    }
};
function freeTextFilter(value, item, operator, filteringPropertiesMap) {
    var matches = Object.keys(filteringPropertiesMap).some(function (propertyKey) {
        var operators = filteringPropertiesMap[propertyKey].operators;
        return (!!operators[operator] && filterUsingOperator(item[propertyKey], value, { operator: ':' }));
    });
    return operator === ':' ? matches : !matches;
}
function filterByToken(token, item, filteringPropertiesMap) {
    if (token.propertyKey) {
        // token refers to a unknown property or uses an unsupported operator
        if (!(token.propertyKey in filteringPropertiesMap) ||
            !(token.operator in filteringPropertiesMap[token.propertyKey].operators)) {
            return false;
        }
        var operator = filteringPropertiesMap[token.propertyKey].operators[token.operator];
        var itemValue = (operator === null || operator === void 0 ? void 0 : operator.match)
            ? item[token.propertyKey]
            : fixupFalsyValues(item[token.propertyKey]);
        return filterUsingOperator(itemValue, token.value, operator !== null && operator !== void 0 ? operator : { operator: token.operator });
    }
    return freeTextFilter(token.value, item, token.operator, filteringPropertiesMap);
}
function property_filter_defaultFilteringFunction(filteringPropertiesMap) {
    return function (item, _a) {
        var tokens = _a.tokens, operation = _a.operation;
        var result = operation === 'and' ? true : !tokens.length;
        for (var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++) {
            var token = tokens_1[_i];
            result =
                operation === 'and'
                    ? result && filterByToken(token, item, filteringPropertiesMap)
                    : result || filterByToken(token, item, filteringPropertiesMap);
        }
        return result;
    };
}
function propertyFilter(items, query, _a) {
    var filteringFunction = _a.filteringFunction, filteringProperties = _a.filteringProperties;
    var filteringPropertiesMap = filteringProperties.reduce(function (acc, _a) {
        var _b;
        var key = _a.key, operators = _a.operators, defaultOperator = _a.defaultOperator;
        var operatorMap = (_b = {}, _b[defaultOperator !== null && defaultOperator !== void 0 ? defaultOperator : '='] = { operator: defaultOperator !== null && defaultOperator !== void 0 ? defaultOperator : '=' }, _b);
        operators === null || operators === void 0 ? void 0 : operators.forEach(function (op) {
            if (typeof op === 'string') {
                operatorMap[op] = { operator: op };
            }
            else {
                operatorMap[op.operator] = { operator: op.operator, match: op.match };
            }
        });
        acc[key] = {
            operators: operatorMap,
        };
        return acc;
    }, {});
    var filter = filteringFunction || property_filter_defaultFilteringFunction(filteringPropertiesMap);
    return items.filter(function (item) { return filter(item, query); });
}
var fixupFalsyValues = function (value) {
    if (typeof value === 'boolean') {
        return value + '';
    }
    if (value || value === 0) {
        return value;
    }
    return '';
};

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/collection-hooks/dist/mjs/operations/sort.js
function getSorter(sortingField) {
    return function (row1, row2) {
        var _a, _b;
        // Use empty string as a default value, because it works well to compare with both strings and numbers:
        // Every number can be casted to a string, but not every string can be casted to a meaningful number,
        // sometimes it is NaN.
        var value1 = (_a = row1[sortingField]) !== null && _a !== void 0 ? _a : '';
        var value2 = (_b = row2[sortingField]) !== null && _b !== void 0 ? _b : '';
        if (typeof value1 === 'string' && typeof value2 === 'string') {
            return value1.localeCompare(value2);
        }
        // use loose comparison to handle inconsistent data types
        // eslint-disable-next-line eqeqeq
        return value1 < value2 ? -1 : value1 == value2 ? 0 : 1;
    };
}
function sort(items, state) {
    if (!state) {
        return items;
    }
    var sortingColumn = state.sortingColumn;
    var comparator = 'sortingComparator' in sortingColumn
        ? sortingColumn.sortingComparator
        : sortingColumn.sortingField
            ? getSorter(sortingColumn.sortingField)
            : undefined;
    if (!comparator) {
        return items;
    }
    var sorted = items.slice();
    var direction = state.isDescending ? -1 : 1;
    sorted.sort(function (a, b) { return comparator(a, b) * direction; });
    return sorted;
}

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/collection-hooks/dist/mjs/operations/paginate.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
var DEFAULT_PAGE_SIZE = 10;
function paginate(items, currentPage, pageSize) {
    if (pageSize === void 0) { pageSize = DEFAULT_PAGE_SIZE; }
    return items.slice((currentPage - 1) * pageSize, currentPage * pageSize);
}
function normalizePageIndex(currentIndex, pagesCount) {
    if (!currentIndex || currentIndex < 1 || currentIndex > pagesCount) {
        return 1;
    }
    return currentIndex;
}
function getPagesCount(items, pageSize) {
    if (pageSize === void 0) { pageSize = DEFAULT_PAGE_SIZE; }
    return Math.ceil(items.length / pageSize);
}

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/collection-hooks/dist/mjs/operations/index.js




function processItems(items, _a, _b) {
    var filteringText = _a.filteringText, sortingState = _a.sortingState, currentPageIndex = _a.currentPageIndex, propertyFilteringQuery = _a.propertyFilteringQuery;
    var filtering = _b.filtering, sorting = _b.sorting, pagination = _b.pagination, propertyFiltering = _b.propertyFiltering;
    var result = items;
    var pagesCount;
    var actualPageIndex;
    var filteredItemsCount;
    if (propertyFiltering) {
        result = propertyFilter(result, propertyFilteringQuery || { tokens: [], operation: 'and' }, propertyFiltering);
        filteredItemsCount = result.length;
    }
    if (filtering) {
        result = filter(result, filteringText, filtering);
        filteredItemsCount = result.length;
    }
    if (sorting) {
        result = sort(result, sortingState);
    }
    var allPageResult = result;
    if (pagination) {
        pagesCount = getPagesCount(result, pagination.pageSize);
        actualPageIndex = normalizePageIndex(currentPageIndex, pagesCount);
        result = paginate(result, actualPageIndex, pagination.pageSize);
    }
    return { items: result, allPageItems: allPageResult, pagesCount: pagesCount, filteredItemsCount: filteredItemsCount, actualPageIndex: actualPageIndex };
}
var getTrackableValue = function (trackBy, item) {
    if (!trackBy) {
        return item;
    }
    if (typeof trackBy === 'function') {
        return trackBy(item);
    }
    return item[trackBy];
};
var processSelectedItems = function (items, selectedItems, trackBy) {
    var selectedSet = new Set();
    selectedItems.forEach(function (item) { return selectedSet.add(getTrackableValue(trackBy, item)); });
    return items.filter(function (item) { return selectedSet.has(getTrackableValue(trackBy, item)); });
};
var itemsAreEqual = function (items1, items2, trackBy) {
    if (items1.length !== items2.length) {
        return false;
    }
    var set1 = new Set();
    items1.forEach(function (item) { return set1.add(getTrackableValue(trackBy, item)); });
    return items2.every(function (item) { return set1.has(getTrackableValue(trackBy, item)); });
};

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/collection-hooks/dist/mjs/utils.js
var __assign = (undefined && undefined.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};

function collectionReducer(state, action) {
    var newState = __assign({}, state);
    switch (action.type) {
        case 'selection':
            newState.selectedItems = action.selectedItems;
            break;
        case 'filtering':
            newState.currentPageIndex = 1;
            newState.filteringText = action.filteringText;
            break;
        case 'sorting':
            newState.currentPageIndex = 1;
            newState.sortingState = action.sortingState;
            break;
        case 'pagination':
            newState.currentPageIndex = action.pageIndex;
            break;
        case 'property-filtering':
            newState.currentPageIndex = 1;
            newState.propertyFilteringQuery = action.query;
            break;
    }
    return newState;
}
function createActions(_a) {
    var dispatch = _a.dispatch, collectionRef = _a.collectionRef;
    return {
        setFiltering: function (filteringText) {
            dispatch({ type: 'filtering', filteringText: filteringText });
            collectionRef.current && collectionRef.current.scrollToTop();
        },
        setSorting: function (state) {
            dispatch({ type: 'sorting', sortingState: state });
            collectionRef.current && collectionRef.current.scrollToTop();
        },
        setCurrentPage: function (pageIndex) {
            dispatch({ type: 'pagination', pageIndex: pageIndex });
            collectionRef.current && collectionRef.current.scrollToTop();
        },
        setSelectedItems: function (selectedItems) {
            dispatch({ type: 'selection', selectedItems: selectedItems });
        },
        setPropertyFiltering: function (query) {
            dispatch({ type: 'property-filtering', query: query });
            collectionRef.current && collectionRef.current.scrollToTop();
        },
    };
}
function createSyncProps(options, _a, actions, collectionRef, _b) {
    var _c, _d;
    var filteringText = _a.filteringText, sortingState = _a.sortingState, selectedItems = _a.selectedItems, currentPageIndex = _a.currentPageIndex, propertyFilteringQuery = _a.propertyFilteringQuery;
    var pagesCount = _b.pagesCount, actualPageIndex = _b.actualPageIndex, allItems = _b.allItems, allPageItems = _b.allPageItems;
    var empty = options.filtering
        ? allItems.length
            ? options.filtering.noMatch
            : options.filtering.empty
        : null;
    empty = options.propertyFiltering
        ? allItems.length
            ? options.propertyFiltering.noMatch
            : options.propertyFiltering.empty
        : empty;
    var filteringOptions = options.propertyFiltering
        ? options.propertyFiltering.filteringProperties.reduce(function (acc, property) {
            Object.keys(allItems.reduce(function (acc, item) {
                acc['' + fixupFalsyValues(item[property.key])] = true;
                return acc;
            }, {})).forEach(function (value) {
                if (value !== '') {
                    acc.push({
                        propertyKey: property.key,
                        value: value,
                    });
                }
            });
            return acc;
        }, [])
        : [];
    return {
        collectionProps: __assign(__assign(__assign(__assign({ empty: empty }, (options.sorting
            ? {
                onSortingChange: function (_a) {
                    var detail = _a.detail;
                    actions.setSorting(detail);
                },
                sortingColumn: sortingState === null || sortingState === void 0 ? void 0 : sortingState.sortingColumn,
                sortingDescending: sortingState === null || sortingState === void 0 ? void 0 : sortingState.isDescending,
            }
            : {})), (options.selection
            ? {
                onSelectionChange: function (_a) {
                    var selectedItems = _a.detail.selectedItems;
                    actions.setSelectedItems(selectedItems);
                },
                selectedItems: selectedItems,
                trackBy: options.selection.trackBy,
            }
            : {})), { ref: collectionRef }), (((_c = options.pagination) === null || _c === void 0 ? void 0 : _c.pageSize)
            ? {
                totalItemsCount: allPageItems.length,
                firstIndex: ((actualPageIndex !== null && actualPageIndex !== void 0 ? actualPageIndex : currentPageIndex) - 1) * options.pagination.pageSize + 1,
            }
            : {})),
        filterProps: {
            filteringText: filteringText,
            onChange: function (_a) {
                var filteringText = _a.detail.filteringText;
                actions.setFiltering(filteringText);
            },
        },
        propertyFilterProps: {
            query: propertyFilteringQuery,
            onChange: function (_a) {
                var query = _a.detail;
                actions.setPropertyFiltering(query);
            },
            filteringProperties: ((_d = options.propertyFiltering) === null || _d === void 0 ? void 0 : _d.filteringProperties) || [],
            filteringOptions: filteringOptions,
        },
        paginationProps: {
            currentPageIndex: actualPageIndex !== null && actualPageIndex !== void 0 ? actualPageIndex : currentPageIndex,
            // pagesCount is always calculated when options.pagination is present
            pagesCount: pagesCount,
            onChange: function (_a) {
                var currentPageIndex = _a.detail.currentPageIndex;
                actions.setCurrentPage(currentPageIndex);
            },
        },
    };
}

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/collection-hooks/dist/mjs/use-collection-state.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0


function useCollectionState(options, collectionRef) {
    var _a, _b, _c, _d, _e, _f, _g, _h, _j;
    var _k = (0,react.useReducer)(collectionReducer, {
        selectedItems: (_b = (_a = options.selection) === null || _a === void 0 ? void 0 : _a.defaultSelectedItems) !== null && _b !== void 0 ? _b : [],
        sortingState: (_c = options.sorting) === null || _c === void 0 ? void 0 : _c.defaultState,
        currentPageIndex: (_e = (_d = options.pagination) === null || _d === void 0 ? void 0 : _d.defaultPage) !== null && _e !== void 0 ? _e : 1,
        filteringText: (_g = (_f = options.filtering) === null || _f === void 0 ? void 0 : _f.defaultFilteringText) !== null && _g !== void 0 ? _g : '',
        propertyFilteringQuery: (_j = (_h = options.propertyFiltering) === null || _h === void 0 ? void 0 : _h.defaultQuery) !== null && _j !== void 0 ? _j : { tokens: [], operation: 'and' },
    }), state = _k[0], dispatch = _k[1];
    return [
        state,
        createActions({
            dispatch: dispatch,
            collectionRef: collectionRef,
        }),
    ];
}

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/collection-hooks/dist/mjs/use-collection.js
var use_collection_assign = (undefined && undefined.__assign) || function () {
    use_collection_assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return use_collection_assign.apply(this, arguments);
};
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0




function useCollection(allItems, options) {
    var collectionRef = (0,react.useRef)(null);
    var _a = useCollectionState(options, collectionRef), state = _a[0], actions = _a[1];
    var _b = processItems(allItems, state, options), items = _b.items, allPageItems = _b.allPageItems, pagesCount = _b.pagesCount, filteredItemsCount = _b.filteredItemsCount, actualPageIndex = _b.actualPageIndex;
    if (options.selection && !options.selection.keepSelection) {
        var newSelectedItems = processSelectedItems(items, state.selectedItems, options.selection.trackBy);
        if (!itemsAreEqual(newSelectedItems, state.selectedItems, options.selection.trackBy)) {
            // This is a recommended pattern for how to handle the state, dependent on the incoming props
            // https://reactjs.org/docs/hooks-faq.html#how-do-i-implement-getderivedstatefromprops
            actions.setSelectedItems(newSelectedItems);
        }
    }
    return use_collection_assign({ items: items, allPageItems: allPageItems, filteredItemsCount: filteredItemsCount, actions: actions }, createSyncProps(options, state, actions, collectionRef, {
        actualPageIndex: actualPageIndex,
        pagesCount: pagesCount,
        allItems: allItems,
        allPageItems: allPageItems,
    }));
}

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/collection-hooks/dist/mjs/index.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0


;// CONCATENATED MODULE: ./src/hooks/index.ts
// cloudscape

;// CONCATENATED MODULE: ./node_modules/tslib/tslib.es6.js
/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function tslib_es6_extends(d, b) {
    if (typeof b !== "function" && b !== null)
        throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var tslib_es6_assign = function() {
    tslib_es6_assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return tslib_es6_assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function tslib_es6_generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

var __createBinding = Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});

function __exportStar(m, o) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

/** @deprecated */
function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

/** @deprecated */
function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
}

function tslib_es6_spreadArray(to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
}

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

var __setModuleDefault = Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
}

function __classPrivateFieldSet(receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
}

function __classPrivateFieldIn(state, receiver) {
    if (receiver === null || (typeof receiver !== "object" && typeof receiver !== "function")) throw new TypeError("Cannot use 'in' operator on non-object");
    return typeof state === "function" ? receiver === state : state.has(receiver);
}

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/base-component/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/base-component/styles.css.js


    /* harmony default export */ const styles_css = ({});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/environment.js

    var PACKAGE_VERSION = '3.0.0 (5609551)';
    var THEME = 'open-source-visual-refresh';
    var ALWAYS_VISUAL_REFRESH = true;

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/base-component/index.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
// these styles needed to be imported for every public component


// expose version info, so it can be checked using the browser devtools
if (typeof window !== 'undefined') {
    if (!window.awsuiVersions) {
        window.awsuiVersions = {};
    }
    if (!window.awsuiVersions.components) {
        window.awsuiVersions.components = [];
    }
    window.awsuiVersions.components.push(PACKAGE_VERSION);
}
function getBaseProps(props) {
    var baseProps = {};
    Object.keys(props).forEach(function (prop) {
        if (prop === 'id' || prop === 'className' || prop.match(/^data-/)) {
            baseProps[prop] = props[prop];
        }
    });
    return baseProps;
}
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/clsx/dist/clsx.m.js
function clsx_m_r(e){var t,f,n="";if("string"==typeof e||"number"==typeof e)n+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=clsx_m_r(e[t]))&&(n&&(n+=" "),n+=f);else for(t in e)e[t]&&(n&&(n+=" "),n+=t);return n}function clsx(){for(var e,t,f=0,n="";f<arguments.length;)(e=arguments[f++])&&(t=clsx_m_r(e))&&(n&&(n+=" "),n+=t);return n}/* harmony default export */ const clsx_m = (clsx);
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/events/index.js
var CustomEventStub = /** @class */ (function () {
    function CustomEventStub(cancelable, detail) {
        if (cancelable === void 0) { cancelable = false; }
        if (detail === void 0) { detail = null; }
        this.cancelable = cancelable;
        this.detail = detail;
        this.defaultPrevented = false;
        this.cancelBubble = false;
    }
    CustomEventStub.prototype.preventDefault = function () {
        this.defaultPrevented = true;
    };
    CustomEventStub.prototype.stopPropagation = function () {
        this.cancelBubble = true;
    };
    return CustomEventStub;
}());
function createCustomEvent(_a) {
    var cancelable = _a.cancelable, detail = _a.detail;
    return new CustomEventStub(cancelable, detail);
}
function fireNonCancelableEvent(handler, detail) {
    if (!handler) {
        return;
    }
    var event = createCustomEvent({ cancelable: false, detail: detail });
    handler(event);
}
function fireCancelableEvent(handler, detail, sourceEvent) {
    if (!handler) {
        return false;
    }
    var event = createCustomEvent({ cancelable: true, detail: detail });
    handler(event);
    if (event.defaultPrevented && sourceEvent) {
        sourceEvent.preventDefault();
    }
    if (event.cancelBubble && sourceEvent) {
        sourceEvent.stopPropagation();
    }
    return event.defaultPrevented;
}
function fireKeyboardEvent(handler, reactEvent) {
    return fireCancelableEvent(handler, {
        keyCode: reactEvent.keyCode,
        key: reactEvent.key,
        ctrlKey: reactEvent.ctrlKey,
        shiftKey: reactEvent.shiftKey,
        altKey: reactEvent.altKey,
        metaKey: reactEvent.metaKey
    }, reactEvent);
}
var isMouseEvent = function (e) {
    return e.button !== undefined;
};
function isPlainLeftClick(event) {
    return (event &&
        (!isMouseEvent(event) || event.button === 0) &&
        !event.ctrlKey &&
        !event.altKey &&
        !event.shiftKey &&
        !event.metaKey);
}
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/keycode.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
// When updating the list of key codes, don't forget
// to modify corresponding list in test-utils
// to avoid failing unit tests
var KeyCode;
(function (KeyCode) {
    KeyCode[KeyCode["pageUp"] = 33] = "pageUp";
    KeyCode[KeyCode["pageDown"] = 34] = "pageDown";
    KeyCode[KeyCode["end"] = 35] = "end";
    KeyCode[KeyCode["home"] = 36] = "home";
    KeyCode[KeyCode["backspace"] = 8] = "backspace";
    KeyCode[KeyCode["space"] = 32] = "space";
    KeyCode[KeyCode["down"] = 40] = "down";
    KeyCode[KeyCode["left"] = 37] = "left";
    KeyCode[KeyCode["right"] = 39] = "right";
    KeyCode[KeyCode["up"] = 38] = "up";
    KeyCode[KeyCode["escape"] = 27] = "escape";
    KeyCode[KeyCode["enter"] = 13] = "enter";
    KeyCode[KeyCode["tab"] = 9] = "tab";
    KeyCode[KeyCode["shift"] = 16] = "shift";
    KeyCode[KeyCode["control"] = 17] = "control";
    KeyCode[KeyCode["alt"] = 18] = "alt";
    KeyCode[KeyCode["meta"] = 91] = "meta";
})(KeyCode || (KeyCode = {}));
//# sourceMappingURL=keycode.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/hooks/use-singleton-handler/index.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0


function createSingletonHandler(factory) {
    var listeners = [];
    var callback = function (value) {
        (0,react_dom.unstable_batchedUpdates)(function () {
            for (var _i = 0, listeners_1 = listeners; _i < listeners_1.length; _i++) {
                var listener = listeners_1[_i];
                listener(value);
            }
        });
    };
    var cleanup;
    return function useSingleton(listener) {
        (0,react.useEffect)(function () {
            if (listeners.length === 0) {
                cleanup = factory(callback);
            }
            listeners.push(listener);
            return function () {
                listeners.splice(listeners.indexOf(listener), 1);
                if (listeners.length === 0) {
                    cleanup();
                    cleanup = undefined;
                }
            };
            // register handlers only on mount
            // eslint-disable-next-line react-hooks/exhaustive-deps
        }, []);
    };
}
function createSingletonState(_a) {
    var factory = _a.factory, initialState = _a.initialState;
    var useSingleton = createSingletonHandler(factory);
    var value = initialState;
    return function useSingletonState() {
        var _a = (0,react.useState)(value), state = _a[0], setState = _a[1];
        useSingleton(function (newValue) {
            value = newValue;
            setState(newValue);
        });
        return state;
    };
}
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/hooks/focus-visible/index.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0


var useFocusSingleton = createSingletonState({
    initialState: false,
    factory: function (setIsKeyboard) {
        var handleMousedown = function () { return setIsKeyboard(false); };
        var handleKeydown = function (event) {
            // we do not want to highlight focused element
            // when special keys are pressed
            var isSpecialKey = [KeyCode.shift, KeyCode.alt, KeyCode.control, KeyCode.meta].indexOf(event.keyCode) > -1;
            if (!isSpecialKey) {
                setIsKeyboard(true);
            }
        };
        document.addEventListener('mousedown', handleMousedown);
        document.addEventListener('keydown', handleKeydown);
        return function () {
            document.removeEventListener('mousedown', handleMousedown);
            document.removeEventListener('keydown', handleKeydown);
        };
    }
});
function useFocusVisible() {
    var visible = useFocusSingleton();
    return visible ? { 'data-awsui-focus-visible': visible } : {};
}
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/hooks/forward-focus/index.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

function useForwardFocus(mainRef, controlRef) {
    (0,react.useImperativeHandle)(mainRef, function () { return ({
        focus: function () {
            var _a;
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            (_a = controlRef.current) === null || _a === void 0 ? void 0 : _a.focus.apply(_a, args);
        }
    }); }, [controlRef]);
}
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/button/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/button/styles.css.js


    /* harmony default export */ const button_styles_css = ({
  "content": "awsui_content_vjswe_kz1sh_97",
  "button": "awsui_button_vjswe_kz1sh_101",
  "variant-normal": "awsui_variant-normal_vjswe_kz1sh_124",
  "is-activated": "awsui_is-activated_vjswe_kz1sh_137",
  "variant-icon": "awsui_variant-icon_vjswe_kz1sh_164",
  "variant-modal-dismiss": "awsui_variant-modal-dismiss_vjswe_kz1sh_164",
  "variant-flashbar-icon": "awsui_variant-flashbar-icon_vjswe_kz1sh_164",
  "variant-inline-icon": "awsui_variant-inline-icon_vjswe_kz1sh_182",
  "disabled": "awsui_disabled_vjswe_kz1sh_200",
  "variant-primary": "awsui_variant-primary_vjswe_kz1sh_208",
  "variant-link": "awsui_variant-link_vjswe_kz1sh_292",
  "variant-breadcrumb-group": "awsui_variant-breadcrumb-group_vjswe_kz1sh_712",
  "variant-menu-trigger": "awsui_variant-menu-trigger_vjswe_kz1sh_799",
  "button-no-text": "awsui_button-no-text_vjswe_kz1sh_883",
  "button-no-wrap": "awsui_button-no-wrap_vjswe_kz1sh_887",
  "icon-left": "awsui_icon-left_vjswe_kz1sh_903",
  "icon-right": "awsui_icon-right_vjswe_kz1sh_908",
  "icon": "awsui_icon_vjswe_kz1sh_903"
});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/is-development.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
/**
 * Whether the bundle is a development bundle.
 * Only use this in an if condition and on its own! This will help bundlers find
 * and remove the conditional statement for production bundles.
 */
var isDevelopment = "production" !== 'production';
//# sourceMappingURL=is-development.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/logging.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

var messageCache = {};
function logging_warnOnce(component, message) {
    if (isDevelopment) {
        var warning = "[AwsUi] [".concat(component, "] ").concat(message);
        if (!messageCache[warning]) {
            messageCache[warning] = true;
            console.warn(warning);
        }
    }
}
//# sourceMappingURL=logging.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/icon/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/icon/styles.css.js


    /* harmony default export */ const icon_styles_css = ({
  "icon": "awsui_icon_h11ix_k54ie_98",
  "icon-flex-height": "awsui_icon-flex-height_h11ix_k54ie_104",
  "size-small": "awsui_size-small_h11ix_k54ie_129",
  "size-small-mapped-height": "awsui_size-small-mapped-height_h11ix_k54ie_133",
  "size-normal": "awsui_size-normal_h11ix_k54ie_147",
  "size-normal-mapped-height": "awsui_size-normal-mapped-height_h11ix_k54ie_151",
  "size-medium": "awsui_size-medium_h11ix_k54ie_165",
  "size-medium-mapped-height": "awsui_size-medium-mapped-height_h11ix_k54ie_169",
  "size-big": "awsui_size-big_h11ix_k54ie_183",
  "size-big-mapped-height": "awsui_size-big-mapped-height_h11ix_k54ie_187",
  "size-large": "awsui_size-large_h11ix_k54ie_201",
  "size-large-mapped-height": "awsui_size-large-mapped-height_h11ix_k54ie_205",
  "variant-normal": "awsui_variant-normal_h11ix_k54ie_219",
  "variant-disabled": "awsui_variant-disabled_h11ix_k54ie_222",
  "variant-inverted": "awsui_variant-inverted_h11ix_k54ie_225",
  "variant-subtle": "awsui_variant-subtle_h11ix_k54ie_228",
  "variant-warning": "awsui_variant-warning_h11ix_k54ie_231",
  "variant-error": "awsui_variant-error_h11ix_k54ie_234",
  "variant-success": "awsui_variant-success_h11ix_k54ie_237",
  "variant-link": "awsui_variant-link_h11ix_k54ie_240",
  "badge": "awsui_badge_h11ix_k54ie_244"
});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/icon/icons.js
/* harmony default export */ const icons = ({
  "add-plus": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" focusable=\"false\" aria-hidden=\"true\"><path d=\"M8 1v14M15 8H1\"/></svg>","angle-down": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" focusable=\"false\" aria-hidden=\"true\"><path d=\"m1 4 7 7 7-7\"/></svg>","angle-left-double": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" focusable=\"false\" aria-hidden=\"true\"><path d=\"M14 1 7 8l7 7\"/><path d=\"M9 1 2 8l7 7\"/></svg>","angle-left": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" focusable=\"false\" aria-hidden=\"true\"><path d=\"M12 1 5 8l7 7\"/></svg>","angle-right-double": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" focusable=\"false\" aria-hidden=\"true\"><path d=\"m2 1 7 7-7 7\"/><path d=\"m7 1 7 7-7 7\"/></svg>","angle-right": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" focusable=\"false\" aria-hidden=\"true\"><path d=\"m4 1 7 7-7 7\"/></svg>","angle-up": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" focusable=\"false\" aria-hidden=\"true\"><path d=\"m1 12 7-7 7 7\"/></svg>","arrow-left": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" focusable=\"false\" aria-hidden=\"true\"><path d=\"M9 1 2 8l7 7M2 8h13\"/></svg>","audio-full": "<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" focusable=\"false\" aria-hidden=\"true\"><path class=\"stroke-linejoin-round\" d=\"M7 15V1L1 6v4l6 5ZM15 3v10M11 5v6\"/></svg>","audio-half": "<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" focusable=\"false\" aria-hidden=\"true\"><path class=\"stroke-linejoin-round\" d=\"M7 15V1L1 6v4l6 5ZM11 5v6\"/></svg>","audio-off": "<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" focusable=\"false\" aria-hidden=\"true\"><path class=\"stroke-linejoin-round\" d=\"M7 15V1L1 6v4l6 5Z\"/><path d=\"m15.01 5.75-4.5 4.5M15.01 10.25l-4.5-4.5\"/></svg>","bug": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" focusable=\"false\" aria-hidden=\"true\"><path class=\"stroke-linejoin-round\" d=\"M5 5h6a1 1 0 0 1 1 1v5.5A3.5 3.5 0 0 1 8.5 15h-1A3.5 3.5 0 0 1 4 11.5V6a1 1 0 0 1 1-1ZM5 5a3 3 0 0 1 6 0\"/><path d=\"M12 9h3M1 9h3M12 12h2l1 2M4 12H2l-1 2M12 6h2l1-2M4 6H2L1 4\"/></svg>","calendar": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" focusable=\"false\" aria-hidden=\"true\"><path class=\"stroke-linejoin-round\" d=\"M2 2h12v12H2z\"/><path d=\"M4.99 8H5v.01h-.01zM7.99 8H8v.01h-.01zM10.99 8H11v.01h-.01zM4.99 5H5v.01h-.01zM7.99 5H8v.01h-.01zM10.99 5H11v.01h-.01zM4.99 11H5v.01h-.01zM7.99 11H8v.01h-.01z\"/></svg>","call": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" focusable=\"false\" aria-hidden=\"true\"><path d=\"M9 2c2.8 0 5 2.2 5 5M7.9 13c1.3 1.3 3.5 1.3 4.8 0l1-1c.4-.4.4-1 0-1.4l-1.5-1.5c-.3-.3-1-.2-1.3.1l-.1.1c-.5.5-1.4.5-2 0L6.6 7.2c-.5-.5-.5-1.4 0-2l.1-.1c.3-.3.4-1 .1-1.3L5.3 2.3c-.3-.4-1-.4-1.3 0l-1 1C1.7 4.6 1.7 6.7 3 8.1L7.9 13z\"/></svg>","caret-down-filled": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" focusable=\"false\" aria-hidden=\"true\"><path class=\"filled stroke-linejoin-round\" d=\"M4 5h8l-4 6-4-6z\"/></svg>","caret-down": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" focusable=\"false\" aria-hidden=\"true\"><path class=\"stroke-linejoin-round\" d=\"M4 5h8l-4 6-4-6z\"/></svg>","caret-left-filled": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" focusable=\"false\" aria-hidden=\"true\"><path class=\"filled stroke-linejoin-round\" d=\"M11 4v8L5 8l6-4z\"/></svg>","caret-right-filled": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" focusable=\"false\" aria-hidden=\"true\"><path class=\"filled stroke-linejoin-round\" d=\"M5 4v8l6-4-6-4z\"/></svg>","caret-up-filled": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" focusable=\"false\" aria-hidden=\"true\"><path class=\"filled stroke-linejoin-round\" d=\"M4 11h8L8 5l-4 6z\"/></svg>","caret-up": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" focusable=\"false\" aria-hidden=\"true\"><path class=\"stroke-linejoin-round\" d=\"M4 11h8L8 5l-4 6z\"/></svg>","check": "<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" focusable=\"false\" aria-hidden=\"true\"><path d=\"m14.254 4.254-8.25 8.25L6 12.5l-.004.004-4.25-4.25.008-.008L6 12.493l8.246-8.247.008.008Z\"/></svg>","close": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" focusable=\"false\" aria-hidden=\"true\"><path d=\"m2 2 12 12M14 2 2 14\"/></svg>","contact": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" focusable=\"false\" aria-hidden=\"true\"><path class=\"stroke-linejoin-round stroke-linecap-round\" d=\"M2 12.286h5.143L8.857 14l1.714-1.714H14V2H2v10.286z\"/><path class=\"stroke-linecap-round\" d=\"M4.99 7H5v.01h-.01zM7.99 7H8v.01h-.01zM10.99 7H11v.01h-.01z\"/></svg>","copy": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" focusable=\"false\" aria-hidden=\"true\"><path class=\"stroke-linejoin-round\" d=\"M2 5h9v9H2z\"/><path class=\"stroke-linejoin-round\" d=\"M5 5V2h9v9h-3\"/></svg>","delete-marker": "<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" focusable=\"false\" aria-hidden=\"true\"><path class=\"stroke-linejoin-round\" d=\"M3 8V1h6l5 5v9H9\"/><path d=\"M8 1v6h6\"/><path class=\"stroke-linejoin-round\" d=\"m6.87 14.38-4.24-4.25M2.63 14.38l4.24-4.25\"/></svg>","download": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" focusable=\"false\" aria-hidden=\"true\"><path class=\"stroke-linejoin-round\" d=\"M11 2h3v12H2V2h3\"/><path d=\"m4 6 4 4 4-4M8 1v9\"/></svg>","edit": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" focusable=\"false\" aria-hidden=\"true\"><path class=\"stroke-linejoin-round\" d=\"M13 8v6H3V2h6.5M6 10l8-8\"/></svg>","ellipsis": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" focusable=\"false\" aria-hidden=\"true\"><circle class=\"filled\" cx=\"8\" cy=\"2.5\" r=\".5\"/><circle class=\"filled\" cx=\"8\" cy=\"8\" r=\".5\"/><circle class=\"filled\" cx=\"8\" cy=\"13.5\" r=\".5\"/></svg>","envelope": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" focusable=\"false\" aria-hidden=\"true\"><path class=\"stroke-linejoin-round\" d=\"M1 2h14v12H1z\"/><path class=\"stroke-linejoin-round\" d=\"m1 4 7 6 7-6\"/></svg>","expand": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" focusable=\"false\" aria-hidden=\"true\"><path d=\"M9 2h5v5M7 2H2v5M7 14H2V9M9 14h5V9M2 2l12 12M14 2 2 14\"/></svg>","external": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" focusable=\"false\" aria-hidden=\"true\"><path class=\"stroke-linecap-square\" d=\"M10 2h4v4\"/><path d=\"m6 10 8-8\"/><path class=\"stroke-linejoin-round\" d=\"M14 9.048V14H2V2h5\"/></svg>","file-open": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" focusable=\"false\" aria-hidden=\"true\"><path d=\"M8 1v4a1 1 0 0 0 1 1h4\"/><path class=\"stroke-linejoin-round\" d=\"M3 15h10V5L9 1H3v14z\"/><path d=\"m3 8 7 7\"/></svg>","file": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" focusable=\"false\" aria-hidden=\"true\"><path class=\"stroke-linejoin-round\" d=\"M8 1v5h5\"/><path class=\"stroke-linejoin-round\" d=\"M3 15V1h6l4 4v10H3z\"/></svg>","filter": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" focusable=\"false\" aria-hidden=\"true\"><path class=\"stroke-linejoin-round\" d=\"M15 2H1l5 6v7h4V8l5-6z\"/></svg>","flag": "<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" focusable=\"false\" aria-hidden=\"true\"><path class=\"stroke-linejoin-round\" d=\"m2.71 9.18 1.11-.39C5.2 8.3 6.74 8.44 8 9.18c1.27.74 2.8.89 4.18.39l1.11-.39v-6l-1.11.39c-1.38.49-2.92.35-4.18-.39-1.27-.74-2.8-.89-4.18-.39l-1.11.39v11.83\"/></svg>","folder-open": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" focusable=\"false\" aria-hidden=\"true\"><path class=\"stroke-linejoin-round\" d=\"M2 7V2h7l1 2h5v9a1 1 0 0 1-1 1H3L1 7h10l2.006 7\"/></svg>","folder": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" focusable=\"false\" aria-hidden=\"true\"><path class=\"stroke-linejoin-round\" d=\"M14 14H2V2h5.143L9 5h5v9z\"/></svg>","group-active": "<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" focusable=\"false\" aria-hidden=\"true\"><path class=\"stroke-linejoin-round\" d=\"M14 4a2 2 0 1 0-4 0 2 2 0 0 0 4 0ZM9 11v3h6v-3c0-1.66-1.34-3-3-3s-3 1.34-3 3Z\"/><path class=\"filled stroke-linejoin-round\" d=\"M6 4a2 2 0 1 0-4 0 2 2 0 0 0 4 0ZM1 11v3h6v-3c0-1.66-1.34-3-3-3s-3 1.34-3 3Z\"/></svg>","group": "<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" focusable=\"false\" aria-hidden=\"true\"><path class=\"stroke-linejoin-round\" d=\"M14 4a2 2 0 1 0-4 0 2 2 0 0 0 4 0ZM9 11v3h6v-3c0-1.66-1.34-3-3-3s-3 1.34-3 3ZM6 4a2 2 0 1 0-4 0 2 2 0 0 0 4 0ZM1 11v3h6v-3c0-1.66-1.34-3-3-3s-3 1.34-3 3Z\"/></svg>","heart": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" focusable=\"false\" aria-hidden=\"true\"><path d=\"M13.92 3.061a3.729 3.729 0 0 0-5.21 0L8 3.76l-.71-.699a3.729 3.729 0 0 0-5.21 0 3.58 3.58 0 0 0 0 5.123l5.21 5.124.003-.004L8 14l.707-.696.004.004 5.21-5.124a3.58 3.58 0 0 0 0-5.123Z\"/></svg>","insert-row": "<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" focusable=\"false\" aria-hidden=\"true\"><path class=\"stroke-linejoin-round\" d=\"M15 6V3H1v9h5M16 11H8M12 15V7\"/></svg>","key": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" focusable=\"false\" aria-hidden=\"true\"><path class=\"stroke-linejoin-round\" d=\"M9 10a5.023 5.023 0 0 1 0 1 3.996 3.996 0 1 1-3-3.874L13 1h2v5h-2v2h-2l.016 1.983Z\"/><path d=\"M4.99 11H5v.01h-.01z\"/></svg>","keyboard": "<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" focusable=\"false\" aria-hidden=\"true\"><path class=\"stroke-linejoin-round\" d=\"M15 2H1v12h14V2Z\"/><path d=\"M6 5H4M9 5H7M12 5h-2M6 8H4M12 11H4M9 8H7M12 8h-2\"/></svg>","lock-private": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" focusable=\"false\" aria-hidden=\"true\"><path class=\"stroke-linejoin-round\" d=\"M2 7h12v7H2z\"/><path d=\"M4 7V5a4 4 0 0 1 8 0v2\"/></svg>","menu": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" focusable=\"false\" aria-hidden=\"true\"><path d=\"M15 8H1M15 3H1M15 13H1\"/></svg>","microphone-off": "<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" focusable=\"false\" aria-hidden=\"true\"><path class=\"stroke-linejoin-round\" d=\"M13.76 1.34 2.11 12.98M4.75 10.8A5.002 5.002 0 0 0 13 7V6M8 15v-3M3 15h10\"/><path class=\"filled\" d=\"M8 1c-1.1 0-2 .9-2 2v1.09l2.88-2.88C8.61 1.08 8.32 1 8 1ZM6.64 8.46A2 2 0 0 0 8 9c1.1 0 2-.9 2-2V5.09L6.64 8.45v.01Z\"/><path class=\"stroke-linejoin-round\" d=\"M3.37 8.53C3.024 8.184 3 7.537 3 7V6\"/></svg>","microphone": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" focusable=\"false\" aria-hidden=\"true\"><rect class=\"stroke-linejoin-round\" x=\"6\" y=\"1\" width=\"4\" height=\"8\" rx=\"2\"/><path class=\"stroke-linejoin-round\" d=\"M3 6v1a5 5 0 0 0 10 0V6M8 12v3M3 15h10\"/></svg>","multiscreen": "<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" focusable=\"false\" aria-hidden=\"true\"><path class=\"stroke-linejoin-round\" d=\"M11 5H1v7h10V5Z\"/><path class=\"stroke-linejoin-round\" d=\"M11 8.229h4v-7H5V5M1 15h10M6 15v-3\"/></svg>","notification": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" focusable=\"false\" aria-hidden=\"true\"><path class=\"stroke-linejoin-round\" d=\"M8 2.167c-3.5 0-3.5 4.666-3.5 4.666L1 11.5h14l-3.5-4.667s0-4.666-3.5-4.666ZM5.667 11.5v1.167a2.333 2.333 0 0 0 4.666 0V11.5\"/><path class=\"stroke-linecap-round\" d=\"M8 1v1.167\"/></svg>","redo": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" focusable=\"false\" aria-hidden=\"true\"><path class=\"stroke-linejoin-round\" d=\"M12 5H6.38c-4.5 0-4.5 8 0 8H13\"/><path class=\"stroke-linejoin-round\" d=\"m10 8 3-3-3-3\"/></svg>","refresh": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" focusable=\"false\" aria-hidden=\"true\"><path d=\"M10 5h5V0\"/><path d=\"M15 8a6.957 6.957 0 0 1-7 7 6.957 6.957 0 0 1-7-7 6.957 6.957 0 0 1 7-7 6.87 6.87 0 0 1 6.3 4\"/></svg>","remove": "<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" focusable=\"false\" aria-hidden=\"true\"><path class=\"stroke-linejoin-round\" d=\"m3 3 1 11h8l1-11H3ZM1 3h14M10 2H6v1h4V2Z\"/></svg>","script": "<svg viewBox=\"0 0 16 17\" xmlns=\"http://www.w3.org/2000/svg\" focusable=\"false\" aria-hidden=\"true\"><path class=\"stroke-linejoin-round\" d=\"m9.53 4.397-3.06 7.4M4.5 11.597 1 8.097l3.5-3.5M11.5 11.597l3.5-3.5-3.5-3.5\"/></svg>","search": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" focusable=\"false\" aria-hidden=\"true\"><circle cx=\"7\" cy=\"7\" r=\"5\"/><path d=\"m15 15-4.5-4.5\"/></svg>","security": "<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" focusable=\"false\" aria-hidden=\"true\"><path class=\"stroke-linejoin-round\" d=\"M8 14.83s-6-1.925-6-6.74V3.265c3.31 0 5.99-1.916 5.99-1.916s2.7 1.916 6.01 1.916V8.09c0 4.815-6 6.74-6 6.74Z\"/><path d=\"M2 8.09V3.265c3.31 0 5.99-1.916 5.99-1.916M13.99 8.09V3.265C10.68 3.265 8 1.35 8 1.35\"/><path class=\"stroke-linejoin-round\" d=\"M8 4v5M8 10v2\"/></svg>","settings": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" focusable=\"false\" aria-hidden=\"true\"><path d=\"M13.33 5.792a1.942 1.942 0 0 1 .287-1.97 6.984 6.984 0 0 0-1.44-1.439 1.943 1.943 0 0 1-3.159-1.308 6.965 6.965 0 0 0-2.037 0 1.943 1.943 0 0 1-3.158 1.308 6.962 6.962 0 0 0-1.44 1.44 1.943 1.943 0 0 1-1.308 3.158 6.972 6.972 0 0 0 0 2.037 1.943 1.943 0 0 1 1.308 3.159 6.952 6.952 0 0 0 1.44 1.44 1.942 1.942 0 0 1 3.159 1.308 6.962 6.962 0 0 0 2.036 0 1.942 1.942 0 0 1 3.159-1.308 6.974 6.974 0 0 0 1.44-1.44 1.943 1.943 0 0 1 1.308-3.159 6.974 6.974 0 0 0 0-2.037 1.942 1.942 0 0 1-1.596-1.189Z\"/><circle cx=\"8\" cy=\"8\" r=\"2\"/></svg>","share": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" focusable=\"false\" aria-hidden=\"true\"><circle cx=\"11\" cy=\"4\" r=\"2\"/><circle cx=\"4\" cy=\"8\" r=\"2\"/><circle cx=\"11\" cy=\"12\" r=\"2\"/><path d=\"M9.2 4.9 5.8 7.1M9.2 11.1 5.8 8.9\"/></svg>","shrink": "<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" focusable=\"false\" aria-hidden=\"true\"><path d=\"M10 1v5h5M10 6l5-5M6 15v-5H1M6 10l-5 5\"/></svg>","status-in-progress": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" focusable=\"false\" aria-hidden=\"true\"><circle class=\"stroke-linejoin-round\" cx=\"8\" cy=\"8\" r=\"7\"/><path class=\"stroke-linecap-round\" d=\"M4.99 7.995H5v.01h-.01zM7.99 7.995H8v.01h-.01zM10.99 7.995H11v.01h-.01z\"/></svg>","status-info": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" focusable=\"false\" aria-hidden=\"true\"><circle class=\"stroke-linejoin-round\" cx=\"8\" cy=\"8\" r=\"7\"/><path d=\"M8 11V8H6\"/><path class=\"stroke-linejoin-round\" d=\"M10 11H6\"/><path d=\"M7.99 5H8v.01h-.01z\"/></svg>","status-negative": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" focusable=\"false\" aria-hidden=\"true\"><circle class=\"stroke-linejoin-round\" cx=\"8\" cy=\"8\" r=\"7\"/><path d=\"m10.828 5.172-5.656 5.656M10.828 10.828 5.172 5.172\"/></svg>","status-pending": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" focusable=\"false\" aria-hidden=\"true\"><circle class=\"stroke-linejoin-round\" cx=\"8\" cy=\"8\" r=\"7\"/><path class=\"stroke-linecap-square\" d=\"M8 5v4H5\"/></svg>","status-positive": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" focusable=\"false\" aria-hidden=\"true\"><circle class=\"stroke-linejoin-round\" cx=\"8\" cy=\"8\" r=\"7\"/><path class=\"stroke-linecap-square\" d=\"m5 8 2 2 3.521-3.521\"/></svg>","status-stopped": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" focusable=\"false\" aria-hidden=\"true\"><circle class=\"stroke-linejoin-round\" cx=\"8\" cy=\"8\" r=\"7\"/><path class=\"stroke-linecap-square\" d=\"M11 8H5\"/></svg>","status-warning": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" focusable=\"false\" aria-hidden=\"true\"><path class=\"stroke-linejoin-round\" d=\"m8 1 7 14H1L8 1z\"/><path d=\"M7.99 12H8v.01h-.01zM8 6v4\"/></svg>","suggestions": "<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" focusable=\"false\" aria-hidden=\"true\"><path class=\"stroke-linejoin-round\" d=\"M6 14h4\"/><path d=\"M8 11h1c0-1.53 3-2.46 3-5.24.02-1.36-.61-2.4-1.57-3.09a4.208 4.208 0 0 0-4.86 0C4.61 3.36 3.98 4.4 4 5.76 4 8.54 7 9.47 7 11h1Z\"/></svg>","thumbs-down-filled": "<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" focusable=\"false\" aria-hidden=\"true\"><path class=\"filled stroke-linejoin-round\" d=\"M6 9.58c0 .27.06.55.19.79l1.64 3.28c.1.21.32.34.55.34.34 0 .62-.28.62-.62v-3.33h3.44a2 2 0 0 0 1.94-2.48l-1.01-4.05a2 2 0 0 0-1.94-1.52H6v7.59Z\"/><path class=\"stroke-linejoin-round\" d=\"M6 2H2v7h4\"/></svg>","thumbs-down": "<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" focusable=\"false\" aria-hidden=\"true\"><path class=\"stroke-linejoin-round\" d=\"M6 9.58c0 .27.06.55.19.79l1.64 3.28c.1.21.32.34.55.34.34 0 .62-.28.62-.62v-3.33h3.44a2 2 0 0 0 1.94-2.48l-1.01-4.05a2 2 0 0 0-1.94-1.52H6v7.59ZM6 2H2v7h4\"/></svg>","thumbs-up-filled": "<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" focusable=\"false\" aria-hidden=\"true\"><path class=\"filled stroke-linejoin-round\" d=\"M6 6.42c0-.27.06-.55.19-.79l1.64-3.28c.1-.21.32-.34.55-.34.34 0 .62.28.62.62v3.33h3.44a2 2 0 0 1 1.94 2.48l-1.01 4.05a2 2 0 0 1-1.94 1.52H6V6.42Z\"/><path class=\"stroke-linejoin-round\" d=\"M6 14H2V7h4\"/></svg>","thumbs-up": "<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" focusable=\"false\" aria-hidden=\"true\"><path class=\"stroke-linejoin-round\" d=\"M6 6.42c0-.27.06-.55.19-.79l1.64-3.28c.1-.21.32-.34.55-.34.34 0 .62.28.62.62v3.33h3.44a2 2 0 0 1 1.94 2.48l-1.01 4.05a2 2 0 0 1-1.94 1.52H6V6.42ZM6 14H2V7h4\"/></svg>","ticket": "<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" focusable=\"false\" aria-hidden=\"true\"><path class=\"stroke-linejoin-round\" d=\"M8 4.275a2 2 0 0 1-2-2H3v12h3a2 2 0 1 1 4 0h3v-12h-3a2 2 0 0 1-2 2Z\"/></svg>","treeview-collapse": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" focusable=\"false\" aria-hidden=\"true\"><path class=\"stroke-linejoin-round\" d=\"M5 8h6M2 2h12v12H2z\"/></svg>","treeview-expand": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" focusable=\"false\" aria-hidden=\"true\"><path class=\"stroke-linejoin-round\" d=\"M5 8h6M8 11V5M2 2h12v12H2z\"/></svg>","undo": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" focusable=\"false\" aria-hidden=\"true\"><path class=\"stroke-linejoin-round\" d=\"M4 13h5.625c4.5 0 4.5-8 0-8H3\"/><path class=\"stroke-linejoin-round\" d=\"M6 2 3 5l3 3\"/></svg>","unlocked": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" focusable=\"false\" aria-hidden=\"true\"><path class=\"stroke-linejoin-round\" d=\"M2 7h12v7H2z\"/><path d=\"M11.874 4A4 4 0 0 0 4 5v2\"/></svg>","upload-download": "<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" focusable=\"false\" aria-hidden=\"true\"><path d=\"M11 13.701v-10M8 6.702l3-3 3 3M4.98 2.662v10.04M7.98 9.662l-3 3-3-3\"/></svg>","upload": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" focusable=\"false\" aria-hidden=\"true\"><path class=\"stroke-linejoin-round\" d=\"M5 14H2V2h12v12h-3\"/><path d=\"M12 10 8 6l-4 4M8 6v9\"/></svg>","user-profile-active": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" focusable=\"false\" aria-hidden=\"true\"><path class=\"filled stroke-linejoin-round\" d=\"M4.61 4.39C4.61 2.52 6.13 1 8 1s3.39 1.52 3.39 3.39S9.87 7.78 8 7.78 4.61 6.26 4.61 4.39M2.05 14.08h11.91c0-2.25-1.17-4.23-2.9-5.3A5.77 5.77 0 0 0 8 7.91c-3.29 0-5.95 2.76-5.95 6.17z\"/></svg>","user-profile": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" focusable=\"false\" aria-hidden=\"true\"><path class=\"stroke-linejoin-round\" d=\"M4.61 4.39C4.61 2.52 6.13 1 8 1s3.39 1.52 3.39 3.39S9.87 7.78 8 7.78 4.61 6.26 4.61 4.39M2.05 14.08h11.91c0-2.25-1.17-4.23-2.9-5.3A5.77 5.77 0 0 0 8 7.91c-3.29 0-5.95 2.76-5.95 6.17z\"/></svg>","video-off": "<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" focusable=\"false\" aria-hidden=\"true\"><path class=\"stroke-linejoin-round\" d=\"M3 15h10M8 15v-3M8 12A5 5 0 1 0 8 2a5 5 0 0 0 0 10ZM6 5l4 4M10 5 6 9\"/></svg>","video-on": "<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" focusable=\"false\" aria-hidden=\"true\"><path class=\"stroke-linejoin-round\" d=\"M3 15h10M8 15v-3M8 12A5 5 0 1 0 8 2a5 5 0 0 0 0 10Z\"/><path class=\"stroke-linejoin-round\" d=\"M8 8a1 1 0 1 0 0-2 1 1 0 0 0 0 2Z\"/></svg>","video-unavailable": "<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" focusable=\"false\" aria-hidden=\"true\"><path class=\"stroke-linejoin-round\" d=\"M3 15h10M8 15v-3M8 12A5 5 0 1 0 8 2a5 5 0 0 0 0 10ZM5.5 7h5\"/></svg>","view-full": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" focusable=\"false\" aria-hidden=\"true\"><path class=\"filled\" d=\"M5 5h6v6H5z\"/><path class=\"stroke-linejoin-round\" d=\"M2 2h12v12H2z\"/></svg>","view-horizontal": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" focusable=\"false\" aria-hidden=\"true\"><path class=\"filled\" d=\"M5 9h6v2H5z\"/><path class=\"stroke-linejoin-round\" d=\"M2 2h12v12H2z\"/></svg>","view-vertical": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" focusable=\"false\" aria-hidden=\"true\"><path class=\"filled\" d=\"M11 5v6H9V5z\"/><path class=\"stroke-linejoin-round\" d=\"M2 2h12v12H2z\"/></svg>","zoom-in": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" focusable=\"false\" aria-hidden=\"true\"><circle cx=\"6.885\" cy=\"6.885\" r=\"5.385\"/><path d=\"m14.5 14.5-3.846-3.846M7 4v6M10 7H4\"/></svg>","zoom-out": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" focusable=\"false\" aria-hidden=\"true\"><circle cx=\"6.885\" cy=\"6.885\" r=\"5.385\"/><path d=\"m14.5 14.5-3.846-3.846M10 7H4\"/></svg>","zoom-to-fit": "<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" focusable=\"false\" aria-hidden=\"true\"><path d=\"M14 11v3h-4M2 11v3h4M2 5V2h4M14 5V2h-4M10 6H6v4h4V6Z\"/></svg>"
  });
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/hooks/use-merge-refs/index.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

/**
 * useMergeRefs merges multiple refs into single ref callback.
 *
 * For example
 *  const mergedRef = useMergeRefs(ref1, ref2, ref3)
 *  <div ref={refs}>...</div>
 */
function useMergeRefs() {
    var refs = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        refs[_i] = arguments[_i];
    }
    return (0,react.useMemo)(function () {
        if (refs.every(function (ref) { return ref === null || ref === undefined; })) {
            return null;
        }
        return function (value) {
            refs.forEach(function (ref) {
                if (typeof ref === 'function') {
                    ref(value);
                }
                else if (ref !== null && ref !== undefined) {
                    ref.current = value;
                }
            });
        };
        // ESLint expects an array literal which we can not provide here
        // eslint-disable-next-line react-hooks/exhaustive-deps
    }, refs);
}
//# sourceMappingURL=index.js.map
// EXTERNAL MODULE: ./node_modules/balanced-match/index.js
var balanced_match = __webpack_require__(623);
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/utils/calculate-once.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
function calculateOnce(callback) {
    var result = undefined;
    return function () {
        if (result === undefined) {
            result = callback();
        }
        return result;
    };
}
//# sourceMappingURL=calculate-once.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/utils/dom.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0


function findUpUntil(node, callback) {
    var current = node;
    while (current && !callback(current)) {
        current = current.parentElement;
        // If a component is used within an svg (i.e. as foreignObject), then it will
        // have some ancestor nodes that are SVGElement. We want to skip those,
        // as they have very different properties to HTLMElements.
        while (current && !(current instanceof HTMLElement)) {
            current = current.parentElement;
        }
    }
    return current;
}
/**
 * Returns whether the browser supports CSS position sticky.
 * In our list of supported browsers, only returns false for IE11.
 */
function supportsStickyPosition() {
    var _a, _b, _c;
    if (typeof window === 'undefined') {
        // render no-sticky UI on server-side
        return false;
    }
    return (_c = (_b = (_a = window.CSS) === null || _a === void 0 ? void 0 : _a.supports) === null || _b === void 0 ? void 0 : _b.call(_a, 'position', 'sticky')) !== null && _c !== void 0 ? _c : false;
}
/**
 * Returns whether `position: fixed` can be relative to transformed parents or
 * whether it's always relative to the viewport. Returns `true` on all browsers
 * except IE.
 */
var supportsContainingBlockPositioning = calculateOnce(function () {
    var parent = document.createElement('div');
    parent.style.transform = 'translateY(5px)';
    document.body.appendChild(parent);
    var child = document.createElement('div');
    child.style.position = 'fixed';
    child.style.top = '0';
    parent.appendChild(child);
    var result = parent.getBoundingClientRect().top === child.getBoundingClientRect().top;
    document.body.removeChild(parent);
    return result;
});
/**
 * Returns an element that is used to position the given element.
 * @see https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block
 */
function getContainingBlock(startElement) {
    if (!startElement.parentElement) {
        return null;
    }
    return supportsContainingBlockPositioning()
        ? findUpUntil(startElement.parentElement, function (element) {
            var computedStyle = getComputedStyle(element);
            return ((!!computedStyle.transform && computedStyle.transform !== 'none') ||
                (!!computedStyle.perspective && computedStyle.perspective !== 'none'));
        })
        : null;
}
var cssVariableExpression = /--.+?\s*,\s*(.+)/;
/**
 * Parses a CSS color value that might contain CSS Custom Properties
 * and returns a value that will be understood by the browser, no matter of support level.
 * If the browser support CSS Custom Properties, the value will be return as is. Otherwise,
 * the fallback value will be extracted and returned instead.
 */
function parseCssVariable(value) {
    var _a, _b, _c;
    if ((_c = (_b = (_a = window.CSS) === null || _a === void 0 ? void 0 : _a.supports) === null || _b === void 0 ? void 0 : _b.call(_a, 'color', 'var(--dummy, #000)')) !== null && _c !== void 0 ? _c : false) {
        return value;
    }
    var varIndex = value.lastIndexOf('var(');
    if (varIndex === -1) {
        return value;
    }
    var expr = balanced('(', ')', value.substr(varIndex));
    if (!expr) {
        return value;
    }
    var match = expr.body.match(cssVariableExpression);
    return match ? match[1] : value;
}
/**
 * Checks whether the given node is a parent of the other descendant node.
 * This utility is helpful when the parent might be an SVG element,
 * which doesn't have a native `contains` implementation on some browsers like IE11.
 * @param parent Parent node
 * @param descendant Node that is checked to be a descendant of the parent node
 */
function nodeContains(parent, descendant) {
    if (!parent || !descendant) {
        return false;
    }
    // Use the native `contains` method when available
    if (parent.contains && descendant.nodeType === Node.ELEMENT_NODE) {
        return parent === descendant || parent.contains(descendant);
    }
    // Fall back to a simple upwards tree traversal
    var upperNode = descendant;
    while (upperNode && parent !== upperNode) {
        upperNode = upperNode.parentNode;
    }
    return upperNode === parent;
}
/**
 * Checks whether the given node is a descendant of a container.
 * @param container Container node
 * @param node Node that is checked to be a descendant of the container
 */
function dom_containsOrEqual(container, node) {
    if (container === null) {
        return false;
    }
    return container === node || container.contains(node);
}
//# sourceMappingURL=dom.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/motion.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

var isMotionDisabled = function (element) {
    var _a;
    return !!findUpUntil(element, function (node) { return node.classList.contains('awsui-motion-disabled'); }) ||
        (window.matchMedia && ((_a = window.matchMedia('(prefers-reduced-motion: reduce)')) === null || _a === void 0 ? void 0 : _a.matches));
};
//# sourceMappingURL=motion.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/hooks/use-stable-event-handler/index.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

/**
 * A callback that stays stable between renders even as the dependencies change.
 * Not a recommended React pattern, so it should be used sparingly and only if
 * the callback is an event handler (i.e. not used during rendering) and causing
 * clear performance issues.
 *
 * @see https://reactjs.org/docs/hooks-faq.html#how-to-read-an-often-changing-value-from-usecallback
 */
function use_stable_event_handler_useStableEventHandler(fn) {
    var ref = (0,react.useRef)();
    (0,react.useEffect)(function () {
        ref.current = fn;
    });
    return (0,react.useCallback)(function () {
        var _a;
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return (_a = ref.current) === null || _a === void 0 ? void 0 : _a.apply(undefined, args);
    }, []);
}
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/hooks/use-mutation-observer/index.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0



var useMutationSingleton = createSingletonHandler(function (handler) {
    var observer = new MutationObserver(function () { return handler(); });
    observer.observe(document.body, { attributes: true, subtree: true });
    return function () { return observer.disconnect(); };
});
/**
 * Fires onChange with the given target element as an argument every time any DOM node attribute changes.
 *
 * @deprecated The hook has performance implications. Consider alternatives.
 */
function useMutationObserver(elementRef, onChange) {
    var handler = use_stable_event_handler_useStableEventHandler(function () {
        if (elementRef.current) {
            onChange(elementRef.current);
        }
    });
    useMutationSingleton(handler);
    (0,react.useEffect)(function () {
        handler();
    }, [handler]);
}
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/hooks/use-visual-mode/index.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0







function useCurrentMode(elementRef) {
    var _a = (0,react.useState)('light'), value = _a[0], setValue = _a[1];
    useMutationObserver(elementRef, function (node) {
        var darkModeParent = findUpUntil(node, function (node) { return node.classList.contains('awsui-polaris-dark-mode') || node.classList.contains('awsui-dark-mode'); });
        setValue(darkModeParent ? 'dark' : 'light');
    });
    return value;
}
function useDensityMode(elementRef) {
    var _a = (0,react.useState)('comfortable'), value = _a[0], setValue = _a[1];
    useMutationObserver(elementRef, function (node) {
        var compactModeParent = findUpUntil(node, function (node) { return node.classList.contains('awsui-polaris-compact-mode') || node.classList.contains('awsui-compact-mode'); });
        setValue(compactModeParent ? 'compact' : 'comfortable');
    });
    return value;
}
var useVisualRefresh = ALWAYS_VISUAL_REFRESH ? function () { return true; } : useVisualRefreshDynamic;
// We expect VR is to be set only once and before the application is rendered.
var visualRefreshState = undefined;
// for testing
function clearVisualRefreshState() {
    visualRefreshState = undefined;
}
function detectVisualRefresh() {
    return typeof document !== 'undefined' && !!document.querySelector('.awsui-visual-refresh');
}
function useVisualRefreshDynamic() {
    if (visualRefreshState === undefined) {
        visualRefreshState = detectVisualRefresh();
    }
    if (isDevelopment) {
        var newVisualRefreshState = detectVisualRefresh();
        if (newVisualRefreshState !== visualRefreshState) {
            logging_warnOnce('Visual Refresh', 'Dynamic visual refresh change detected. This is not supported. ' +
                'Make sure `awsui-visual-refresh` is attached to the `<body>` element before initial React render');
        }
    }
    return visualRefreshState;
}
function useReducedMotion(elementRef) {
    var _a = (0,react.useState)(false), value = _a[0], setValue = _a[1];
    useMutationObserver(elementRef, function (node) {
        setValue(isMotionDisabled(node));
    });
    return value;
}
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/icon/internal.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0








function iconSizeMap(height) {
    if (height === null) {
        // This is the best guess for the contextual height while server rendering.
        return 'normal';
    }
    if (height >= 50) {
        return 'large';
    }
    else if (height >= 36) {
        return 'big';
    }
    else if (height >= 24) {
        return 'medium';
    }
    else if (height <= 16) {
        return 'small';
    }
    else {
        return 'normal';
    }
}
var InternalIcon = function (_a) {
    var name = _a.name, _b = _a.size, size = _b === void 0 ? 'normal' : _b, _c = _a.variant, variant = _c === void 0 ? 'normal' : _c, url = _a.url, alt = _a.alt, svg = _a.svg, badge = _a.badge, _d = _a.__internalRootRef, __internalRootRef = _d === void 0 ? null : _d, props = __rest(_a, ["name", "size", "variant", "url", "alt", "svg", "badge", "__internalRootRef"]);
    var iconRef = (0,react.useRef)(null);
    // To ensure a re-render is triggered on visual mode changes
    useVisualRefresh();
    var _e = (0,react.useState)(null), parentHeight = _e[0], setParentHeight = _e[1];
    var contextualSize = size === 'inherit';
    var iconSize = contextualSize ? iconSizeMap(parentHeight) : size;
    var inlineStyles = contextualSize && parentHeight !== null ? { height: "".concat(parentHeight, "px") } : {};
    var baseProps = getBaseProps(props);
    baseProps.className = clsx_m(baseProps.className, icon_styles_css.icon, contextualSize && icon_styles_css["icon-flex-height"], badge && icon_styles_css.badge, !contextualSize && icon_styles_css["size-".concat(iconSize, "-mapped-height")], icon_styles_css["size-".concat(iconSize)], icon_styles_css["variant-".concat(variant)]);
    // Possible infinite loop is not a concern here because line
    // height should not change without an external state update.
    // eslint-disable-next-line react-hooks/exhaustive-deps
    (0,react.useLayoutEffect)(function () {
        if (!contextualSize || !iconRef.current) {
            return;
        }
        var lineHeight = getComputedStyle(iconRef.current).lineHeight;
        var newParentHeight = parseInt(lineHeight, 10);
        setParentHeight(newParentHeight);
    });
    var mergedRef = useMergeRefs(iconRef, __internalRootRef);
    if (svg) {
        if (url) {
            logging_warnOnce('Icon', 'You have specified both `url` and `svg`. `svg` will take precedence and `url` will be ignored.');
        }
        return (react.createElement("span", tslib_es6_assign({}, baseProps, { ref: mergedRef, "aria-hidden": "true", style: inlineStyles }), svg));
    }
    if (url) {
        return (react.createElement("span", tslib_es6_assign({}, baseProps, { ref: mergedRef, style: inlineStyles }),
            react.createElement("img", { src: url, alt: alt })));
    }
    var validIcon = name && Object.prototype.hasOwnProperty.call(icons, name);
    return (react.createElement("span", tslib_es6_assign({}, baseProps, {
        // dangerouslySetInnerHTML is safe here, as we control the content coming from `icons`
        // eslint-disable-next-line react/no-danger
        dangerouslySetInnerHTML: validIcon ? { __html: icons[name] } : undefined, ref: mergedRef, style: inlineStyles })));
};
/* harmony default export */ const internal = (InternalIcon);
//# sourceMappingURL=internal.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/spinner/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/spinner/styles.css.js


    /* harmony default export */ const spinner_styles_css = ({
  "root": "awsui_root_1612d_9hw1o_127",
  "spinner-rotator": "awsui_spinner-rotator_1612d_9hw1o_1",
  "size-normal": "awsui_size-normal_1612d_9hw1o_135",
  "size-big": "awsui_size-big_1612d_9hw1o_143",
  "size-large": "awsui_size-large_1612d_9hw1o_151",
  "variant-normal": "awsui_variant-normal_1612d_9hw1o_159",
  "variant-disabled": "awsui_variant-disabled_1612d_9hw1o_162",
  "variant-inverted": "awsui_variant-inverted_1612d_9hw1o_165",
  "circle": "awsui_circle_1612d_9hw1o_169",
  "circle-left": "awsui_circle-left_1612d_9hw1o_193",
  "spinner-line-left": "awsui_spinner-line-left_1612d_9hw1o_1",
  "circle-right": "awsui_circle-right_1612d_9hw1o_198",
  "spinner-line-right": "awsui_spinner-line-right_1612d_9hw1o_1"
});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/spinner/internal.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0




function InternalSpinner(_a) {
    var _b = _a.size, size = _b === void 0 ? 'normal' : _b, _c = _a.variant, variant = _c === void 0 ? 'normal' : _c, __internalRootRef = _a.__internalRootRef, props = __rest(_a, ["size", "variant", "__internalRootRef"]);
    var baseProps = getBaseProps(props);
    return (react.createElement("span", tslib_es6_assign({}, baseProps, { className: clsx_m(baseProps.className, spinner_styles_css.root, spinner_styles_css["size-".concat(size)], spinner_styles_css["variant-".concat(variant)]), ref: __internalRootRef }),
        react.createElement("span", { className: clsx_m(spinner_styles_css.circle, spinner_styles_css["circle-left"]) }),
        react.createElement("span", { className: clsx_m(spinner_styles_css.circle, spinner_styles_css["circle-right"]) })));
}
//# sourceMappingURL=internal.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/button/icon-helper.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0





function getIconAlign(props) {
    var standalone = props.variant === 'icon' || props.variant === 'inline-icon';
    return standalone ? 'left' : props.iconAlign;
}
function IconWrapper(_a) {
    var iconName = _a.iconName, iconUrl = _a.iconUrl, iconAlt = _a.iconAlt, iconSvg = _a.iconSvg, iconSize = _a.iconSize, props = __rest(_a, ["iconName", "iconUrl", "iconAlt", "iconSvg", "iconSize"]);
    if (!iconName && !iconUrl && !iconSvg) {
        return null;
    }
    return (react.createElement(internal, { className: clsx_m(button_styles_css.icon, button_styles_css["icon-".concat(getIconAlign(props))], props.iconClass), name: iconName, url: iconUrl, svg: iconSvg, alt: iconAlt, size: iconSize }));
}
function LeftIcon(props) {
    if (props.loading) {
        return react.createElement(InternalSpinner, { className: clsx_m(button_styles_css.icon, button_styles_css["icon-left"]) });
    }
    else if (getIconAlign(props) === 'left') {
        return react.createElement(IconWrapper, tslib_es6_assign({}, props));
    }
    return null;
}
function RightIcon(props) {
    if (getIconAlign(props) === 'right') {
        return react.createElement(IconWrapper, tslib_es6_assign({}, props));
    }
    return null;
}
//# sourceMappingURL=icon-helper.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/utils/check-safe-url.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

var allowedJavascriptUrls = ['javascript:void(0)', 'javascript:void(0);', 'javascript:;'];
function checkSafeUrl(component, url) {
    if (!url) {
        return;
    }
    if (allowedJavascriptUrls.indexOf(url.toLowerCase()) !== -1) {
        return;
    }
    var parsedUrl;
    try {
        parsedUrl = new URL(url);
    }
    catch (e) {
        // If the URL cannot be parsed by the browser, it likely does not pose a security risk.
        return;
    }
    if (parsedUrl.protocol === 'javascript:') {
        logging_warnOnce(component, "A javascript: URL was blocked as a security precaution. The URL was \"".concat(url, "\"."));
        // This mirrors the error message that React will use:
        // https://github.com/facebook/react/blob/a724a3b578dce77d427bef313102a4d0e978d9b4/packages/react-dom/src/shared/sanitizeURL.js#L30
        throw new Error("A javascript: URL was blocked as a security precaution.");
    }
    return;
}
//# sourceMappingURL=check-safe-url.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/components/screenreader-only/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/components/screenreader-only/styles.css.js


    /* harmony default export */ const screenreader_only_styles_css = ({
  "root": "awsui_root_xttbq_1yl3y_93"
});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/components/screenreader-only/index.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0




/**
 * Makes content now shown on a screen but still announced by screen-reader users.
 * The component is suitable when the aria-label cannot be used, e.g. to avoid elemnts being announced as "blank".
 *
 * To exclude screenreader-only content use `:not(.${screenreaderOnlyStyles.root})` selector, for example:
 *
 * ```
 * import screenreaderOnlyStyles from '~internal/components/screenreader-only/styles.css.js'
 *
 * let visibleContent = wrapper.find(`${styles.label}`).find(`:not(.${screenreaderOnlyStyles.root})`).getElement().textContent
 *
 * let screenreaderContent = wrapper.find(`${styles.label}`).find(`.${screenreaderOnlyStyles.root}`).getElement().textContent
 * ```
 */
function ScreenreaderOnly(props) {
    return react.createElement("span", tslib_es6_assign({}, props, { className: clsx_m(screenreader_only_styles_css.root, props.className) }));
}
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/components/live-region/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/components/live-region/styles.css.js


    /* harmony default export */ const live_region_styles_css = ({
  "root": "awsui_root_3bgfn_im8v7_5"
});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/components/live-region/index.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

/* eslint-disable @cloudscape-design/prefer-live-region */




/**
 * The live region is hidden in the layout, but visible for screen readers.
 * It's purpose it to announce changes e.g. when custom navigation logic is used.
 *
 * The way live region works differently in different browsers and screen readers and
 * it is recommended to manually test every new implementation.
 *
 * If you notice there are different words being merged together,
 * check if there are text nodes not being wrapped in elements, like:
 * <LiveRegion>
 *   {title}
 *   <span><Details /></span>
 * </LiveRegion>
 *
 * To fix, wrap "title" in an element:
 * <LiveRegion>
 *   <span>{title}</span>
 *   <span><Details /></span>
 * </LiveRegion>
 *
 * Or create a single text node if possible:
 * <LiveRegion>
 *   {`${title} ${details}`}
 * </LiveRegion>
 *
 * The live region is always atomic, because non-atomic regions can be treated by screen readers
 * differently and produce unexpected results. To imitate non-atomic announcements simply use
 * multiple live regions:
 * <>
 *   <LiveRegion>{title}</LiveRegion>
 *   <LiveRegion><Details /></LiveRegion>
 * </>
 */
/* harmony default export */ const live_region = ((0,react.memo)(LiveRegion));
function LiveRegion(_a) {
    var _b = _a.assertive, assertive = _b === void 0 ? false : _b, _c = _a.delay, delay = _c === void 0 ? 10 : _c, _d = _a.visible, visible = _d === void 0 ? false : _d, _e = _a.tagName, TagName = _e === void 0 ? 'span' : _e, children = _a.children, restProps = __rest(_a, ["assertive", "delay", "visible", "tagName", "children"]);
    var sourceRef = (0,react.useRef)(null);
    var targetRef = (0,react.useRef)(null);
    /*
      When React state changes, React often produces too many DOM updates, causing NVDA to
      issue many announcements for the same logical event (See https://github.com/nvaccess/nvda/issues/7996).

      The code below imitates a debouncing, scheduling a callback every time new React state
      update is detected. When a callback resolves, it copies content from a muted element
      to the live region, which is recognized by screen readers as an update.

      If the use case requires no announcement to be ignored, use delay = 0, but ensure it
      does not impact the performance. If it does, prefer using a string as children prop.
    */
    (0,react.useEffect)(function () {
        function updateLiveRegion() {
            if (targetRef.current && sourceRef.current) {
                var sourceContent = extractInnerText(sourceRef.current);
                var targetContent = extractInnerText(targetRef.current);
                if (targetContent !== sourceContent) {
                    // The aria-atomic does not work properly in Voice Over, causing
                    // certain parts of the content to be ignored. To fix that,
                    // we assign the source text content as a single node.
                    targetRef.current.innerText = sourceContent;
                }
            }
        }
        var timeoutId;
        if (delay) {
            timeoutId = setTimeout(updateLiveRegion, delay);
        }
        else {
            updateLiveRegion();
        }
        return function () {
            if (timeoutId) {
                clearTimeout(timeoutId);
            }
        };
    });
    return (react.createElement(react.Fragment, null,
        visible && react.createElement(TagName, { ref: sourceRef }, children),
        react.createElement(ScreenreaderOnly, tslib_es6_assign({}, restProps, { className: clsx_m(live_region_styles_css.root, restProps.className) }),
            !visible && (react.createElement(TagName, { ref: sourceRef, "aria-hidden": "true" }, children)),
            react.createElement("span", { ref: targetRef, "aria-atomic": "true", "aria-live": assertive ? 'assertive' : 'polite' }))));
}
// This only extracts text content from the node including all its children which is enough for now.
// To make it more powerful, it is possible to create a more sophisticated extractor with respect to
// ARIA properties to ignore aria-hidden nodes and read ARIA labels from the live content.
function extractInnerText(node) {
    return (node.innerText || '').replace(/\s+/g, ' ').trim();
}
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/button/internal.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0










var InternalButton = react.forwardRef(function (_a, ref) {
    var _b;
    var children = _a.children, iconName = _a.iconName, __iconClass = _a.__iconClass, onClick = _a.onClick, onFollow = _a.onFollow, _c = _a.iconAlign, iconAlign = _c === void 0 ? 'left' : _c, iconUrl = _a.iconUrl, iconSvg = _a.iconSvg, iconAlt = _a.iconAlt, _d = _a.variant, variant = _d === void 0 ? 'normal' : _d, _e = _a.loading, loading = _e === void 0 ? false : _e, loadingText = _a.loadingText, _f = _a.disabled, disabled = _f === void 0 ? false : _f, _g = _a.wrapText, wrapText = _g === void 0 ? true : _g, href = _a.href, target = _a.target, download = _a.download, _h = _a.formAction, formAction = _h === void 0 ? 'submit' : _h, ariaLabel = _a.ariaLabel, ariaExpanded = _a.ariaExpanded, _j = _a.__hideFocusOutline, __hideFocusOutline = _j === void 0 ? false : _j, __nativeAttributes = _a.__nativeAttributes, _k = _a.__internalRootRef, __internalRootRef = _k === void 0 ? null : _k, _l = _a.__activated, __activated = _l === void 0 ? false : _l, props = __rest(_a, ["children", "iconName", "__iconClass", "onClick", "onFollow", "iconAlign", "iconUrl", "iconSvg", "iconAlt", "variant", "loading", "loadingText", "disabled", "wrapText", "href", "target", "download", "formAction", "ariaLabel", "ariaExpanded", "__hideFocusOutline", "__nativeAttributes", "__internalRootRef", "__activated"]);
    checkSafeUrl('Button', href);
    var focusVisible = useFocusVisible();
    var isAnchor = Boolean(href);
    var isDisabled = loading || disabled;
    var shouldHaveContent = children && ['icon', 'inline-icon', 'flashbar-icon', 'modal-dismiss'].indexOf(variant) === -1;
    var buttonRef = (0,react.useRef)(null);
    useForwardFocus(ref, buttonRef);
    var handleClick = (0,react.useCallback)(function (event) {
        if (isAnchor && isDisabled) {
            return event.preventDefault();
        }
        if (isAnchor && isPlainLeftClick(event)) {
            fireCancelableEvent(onFollow, null, event);
        }
        var altKey = event.altKey, button = event.button, ctrlKey = event.ctrlKey, metaKey = event.metaKey, shiftKey = event.shiftKey;
        fireCancelableEvent(onClick, { altKey: altKey, button: button, ctrlKey: ctrlKey, metaKey: metaKey, shiftKey: shiftKey }, event);
    }, [isAnchor, isDisabled, onClick, onFollow]);
    var buttonClass = clsx_m(props.className, button_styles_css.button, button_styles_css["variant-".concat(variant)], (_b = {},
        _b[button_styles_css.disabled] = isDisabled,
        _b[button_styles_css["button-no-wrap"]] = !wrapText,
        _b[button_styles_css["button-no-text"]] = !shouldHaveContent,
        _b[button_styles_css["is-activated"]] = __activated,
        _b));
    var buttonProps = tslib_es6_assign(tslib_es6_assign(tslib_es6_assign(tslib_es6_assign({}, props), (__hideFocusOutline ? undefined : focusVisible)), __nativeAttributes), {
        // https://github.com/microsoft/TypeScript/issues/36659
        ref: useMergeRefs(buttonRef, __internalRootRef), 'aria-label': ariaLabel, 'aria-expanded': ariaExpanded, className: buttonClass, onClick: handleClick });
    var iconProps = {
        loading: loading,
        iconName: iconName,
        iconAlign: iconAlign,
        iconUrl: iconUrl,
        iconSvg: iconSvg,
        iconAlt: iconAlt,
        variant: variant,
        iconClass: __iconClass,
        iconSize: variant === 'modal-dismiss' ? 'medium' : 'normal'
    };
    var buttonContent = (react.createElement(react.Fragment, null,
        react.createElement(LeftIcon, tslib_es6_assign({}, iconProps)),
        shouldHaveContent && react.createElement("span", { className: button_styles_css.content }, children),
        react.createElement(RightIcon, tslib_es6_assign({}, iconProps))));
    if (isAnchor) {
        return (
        // https://github.com/yannickcr/eslint-plugin-react/issues/2962
        // eslint-disable-next-line react/jsx-no-target-blank
        react.createElement(react.Fragment, null,
            react.createElement("a", tslib_es6_assign({}, buttonProps, { href: href, target: target,
                // security recommendation: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#target
                rel: target === '_blank' ? 'noopener noreferrer' : undefined, tabIndex: isDisabled ? -1 : undefined, "aria-disabled": isDisabled ? true : undefined, download: download }), buttonContent),
            loading && loadingText && react.createElement(live_region, null, loadingText)));
    }
    return (react.createElement(react.Fragment, null,
        react.createElement("button", tslib_es6_assign({}, buttonProps, { type: formAction === 'none' ? 'button' : 'submit', disabled: isDisabled }), buttonContent),
        loading && loadingText && react.createElement(live_region, null, loadingText)));
});
/* harmony default export */ const button_internal = (InternalButton);
//# sourceMappingURL=internal.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/utils/apply-display-name.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
function applyDisplayName(component, displayName) {
    component.displayName = displayName;
}
//# sourceMappingURL=apply-display-name.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/metrics.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

var oneTimeMetrics = {};
// In case we need to override the theme for VR
var theme = '';
function setTheme(newTheme) {
    theme = newTheme;
}
// react is the only framework we're using
var framework = 'react';
var buildMetricHash = function (_a) {
    var source = _a.source, action = _a.action;
    return ["src".concat(source), "action".concat(action)].join('_');
};
var getMajorVersion = function (versionString) {
    var majorVersionMatch = versionString.match(/^(\d+\.\d+)/);
    return majorVersionMatch ? majorVersionMatch[1] : '';
};
var formatMajorVersionForMetricDetail = function (version) {
    return version.replace(/\s/g, '');
};
var formatVersionForMetricName = function (theme, version) {
    return "".concat(theme.charAt(0)).concat(getMajorVersion(version).replace('.', ''));
};
var buildMetricDetail = function (_a) {
    var source = _a.source, action = _a.action, version = _a.version;
    var metricOrigin = typeof AWSUI_METRIC_ORIGIN !== 'undefined' ? AWSUI_METRIC_ORIGIN : 'main';
    var detailObject = {
        o: metricOrigin,
        s: source,
        t: theme,
        a: action,
        f: framework,
        v: formatMajorVersionForMetricDetail(version)
    };
    return JSON.stringify(detailObject);
};
var buildMetricName = function (_a) {
    var source = _a.source, version = _a.version;
    return ['awsui', source, "".concat(formatVersionForMetricName(theme, version))].join('_');
};
var findPanorama = function (currentWindow) {
    try {
        if (typeof (currentWindow === null || currentWindow === void 0 ? void 0 : currentWindow.panorama) === 'function') {
            return currentWindow === null || currentWindow === void 0 ? void 0 : currentWindow.panorama;
        }
        if (!currentWindow || currentWindow.parent === currentWindow) {
            // When the window has no more parents, it references itself
            return undefined;
        }
        return findPanorama(currentWindow.parent);
    }
    catch (ex) {
        // Most likely a cross-origin access error
        return undefined;
    }
};
var findAWSC = function (currentWindow) {
    try {
        if (typeof (currentWindow === null || currentWindow === void 0 ? void 0 : currentWindow.AWSC) === 'object') {
            return currentWindow === null || currentWindow === void 0 ? void 0 : currentWindow.AWSC;
        }
        if (!currentWindow || currentWindow.parent === currentWindow) {
            // When the window has no more parents, it references itself
            return undefined;
        }
        return findAWSC(currentWindow.parent);
    }
    catch (ex) {
        // Most likely a cross-origin access error
        return undefined;
    }
};
var Metrics = {
    initMetrics: function (theme) {
        setTheme(theme);
    },
    /**
     * Calls Console Platform's client logging JS API with provided metric name, value, and detail.
     * Does nothing if Console Platform client logging JS is not present in page.
     */
    sendMetric: function (metricName, value, detail) {
        if (!theme) {
            // Metrics need to be initialized first (initMetrics)
            console.error('Metrics need to be initalized first.');
            return;
        }
        if (!metricName || !/^[a-zA-Z0-9_-]{1,32}$/.test(metricName)) {
            console.error("Invalid metric name: ".concat(metricName));
            return;
        }
        if (detail && detail.length > 200) {
            console.error("Detail for metric ".concat(metricName, " is too long: ").concat(detail));
            return;
        }
        var AWSC = findAWSC(window);
        if (typeof AWSC === 'object' && typeof AWSC.Clog === 'object' && typeof AWSC.Clog.log === 'function') {
            AWSC.Clog.log(metricName, value, detail);
        }
    },
    /**
     * Calls Console Platform's client v2 logging JS API with provided metric name and detail.
     * Does nothing if Console Platform client logging JS is not present in page.
     */
    sendPanoramaMetric: function (metric) {
        if (typeof metric.eventDetail === 'object') {
            metric.eventDetail = JSON.stringify(metric.eventDetail);
        }
        if (metric.eventDetail && metric.eventDetail.length > 200) {
            console.error("Detail for metric is too long: ".concat(metric.eventDetail));
            return;
        }
        if (typeof metric.eventValue === 'object') {
            metric.eventValue = JSON.stringify(metric.eventValue);
        }
        var panorama = findPanorama(window);
        if (typeof panorama === 'function') {
            panorama('trackCustomEvent', tslib_es6_assign(tslib_es6_assign({}, metric), { timestamp: Date.now() }));
        }
    },
    sendMetricObject: function (metric, value) {
        this.sendMetric(buildMetricName(metric), value, buildMetricDetail(metric));
    },
    sendMetricObjectOnce: function (metric, value) {
        var metricHash = buildMetricHash(metric);
        if (!oneTimeMetrics[metricHash]) {
            this.sendMetricObject(metric, value);
            oneTimeMetrics[metricHash] = true;
        }
    },
    /*
     * Calls Console Platform's client logging only the first time the provided metricName is used.
     * Subsequent calls with the same metricName are ignored.
     */
    sendMetricOnce: function (metricName, value, detail) {
        if (!oneTimeMetrics[metricName]) {
            this.sendMetric(metricName, value, detail);
            oneTimeMetrics[metricName] = true;
        }
    },
    /*
     * Reports a metric value 1 to Console Platform's client logging service to indicate that the
     * component was loaded. The component load event will only be reported as used to client logging
     * service once per page view.
     */
    logComponentLoaded: function () {
        this.sendMetricObjectOnce({
            source: 'components',
            action: 'loaded',
            version: PACKAGE_VERSION
        }, 1);
    },
    /*
     * Reports a metric value 1 to Console Platform's client logging service to indicate that the
     * component was used in the page.  A component will only be reported as used to client logging
     * service once per page view.
     */
    logComponentUsed: function (componentName) {
        this.sendMetricObjectOnce({
            source: componentName,
            action: 'used',
            version: PACKAGE_VERSION
        }, 1);
    }
};
var MetricsTestHelper = {
    resetOneTimeMetricsCache: function () {
        for (var prop in oneTimeMetrics) {
            delete oneTimeMetrics[prop];
        }
    },
    formatMajorVersionForMetricDetail: formatMajorVersionForMetricDetail,
    formatVersionForMetricName: formatVersionForMetricName
};
//# sourceMappingURL=metrics.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/hooks/use-telemetry/index.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0




function useTelemetry(componentName) {
    var isVisualRefresh = useVisualRefresh();
    (0,react.useEffect)(function () {
        Metrics.initMetrics(isVisualRefresh ? 'vr' : THEME);
        if (typeof window !== 'undefined') {
            Metrics.sendMetricOnce('awsui-viewport-width', window.innerWidth || 0);
            Metrics.sendMetricOnce('awsui-viewport-height', window.innerHeight || 0);
        }
        Metrics.logComponentLoaded();
        Metrics.logComponentUsed(componentName.toLowerCase());
        // Components do not change the name dynamically. Explicit empty array to prevent accidential double metrics
        // eslint-disable-next-line react-hooks/exhaustive-deps
    }, []);
}
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/hooks/use-base-component/index.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0



var COMPONENT_METADATA_KEY = '__awsuiMetadata__';
/**
 * This hook is used for components which are exported to customers. The returned __internalRootRef needs to be
 * attached to the (internal) component's root DOM node. The hook takes care of attaching the metadata to this
 * root DOM node and emits the telemetry for this component.
 */
function useBaseComponent(componentName) {
    var elementRef = (0,react.useRef)(null);
    useTelemetry(componentName);
    useComponentMetadata(componentName, elementRef);
    return {
        __internalRootRef: elementRef
    };
}
function useComponentMetadata(componentName, elementRef) {
    (0,react.useEffect)(function () {
        if (elementRef.current && !Object.prototype.hasOwnProperty.call(elementRef.current, COMPONENT_METADATA_KEY)) {
            var node = elementRef.current;
            var metadata = {
                name: componentName,
                version: PACKAGE_VERSION
            };
            Object.freeze(metadata);
            Object.defineProperty(node, COMPONENT_METADATA_KEY, {
                value: metadata,
                writable: false
            });
        }
        // Some component refs change dynamically. E.g. The Modal component where
        // the content gets rendered conditionally inside a Portal.
        // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [elementRef.current]);
}
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/button/index.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0





var Button = react.forwardRef(function (_a, ref) {
    var children = _a.children, iconName = _a.iconName, _b = _a.iconAlign, iconAlign = _b === void 0 ? 'left' : _b, iconUrl = _a.iconUrl, iconSvg = _a.iconSvg, iconAlt = _a.iconAlt, _c = _a.variant, variant = _c === void 0 ? 'normal' : _c, _d = _a.loading, loading = _d === void 0 ? false : _d, loadingText = _a.loadingText, _e = _a.disabled, disabled = _e === void 0 ? false : _e, _f = _a.wrapText, wrapText = _f === void 0 ? true : _f, href = _a.href, target = _a.target, download = _a.download, _g = _a.formAction, formAction = _g === void 0 ? 'submit' : _g, ariaLabel = _a.ariaLabel, onClick = _a.onClick, onFollow = _a.onFollow, ariaExpanded = _a.ariaExpanded, props = __rest(_a, ["children", "iconName", "iconAlign", "iconUrl", "iconSvg", "iconAlt", "variant", "loading", "loadingText", "disabled", "wrapText", "href", "target", "download", "formAction", "ariaLabel", "onClick", "onFollow", "ariaExpanded"]);
    var baseComponentProps = useBaseComponent('Button');
    var baseProps = getBaseProps(props);
    return (react.createElement(InternalButton, tslib_es6_assign({}, baseProps, baseComponentProps, { ref: ref, iconName: iconName, iconAlign: iconAlign, iconUrl: iconUrl, iconSvg: iconSvg, iconAlt: iconAlt, variant: variant, loading: loading, loadingText: loadingText, disabled: disabled, wrapText: wrapText, href: href, target: target, download: download, formAction: formAction, ariaLabel: ariaLabel, onClick: onClick, onFollow: onFollow, ariaExpanded: ariaExpanded }), children));
});
applyDisplayName(Button, 'Button');
/* harmony default export */ const components_button = (Button);
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/hooks/use-controllable/index.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0



/**
 * This hook allows you to make a component that can be used both in controlled mode and uncontrolled mode.
 * Pass in your component's props, and then implement your component as if it was only controlled.
 * When calling onChange callbacks (or the equivalent for your property), you need to call both the callback returned by this function
 * as well as the callback provided in your component's props.
 *
 * A component determines its mode (either controlled or uncontrolled) on the first render and keeps it for its lifetime. The mode cannot
 * be switched later.
 *
 *
 * Example usage:
 * ```jsx
 * const [checked, setChecked] = useControllable(
 *     props,
 *     props.defaultEnabled ?? false,
 *     {
 *        componentName: 'MyCheckboxComponent',
 *        controlledProp: 'enabled',
 *        changeHandler: 'onCheckedStatusChange'
 *     }
 * )
 *
 * return
 *  <input
 *   type="checkbox"
 *   checked={checked}
 *   onChange={event => {
 *    setChecked(event.target.checked);
 *    fireNonCancelableEvent(props.onCheckedStatusChange, { checked: event.target.checked })
 *   }} />
 * ```
 *
 * @param controlledValue value for the controlled mode
 * @param handler update handler for controlled mode
 * @param defaultValue initial value for uncontrolled mode
 * @param description property metadata
 */
function useControllable(controlledValue, handler, defaultValue, _a) {
    var componentName = _a.componentName, changeHandler = _a.changeHandler, controlledProp = _a.controlledProp;
    // The decision whether a component is controlled or uncontrolled is made on its first render and cannot be changed afterwards.
    var isControlled = react.useState(controlledValue !== undefined)[0];
    if (isDevelopment) {
        // Print a warning if the component switches between controlled and uncontrolled mode.
        // eslint-disable-next-line react-hooks/rules-of-hooks
        react.useEffect(function () {
            if (isControlled && handler === undefined) {
                logging_warnOnce(componentName, "You provided a `".concat(controlledProp, "` prop without an `").concat(changeHandler, "` handler. This will render a non-interactive component."));
            }
        }, [handler, isControlled, componentName, changeHandler, controlledProp]);
        // eslint-disable-next-line react-hooks/rules-of-hooks
        react.useEffect(function () {
            var isControlledNow = controlledValue !== undefined;
            if (isControlled !== isControlledNow) {
                var initialMode = isControlled ? 'controlled' : 'uncontrolled';
                var modeNow = isControlledNow ? 'controlled' : 'uncontrolled';
                logging_warnOnce(componentName, "A component tried to change ".concat(initialMode, " '").concat(controlledProp, "' property to be ").concat(modeNow, ". ") +
                    "This is not supported. Properties should not switch from ".concat(initialMode, " to ").concat(modeNow, " (or vice versa). ") +
                    "Decide between using a controlled or uncontrolled mode for the lifetime of the component. " +
                    "More info: https://fb.me/react-controlled-components");
            }
        }, [isControlled, controlledProp, componentName, controlledValue]);
    }
    // This is the value that is used if the component is uncontrolled.
    var _b = react.useState(defaultValue), valueState = _b[0], setValue = _b[1];
    var _c = react.useState(false), valueHasBeenSet = _c[0], setValueHasBeenSet = _c[1];
    // We track changes to the defaultValue
    var currentUncontrolledValue = valueHasBeenSet ? valueState : defaultValue;
    var setUncontrolledValue = react.useCallback(function (newValue) {
        setValue(newValue);
        setValueHasBeenSet(true);
    }, [setValue, setValueHasBeenSet]);
    if (isControlled) {
        return [controlledValue, defaultCallback];
    }
    else {
        return [currentUncontrolledValue, setUncontrolledValue];
    }
}
function defaultCallback() {
    return void 0;
}
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/breakpoints.js
var BREAKPOINT_MAPPING = [
    ['xl', 1840],
    ['l', 1320],
    ['m', 1120],
    ['s', 912],
    ['xs', 688],
    ['xxs', 465],
    ['default', -1],
];
var mobileBreakpoint = BREAKPOINT_MAPPING.filter(function (b) { return b[0] === 'xs'; })[0][1];
var BREAKPOINTS_DESCENDING = BREAKPOINT_MAPPING.map(function (_a) {
    var bp = _a[0];
    return bp;
});
/**
 * Take a breakpoint mapping and return the breakpoint value that most closely matches the actual breakpoint.
 */
function matchBreakpointMapping(subset, actual) {
    var qualifyingBreakpoints = BREAKPOINT_MAPPING.slice(BREAKPOINTS_DESCENDING.indexOf(actual));
    for (var _i = 0, qualifyingBreakpoints_1 = qualifyingBreakpoints; _i < qualifyingBreakpoints_1.length; _i++) {
        var breakpoint = qualifyingBreakpoints_1[_i][0];
        var breakpointValue = subset[breakpoint];
        if (breakpointValue !== undefined) {
            return breakpointValue;
        }
    }
    return null;
}
/**
 * Get the named breakpoint for a provided width, optionally filtering to a subset of breakpoints.
 */
function getMatchingBreakpoint(width, breakpointFilter) {
    for (var _i = 0, BREAKPOINT_MAPPING_1 = BREAKPOINT_MAPPING; _i < BREAKPOINT_MAPPING_1.length; _i++) {
        var _a = BREAKPOINT_MAPPING_1[_i], breakpoint = _a[0], breakpointWidth = _a[1];
        if (width > breakpointWidth && (!breakpointFilter || breakpointFilter.indexOf(breakpoint) !== -1)) {
            return breakpoint;
        }
    }
    return 'default';
}
//# sourceMappingURL=breakpoints.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/hooks/use-mobile/index.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0


function getIsMobile() {
    if (typeof window === 'undefined') {
        // assume desktop in server-rendering
        return false;
    }
    if (window.matchMedia) {
        /**
         * Some browsers include the scrollbar width in their media query calculations, but
         * some browsers don't. Thus we can't use `window.innerWidth` or
         * `document.documentElement.clientWidth` to get a very accurate result (since we
         * wouldn't know which one of them to use).
         * Instead, we use the media query here in JS too.
         */
        return window.matchMedia("(max-width: ".concat(mobileBreakpoint, "px)")).matches;
    }
    return getMatchingBreakpoint(window.innerWidth, ['xs']) !== 'xs';
}
var useMobile = createSingletonState({
    initialState: function () { return getIsMobile(); },
    factory: function (handler) {
        var listener = function () { return handler(getIsMobile()); };
        window.addEventListener('resize', listener);
        return function () {
            window.removeEventListener('resize', listener);
        };
    }
});
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/app-layout/defaults.js

var defaultContentTypeState = {
    navigationOpen: true,
    minContentWidth: 280,
    maxContentWidth: undefined
};
var defaults = {
    "default": tslib_es6_assign({}, defaultContentTypeState),
    dashboard: tslib_es6_assign({}, defaultContentTypeState),
    cards: {
        navigationOpen: true,
        minContentWidth: 280,
        maxContentWidth: undefined
    },
    form: {
        navigationOpen: false,
        minContentWidth: 280,
        maxContentWidth: 800
    },
    table: {
        navigationOpen: true,
        minContentWidth: 280,
        maxContentWidth: undefined
    },
    wizard: {
        navigationOpen: false,
        minContentWidth: 280,
        maxContentWidth: 1080
    }
};
function applyDefaults(contentType, stateFromProps, isRefresh) {
    var _a, _b, _c, _d;
    var contentTypeDefaults = isRefresh
        ? tslib_es6_assign(tslib_es6_assign({}, defaults[contentType]), { maxContentWidth: undefined }) : defaults[contentType];
    return {
        maxContentWidth: (_a = stateFromProps.maxContentWidth) !== null && _a !== void 0 ? _a : contentTypeDefaults.maxContentWidth,
        minContentWidth: (_b = stateFromProps.minContentWidth) !== null && _b !== void 0 ? _b : contentTypeDefaults.minContentWidth,
        navigationOpen: (_c = stateFromProps.navigationOpen) !== null && _c !== void 0 ? _c : contentTypeDefaults.navigationOpen,
        toolsOpen: (_d = stateFromProps.toolsOpen) !== null && _d !== void 0 ? _d : contentTypeDefaults.toolsOpen
    };
}
//# sourceMappingURL=defaults.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/app-layout/notifications/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/app-layout/notifications/styles.css.js


    /* harmony default export */ const notifications_styles_css = ({
  "notifications-sticky": "awsui_notifications-sticky_1hmm4_1qn9j_9"
});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/app-layout/notifications/index.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0



var Notifications = react.forwardRef(function (_a, ref) {
    var _b, _c;
    var sticky = _a.sticky, props = __rest(_a, ["sticky"]);
    return sticky ? (react.createElement("div", { ref: ref, className: notifications_styles_css["notifications-sticky"], style: { top: props.topOffset } },
        react.createElement("div", { role: "region", className: clsx_m(props.testUtilsClassName), "aria-label": (_b = props.labels) === null || _b === void 0 ? void 0 : _b.notifications }, props.children))) : (react.createElement("div", { role: "region", ref: ref, className: clsx_m(props.testUtilsClassName), "aria-label": (_c = props.labels) === null || _c === void 0 ? void 0 : _c.notifications }, props.children));
});
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/app-layout/toggles/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/app-layout/toggles/styles.css.js


    /* harmony default export */ const toggles_styles_css = ({
  "close-button": "awsui_close-button_16w0h_1fczy_93"
});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/app-layout/toggles/index.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0



var togglesConfig = {
    navigation: {
        TagName: 'nav',
        iconName: 'menu',
        getLabels: function (labels) {
            if (labels === void 0) { labels = {}; }
            return ({
                mainLabel: labels.navigation,
                openLabel: labels.navigationToggle,
                closeLabel: labels.navigationClose
            });
        }
    },
    tools: {
        TagName: 'aside',
        iconName: 'status-info',
        getLabels: function (labels) {
            if (labels === void 0) { labels = {}; }
            return ({
                mainLabel: labels.tools,
                openLabel: labels.toolsToggle,
                closeLabel: labels.toolsClose
            });
        }
    }
};
var AppLayoutButton = react.forwardRef(function (_a, ref) {
    var className = _a.className, ariaLabel = _a.ariaLabel, ariaExpanded = _a.ariaExpanded, iconName = _a.iconName, disabled = _a.disabled, onClick = _a.onClick;
    return (react.createElement(InternalButton, { ref: ref, className: className, ariaLabel: ariaLabel, variant: "icon", formAction: "none", onClick: onClick, iconName: iconName, disabled: disabled, ariaExpanded: ariaExpanded ? undefined : false, __nativeAttributes: { 'aria-haspopup': ariaExpanded ? undefined : true } }));
});
var CloseButton = react.forwardRef(function (_a, ref) {
    var className = _a.className, ariaLabel = _a.ariaLabel, onClick = _a.onClick, iconName = _a.iconName;
    return (react.createElement("span", { className: toggles_styles_css["close-button"] },
        react.createElement(AppLayoutButton, { ref: ref, className: className, ariaExpanded: true, ariaLabel: ariaLabel, iconName: iconName, onClick: onClick })));
});
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/app-layout/mobile-toolbar/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/app-layout/mobile-toolbar/styles.css.js


    /* harmony default export */ const mobile_toolbar_styles_css = ({
  "block-body-scroll": "awsui_block-body-scroll_19d8l_l5x8d_97",
  "mobile-bar": "awsui_mobile-bar_19d8l_l5x8d_101",
  "mobile-bar-breadcrumbs": "awsui_mobile-bar-breadcrumbs_19d8l_l5x8d_115",
  "mobile-toggle": "awsui_mobile-toggle_19d8l_l5x8d_122"
});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/app-layout/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/app-layout/styles.css.js


    /* harmony default export */ const app_layout_styles_css = ({
  "root": "awsui_root_lm6vo_hzagk_97",
  "layout-wrapper": "awsui_layout-wrapper_lm6vo_hzagk_98",
  "root-no-scroll": "awsui_root-no-scroll_lm6vo_hzagk_104",
  "layout": "awsui_layout_lm6vo_hzagk_98",
  "layout-no-scroll": "awsui_layout-no-scroll_lm6vo_hzagk_115",
  "layout-main": "awsui_layout-main_lm6vo_hzagk_119",
  "layout-main-scrollable": "awsui_layout-main-scrollable_lm6vo_hzagk_125",
  "unfocusable": "awsui_unfocusable_lm6vo_hzagk_130",
  "navigation-panel": "awsui_navigation-panel_lm6vo_hzagk_134",
  "drawer": "awsui_drawer_lm6vo_hzagk_138",
  "drawer-mobile": "awsui_drawer-mobile_lm6vo_hzagk_144",
  "drawer-closed": "awsui_drawer-closed_lm6vo_hzagk_147",
  "opaque-background": "awsui_opaque-background_lm6vo_hzagk_154",
  "drawer-content": "awsui_drawer-content_lm6vo_hzagk_158",
  "toggle": "awsui_toggle_lm6vo_hzagk_183",
  "visual-refresh-toggle": "awsui_visual-refresh-toggle_lm6vo_hzagk_188",
  "visual-refresh-toggle-type-tools": "awsui_visual-refresh-toggle-type-tools_lm6vo_hzagk_192",
  "visual-refresh-toggle-type-navigation": "awsui_visual-refresh-toggle-type-navigation_lm6vo_hzagk_195",
  "button-toggles-container": "awsui_button-toggles-container_lm6vo_hzagk_205",
  "button-toggles-container-is-hidden": "awsui_button-toggles-container-is-hidden_lm6vo_hzagk_210",
  "breadcrumbs-desktop": "awsui_breadcrumbs-desktop_lm6vo_hzagk_224",
  "content-header-wrapper": "awsui_content-header-wrapper_lm6vo_hzagk_229",
  "content-wrapper": "awsui_content-wrapper_lm6vo_hzagk_233",
  "content-overlapped": "awsui_content-overlapped_lm6vo_hzagk_237",
  "content-extra-top-padding": "awsui_content-extra-top-padding_lm6vo_hzagk_241",
  "navigation-toggle": "awsui_navigation-toggle_lm6vo_hzagk_246",
  "tools-toggle": "awsui_tools-toggle_lm6vo_hzagk_251",
  "navigation": "awsui_navigation_lm6vo_hzagk_134",
  "navigation-close": "awsui_navigation-close_lm6vo_hzagk_263",
  "tools": "awsui_tools_lm6vo_hzagk_251",
  "tools-close": "awsui_tools-close_lm6vo_hzagk_275",
  "notifications": "awsui_notifications_lm6vo_hzagk_279",
  "breadcrumbs": "awsui_breadcrumbs_lm6vo_hzagk_224",
  "content": "awsui_content_lm6vo_hzagk_229",
  "panel-wrapper-outer": "awsui_panel-wrapper-outer_lm6vo_hzagk_291",
  "panel-wrapper-inner": "awsui_panel-wrapper-inner_lm6vo_hzagk_292",
  "mobile": "awsui_mobile_lm6vo_hzagk_301",
  "open": "awsui_open_lm6vo_hzagk_307"
});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/app-layout/test-classes/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/app-layout/test-classes/styles.css.js


    /* harmony default export */ const test_classes_styles_css = ({
  "root": "awsui_root_1fj9k_avnjw_5",
  "navigation": "awsui_navigation_1fj9k_avnjw_9",
  "navigation-toggle": "awsui_navigation-toggle_1fj9k_avnjw_13",
  "navigation-close": "awsui_navigation-close_1fj9k_avnjw_17",
  "content": "awsui_content_1fj9k_avnjw_21",
  "notifications": "awsui_notifications_1fj9k_avnjw_25",
  "breadcrumbs": "awsui_breadcrumbs_1fj9k_avnjw_29",
  "tools": "awsui_tools_1fj9k_avnjw_33",
  "tools-close": "awsui_tools-close_1fj9k_avnjw_37",
  "tools-toggle": "awsui_tools-toggle_1fj9k_avnjw_41",
  "drawer-closed": "awsui_drawer-closed_1fj9k_avnjw_45",
  "mobile-bar": "awsui_mobile-bar_1fj9k_avnjw_49",
  "disable-body-scroll-root": "awsui_disable-body-scroll-root_1fj9k_avnjw_53"
});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/app-layout/mobile-toolbar/index.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0






var MobileToggle = react.forwardRef(function (_a, ref) {
    var className = _a.className, ariaLabels = _a.ariaLabels, type = _a.type, disabled = _a.disabled, onClick = _a.onClick;
    var _b = togglesConfig[type], TagName = _b.TagName, iconName = _b.iconName, getLabels = _b.getLabels;
    var _c = getLabels(ariaLabels), mainLabel = _c.mainLabel, openLabel = _c.openLabel;
    return (react.createElement(TagName, { className: clsx_m(mobile_toolbar_styles_css["mobile-toggle"]), "aria-hidden": disabled, "aria-label": mainLabel, onClick: function (e) { return e.target === e.currentTarget && onClick(); } },
        react.createElement(AppLayoutButton, { ref: ref, className: className, iconName: iconName, onClick: onClick, ariaLabel: openLabel, disabled: disabled, ariaExpanded: disabled })));
});
function MobileToolbar(_a) {
    var _b = _a.ariaLabels, ariaLabels = _b === void 0 ? {} : _b, toggleRefs = _a.toggleRefs, topOffset = _a.topOffset, navigationHide = _a.navigationHide, toolsHide = _a.toolsHide, _c = _a.anyPanelOpen, anyPanelOpen = _c === void 0 ? false : _c, unfocusable = _a.unfocusable, children = _a.children, onNavigationOpen = _a.onNavigationOpen, onToolsOpen = _a.onToolsOpen;
    (0,react.useEffect)(function () {
        if (anyPanelOpen) {
            document.body.classList.add(mobile_toolbar_styles_css["block-body-scroll"]);
            return function () {
                document.body.classList.remove(mobile_toolbar_styles_css["block-body-scroll"]);
            };
        }
        else {
            document.body.classList.remove(mobile_toolbar_styles_css["block-body-scroll"]);
        }
    }, [anyPanelOpen]);
    return (react.createElement("div", { className: clsx_m(mobile_toolbar_styles_css["mobile-bar"], unfocusable && app_layout_styles_css.unfocusable), style: { top: topOffset } },
        !navigationHide && (react.createElement(MobileToggle, { ref: toggleRefs.navigation, type: "navigation", className: clsx_m(app_layout_styles_css["navigation-toggle"], test_classes_styles_css["navigation-toggle"]), ariaLabels: ariaLabels, disabled: anyPanelOpen, onClick: onNavigationOpen })),
        react.createElement("div", { className: mobile_toolbar_styles_css["mobile-bar-breadcrumbs"] }, children && react.createElement("div", { className: clsx_m(app_layout_styles_css.breadcrumbs, test_classes_styles_css.breadcrumbs) }, children)),
        !toolsHide && (react.createElement(MobileToggle, { ref: toggleRefs.tools, type: "tools", className: clsx_m(app_layout_styles_css["tools-toggle"], test_classes_styles_css["tools-toggle"]), ariaLabels: ariaLabels, disabled: anyPanelOpen, onClick: onToolsOpen }))));
}
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/app-layout/utils/use-focus-control.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

function useFocusControl(isOpen, restoreFocus) {
    if (restoreFocus === void 0) { restoreFocus = false; }
    var refs = {
        toggle: (0,react.useRef)(null),
        close: (0,react.useRef)(null)
    };
    var previousFocusedElement = (0,react.useRef)();
    var setFocus = (0,react.useCallback)(function () {
        var _a, _b;
        // due to mounting/remounting, this hook gets called multiple times for a single change,
        // so we ignore any calls where the refs are undefined
        if (!(refs.toggle.current || refs.close.current)) {
            return;
        }
        if (isOpen) {
            previousFocusedElement.current = document.activeElement;
            (_a = refs.close.current) === null || _a === void 0 ? void 0 : _a.focus();
        }
        else {
            if (restoreFocus && previousFocusedElement.current && document.contains(previousFocusedElement.current)) {
                previousFocusedElement.current.focus();
                previousFocusedElement.current = undefined;
            }
            else {
                (_b = refs.toggle.current) === null || _b === void 0 ? void 0 : _b.focus();
            }
        }
    }, [isOpen, restoreFocus, refs.close, refs.toggle]);
    var loseFocus = (0,react.useCallback)(function () {
        previousFocusedElement.current = undefined;
    }, []);
    // eslint-disable-next-line react-hooks/exhaustive-deps
    (0,react.useLayoutEffect)(setFocus, [isOpen, restoreFocus]);
    return { refs: refs, setFocus: setFocus, loseFocus: loseFocus };
}
//# sourceMappingURL=use-focus-control.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/app-layout/utils/use-window-width.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

function useWindowWidth() {
    var _a = (0,react.useState)(function () { return (typeof window !== 'undefined' ? window.innerWidth : 0); }), width = _a[0], setWidth = _a[1];
    (0,react.useEffect)(function () {
        var handler = function () { return setWidth(window.innerWidth); };
        window.addEventListener('resize', handler);
        return function () { return window.removeEventListener('resize', handler); };
    }, []);
    return width;
}
//# sourceMappingURL=use-window-width.js.map
;// CONCATENATED MODULE: ./node_modules/@juggle/resize-observer/lib/utils/resizeObservers.js
var resizeObservers = [];


;// CONCATENATED MODULE: ./node_modules/@juggle/resize-observer/lib/algorithms/hasActiveObservations.js

var hasActiveObservations = function () {
    return resizeObservers.some(function (ro) { return ro.activeTargets.length > 0; });
};


;// CONCATENATED MODULE: ./node_modules/@juggle/resize-observer/lib/algorithms/hasSkippedObservations.js

var hasSkippedObservations = function () {
    return resizeObservers.some(function (ro) { return ro.skippedTargets.length > 0; });
};


;// CONCATENATED MODULE: ./node_modules/@juggle/resize-observer/lib/algorithms/deliverResizeLoopError.js
var msg = 'ResizeObserver loop completed with undelivered notifications.';
var deliverResizeLoopError = function () {
    var event;
    if (typeof ErrorEvent === 'function') {
        event = new ErrorEvent('error', {
            message: msg
        });
    }
    else {
        event = document.createEvent('Event');
        event.initEvent('error', false, false);
        event.message = msg;
    }
    window.dispatchEvent(event);
};


;// CONCATENATED MODULE: ./node_modules/@juggle/resize-observer/lib/ResizeObserverBoxOptions.js
var ResizeObserverBoxOptions;
(function (ResizeObserverBoxOptions) {
    ResizeObserverBoxOptions["BORDER_BOX"] = "border-box";
    ResizeObserverBoxOptions["CONTENT_BOX"] = "content-box";
    ResizeObserverBoxOptions["DEVICE_PIXEL_CONTENT_BOX"] = "device-pixel-content-box";
})(ResizeObserverBoxOptions || (ResizeObserverBoxOptions = {}));


;// CONCATENATED MODULE: ./node_modules/@juggle/resize-observer/lib/utils/freeze.js
var freeze = function (obj) { return Object.freeze(obj); };

;// CONCATENATED MODULE: ./node_modules/@juggle/resize-observer/lib/ResizeObserverSize.js

var ResizeObserverSize = (function () {
    function ResizeObserverSize(inlineSize, blockSize) {
        this.inlineSize = inlineSize;
        this.blockSize = blockSize;
        freeze(this);
    }
    return ResizeObserverSize;
}());


;// CONCATENATED MODULE: ./node_modules/@juggle/resize-observer/lib/DOMRectReadOnly.js

var DOMRectReadOnly = (function () {
    function DOMRectReadOnly(x, y, width, height) {
        this.x = x;
        this.y = y;
        this.width = width;
        this.height = height;
        this.top = this.y;
        this.left = this.x;
        this.bottom = this.top + this.height;
        this.right = this.left + this.width;
        return freeze(this);
    }
    DOMRectReadOnly.prototype.toJSON = function () {
        var _a = this, x = _a.x, y = _a.y, top = _a.top, right = _a.right, bottom = _a.bottom, left = _a.left, width = _a.width, height = _a.height;
        return { x: x, y: y, top: top, right: right, bottom: bottom, left: left, width: width, height: height };
    };
    DOMRectReadOnly.fromRect = function (rectangle) {
        return new DOMRectReadOnly(rectangle.x, rectangle.y, rectangle.width, rectangle.height);
    };
    return DOMRectReadOnly;
}());


;// CONCATENATED MODULE: ./node_modules/@juggle/resize-observer/lib/utils/element.js
var isSVG = function (target) { return target instanceof SVGElement && 'getBBox' in target; };
var isHidden = function (target) {
    if (isSVG(target)) {
        var _a = target.getBBox(), width = _a.width, height = _a.height;
        return !width && !height;
    }
    var _b = target, offsetWidth = _b.offsetWidth, offsetHeight = _b.offsetHeight;
    return !(offsetWidth || offsetHeight || target.getClientRects().length);
};
var isElement = function (obj) {
    var _a;
    if (obj instanceof Element) {
        return true;
    }
    var scope = (_a = obj === null || obj === void 0 ? void 0 : obj.ownerDocument) === null || _a === void 0 ? void 0 : _a.defaultView;
    return !!(scope && obj instanceof scope.Element);
};
var isReplacedElement = function (target) {
    switch (target.tagName) {
        case 'INPUT':
            if (target.type !== 'image') {
                break;
            }
        case 'VIDEO':
        case 'AUDIO':
        case 'EMBED':
        case 'OBJECT':
        case 'CANVAS':
        case 'IFRAME':
        case 'IMG':
            return true;
    }
    return false;
};


;// CONCATENATED MODULE: ./node_modules/@juggle/resize-observer/lib/utils/global.js
var global = typeof window !== 'undefined' ? window : {};

;// CONCATENATED MODULE: ./node_modules/@juggle/resize-observer/lib/algorithms/calculateBoxSize.js






var cache = new WeakMap();
var scrollRegexp = /auto|scroll/;
var verticalRegexp = /^tb|vertical/;
var IE = (/msie|trident/i).test(global.navigator && global.navigator.userAgent);
var parseDimension = function (pixel) { return parseFloat(pixel || '0'); };
var size = function (inlineSize, blockSize, switchSizes) {
    if (inlineSize === void 0) { inlineSize = 0; }
    if (blockSize === void 0) { blockSize = 0; }
    if (switchSizes === void 0) { switchSizes = false; }
    return new ResizeObserverSize((switchSizes ? blockSize : inlineSize) || 0, (switchSizes ? inlineSize : blockSize) || 0);
};
var zeroBoxes = freeze({
    devicePixelContentBoxSize: size(),
    borderBoxSize: size(),
    contentBoxSize: size(),
    contentRect: new DOMRectReadOnly(0, 0, 0, 0)
});
var calculateBoxSizes = function (target, forceRecalculation) {
    if (forceRecalculation === void 0) { forceRecalculation = false; }
    if (cache.has(target) && !forceRecalculation) {
        return cache.get(target);
    }
    if (isHidden(target)) {
        cache.set(target, zeroBoxes);
        return zeroBoxes;
    }
    var cs = getComputedStyle(target);
    var svg = isSVG(target) && target.ownerSVGElement && target.getBBox();
    var removePadding = !IE && cs.boxSizing === 'border-box';
    var switchSizes = verticalRegexp.test(cs.writingMode || '');
    var canScrollVertically = !svg && scrollRegexp.test(cs.overflowY || '');
    var canScrollHorizontally = !svg && scrollRegexp.test(cs.overflowX || '');
    var paddingTop = svg ? 0 : parseDimension(cs.paddingTop);
    var paddingRight = svg ? 0 : parseDimension(cs.paddingRight);
    var paddingBottom = svg ? 0 : parseDimension(cs.paddingBottom);
    var paddingLeft = svg ? 0 : parseDimension(cs.paddingLeft);
    var borderTop = svg ? 0 : parseDimension(cs.borderTopWidth);
    var borderRight = svg ? 0 : parseDimension(cs.borderRightWidth);
    var borderBottom = svg ? 0 : parseDimension(cs.borderBottomWidth);
    var borderLeft = svg ? 0 : parseDimension(cs.borderLeftWidth);
    var horizontalPadding = paddingLeft + paddingRight;
    var verticalPadding = paddingTop + paddingBottom;
    var horizontalBorderArea = borderLeft + borderRight;
    var verticalBorderArea = borderTop + borderBottom;
    var horizontalScrollbarThickness = !canScrollHorizontally ? 0 : target.offsetHeight - verticalBorderArea - target.clientHeight;
    var verticalScrollbarThickness = !canScrollVertically ? 0 : target.offsetWidth - horizontalBorderArea - target.clientWidth;
    var widthReduction = removePadding ? horizontalPadding + horizontalBorderArea : 0;
    var heightReduction = removePadding ? verticalPadding + verticalBorderArea : 0;
    var contentWidth = svg ? svg.width : parseDimension(cs.width) - widthReduction - verticalScrollbarThickness;
    var contentHeight = svg ? svg.height : parseDimension(cs.height) - heightReduction - horizontalScrollbarThickness;
    var borderBoxWidth = contentWidth + horizontalPadding + verticalScrollbarThickness + horizontalBorderArea;
    var borderBoxHeight = contentHeight + verticalPadding + horizontalScrollbarThickness + verticalBorderArea;
    var boxes = freeze({
        devicePixelContentBoxSize: size(Math.round(contentWidth * devicePixelRatio), Math.round(contentHeight * devicePixelRatio), switchSizes),
        borderBoxSize: size(borderBoxWidth, borderBoxHeight, switchSizes),
        contentBoxSize: size(contentWidth, contentHeight, switchSizes),
        contentRect: new DOMRectReadOnly(paddingLeft, paddingTop, contentWidth, contentHeight)
    });
    cache.set(target, boxes);
    return boxes;
};
var calculateBoxSize = function (target, observedBox, forceRecalculation) {
    var _a = calculateBoxSizes(target, forceRecalculation), borderBoxSize = _a.borderBoxSize, contentBoxSize = _a.contentBoxSize, devicePixelContentBoxSize = _a.devicePixelContentBoxSize;
    switch (observedBox) {
        case ResizeObserverBoxOptions.DEVICE_PIXEL_CONTENT_BOX:
            return devicePixelContentBoxSize;
        case ResizeObserverBoxOptions.BORDER_BOX:
            return borderBoxSize;
        default:
            return contentBoxSize;
    }
};


;// CONCATENATED MODULE: ./node_modules/@juggle/resize-observer/lib/ResizeObserverEntry.js


var ResizeObserverEntry = (function () {
    function ResizeObserverEntry(target) {
        var boxes = calculateBoxSizes(target);
        this.target = target;
        this.contentRect = boxes.contentRect;
        this.borderBoxSize = freeze([boxes.borderBoxSize]);
        this.contentBoxSize = freeze([boxes.contentBoxSize]);
        this.devicePixelContentBoxSize = freeze([boxes.devicePixelContentBoxSize]);
    }
    return ResizeObserverEntry;
}());


;// CONCATENATED MODULE: ./node_modules/@juggle/resize-observer/lib/algorithms/calculateDepthForNode.js

var calculateDepthForNode = function (node) {
    if (isHidden(node)) {
        return Infinity;
    }
    var depth = 0;
    var parent = node.parentNode;
    while (parent) {
        depth += 1;
        parent = parent.parentNode;
    }
    return depth;
};


;// CONCATENATED MODULE: ./node_modules/@juggle/resize-observer/lib/algorithms/broadcastActiveObservations.js




var broadcastActiveObservations = function () {
    var shallowestDepth = Infinity;
    var callbacks = [];
    resizeObservers.forEach(function processObserver(ro) {
        if (ro.activeTargets.length === 0) {
            return;
        }
        var entries = [];
        ro.activeTargets.forEach(function processTarget(ot) {
            var entry = new ResizeObserverEntry(ot.target);
            var targetDepth = calculateDepthForNode(ot.target);
            entries.push(entry);
            ot.lastReportedSize = calculateBoxSize(ot.target, ot.observedBox);
            if (targetDepth < shallowestDepth) {
                shallowestDepth = targetDepth;
            }
        });
        callbacks.push(function resizeObserverCallback() {
            ro.callback.call(ro.observer, entries, ro.observer);
        });
        ro.activeTargets.splice(0, ro.activeTargets.length);
    });
    for (var _i = 0, callbacks_1 = callbacks; _i < callbacks_1.length; _i++) {
        var callback = callbacks_1[_i];
        callback();
    }
    return shallowestDepth;
};


;// CONCATENATED MODULE: ./node_modules/@juggle/resize-observer/lib/algorithms/gatherActiveObservationsAtDepth.js


var gatherActiveObservationsAtDepth = function (depth) {
    resizeObservers.forEach(function processObserver(ro) {
        ro.activeTargets.splice(0, ro.activeTargets.length);
        ro.skippedTargets.splice(0, ro.skippedTargets.length);
        ro.observationTargets.forEach(function processTarget(ot) {
            if (ot.isActive()) {
                if (calculateDepthForNode(ot.target) > depth) {
                    ro.activeTargets.push(ot);
                }
                else {
                    ro.skippedTargets.push(ot);
                }
            }
        });
    });
};


;// CONCATENATED MODULE: ./node_modules/@juggle/resize-observer/lib/utils/process.js





var process_process = function () {
    var depth = 0;
    gatherActiveObservationsAtDepth(depth);
    while (hasActiveObservations()) {
        depth = broadcastActiveObservations();
        gatherActiveObservationsAtDepth(depth);
    }
    if (hasSkippedObservations()) {
        deliverResizeLoopError();
    }
    return depth > 0;
};


;// CONCATENATED MODULE: ./node_modules/@juggle/resize-observer/lib/utils/queueMicroTask.js
var trigger;
var callbacks = [];
var notify = function () { return callbacks.splice(0).forEach(function (cb) { return cb(); }); };
var queueMicroTask = function (callback) {
    if (!trigger) {
        var toggle_1 = 0;
        var el_1 = document.createTextNode('');
        var config = { characterData: true };
        new MutationObserver(function () { return notify(); }).observe(el_1, config);
        trigger = function () { el_1.textContent = "".concat(toggle_1 ? toggle_1-- : toggle_1++); };
    }
    callbacks.push(callback);
    trigger();
};


;// CONCATENATED MODULE: ./node_modules/@juggle/resize-observer/lib/utils/queueResizeObserver.js

var queueResizeObserver = function (cb) {
    queueMicroTask(function ResizeObserver() {
        requestAnimationFrame(cb);
    });
};


;// CONCATENATED MODULE: ./node_modules/@juggle/resize-observer/lib/utils/scheduler.js



var watching = 0;
var isWatching = function () { return !!watching; };
var CATCH_PERIOD = 250;
var observerConfig = { attributes: true, characterData: true, childList: true, subtree: true };
var events = [
    'resize',
    'load',
    'transitionend',
    'animationend',
    'animationstart',
    'animationiteration',
    'keyup',
    'keydown',
    'mouseup',
    'mousedown',
    'mouseover',
    'mouseout',
    'blur',
    'focus'
];
var scheduler_time = function (timeout) {
    if (timeout === void 0) { timeout = 0; }
    return Date.now() + timeout;
};
var scheduled = false;
var Scheduler = (function () {
    function Scheduler() {
        var _this = this;
        this.stopped = true;
        this.listener = function () { return _this.schedule(); };
    }
    Scheduler.prototype.run = function (timeout) {
        var _this = this;
        if (timeout === void 0) { timeout = CATCH_PERIOD; }
        if (scheduled) {
            return;
        }
        scheduled = true;
        var until = scheduler_time(timeout);
        queueResizeObserver(function () {
            var elementsHaveResized = false;
            try {
                elementsHaveResized = process_process();
            }
            finally {
                scheduled = false;
                timeout = until - scheduler_time();
                if (!isWatching()) {
                    return;
                }
                if (elementsHaveResized) {
                    _this.run(1000);
                }
                else if (timeout > 0) {
                    _this.run(timeout);
                }
                else {
                    _this.start();
                }
            }
        });
    };
    Scheduler.prototype.schedule = function () {
        this.stop();
        this.run();
    };
    Scheduler.prototype.observe = function () {
        var _this = this;
        var cb = function () { return _this.observer && _this.observer.observe(document.body, observerConfig); };
        document.body ? cb() : global.addEventListener('DOMContentLoaded', cb);
    };
    Scheduler.prototype.start = function () {
        var _this = this;
        if (this.stopped) {
            this.stopped = false;
            this.observer = new MutationObserver(this.listener);
            this.observe();
            events.forEach(function (name) { return global.addEventListener(name, _this.listener, true); });
        }
    };
    Scheduler.prototype.stop = function () {
        var _this = this;
        if (!this.stopped) {
            this.observer && this.observer.disconnect();
            events.forEach(function (name) { return global.removeEventListener(name, _this.listener, true); });
            this.stopped = true;
        }
    };
    return Scheduler;
}());
var scheduler = new Scheduler();
var updateCount = function (n) {
    !watching && n > 0 && scheduler.start();
    watching += n;
    !watching && scheduler.stop();
};


;// CONCATENATED MODULE: ./node_modules/@juggle/resize-observer/lib/ResizeObservation.js



var skipNotifyOnElement = function (target) {
    return !isSVG(target)
        && !isReplacedElement(target)
        && getComputedStyle(target).display === 'inline';
};
var ResizeObservation = (function () {
    function ResizeObservation(target, observedBox) {
        this.target = target;
        this.observedBox = observedBox || ResizeObserverBoxOptions.CONTENT_BOX;
        this.lastReportedSize = {
            inlineSize: 0,
            blockSize: 0
        };
    }
    ResizeObservation.prototype.isActive = function () {
        var size = calculateBoxSize(this.target, this.observedBox, true);
        if (skipNotifyOnElement(this.target)) {
            this.lastReportedSize = size;
        }
        if (this.lastReportedSize.inlineSize !== size.inlineSize
            || this.lastReportedSize.blockSize !== size.blockSize) {
            return true;
        }
        return false;
    };
    return ResizeObservation;
}());


;// CONCATENATED MODULE: ./node_modules/@juggle/resize-observer/lib/ResizeObserverDetail.js
var ResizeObserverDetail = (function () {
    function ResizeObserverDetail(resizeObserver, callback) {
        this.activeTargets = [];
        this.skippedTargets = [];
        this.observationTargets = [];
        this.observer = resizeObserver;
        this.callback = callback;
    }
    return ResizeObserverDetail;
}());


;// CONCATENATED MODULE: ./node_modules/@juggle/resize-observer/lib/ResizeObserverController.js




var observerMap = new WeakMap();
var getObservationIndex = function (observationTargets, target) {
    for (var i = 0; i < observationTargets.length; i += 1) {
        if (observationTargets[i].target === target) {
            return i;
        }
    }
    return -1;
};
var ResizeObserverController = (function () {
    function ResizeObserverController() {
    }
    ResizeObserverController.connect = function (resizeObserver, callback) {
        var detail = new ResizeObserverDetail(resizeObserver, callback);
        observerMap.set(resizeObserver, detail);
    };
    ResizeObserverController.observe = function (resizeObserver, target, options) {
        var detail = observerMap.get(resizeObserver);
        var firstObservation = detail.observationTargets.length === 0;
        if (getObservationIndex(detail.observationTargets, target) < 0) {
            firstObservation && resizeObservers.push(detail);
            detail.observationTargets.push(new ResizeObservation(target, options && options.box));
            updateCount(1);
            scheduler.schedule();
        }
    };
    ResizeObserverController.unobserve = function (resizeObserver, target) {
        var detail = observerMap.get(resizeObserver);
        var index = getObservationIndex(detail.observationTargets, target);
        var lastObservation = detail.observationTargets.length === 1;
        if (index >= 0) {
            lastObservation && resizeObservers.splice(resizeObservers.indexOf(detail), 1);
            detail.observationTargets.splice(index, 1);
            updateCount(-1);
        }
    };
    ResizeObserverController.disconnect = function (resizeObserver) {
        var _this = this;
        var detail = observerMap.get(resizeObserver);
        detail.observationTargets.slice().forEach(function (ot) { return _this.unobserve(resizeObserver, ot.target); });
        detail.activeTargets.splice(0, detail.activeTargets.length);
    };
    return ResizeObserverController;
}());


;// CONCATENATED MODULE: ./node_modules/@juggle/resize-observer/lib/ResizeObserver.js


var ResizeObserver = (function () {
    function ResizeObserver(callback) {
        if (arguments.length === 0) {
            throw new TypeError("Failed to construct 'ResizeObserver': 1 argument required, but only 0 present.");
        }
        if (typeof callback !== 'function') {
            throw new TypeError("Failed to construct 'ResizeObserver': The callback provided as parameter 1 is not a function.");
        }
        ResizeObserverController.connect(this, callback);
    }
    ResizeObserver.prototype.observe = function (target, options) {
        if (arguments.length === 0) {
            throw new TypeError("Failed to execute 'observe' on 'ResizeObserver': 1 argument required, but only 0 present.");
        }
        if (!isElement(target)) {
            throw new TypeError("Failed to execute 'observe' on 'ResizeObserver': parameter 1 is not of type 'Element");
        }
        ResizeObserverController.observe(this, target, options);
    };
    ResizeObserver.prototype.unobserve = function (target) {
        if (arguments.length === 0) {
            throw new TypeError("Failed to execute 'unobserve' on 'ResizeObserver': 1 argument required, but only 0 present.");
        }
        if (!isElement(target)) {
            throw new TypeError("Failed to execute 'unobserve' on 'ResizeObserver': parameter 1 is not of type 'Element");
        }
        ResizeObserverController.unobserve(this, target);
    };
    ResizeObserver.prototype.disconnect = function () {
        ResizeObserverController.disconnect(this);
    };
    ResizeObserver.toString = function () {
        return 'function ResizeObserver () { [polyfill code] }';
    };
    return ResizeObserver;
}());


;// CONCATENATED MODULE: ./node_modules/@juggle/resize-observer/lib/exports/resize-observer.js




;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/hooks/container-queries/use-resize-observer.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0



/**
 * Attaches resize-observer to the referenced element.
 *
 * Examples:
 *     // With React reference
 *     const ref = useRef(null)
 *     useResizeObserver(ref, (entry) => setState(getWidth(entry)))
 *
 *     // With ID reference
 *     const getElement = useCallback(() => document.getElementById(id), [id])
 *     useResizeObserver(getElement, (entry) => setState(getWidth(entry)))
 *
 * @param elementRef React reference or memoized getter for the target element
 * @param onObserve Function to fire when observation occurs
 */
function useResizeObserver(elementRef, onObserve) {
    var stableOnObserve = use_stable_event_handler_useStableEventHandler(onObserve);
    // This effect provides a synchronous update required to prevent flakiness when initial state and first observed state are different.
    // Can potentially conflict with React concurrent mode: https://17.reactjs.org/docs/concurrent-mode-intro.html.
    // A possible solution would be to make consumers not render any content until the first (asynchronous) observation is available.
    (0,react.useLayoutEffect)(function () {
        var element = typeof elementRef === 'function' ? elementRef() : elementRef === null || elementRef === void 0 ? void 0 : elementRef.current;
        if (element) {
            onObserve(convertResizeObserverEntry(new ResizeObserverEntry(element)));
        }
    },
    // This effect is only needed for the first render to provide a synchronous update.
    // eslint-disable-next-line react-hooks/exhaustive-deps
    []);
    (0,react.useEffect)(function () {
        var element = typeof elementRef === 'function' ? elementRef() : elementRef === null || elementRef === void 0 ? void 0 : elementRef.current;
        if (element) {
            var connected_1 = true;
            var observer_1 = new ResizeObserver(function (entries) {
                // Prevent observe notifications on already unmounted component.
                if (connected_1) {
                    stableOnObserve(convertResizeObserverEntry(entries[0]));
                }
            });
            observer_1.observe(element);
            return function () {
                connected_1 = false;
                observer_1.disconnect();
            };
        }
    }, [elementRef, stableOnObserve]);
}
function convertResizeObserverEntry(entry) {
    return {
        target: entry.target,
        contentBoxWidth: entry.contentBoxSize[0].inlineSize,
        contentBoxHeight: entry.contentBoxSize[0].blockSize,
        borderBoxWidth: entry.borderBoxSize[0].inlineSize,
        borderBoxHeight: entry.borderBoxSize[0].blockSize,
        width: entry.contentBoxSize[0].inlineSize,
        height: entry.contentBoxSize[0].blockSize
    };
}
//# sourceMappingURL=use-resize-observer.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/app-layout/utils/use-observed-element.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0


function useObservedElement(selector) {
    var getElement = (0,react.useCallback)(function () {
        return document.querySelector(selector);
    }, [selector]);
    var _a = (0,react.useState)(0), height = _a[0], setHeight = _a[1];
    useResizeObserver(getElement, function (entry) { return setHeight(entry.borderBoxHeight); });
    return height;
}
//# sourceMappingURL=use-observed-element.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/app-layout/utils/use-content-height.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0


function useContentHeight(headerSelector, footerSelector, disableBodyScroll) {
    var _a;
    var headerHeight = useObservedElement(headerSelector);
    var footerHeight = useObservedElement(footerSelector);
    var _b = (0,react.useState)(0), headerFooterHeight = _b[0], setHeaderFooterHeight = _b[1];
    // Delay applying changes in header/footer height, as applying them immediately can cause
    // ResizeOberver warnings due to the algorithm thinking that the change might have side-effects
    // further up the tree, therefore blocking notifications to prevent loops
    (0,react.useEffect)(function () {
        var id = requestAnimationFrame(function () { return setHeaderFooterHeight(headerHeight + footerHeight); });
        return function () { return cancelAnimationFrame(id); };
    }, [headerHeight, footerHeight]);
    var heightStyleValue = "calc(100vh - ".concat(headerFooterHeight, "px)");
    return {
        headerHeight: headerHeight,
        footerHeight: footerHeight,
        contentHeightStyle: (_a = {},
            _a[disableBodyScroll ? 'height' : 'minHeight'] = heightStyleValue,
            _a),
        panelHeightStyle: {
            height: heightStyleValue
        }
    };
}
//# sourceMappingURL=use-content-height.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/context/app-layout-context.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

var AppLayoutContext = (0,react.createContext)({
    stickyOffsetTop: 0,
    stickyOffsetBottom: 0,
    hasBreadcrumbs: false
});
function useAppLayoutContext() {
    return (0,react.useContext)(AppLayoutContext);
}
//# sourceMappingURL=app-layout-context.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/hooks/container-queries/use-container-query.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0


/**
 * Attaches resize-observer to the referenced element and keeps last observation in state.
 * The hook allows to limit the amount of re-renders to only when the observed value changes.
 *
 * Examples:
 *    // Switching display mode under a given condition (only re-renders when mode changes):
 *    const [smallMode, ref] = useContainerQuery(entry => entry.contentBoxHeight <= smallModeHeight, [smallModeHeight]);
 *
 *    // Obtain observer entity (re-renders with each observation):
 *    const [entry, ref] = useContainerQuery(entry => entry);
 *
 *    // Using prevState to avoid unnecessary re-renders:
 *    const [value, ref] = useContainerQuery((entry, prevValue) => shouldUpdate(entry) ? getValue(entry) : prevValue);
 *
 * @param mapFn Function to convert ContainerQueryEntry to a custom type S
 * @param deps Dependency list to indicate when the mapFn changes
 * @returns A tuple of observation value and a reference to be attached to the target element.
 */
function useContainerQuery(mapFn, deps) {
    if (deps === void 0) { deps = []; }
    var elementRef = (0,react.useRef)(null);
    var _a = (0,react.useState)(null), state = _a[0], setState = _a[1];
    // Update getElement when deps change to trigger new observation.
    // eslint-disable-next-line react-hooks/exhaustive-deps
    var getElement = (0,react.useCallback)(function () { return elementRef.current; }, deps);
    useResizeObserver(getElement, function (entry) { return setState(function (prevState) { return mapFn(entry, prevState); }); });
    return [state, elementRef];
}
//# sourceMappingURL=use-container-query.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/context/split-panel-context.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

var SplitPanelContext = (0,react.createContext)(null);
var SplitPanelContextProvider = SplitPanelContext.Provider;
function useSplitPanelContext() {
    var ctx = useContext(SplitPanelContext);
    if (!ctx) {
        throw new Error('Split panel can only be used inside app layout');
    }
    return ctx;
}
//# sourceMappingURL=split-panel-context.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/split-panel/utils/size-utils.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
/**
 * The page height where the page is considered constrained.
 */
var CONSTRAINED_PAGE_HEIGHT = 400;
/**
 * Based on approximate height of breadcrumb, table header, and the first table row
 */
var MAIN_PANEL_MIN_HEIGHT = 250;
/**
 * Based on approximate height of app bar on comfortable mode on mobile.
 */
var CONSTRAINED_MAIN_PANEL_MIN_HEIGHT = 40;
/**
 * Estimate a default split panel size for the first render based on the document size.
 */
function getSplitPanelDefaultSize(position) {
    if (typeof document === 'undefined') {
        return 0; // render the split panel in its minimum possible size
    }
    return position === 'side' ? document.documentElement.clientWidth / 3 : document.documentElement.clientHeight / 2;
}
function getLimitedValue(min, value, max) {
    if (min > max) {
        return min;
    }
    if (value < min) {
        return min;
    }
    if (value > max) {
        return max;
    }
    return value;
}
//# sourceMappingURL=size-utils.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/app-layout/content-wrapper/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/app-layout/content-wrapper/styles.css.js


    /* harmony default export */ const content_wrapper_styles_css = ({
  "content-wrapper": "awsui_content-wrapper_zycdx_19ivr_97",
  "content-wrapper-mobile": "awsui_content-wrapper-mobile_zycdx_19ivr_101",
  "content-type-dashboard": "awsui_content-type-dashboard_zycdx_19ivr_106"
});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/app-layout/content-wrapper/index.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0



var ContentWrapper = react.forwardRef(function (_a, ref) {
    var className = _a.className, contentType = _a.contentType, children = _a.children, toolsPadding = _a.toolsPadding, disablePaddings = _a.disablePaddings, navigationPadding = _a.navigationPadding, isMobile = _a.isMobile, contentWidthStyles = _a.contentWidthStyles;
    if (disablePaddings) {
        return (react.createElement("div", { className: className, ref: ref }, children));
    }
    return (react.createElement("div", { ref: ref, className: clsx_m(className, content_wrapper_styles_css["content-wrapper"], content_wrapper_styles_css["content-type-".concat(contentType)], !navigationPadding && content_wrapper_styles_css["content-wrapper-no-navigation-padding"], !toolsPadding && content_wrapper_styles_css["content-wrapper-no-tools-padding"], isMobile && content_wrapper_styles_css["content-wrapper-mobile"]), style: contentWidthStyles }, children));
});
/* harmony default export */ const content_wrapper = (ContentWrapper);
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/hooks/use-effect-on-update.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

// useEffect, which skips the initial render
function useEffectOnUpdate(callback, deps) {
    var isFirstRender = (0,react.useRef)(true);
    (0,react.useEffect)(function () {
        if (isFirstRender.current) {
            isFirstRender.current = false;
        }
        else {
            return callback();
        }
        // This is a useEffect extension, will be validated at the call site
        // eslint-disable-next-line react-hooks/exhaustive-deps
    }, deps);
}
//# sourceMappingURL=use-effect-on-update.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/app-layout/drawer.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0




// This matches the design token awsui.$border-divider-section-width in Visual Refresh
var BORDER_WIDTH = 2;
// We are using two landmarks per drawer, i.e. two NAVs and two ASIDEs, because of several
// known bugs in NVDA that cause focus changes within a container to sometimes not be
// announced. As a result, we use one region for the open button and one region for the
// actual drawer content, always hiding the other one when it's not visible.
// An alternative solution to follow a more classic implementation here to only have one
// button that triggers the opening/closing of the drawer also did not work due to another
// series of bugs in NVDA (together with Firefox) which prevent the changed expanded state
// from being announced.
// Even with this workaround in place, the announcement of the close button when opening a
// panel in NVDA is not working correctly. The suspected root cause is one of the bugs below
// as well.
// Relevant tickets:
// * https://github.com/nvaccess/nvda/issues/6606
// * https://github.com/nvaccess/nvda/issues/5825
// * https://github.com/nvaccess/nvda/issues/5247
// * https://github.com/nvaccess/nvda/pull/8869 (reverted PR that was going to fix it)
function Drawer(_a) {
    var _b;
    var contentClassName = _a.contentClassName, toggleClassName = _a.toggleClassName, closeClassName = _a.closeClassName, width = _a.width, type = _a.type, toggleRefs = _a.toggleRefs, topOffset = _a.topOffset, bottomOffset = _a.bottomOffset, ariaLabels = _a.ariaLabels, children = _a.children, isOpen = _a.isOpen, isHidden = _a.isHidden, isMobile = _a.isMobile, hasDividerWithSplitPanel = _a.hasDividerWithSplitPanel, onToggle = _a.onToggle, onClick = _a.onClick, onLoseFocus = _a.onLoseFocus, _c = _a.extendRight, extendRight = _c === void 0 ? 0 : _c;
    var _d = togglesConfig[type], TagName = _d.TagName, iconName = _d.iconName, getLabels = _d.getLabels;
    var _e = getLabels(ariaLabels), mainLabel = _e.mainLabel, closeLabel = _e.closeLabel, openLabel = _e.openLabel;
    var hasDividerWithButtonBar = isOpen && extendRight !== 0;
    var drawerContentWidthOpen = isMobile ? undefined : width;
    var drawerContentWidth = isOpen ? drawerContentWidthOpen : undefined;
    var drawerWidth = hasDividerWithButtonBar && drawerContentWidth ? drawerContentWidth + BORDER_WIDTH : drawerContentWidth;
    var closeIconName = 'close';
    var regularOpenButton = (react.createElement(TagName, { "aria-label": mainLabel, className: app_layout_styles_css.toggle, "aria-hidden": isOpen },
        react.createElement(AppLayoutButton, { ref: toggleRefs.toggle, className: toggleClassName, iconName: iconName, ariaLabel: openLabel, onClick: function () { return onToggle(true); }, ariaExpanded: false })));
    return (react.createElement("div", { className: clsx_m(app_layout_styles_css.drawer, (_b = {},
            _b[app_layout_styles_css["drawer-closed"]] = !isOpen,
            _b[app_layout_styles_css["drawer-hidden"]] = isHidden,
            _b[app_layout_styles_css["drawer-mobile"]] = isMobile,
            _b[app_layout_styles_css["has-divider-with-splitpanel"]] = hasDividerWithSplitPanel,
            _b[app_layout_styles_css["opaque-background"]] = hasDividerWithButtonBar,
            _b)), style: {
            width: drawerWidth,
            marginRight: isOpen ? -1 * extendRight : 0,
            paddingRight: isOpen ? extendRight : 0
        }, onBlur: onLoseFocus
            ? function (e) {
                if (!e.relatedTarget || !e.currentTarget.contains(e.relatedTarget)) {
                    onLoseFocus(e);
                }
            }
            : undefined, onClick: function (event) {
            if (onClick) {
                onClick(event);
            }
            if (!isOpen) {
                // to prevent calling onToggle from the drawer when it's called from the toggle button
                if (event.target.tagName !== 'BUTTON') {
                    onToggle(true);
                }
            }
        } },
        react.createElement("div", { style: { width: drawerContentWidth, top: topOffset, bottom: bottomOffset }, className: clsx_m(app_layout_styles_css["drawer-content"], contentClassName) },
            !isMobile && regularOpenButton,
            react.createElement(TagName, { "aria-label": mainLabel, "aria-hidden": !isOpen },
                react.createElement(CloseButton, { ref: toggleRefs.close, className: closeClassName, ariaLabel: closeLabel, onClick: function () { return onToggle(false); }, iconName: closeIconName }),
                children))));
}
//# sourceMappingURL=drawer.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/app-layout/navigation-panel.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0





function NavigationPanel(_a) {
    var _b;
    var ariaLabels = _a.ariaLabels, footerHeight = _a.footerHeight, headerHeight = _a.headerHeight, isHidden = _a.isHidden, isMobile = _a.isMobile, navigation = _a.navigation, navigationDrawerWidth = _a.navigationDrawerWidth, navigationWidth = _a.navigationWidth, navigationOpen = _a.navigationOpen, onClick = _a.onClick, onNavigationToggle = _a.onNavigationToggle, panelHeightStyle = _a.panelHeightStyle, toggleRefs = _a.toggleRefs;
    return (react.createElement("div", { className: app_layout_styles_css["navigation-panel"], style: { width: navigationDrawerWidth } },
        react.createElement("div", { className: clsx_m(app_layout_styles_css["panel-wrapper-outer"], (_b = {},
                _b[app_layout_styles_css.mobile] = isMobile,
                _b[app_layout_styles_css.open] = navigationOpen,
                _b)), style: tslib_es6_assign({}, (isMobile ? { top: headerHeight, bottom: footerHeight } : panelHeightStyle)) },
            react.createElement(Drawer, { type: "navigation", isMobile: isMobile, width: navigationWidth, isOpen: navigationOpen, isHidden: isHidden, onToggle: onNavigationToggle, toggleRefs: toggleRefs, onClick: onClick, contentClassName: clsx_m(app_layout_styles_css.navigation, test_classes_styles_css.navigation), closeClassName: clsx_m(app_layout_styles_css["navigation-close"], test_classes_styles_css["navigation-close"]), toggleClassName: clsx_m(app_layout_styles_css["navigation-toggle"], test_classes_styles_css["navigation-toggle"]), topOffset: headerHeight, bottomOffset: footerHeight, ariaLabels: ariaLabels }, navigation))));
}
//# sourceMappingURL=navigation-panel.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/app-layout/tools-and-split-panel.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0





function ToolsAndSplitPanel(_a) {
    var _b;
    var ariaLabels = _a.ariaLabels, drawerWidth = _a.drawerWidth, footerHeight = _a.footerHeight, headerHeight = _a.headerHeight, isHidden = _a.isHidden, isMobile = _a.isMobile, onToolsToggle = _a.onToolsToggle, panelHeightStyle = _a.panelHeightStyle, splitPanel = _a.splitPanel, toggleRefs = _a.toggleRefs, onLoseToolsFocus = _a.onLoseToolsFocus, tools = _a.tools, toolsHide = _a.toolsHide, toolsOpen = _a.toolsOpen, toolsWidth = _a.toolsWidth, splitPanelOpen = _a.splitPanelOpen;
    var splitPanelVisible = splitPanelOpen && Boolean(splitPanel);
    return (react.createElement(react.Fragment, null,
        react.createElement("div", { style: {
                width: drawerWidth
            } },
            react.createElement("div", { className: clsx_m(app_layout_styles_css["panel-wrapper-outer"], (_b = {},
                    _b[app_layout_styles_css.mobile] = isMobile,
                    _b[app_layout_styles_css.open] = toolsOpen,
                    _b)), style: tslib_es6_assign({}, (isMobile ? { top: headerHeight, bottom: footerHeight } : panelHeightStyle)) },
                splitPanel,
                !toolsHide && (react.createElement(Drawer, { type: "tools", isMobile: isMobile, width: toolsWidth, isOpen: toolsOpen, onToggle: onToolsToggle, toggleRefs: toggleRefs, onLoseFocus: onLoseToolsFocus, isHidden: isHidden, contentClassName: clsx_m(app_layout_styles_css.tools, test_classes_styles_css.tools), closeClassName: clsx_m(app_layout_styles_css["tools-close"], test_classes_styles_css["tools-close"]), toggleClassName: clsx_m(app_layout_styles_css["tools-toggle"], test_classes_styles_css["tools-toggle"]), topOffset: headerHeight, bottomOffset: footerHeight, ariaLabels: ariaLabels, extendRight: 0, hasDividerWithSplitPanel: splitPanelVisible }, tools))))));
}
//# sourceMappingURL=tools-and-split-panel.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/hooks/use-previous-frame/index.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

/**
 * This hook provides access to the value of any variable
 * from the previous render frame.
 * Even if multiple effects are flushed in a single render
 * loop, this hook still keeps the original value.
 */
var usePreviousFrameValue = function (value) {
    var ref = (0,react.useRef)();
    (0,react.useEffect)(function () {
        var handle = requestAnimationFrame(function () {
            ref.current = value;
        });
        return function () { return cancelAnimationFrame(handle); };
    });
    return ref.current;
};
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/app-layout/utils/use-content-width.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0


function useAppLayoutOffsets(element) {
    var _a = (0,react.useState)({ left: 0, right: 0 }), offsets = _a[0], setOffsets = _a[1];
    var updatePosition = (0,react.useCallback)(function () {
        if (!element) {
            return;
        }
        var _a = element.getBoundingClientRect(), left = _a.left, right = _a.right;
        var bodyWidth = document.body.clientWidth;
        setOffsets({ left: left, right: bodyWidth - right });
    }, [element]);
    (0,react.useEffect)(function () {
        window.addEventListener('resize', updatePosition);
        return function () { return window.removeEventListener('resize', updatePosition); };
    }, [updatePosition]);
    var getElement = (0,react.useCallback)(function () { return element; }, [element]);
    useResizeObserver(getElement, updatePosition);
    return offsets;
}
//# sourceMappingURL=use-content-width.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/app-layout/visual-refresh/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/app-layout/visual-refresh/styles.css.js


    /* harmony default export */ const visual_refresh_styles_css = ({
  "appbar": "awsui_appbar_hyvsj_geabg_93",
  "appbar-nav": "awsui_appbar-nav_hyvsj_geabg_117",
  "breadcrumbs": "awsui_breadcrumbs_hyvsj_geabg_121",
  "appbar-tools": "awsui_appbar-tools_hyvsj_geabg_125",
  "has-breadcrumbs": "awsui_has-breadcrumbs_hyvsj_geabg_166",
  "has-notifications-content": "awsui_has-notifications-content_hyvsj_geabg_173",
  "has-header": "awsui_has-header_hyvsj_geabg_179",
  "has-dynamic-overlap-height": "awsui_has-dynamic-overlap-height_hyvsj_geabg_179",
  "content-type-wizard": "awsui_content-type-wizard_hyvsj_geabg_180",
  "content-type-cards": "awsui_content-type-cards_hyvsj_geabg_183",
  "content-type-table": "awsui_content-type-table_hyvsj_geabg_184",
  "has-sticky-background": "awsui_has-sticky-background_hyvsj_geabg_187",
  "background": "awsui_background_hyvsj_geabg_221",
  "notifications-appbar-header": "awsui_notifications-appbar-header_hyvsj_geabg_224",
  "sticky-notifications": "awsui_sticky-notifications_hyvsj_geabg_236",
  "overlap": "awsui_overlap_hyvsj_geabg_242",
  "content": "awsui_content_hyvsj_geabg_180",
  "layout": "awsui_layout_hyvsj_geabg_333",
  "has-max-content-width": "awsui_has-max-content-width_hyvsj_geabg_415",
  "is-overlap-disabled": "awsui_is-overlap-disabled_hyvsj_geabg_442",
  "disable-body-scroll": "awsui_disable-body-scroll_hyvsj_geabg_445",
  "has-sticky-notifications": "awsui_has-sticky-notifications_hyvsj_geabg_449",
  "has-split-panel": "awsui_has-split-panel_hyvsj_geabg_463",
  "split-panel-position-bottom": "awsui_split-panel-position-bottom_hyvsj_geabg_463",
  "has-content-gap-left": "awsui_has-content-gap-left_hyvsj_geabg_475",
  "has-content-gap-right": "awsui_has-content-gap-right_hyvsj_geabg_478",
  "block-body-scroll": "awsui_block-body-scroll_hyvsj_geabg_493",
  "container": "awsui_container_hyvsj_geabg_501",
  "disable-content-paddings": "awsui_disable-content-paddings_hyvsj_geabg_527",
  "is-navigation-open": "awsui_is-navigation-open_hyvsj_geabg_532",
  "is-tools-open": "awsui_is-tools-open_hyvsj_geabg_535",
  "is-split-panel-open": "awsui_is-split-panel-open_hyvsj_geabg_535",
  "split-panel-position-side": "awsui_split-panel-position-side_hyvsj_geabg_535",
  "content-type-default": "awsui_content-type-default_hyvsj_geabg_555",
  "content-type-form": "awsui_content-type-form_hyvsj_geabg_555",
  "unfocusable": "awsui_unfocusable_hyvsj_geabg_596",
  "navigation-container": "awsui_navigation-container_hyvsj_geabg_604",
  "show-navigation": "awsui_show-navigation_hyvsj_geabg_639",
  "animating": "awsui_animating_hyvsj_geabg_661",
  "showButtons": "awsui_showButtons_hyvsj_geabg_1",
  "navigation": "awsui_navigation_hyvsj_geabg_604",
  "openNavigation": "awsui_openNavigation_hyvsj_geabg_1",
  "animated-content": "awsui_animated-content_hyvsj_geabg_722",
  "hide-navigation": "awsui_hide-navigation_hyvsj_geabg_731",
  "notifications": "awsui_notifications_hyvsj_geabg_224",
  "split-panel-bottom": "awsui_split-panel-bottom_hyvsj_geabg_796",
  "position-bottom": "awsui_position-bottom_hyvsj_geabg_842",
  "openSplitPanelBottom": "awsui_openSplitPanelBottom_hyvsj_geabg_1",
  "split-panel-side": "awsui_split-panel-side_hyvsj_geabg_871",
  "position-side": "awsui_position-side_hyvsj_geabg_899",
  "openSplitPanelSide": "awsui_openSplitPanelSide_hyvsj_geabg_1",
  "tools-container": "awsui_tools-container_hyvsj_geabg_936",
  "tools": "awsui_tools_hyvsj_geabg_936",
  "openTools": "awsui_openTools_hyvsj_geabg_1",
  "has-tools-form-persistence": "awsui_has-tools-form-persistence_hyvsj_geabg_1021",
  "hide-tools": "awsui_hide-tools_hyvsj_geabg_1031",
  "show-tools": "awsui_show-tools_hyvsj_geabg_1043",
  "has-tools-form": "awsui_has-tools-form_hyvsj_geabg_1021",
  "trigger": "awsui_trigger_hyvsj_geabg_1100",
  "selected": "awsui_selected_hyvsj_geabg_1139"
});

;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
function objectWithoutPropertiesLoose_objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }
  return target;
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js

function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  _setPrototypeOf(subClass, superClass);
}
;// CONCATENATED MODULE: ./node_modules/react-transition-group/esm/config.js
/* harmony default export */ const config = ({
  disabled: false
});
;// CONCATENATED MODULE: ./node_modules/react-transition-group/esm/TransitionGroupContext.js

/* harmony default export */ const TransitionGroupContext = (react.createContext(null));
;// CONCATENATED MODULE: ./node_modules/react-transition-group/esm/utils/reflow.js
var forceReflow = function forceReflow(node) {
  return node.scrollTop;
};
;// CONCATENATED MODULE: ./node_modules/react-transition-group/esm/Transition.js









var UNMOUNTED = 'unmounted';
var EXITED = 'exited';
var ENTERING = 'entering';
var ENTERED = 'entered';
var EXITING = 'exiting';
/**
 * The Transition component lets you describe a transition from one component
 * state to another _over time_ with a simple declarative API. Most commonly
 * it's used to animate the mounting and unmounting of a component, but can also
 * be used to describe in-place transition states as well.
 *
 * ---
 *
 * **Note**: `Transition` is a platform-agnostic base component. If you're using
 * transitions in CSS, you'll probably want to use
 * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)
 * instead. It inherits all the features of `Transition`, but contains
 * additional features necessary to play nice with CSS transitions (hence the
 * name of the component).
 *
 * ---
 *
 * By default the `Transition` component does not alter the behavior of the
 * component it renders, it only tracks "enter" and "exit" states for the
 * components. It's up to you to give meaning and effect to those states. For
 * example we can add styles to a component when it enters or exits:
 *
 * ```jsx
 * import { Transition } from 'react-transition-group';
 *
 * const duration = 300;
 *
 * const defaultStyle = {
 *   transition: `opacity ${duration}ms ease-in-out`,
 *   opacity: 0,
 * }
 *
 * const transitionStyles = {
 *   entering: { opacity: 1 },
 *   entered:  { opacity: 1 },
 *   exiting:  { opacity: 0 },
 *   exited:  { opacity: 0 },
 * };
 *
 * const Fade = ({ in: inProp }) => (
 *   <Transition in={inProp} timeout={duration}>
 *     {state => (
 *       <div style={{
 *         ...defaultStyle,
 *         ...transitionStyles[state]
 *       }}>
 *         I'm a fade Transition!
 *       </div>
 *     )}
 *   </Transition>
 * );
 * ```
 *
 * There are 4 main states a Transition can be in:
 *  - `'entering'`
 *  - `'entered'`
 *  - `'exiting'`
 *  - `'exited'`
 *
 * Transition state is toggled via the `in` prop. When `true` the component
 * begins the "Enter" stage. During this stage, the component will shift from
 * its current transition state, to `'entering'` for the duration of the
 * transition and then to the `'entered'` stage once it's complete. Let's take
 * the following example (we'll use the
 * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):
 *
 * ```jsx
 * function App() {
 *   const [inProp, setInProp] = useState(false);
 *   return (
 *     <div>
 *       <Transition in={inProp} timeout={500}>
 *         {state => (
 *           // ...
 *         )}
 *       </Transition>
 *       <button onClick={() => setInProp(true)}>
 *         Click to Enter
 *       </button>
 *     </div>
 *   );
 * }
 * ```
 *
 * When the button is clicked the component will shift to the `'entering'` state
 * and stay there for 500ms (the value of `timeout`) before it finally switches
 * to `'entered'`.
 *
 * When `in` is `false` the same thing happens except the state moves from
 * `'exiting'` to `'exited'`.
 */

var Transition = /*#__PURE__*/function (_React$Component) {
  _inheritsLoose(Transition, _React$Component);

  function Transition(props, context) {
    var _this;

    _this = _React$Component.call(this, props, context) || this;
    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears

    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;
    var initialStatus;
    _this.appearStatus = null;

    if (props.in) {
      if (appear) {
        initialStatus = EXITED;
        _this.appearStatus = ENTERING;
      } else {
        initialStatus = ENTERED;
      }
    } else {
      if (props.unmountOnExit || props.mountOnEnter) {
        initialStatus = UNMOUNTED;
      } else {
        initialStatus = EXITED;
      }
    }

    _this.state = {
      status: initialStatus
    };
    _this.nextCallback = null;
    return _this;
  }

  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {
    var nextIn = _ref.in;

    if (nextIn && prevState.status === UNMOUNTED) {
      return {
        status: EXITED
      };
    }

    return null;
  } // getSnapshotBeforeUpdate(prevProps) {
  //   let nextStatus = null
  //   if (prevProps !== this.props) {
  //     const { status } = this.state
  //     if (this.props.in) {
  //       if (status !== ENTERING && status !== ENTERED) {
  //         nextStatus = ENTERING
  //       }
  //     } else {
  //       if (status === ENTERING || status === ENTERED) {
  //         nextStatus = EXITING
  //       }
  //     }
  //   }
  //   return { nextStatus }
  // }
  ;

  var _proto = Transition.prototype;

  _proto.componentDidMount = function componentDidMount() {
    this.updateStatus(true, this.appearStatus);
  };

  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
    var nextStatus = null;

    if (prevProps !== this.props) {
      var status = this.state.status;

      if (this.props.in) {
        if (status !== ENTERING && status !== ENTERED) {
          nextStatus = ENTERING;
        }
      } else {
        if (status === ENTERING || status === ENTERED) {
          nextStatus = EXITING;
        }
      }
    }

    this.updateStatus(false, nextStatus);
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    this.cancelNextCallback();
  };

  _proto.getTimeouts = function getTimeouts() {
    var timeout = this.props.timeout;
    var exit, enter, appear;
    exit = enter = appear = timeout;

    if (timeout != null && typeof timeout !== 'number') {
      exit = timeout.exit;
      enter = timeout.enter; // TODO: remove fallback for next major

      appear = timeout.appear !== undefined ? timeout.appear : enter;
    }

    return {
      exit: exit,
      enter: enter,
      appear: appear
    };
  };

  _proto.updateStatus = function updateStatus(mounting, nextStatus) {
    if (mounting === void 0) {
      mounting = false;
    }

    if (nextStatus !== null) {
      // nextStatus will always be ENTERING or EXITING.
      this.cancelNextCallback();

      if (nextStatus === ENTERING) {
        if (this.props.unmountOnExit || this.props.mountOnEnter) {
          var node = this.props.nodeRef ? this.props.nodeRef.current : react_dom.findDOMNode(this); // https://github.com/reactjs/react-transition-group/pull/749
          // With unmountOnExit or mountOnEnter, the enter animation should happen at the transition between `exited` and `entering`.
          // To make the animation happen,  we have to separate each rendering and avoid being processed as batched.

          if (node) forceReflow(node);
        }

        this.performEnter(mounting);
      } else {
        this.performExit();
      }
    } else if (this.props.unmountOnExit && this.state.status === EXITED) {
      this.setState({
        status: UNMOUNTED
      });
    }
  };

  _proto.performEnter = function performEnter(mounting) {
    var _this2 = this;

    var enter = this.props.enter;
    var appearing = this.context ? this.context.isMounting : mounting;

    var _ref2 = this.props.nodeRef ? [appearing] : [react_dom.findDOMNode(this), appearing],
        maybeNode = _ref2[0],
        maybeAppearing = _ref2[1];

    var timeouts = this.getTimeouts();
    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED
    // if we are mounting and running this it means appear _must_ be set

    if (!mounting && !enter || config.disabled) {
      this.safeSetState({
        status: ENTERED
      }, function () {
        _this2.props.onEntered(maybeNode);
      });
      return;
    }

    this.props.onEnter(maybeNode, maybeAppearing);
    this.safeSetState({
      status: ENTERING
    }, function () {
      _this2.props.onEntering(maybeNode, maybeAppearing);

      _this2.onTransitionEnd(enterTimeout, function () {
        _this2.safeSetState({
          status: ENTERED
        }, function () {
          _this2.props.onEntered(maybeNode, maybeAppearing);
        });
      });
    });
  };

  _proto.performExit = function performExit() {
    var _this3 = this;

    var exit = this.props.exit;
    var timeouts = this.getTimeouts();
    var maybeNode = this.props.nodeRef ? undefined : react_dom.findDOMNode(this); // no exit animation skip right to EXITED

    if (!exit || config.disabled) {
      this.safeSetState({
        status: EXITED
      }, function () {
        _this3.props.onExited(maybeNode);
      });
      return;
    }

    this.props.onExit(maybeNode);
    this.safeSetState({
      status: EXITING
    }, function () {
      _this3.props.onExiting(maybeNode);

      _this3.onTransitionEnd(timeouts.exit, function () {
        _this3.safeSetState({
          status: EXITED
        }, function () {
          _this3.props.onExited(maybeNode);
        });
      });
    });
  };

  _proto.cancelNextCallback = function cancelNextCallback() {
    if (this.nextCallback !== null) {
      this.nextCallback.cancel();
      this.nextCallback = null;
    }
  };

  _proto.safeSetState = function safeSetState(nextState, callback) {
    // This shouldn't be necessary, but there are weird race conditions with
    // setState callbacks and unmounting in testing, so always make sure that
    // we can cancel any pending setState callbacks after we unmount.
    callback = this.setNextCallback(callback);
    this.setState(nextState, callback);
  };

  _proto.setNextCallback = function setNextCallback(callback) {
    var _this4 = this;

    var active = true;

    this.nextCallback = function (event) {
      if (active) {
        active = false;
        _this4.nextCallback = null;
        callback(event);
      }
    };

    this.nextCallback.cancel = function () {
      active = false;
    };

    return this.nextCallback;
  };

  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {
    this.setNextCallback(handler);
    var node = this.props.nodeRef ? this.props.nodeRef.current : react_dom.findDOMNode(this);
    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;

    if (!node || doesNotHaveTimeoutOrListener) {
      setTimeout(this.nextCallback, 0);
      return;
    }

    if (this.props.addEndListener) {
      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],
          maybeNode = _ref3[0],
          maybeNextCallback = _ref3[1];

      this.props.addEndListener(maybeNode, maybeNextCallback);
    }

    if (timeout != null) {
      setTimeout(this.nextCallback, timeout);
    }
  };

  _proto.render = function render() {
    var status = this.state.status;

    if (status === UNMOUNTED) {
      return null;
    }

    var _this$props = this.props,
        children = _this$props.children,
        _in = _this$props.in,
        _mountOnEnter = _this$props.mountOnEnter,
        _unmountOnExit = _this$props.unmountOnExit,
        _appear = _this$props.appear,
        _enter = _this$props.enter,
        _exit = _this$props.exit,
        _timeout = _this$props.timeout,
        _addEndListener = _this$props.addEndListener,
        _onEnter = _this$props.onEnter,
        _onEntering = _this$props.onEntering,
        _onEntered = _this$props.onEntered,
        _onExit = _this$props.onExit,
        _onExiting = _this$props.onExiting,
        _onExited = _this$props.onExited,
        _nodeRef = _this$props.nodeRef,
        childProps = objectWithoutPropertiesLoose_objectWithoutPropertiesLoose(_this$props, ["children", "in", "mountOnEnter", "unmountOnExit", "appear", "enter", "exit", "timeout", "addEndListener", "onEnter", "onEntering", "onEntered", "onExit", "onExiting", "onExited", "nodeRef"]);

    return (
      /*#__PURE__*/
      // allows for nested Transitions
      react.createElement(TransitionGroupContext.Provider, {
        value: null
      }, typeof children === 'function' ? children(status, childProps) : react.cloneElement(react.Children.only(children), childProps))
    );
  };

  return Transition;
}(react.Component);

Transition.contextType = TransitionGroupContext;
Transition.propTypes =  false ? 0 : {}; // Name the function so it is clearer in the documentation

function Transition_noop() {}

Transition.defaultProps = {
  in: false,
  mountOnEnter: false,
  unmountOnExit: false,
  appear: false,
  enter: true,
  exit: true,
  onEnter: Transition_noop,
  onEntering: Transition_noop,
  onEntered: Transition_noop,
  onExit: Transition_noop,
  onExiting: Transition_noop,
  onExited: Transition_noop
};
Transition.UNMOUNTED = UNMOUNTED;
Transition.EXITED = EXITED;
Transition.ENTERING = ENTERING;
Transition.ENTERED = ENTERED;
Transition.EXITING = EXITING;
/* harmony default export */ const esm_Transition = (Transition);
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/components/transition/index.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0




/**
 * This component is a wrapper around the CSSTransition component.
 *
 * It provides a second parameter in its rendering function that must be
 * attached to the node that is transitioning.
 */
function transition_Transition(_a) {
    var isIn = _a["in"], children = _a.children, _b = _a.exit, exit = _b === void 0 ? true : _b, _c = _a.onStatusChange, onStatusChange = _c === void 0 ? function () { return void 0; } : _c, _d = _a.disabled, disabled = _d === void 0 ? false : _d, transitionChangeDelay = _a.transitionChangeDelay, rest = __rest(_a, ["in", "children", "exit", "onStatusChange", "disabled", "transitionChangeDelay"]);
    var transitionRootElement = (0,react.useRef)(null);
    // the initial state of the transition should be either 'exited' or 'entered' depending
    // on the `in` property, this mimicks how internally the Transition component works here:
    // https://github.com/reactjs/react-transition-group/blob/6cbd6aaedaf8e9472007640b429ddb48c6c24158/src/Transition.js#L121
    var _e = (0,react.useState)(isIn ? 'entered' : 'exited'), transitionState = _e[0], setTransitionState = _e[1];
    var motionDisabled = useReducedMotion(transitionRootElement) || disabled;
    var addTransitionEndListener = (0,react.useCallback)(function (done) {
        var node = transitionRootElement.current;
        if (node === null) {
            return;
        }
        var listener = function (e) {
            if (e.target === node) {
                node.removeEventListener('transitionend', listener);
                node.removeEventListener('animationend', listener);
                done();
            }
        };
        node.addEventListener('transitionend', listener);
        node.addEventListener('animationend', listener);
    }, []);
    return (react.createElement(esm_Transition, tslib_es6_assign({ addEndListener: addTransitionEndListener, timeout: motionDisabled ? 0 : undefined, "in": isIn, nodeRef: transitionRootElement, exit: exit, onEnter: function (isAppearing) {
            if (!isAppearing) {
                setTransitionState('enter');
                onStatusChange('enter');
            }
        }, onEntering: function (isAppearing) {
            var _a;
            if (!isAppearing) {
                // This line forces the browser to recalculate the layout because we want the starting state in the 'enter' style
                // to be applied before the animation starts.
                void ((_a = transitionRootElement.current) === null || _a === void 0 ? void 0 : _a.offsetHeight);
                if (transitionChangeDelay === null || transitionChangeDelay === void 0 ? void 0 : transitionChangeDelay.entering) {
                    setTimeout(function () {
                        setTransitionState('entering');
                        onStatusChange('entering');
                    }, transitionChangeDelay === null || transitionChangeDelay === void 0 ? void 0 : transitionChangeDelay.entering);
                }
                else {
                    setTransitionState('entering');
                    onStatusChange('entering');
                }
            }
        }, onEntered: function (isAppearing) {
            if (!isAppearing) {
                setTransitionState('entered');
                onStatusChange('entered');
            }
        }, onExit: function () {
            setTransitionState('exit');
            onStatusChange('exit');
        }, onExiting: function () {
            setTransitionState('exiting');
            onStatusChange('exiting');
        }, onExited: function () {
            setTransitionState('exited');
            onStatusChange('exited');
        } }, rest), function () { return children(transitionState, transitionRootElement); }));
}
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/generated/custom-css-properties/index.js
var customCSSPropertiesMap = {
    offsetTop: '--awsui-offset-top-5mks97',
    offsetTopWithNotifications: '--awsui-offset-top-with-notifications-5mks97',
    contentGapLeft: '--awsui-content-gap-left-5mks97',
    contentGapRight: '--awsui-content-gap-right-5mks97',
    contentHeight: '--awsui-content-height-5mks97',
    defaultMaxContentWidth: '--awsui-default-max-content-width-5mks97',
    defaultMinContentWidth: '--awsui-default-min-content-width-5mks97',
    footerHeight: '--awsui-footer-height-5mks97',
    headerHeight: '--awsui-header-height-5mks97',
    layoutWidth: '--awsui-layout-width-5mks97',
    mainOffsetLeft: '--awsui-main-offset-left-5mks97',
    maxContentWidth: '--awsui-max-content-width-5mks97',
    minContentWidth: '--awsui-min-content-width-5mks97',
    notificationsHeight: '--awsui-notifications-height-5mks97',
    overlapHeight: '--awsui-overlap-height-5mks97',
    navigationWidth: '--awsui-navigation-width-5mks97',
    splitPanelReportedHeaderSize: '--awsui-split-panel-reported-header-size-5mks97',
    splitPanelReportedSize: '--awsui-split-panel-reported-size-5mks97',
    splitPanelHeight: '--awsui-split-panel-height-5mks97',
    splitPanelMinWidth: '--awsui-split-panel-min-width-5mks97',
    splitPanelMaxWidth: '--awsui-split-panel-max-width-5mks97',
    toolsMaxWidth: '--awsui-tools-max-width-5mks97',
    toolsWidth: '--awsui-tools-width-5mks97',
    toolsAnimationStartingOpacity: '--awsui-tools-animation-starting-opacity-5mks97',
    contentScrollMargin: '--awsui-content-scroll-margin-5mks97',
    flashbarStackDepth: '--awsui-flashbar-stack-depth-5mks97',
    flashbarStackIndex: '--awsui-flashbar-stack-index-5mks97'
};
/* harmony default export */ const custom_css_properties = (customCSSPropertiesMap);
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/app-layout/visual-refresh/split-panel.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0








/**
 * If there is no Split Panel in the AppLayout context then the SplitPanel
 * will pass through the AppLayout children without the context.
 */
function SplitPanel(_a) {
    var children = _a.children;
    var _b = useAppLayoutInternals(), handleSplitPanelClick = _b.handleSplitPanelClick, handleSplitPanelPreferencesChange = _b.handleSplitPanelPreferencesChange, handleSplitPanelResize = _b.handleSplitPanelResize, isMobile = _b.isMobile, isSplitPanelForcedPosition = _b.isSplitPanelForcedPosition, isSplitPanelOpen = _b.isSplitPanelOpen, setSplitPanelReportedSize = _b.setSplitPanelReportedSize, setSplitPanelReportedHeaderHeight = _b.setSplitPanelReportedHeaderHeight, splitPanelPosition = _b.splitPanelPosition, splitPanelSize = _b.splitPanelSize, setSplitPanelToggle = _b.setSplitPanelToggle, headerHeight = _b.headerHeight, footerHeight = _b.footerHeight;
    var _c = (0,react.useState)(), splitPanelLastInteraction = _c[0], setSplitPanelLastInteraction = _c[1];
    useEffectOnUpdate(function () { return setSplitPanelLastInteraction(isSplitPanelOpen ? { type: 'open' } : { type: 'close' }); }, [isSplitPanelOpen]);
    useEffectOnUpdate(function () { return setSplitPanelLastInteraction({ type: 'position' }); }, [splitPanelPosition]);
    var context = {
        bottomOffset: 0,
        getMaxHeight: function () {
            var availableHeight = document.documentElement.clientHeight - headerHeight - footerHeight;
            // If the page is likely zoomed in at 200%, allow the split panel to fill the content area.
            return availableHeight < 400 ? availableHeight - 40 : availableHeight - 250;
        },
        getMaxWidth: function () { return document.documentElement.clientWidth; },
        isForcedPosition: isSplitPanelForcedPosition,
        isMobile: isMobile,
        isOpen: isSplitPanelOpen,
        leftOffset: 0,
        onPreferencesChange: handleSplitPanelPreferencesChange,
        onResize: handleSplitPanelResize,
        onToggle: handleSplitPanelClick,
        position: splitPanelPosition,
        reportSize: setSplitPanelReportedSize,
        reportHeaderHeight: setSplitPanelReportedHeaderHeight,
        rightOffset: 0,
        size: splitPanelSize || 0,
        topOffset: 0,
        setSplitPanelToggle: setSplitPanelToggle,
        lastInteraction: splitPanelLastInteraction
    };
    return react.createElement(SplitPanelContextProvider, { value: context }, children);
}
/**
 * This is the render function for the SplitPanel when it is in bottom position.
 * The Split Panel container will be another row entry in the grid definition in
 * the Layout component. The start and finish columns will be variable based
 * on the presence and state of the Navigation and Tools components.
 */
function SplitPanelBottom() {
    var _a = useAppLayoutInternals(), disableBodyScroll = _a.disableBodyScroll, isNavigationOpen = _a.isNavigationOpen, isSplitPanelOpen = _a.isSplitPanelOpen, isToolsOpen = _a.isToolsOpen, splitPanel = _a.splitPanel, splitPanelPosition = _a.splitPanelPosition, splitPanelReportedSize = _a.splitPanelReportedSize, splitPanelReportedHeaderHeight = _a.splitPanelReportedHeaderHeight;
    if (!splitPanel) {
        return null;
    }
    return (react.createElement(transition_Transition, { "in": isSplitPanelOpen !== null && isSplitPanelOpen !== void 0 ? isSplitPanelOpen : false, exit: false }, function (state, transitionEventsRef) {
        var _a, _b;
        return (react.createElement("section", { className: clsx_m(visual_refresh_styles_css["split-panel-bottom"], visual_refresh_styles_css["position-".concat(splitPanelPosition)], (_a = {},
                _a[visual_refresh_styles_css.animating] = state === 'entering',
                _a[visual_refresh_styles_css["disable-body-scroll"]] = disableBodyScroll,
                _a[visual_refresh_styles_css["is-navigation-open"]] = isNavigationOpen,
                _a[visual_refresh_styles_css["is-split-panel-open"]] = isSplitPanelOpen,
                _a[visual_refresh_styles_css["is-tools-open"]] = isToolsOpen,
                _a)), ref: transitionEventsRef, style: (_b = {},
                _b[custom_css_properties.splitPanelReportedSize] = "".concat(splitPanelReportedSize, "px"),
                _b[custom_css_properties.splitPanelReportedHeaderSize] = "".concat(splitPanelReportedHeaderHeight, "px"),
                _b) },
            react.createElement(SplitPanel, null),
            splitPanelPosition === 'bottom' && splitPanel));
    }));
}
/**
 * This is the render function for the SplitPanel when it is side position.
 * The Split Panel will not be within the grid defined in the Layout component
 * but instead a direct child of the Tools component. The width constraints
 * for this position are computed in the Tools component.
 */
function SplitPanelSide() {
    var _a = useAppLayoutInternals(), isSplitPanelOpen = _a.isSplitPanelOpen, splitPanel = _a.splitPanel, splitPanelPosition = _a.splitPanelPosition, splitPanelMaxWidth = _a.splitPanelMaxWidth, splitPanelMinWidth = _a.splitPanelMinWidth, splitPanelReportedSize = _a.splitPanelReportedSize;
    if (!splitPanel) {
        return null;
    }
    return (react.createElement(transition_Transition, { "in": isSplitPanelOpen !== null && isSplitPanelOpen !== void 0 ? isSplitPanelOpen : false, exit: false }, function (state, transitionEventsRef) {
        var _a, _b;
        return (react.createElement("section", { "aria-hidden": !isSplitPanelOpen || splitPanelPosition === 'bottom' ? true : false, className: clsx_m(visual_refresh_styles_css["split-panel-side"], visual_refresh_styles_css["position-".concat(splitPanelPosition)], (_a = {},
                _a[visual_refresh_styles_css.animating] = state === 'entering',
                _a[visual_refresh_styles_css["is-split-panel-open"]] = isSplitPanelOpen,
                _a)), ref: transitionEventsRef, style: (_b = {},
                _b[custom_css_properties.splitPanelMaxWidth] = "".concat(splitPanelMaxWidth, "px"),
                _b[custom_css_properties.splitPanelMinWidth] = "".concat(splitPanelMinWidth, "px"),
                _b[custom_css_properties.splitPanelReportedHeaderSize] = "".concat(splitPanelReportedSize, "px"),
                _b) },
            react.createElement("div", { className: clsx_m(visual_refresh_styles_css["animated-content"]) }, splitPanelPosition === 'side' && splitPanel)));
    }));
}
/**
 * This logic will determine what the Split Panel position should be. It reconciles the possibility
 * of being in forced position with the current selected position in the settings.
 */
function getSplitPanelPosition(isSplitPanelForcedPosition, splitPanelPreferences) {
    var splitPanelPosition = 'bottom';
    if (!isSplitPanelForcedPosition && (splitPanelPreferences === null || splitPanelPreferences === void 0 ? void 0 : splitPanelPreferences.position) === 'side') {
        splitPanelPosition = 'side';
    }
    return splitPanelPosition;
}
SplitPanel.Bottom = SplitPanelBottom;
SplitPanel.Side = SplitPanelSide;
/* harmony default export */ const split_panel = (SplitPanel);
//# sourceMappingURL=split-panel.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/app-layout/visual-refresh/context.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0














/**
 * The default values are destructured in the context instantiation to
 * prevent downstream Typescript errors. This could likely be replaced
 * by a context interface definition that extends the AppLayout interface.
 */
var AppLayoutInternalsContext = (0,react.createContext)(null);
function useAppLayoutInternals() {
    var ctx = (0,react.useContext)(AppLayoutInternalsContext);
    if (!ctx) {
        throw new Error('Invariant violation: this context is only available inside app layout');
    }
    return ctx;
}
var AppLayoutInternalsProvider = react.forwardRef(function (_a, forwardRef) {
    var _b, _c, _d;
    var toolsHide = _a.toolsHide, controlledToolsOpen = _a.toolsOpen, navigationHide = _a.navigationHide, controlledNavigationOpen = _a.navigationOpen, _e = _a.contentType, contentType = _e === void 0 ? 'default' : _e, _f = _a.headerSelector, headerSelector = _f === void 0 ? '#b #h' : _f, _g = _a.footerSelector, footerSelector = _g === void 0 ? '#b #h' : _g, children = _a.children, splitPanel = _a.splitPanel, props = __rest(_a, ["toolsHide", "toolsOpen", "navigationHide", "navigationOpen", "contentType", "headerSelector", "footerSelector", "children", "splitPanel"]);
    var isMobile = useMobile();
    if (isDevelopment) {
        if (controlledToolsOpen && toolsHide) {
            logging_warnOnce('AppLayout', "You have enabled both the `toolsOpen` prop and the `toolsHide` prop. This is not supported. Set `toolsOpen` to `false` when you set `toolsHide` to `true`.");
        }
    }
    /**
     * The overlap height has a default set in CSS but can also be dynamically overridden
     * for content types (such as Table and Wizard) that have variable size content in the overlap.
     * If a child component utilizes a sticky header the hasStickyBackground property will determine
     * if the background remains in the same vertical position.
     */
    var _h = (0,react.useState)(0), dynamicOverlapHeight = _h[0], setDynamicOverlapHeight = _h[1];
    var _j = (0,react.useState)(false), hasStickyBackground = _j[0], setHasStickyBackground = _j[1];
    /**
     * Set the default values for minimum and maximum content width.
     */
    var geckoMaxCssLength = ((1 << 30) - 1) / 60;
    var halfGeckoMaxCssLength = geckoMaxCssLength / 2;
    // CSS lengths in Gecko are limited to at most (1<<30)-1 app units (Gecko uses 60 as app unit).
    // Limit the maxContentWidth to the half of the upper boundary (≈4230^2) to be on the safe side.
    var maxContentWidth = props.maxContentWidth && props.maxContentWidth > halfGeckoMaxCssLength
        ? halfGeckoMaxCssLength
        : (_b = props.maxContentWidth) !== null && _b !== void 0 ? _b : 0;
    var minContentWidth = (_c = props.minContentWidth) !== null && _c !== void 0 ? _c : 280;
    /**
     * Determine the default state of the Navigation and Tools drawers.
     * Mobile viewports should be closed by default under all circumstances.
     * If the navigationOpen prop has been set then that should take precedence
     * over the contentType prop. Desktop viewports that do not have the
     * navigationOpen or contentType props set will use the default contentType.
     */
    var contentTypeDefaults = applyDefaults(contentType, { maxContentWidth: maxContentWidth, minContentWidth: minContentWidth }, true);
    /**
     * The useControllable hook will set the default value and manage either
     * the controlled or uncontrolled state of the Navigation drawer. The logic
     * for determining the default state is colocated with the Navigation component.
     *
     * The callback that will be passed to the Navigation and AppBar
     * components to handle the click events that will change the state
     * of the Navigation drawer. It will set the Navigation state with the
     * useControllable hook and also fire the onNavigationChange function to
     * emit the state change.
     */
    var _k = useControllable(controlledNavigationOpen, props.onNavigationChange, isMobile ? false : contentTypeDefaults.navigationOpen, { componentName: 'AppLayout', controlledProp: 'navigationOpen', changeHandler: 'onNavigationChange' }), _l = _k[0], isNavigationOpen = _l === void 0 ? false : _l, setIsNavigationOpen = _k[1];
    var handleNavigationClick = (0,react.useCallback)(function handleNavigationChange(isOpen) {
        setIsNavigationOpen(isOpen);
        fireNonCancelableEvent(props.onNavigationChange, { open: isOpen });
    }, [props.onNavigationChange, setIsNavigationOpen]);
    /**
     * The useControllable hook will set the default value and manage either
     * the controlled or uncontrolled state of the Tools drawer. The logic
     * for determining the default state is colocated with the Tools component.
     *
     * The callback that will be passed to the Navigation and AppBar
     * components to handle the click events that will change the state
     * of the Tools drawer. It will set the Tools state with the
     * useControllable hook and also fire the onToolsChange function to
     * emit the state change.
     */
    var toolsWidth = (_d = props.toolsWidth) !== null && _d !== void 0 ? _d : 290;
    var hasDefaultToolsWidth = props.toolsWidth === undefined;
    var _m = useControllable(controlledToolsOpen, props.onToolsChange, isMobile ? false : contentTypeDefaults.toolsOpen, { componentName: 'AppLayout', controlledProp: 'toolsOpen', changeHandler: 'onToolsChange' }), _o = _m[0], isToolsOpen = _o === void 0 ? false : _o, setIsToolsOpen = _m[1];
    var toolsFocusControl = useFocusControl(isToolsOpen, true);
    var handleToolsClick = (0,react.useCallback)(function handleToolsChange(isOpen) {
        setIsToolsOpen(isOpen);
        fireNonCancelableEvent(props.onToolsChange, { open: isOpen });
    }, [props.onToolsChange, setIsToolsOpen]);
    var navigationVisible = !navigationHide && isNavigationOpen;
    var toolsVisible = !toolsHide && isToolsOpen;
    var isAnyPanelOpen = navigationVisible || toolsVisible;
    /**
     * On mobile viewports the navigation and tools drawers are adjusted to a fixed position
     * that consumes 100% of the viewport height and width. The body content could potentially
     * be scrollable underneath the drawer. In order to prevent this a CSS class needs to be
     * added to the document body that sets overflow to hidden.
     */
    (0,react.useEffect)(function handleBodyScroll() {
        if (isMobile && (isNavigationOpen || isToolsOpen)) {
            document.body.classList.add(visual_refresh_styles_css["block-body-scroll"]);
        }
        else {
            document.body.classList.remove(visual_refresh_styles_css["block-body-scroll"]);
        }
        // Ensure the CSS class is removed from the body on side effect cleanup
        return function cleanup() {
            document.body.classList.remove(visual_refresh_styles_css["block-body-scroll"]);
        };
    }, [isMobile, isNavigationOpen, isToolsOpen]);
    /**
     * The useImperativeHandle hook in conjunction with the forwardRef function
     * in the AppLayout component definition expose the following callable
     * functions to component consumers when they put a ref as a property on
     * their component implementation.
     */
    (0,react.useImperativeHandle)(forwardRef, function createImperativeHandle() {
        return {
            closeNavigationIfNecessary: function () {
                isMobile && handleNavigationClick(false);
            },
            openTools: function () {
                handleToolsClick(true);
            },
            focusToolsClose: toolsFocusControl.setFocus
        };
    }, [isMobile, handleNavigationClick, handleToolsClick, toolsFocusControl.setFocus]);
    /**
     * Query the DOM for the header and footer elements based on the selectors provided
     * by the properties and pass the heights to the custom property definitions.
     */
    var headerHeight = useObservedElement(headerSelector);
    var footerHeight = useObservedElement(footerSelector);
    /**
     * Set the default values for the minimum and maximum Split Panel width when it is
     * in the side position. The useLayoutEffect will compute the available space in the
     * DOM for the Split Panel given the current state. The minimum and maximum
     * widths will potentially trigger a side effect that will put the Split Panel into
     * a forced position on the bottom.
     */
    var splitPanelMinWidth = 280;
    var _p = (0,react.useState)(splitPanelMinWidth), splitPanelMaxWidth = _p[0], setSplitPanelMaxWidth = _p[1];
    /**
     * The useControllable hook will set the default value and manage either
     * the controlled or uncontrolled state of the Split Panel. By default
     * the Split Panel should always be closed on page load.
     *
     * The callback that will be passed to the SplitPanel component
     * to handle the click events that will change the state of the SplitPanel
     * to open or closed given the current state. It will set the isSplitPanelOpen
     * controlled state and fire the onSplitPanelToggle event.
     */
    var _q = useControllable(props.splitPanelOpen, props.onSplitPanelToggle, false, { componentName: 'AppLayout', controlledProp: 'splitPanelOpen', changeHandler: 'onSplitPanelToggle' }), isSplitPanelOpen = _q[0], setIsSplitPanelOpen = _q[1];
    var handleSplitPanelClick = (0,react.useCallback)(function handleSplitPanelChange() {
        setIsSplitPanelOpen(!isSplitPanelOpen);
        fireNonCancelableEvent(props.onSplitPanelToggle, { open: !isSplitPanelOpen });
    }, [props.onSplitPanelToggle, isSplitPanelOpen, setIsSplitPanelOpen]);
    /**
     * The useControllable hook will manage the controlled or uncontrolled
     * state of the splitPanelPreferences. By default the splitPanelPreferences
     * is undefined. When set the object shape should have a single key to indicate
     * either bottom or side position.
     *
     * The callback that will handle changes to the splitPanelPreferences
     * object that will determine if the SplitPanel is rendered either on the
     * bottom of the viewport or within the Tools container.
     */
    var _r = useControllable(props.splitPanelPreferences, props.onSplitPanelPreferencesChange, undefined, {
        componentName: 'AppLayout',
        controlledProp: 'splitPanelPreferences',
        changeHandler: 'onSplitPanelPreferencesChange'
    }), splitPanelPreferences = _r[0], setSplitPanelPreferences = _r[1];
    /**
     * The Split Panel will be in forced (bottom) position if the defined minimum width is
     * greater than the maximum width. In other words, the maximum width is the currently
     * available horizontal space based on all other components that are rendered. If the
     * minimum width exceeds this value then there is not enough horizontal space and we must
     * force it to the bottom position.
     */
    var _s = (0,react.useState)(false), isSplitPanelForcedPosition = _s[0], setSplitPanelForcedPosition = _s[1];
    var splitPanelPosition = getSplitPanelPosition(isSplitPanelForcedPosition, splitPanelPreferences);
    (0,react.useLayoutEffect)(function handleSplitPanelForcePosition() {
        setSplitPanelForcedPosition(splitPanelMinWidth > splitPanelMaxWidth);
    }, [splitPanelMaxWidth, splitPanelMinWidth]);
    /**
     * The useControllable hook will set the default size of the SplitPanel based
     * on the default position set in the splitPanelPreferences. The logic for the
     * default size is contained in the SplitPanel component. The splitPanelControlledSize
     * will be bound to the size property in the SplitPanel context for rendering.
     *
     * The callback that will be passed to the SplitPanel component
     * to handle the resize events that will change the size of the SplitPanel.
     * It will set the splitPanelControlledSize controlled state and fire the
     * onSplitPanelResize event.
     */
    var _t = (0,react.useState)(0), splitPanelReportedSize = _t[0], setSplitPanelReportedSize = _t[1];
    var _u = (0,react.useState)(0), splitPanelReportedHeaderHeight = _u[0], setSplitPanelReportedHeaderHeight = _u[1];
    var _v = (0,react.useState)({
        displayed: false,
        ariaLabel: undefined
    }), splitPanelToggle = _v[0], setSplitPanelToggle = _v[1];
    var splitPanelDisplayed = !!(splitPanelToggle.displayed || isSplitPanelOpen);
    var _w = useControllable(props.splitPanelSize, props.onSplitPanelResize, getSplitPanelDefaultSize(splitPanelPosition), { componentName: 'AppLayout', controlledProp: 'splitPanelSize', changeHandler: 'onSplitPanelResize' }), splitPanelSize = _w[0], setSplitPanelSize = _w[1];
    var handleSplitPanelResize = (0,react.useCallback)(function handleSplitPanelChange(detail) {
        setSplitPanelSize(detail.size);
        fireNonCancelableEvent(props.onSplitPanelResize, detail);
    }, [props.onSplitPanelResize, setSplitPanelSize]);
    var handleSplitPanelPreferencesChange = (0,react.useCallback)(function handleSplitPanelChange(detail) {
        setSplitPanelPreferences(detail);
        fireNonCancelableEvent(props.onSplitPanelPreferencesChange, detail);
    }, [props.onSplitPanelPreferencesChange, setSplitPanelPreferences]);
    /**
     * The Layout element is not necessarily synonymous with the client
     * viewport width. There can be content in the horizontal viewport
     * that exists on either side of the AppLayout. This resize observer
     * will set the custom property of the Layout element width that
     * is used for various horizontal constraints such as the maximum
     * allowed width of the Tools container.
     *
     * The offsetLeft of the Main will return the distance that the
     * Main element has from the left edge of the Layout component.
     * The offsetLeft value can vary based on the presence and state
     * of the Navigation as well as content gaps in the grid definition.
     * This value is used to determine the max width constraint calculation
     * for the Tools container.
     */
    var _x = useContainerQuery(function (rect) { return rect.width; }), layoutContainerQuery = _x[0], layoutElement = _x[1];
    var layoutWidth = layoutContainerQuery !== null && layoutContainerQuery !== void 0 ? layoutContainerQuery : 0;
    var mainElement = (0,react.useRef)(null);
    var _y = (0,react.useState)(0), mainOffsetLeft = _y[0], setMainOffsetLeft = _y[1];
    (0,react.useLayoutEffect)(function handleMainOffsetLeft() {
        var _a, _b;
        setMainOffsetLeft((_b = (_a = mainElement === null || mainElement === void 0 ? void 0 : mainElement.current) === null || _a === void 0 ? void 0 : _a.offsetLeft) !== null && _b !== void 0 ? _b : 0);
    }, [layoutWidth, isNavigationOpen, isToolsOpen, splitPanelReportedSize]);
    (0,react.useLayoutEffect)(function handleSplitPanelMaxWidth() {
        /**
         * Warning! This is a hack! In order to accurately calculate if there is adequate
         * horizontal space for the Split Panel to be in the side position we need two values
         * that are not available in JavaScript.
         *
         * The first is the the content gap on the right which is stored in a design token
         * and applied in the Layout CSS:
         *
         *  $contentGapRight: #{awsui.$space-scaled-2x-xxxl};
         *
         * The second is the width of the element that has the circular buttons for the
         * Tools and Split Panel. This could be suppressed given the state of the Tools
         * drawer returning a zero value. It would, however, be rendered if the Split Panel
         * were to move into the side position. This is calculated in the Tools CSS and
         * the Trigger button CSS with design tokens:
         *
         * padding: awsui.$space-scaled-s awsui.$space-layout-toggle-padding;
         * width: awsui.$space-layout-toggle-diameter;
         *
         * These values will be defined below as static integers that are rough approximations
         * of their computed width when rendered in the DOM, but doubled to ensure adequate
         * spacing for the Split Panel to be in side position.
         */
        var contentGapRight = 80; // Approximately 40px when rendered but doubled for safety
        var toolsFormOffsetWidth = 160; // Approximately 80px when rendered but doubled for safety
        var toolsOffsetWidth = isToolsOpen ? toolsWidth : 0;
        setSplitPanelMaxWidth(layoutWidth - mainOffsetLeft - minContentWidth - contentGapRight - toolsOffsetWidth - toolsFormOffsetWidth);
    }, [isNavigationOpen, isToolsOpen, layoutWidth, mainOffsetLeft, minContentWidth, toolsWidth]);
    /**
     * Because the notifications slot does not give us any direction insight into
     * what the state of the child content is we need to have a mechanism for
     * tracking the height of the notifications and whether or not it has content.
     * The height of the notifications is an integer that will be used as a custom
     * property on the Layout component to determine what the sticky offset should
     * be if there are sticky notifications. This could be any number including
     * zero based on how the child content renders. The hasNotificationsContent boolean
     * is simply centralizing the logic of the notifications height being > 0 such
     * that it is not repeated in various components (such as AppBar) that need to
     * know if the notifications slot is empty.
     */
    var _z = useContainerQuery(function (rect) { return rect.height; }), notificationsContainerQuery = _z[0], notificationsElement = _z[1];
    var _0 = (0,react.useState)(0), notificationsHeight = _0[0], setNotificationsHeight = _0[1];
    var _1 = (0,react.useState)(false), hasNotificationsContent = _1[0], setHasNotificationsContent = _1[1];
    (0,react.useEffect)(function handleNotificationsContent() {
        setNotificationsHeight(notificationsContainerQuery !== null && notificationsContainerQuery !== void 0 ? notificationsContainerQuery : 0);
        setHasNotificationsContent(notificationsContainerQuery && notificationsContainerQuery > 0 ? true : false);
    }, [notificationsContainerQuery]);
    /**
     * Determine the offsetBottom value based on the presence of a footer element and
     * the SplitPanel component. Ignore the SplitPanel if it is not in the bottom
     * position. Use the size property if it is open and the header height if it is closed.
     */
    var offsetBottom = footerHeight;
    if (splitPanelDisplayed && splitPanelPosition === 'bottom') {
        if (isSplitPanelOpen) {
            offsetBottom += splitPanelReportedSize;
        }
        else {
            offsetBottom += splitPanelReportedHeaderHeight;
        }
    }
    return (react.createElement(AppLayoutInternalsContext.Provider, { value: tslib_es6_assign(tslib_es6_assign({}, props), { contentType: contentType, dynamicOverlapHeight: dynamicOverlapHeight, headerHeight: headerHeight, footerHeight: footerHeight, hasDefaultToolsWidth: hasDefaultToolsWidth, handleNavigationClick: handleNavigationClick, handleSplitPanelClick: handleSplitPanelClick, handleSplitPanelPreferencesChange: handleSplitPanelPreferencesChange, handleSplitPanelResize: handleSplitPanelResize, handleToolsClick: handleToolsClick, hasNotificationsContent: hasNotificationsContent, hasStickyBackground: hasStickyBackground, isAnyPanelOpen: isAnyPanelOpen, isMobile: isMobile, isNavigationOpen: isNavigationOpen !== null && isNavigationOpen !== void 0 ? isNavigationOpen : false, isSplitPanelForcedPosition: isSplitPanelForcedPosition, isSplitPanelOpen: isSplitPanelOpen, isToolsOpen: isToolsOpen, layoutElement: layoutElement, layoutWidth: layoutWidth, mainElement: mainElement, mainOffsetLeft: mainOffsetLeft, maxContentWidth: maxContentWidth, minContentWidth: minContentWidth, navigationHide: navigationHide, notificationsElement: notificationsElement, notificationsHeight: notificationsHeight, offsetBottom: offsetBottom, setDynamicOverlapHeight: setDynamicOverlapHeight, setHasStickyBackground: setHasStickyBackground, setSplitPanelReportedSize: setSplitPanelReportedSize, setSplitPanelReportedHeaderHeight: setSplitPanelReportedHeaderHeight, splitPanel: splitPanel, splitPanelDisplayed: splitPanelDisplayed, splitPanelMaxWidth: splitPanelMaxWidth, splitPanelMinWidth: splitPanelMinWidth, splitPanelPosition: splitPanelPosition, splitPanelPreferences: splitPanelPreferences, splitPanelReportedSize: splitPanelReportedSize, splitPanelReportedHeaderHeight: splitPanelReportedHeaderHeight, splitPanelSize: splitPanelSize, splitPanelToggle: splitPanelToggle, setSplitPanelToggle: setSplitPanelToggle, toolsHide: toolsHide, toolsOpen: isToolsOpen, toolsWidth: toolsWidth, toolsFocusControl: toolsFocusControl }) },
        react.createElement(AppLayoutContext.Provider, { value: {
                stickyOffsetBottom: offsetBottom,
                stickyOffsetTop: 0,
                hasBreadcrumbs: !!props.breadcrumbs,
                setHasStickyBackground: setHasStickyBackground,
                setDynamicOverlapHeight: setDynamicOverlapHeight
            } }, children)));
});
//# sourceMappingURL=context.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/app-layout/visual-refresh/app-bar.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0







/**
 * The CSS class 'awsui-context-content-header' needs to be added to the root element so
 * that the design tokens used are overridden with the appropriate values.
 */
function AppBar() {
    var _a, _b, _c, _d;
    var _e, _f, _g;
    var _h = useAppLayoutInternals(), ariaLabels = _h.ariaLabels, breadcrumbs = _h.breadcrumbs, contentHeader = _h.contentHeader, contentType = _h.contentType, dynamicOverlapHeight = _h.dynamicOverlapHeight, handleNavigationClick = _h.handleNavigationClick, handleToolsClick = _h.handleToolsClick, hasNotificationsContent = _h.hasNotificationsContent, hasStickyBackground = _h.hasStickyBackground, isMobile = _h.isMobile, navigationHide = _h.navigationHide, isNavigationOpen = _h.isNavigationOpen, isToolsOpen = _h.isToolsOpen, toolsHide = _h.toolsHide, isAnyPanelOpen = _h.isAnyPanelOpen;
    var focusRefsNav = useFocusControl(isNavigationOpen).refs;
    var focusRefsTools = useFocusControl(isToolsOpen, true).refs;
    if (navigationHide && !breadcrumbs && toolsHide) {
        return null;
    }
    return (react.createElement("section", { "aria-hidden": !isMobile && !breadcrumbs ? true : undefined, className: clsx_m(visual_refresh_styles_css.appbar, (_a = {},
            _a[visual_refresh_styles_css["has-breadcrumbs"]] = breadcrumbs,
            _a[visual_refresh_styles_css.unfocusable] = isMobile && isAnyPanelOpen,
            _a[test_classes_styles_css["mobile-bar"]] = isMobile,
            _a), 'awsui-context-content-header') },
        !navigationHide && isMobile && (react.createElement("nav", { className: clsx_m(visual_refresh_styles_css["appbar-nav"], (_b = {}, _b[test_classes_styles_css["drawer-closed"]] = !isNavigationOpen, _b)), "aria-hidden": isNavigationOpen },
            react.createElement(InternalButton, { ariaLabel: (_e = ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.navigationToggle) !== null && _e !== void 0 ? _e : undefined, ariaExpanded: isNavigationOpen ? undefined : false, iconName: "menu", formAction: "none", onClick: function () { return handleNavigationClick(true); }, variant: "icon", className: test_classes_styles_css["navigation-toggle"], ref: focusRefsNav.toggle, disabled: isAnyPanelOpen, __nativeAttributes: { 'aria-haspopup': isNavigationOpen ? undefined : true } }))),
        breadcrumbs && (react.createElement("div", { className: clsx_m(visual_refresh_styles_css.breadcrumbs, visual_refresh_styles_css["content-type-".concat(contentType)], test_classes_styles_css.breadcrumbs, (_c = {},
                _c[visual_refresh_styles_css["has-dynamic-overlap-height"]] = dynamicOverlapHeight > 0,
                _c[visual_refresh_styles_css["has-header"]] = contentHeader,
                _c[visual_refresh_styles_css["has-notifications-content"]] = hasNotificationsContent,
                _c[visual_refresh_styles_css["has-sticky-background"]] = hasStickyBackground,
                _c)) }, breadcrumbs)),
        !toolsHide && isMobile && (react.createElement("aside", { className: clsx_m(visual_refresh_styles_css["appbar-tools"], (_d = {}, _d[test_classes_styles_css["drawer-closed"]] = !isToolsOpen, _d)), "aria-hidden": isToolsOpen, "aria-label": (_f = ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.tools) !== null && _f !== void 0 ? _f : undefined },
            react.createElement(InternalButton, { className: test_classes_styles_css["tools-toggle"], ariaExpanded: isToolsOpen, disabled: isAnyPanelOpen, ariaLabel: (_g = ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.toolsToggle) !== null && _g !== void 0 ? _g : undefined, iconName: "status-info", formAction: "none", onClick: function () { return handleToolsClick(true); }, variant: "icon", ref: focusRefsTools.toggle, __nativeAttributes: { 'aria-haspopup': true } })))));
}
//# sourceMappingURL=app-bar.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/app-layout/visual-refresh/background.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0




/**
 * The CSS class 'awsui-context-content-header' needs to be added to the root element so
 * that the design tokens used are overridden with the appropriate values.
 */
function Background() {
    var _a, _b;
    var _c = useAppLayoutInternals(), hasNotificationsContent = _c.hasNotificationsContent, hasStickyBackground = _c.hasStickyBackground, stickyNotifications = _c.stickyNotifications;
    return (react.createElement("div", { className: clsx_m(visual_refresh_styles_css.background, 'awsui-context-content-header') },
        react.createElement("div", { className: clsx_m(visual_refresh_styles_css["notifications-appbar-header"], (_a = {},
                _a[visual_refresh_styles_css["has-notifications-content"]] = hasNotificationsContent,
                _a[visual_refresh_styles_css["has-sticky-background"]] = hasStickyBackground,
                _a[visual_refresh_styles_css["sticky-notifications"]] = stickyNotifications,
                _a)) }),
        react.createElement("div", { className: clsx_m(visual_refresh_styles_css.overlap, (_b = {},
                _b[visual_refresh_styles_css["has-sticky-background"]] = hasStickyBackground,
                _b)) })));
}
//# sourceMappingURL=background.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/app-layout/visual-refresh/header.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0




/**
 * The CSS class 'awsui-context-content-header' needs to be added to the root element so
 * that the design tokens used are overridden with the appropriate values.
 */
function Header() {
    var _a;
    var _b = useAppLayoutInternals(), breadcrumbs = _b.breadcrumbs, contentHeader = _b.contentHeader, hasNotificationsContent = _b.hasNotificationsContent;
    if (!contentHeader) {
        return null;
    }
    return (react.createElement("header", { className: clsx_m(visual_refresh_styles_css.content, (_a = {},
            _a[visual_refresh_styles_css["has-breadcrumbs"]] = breadcrumbs,
            _a[visual_refresh_styles_css["has-notifications-content"]] = hasNotificationsContent,
            _a), 'awsui-context-content-header') }, contentHeader));
}
//# sourceMappingURL=header.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/app-layout/visual-refresh/layout.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0






/**
 * The layoutElement ref will be used by the resize observers to calculate the offset from
 * the top and bottom of the viewport based on the header and footer elements. This is to
 * ensure the Layout component minimum height will fill 100% of the viewport less those
 * cumulative heights.
 */
function Layout(_a) {
    var _b, _c, _d, _e, _f, _g;
    var children = _a.children;
    var _h = useAppLayoutInternals(), contentHeader = _h.contentHeader, contentType = _h.contentType, disableBodyScroll = _h.disableBodyScroll, disableContentHeaderOverlap = _h.disableContentHeaderOverlap, dynamicOverlapHeight = _h.dynamicOverlapHeight, footerHeight = _h.footerHeight, hasNotificationsContent = _h.hasNotificationsContent, headerHeight = _h.headerHeight, isNavigationOpen = _h.isNavigationOpen, isSplitPanelOpen = _h.isSplitPanelOpen, isToolsOpen = _h.isToolsOpen, layoutElement = _h.layoutElement, layoutWidth = _h.layoutWidth, mainOffsetLeft = _h.mainOffsetLeft, maxContentWidth = _h.maxContentWidth, minContentWidth = _h.minContentWidth, navigationHide = _h.navigationHide, notificationsHeight = _h.notificationsHeight, splitPanelPosition = _h.splitPanelPosition, stickyNotifications = _h.stickyNotifications, splitPanelDisplayed = _h.splitPanelDisplayed, toolsHide = _h.toolsHide;
    var isOverlapDisabled = getOverlapDisabled(dynamicOverlapHeight, contentHeader, disableContentHeaderOverlap);
    // Content gaps on the left and right are used with the minmax function in the CSS grid column definition
    var hasContentGapLeft = getContentGapLeft(isNavigationOpen, navigationHide);
    var hasContentGapRight = getContentGapRight(splitPanelPosition, isSplitPanelOpen, isToolsOpen, splitPanelDisplayed, toolsHide);
    return (react.createElement("main", { className: clsx_m(visual_refresh_styles_css.layout, visual_refresh_styles_css["content-type-".concat(contentType)], visual_refresh_styles_css["split-panel-position-".concat(splitPanelPosition !== null && splitPanelPosition !== void 0 ? splitPanelPosition : 'bottom')], (_b = {},
            _b[visual_refresh_styles_css["disable-body-scroll"]] = disableBodyScroll,
            _b[test_classes_styles_css["disable-body-scroll-root"]] = disableBodyScroll,
            _b[visual_refresh_styles_css["has-content-gap-left"]] = hasContentGapLeft,
            _b[visual_refresh_styles_css["has-content-gap-right"]] = hasContentGapRight,
            _b[visual_refresh_styles_css["has-max-content-width"]] = maxContentWidth && maxContentWidth > 0,
            _b[visual_refresh_styles_css["has-split-panel"]] = splitPanelDisplayed,
            _b[visual_refresh_styles_css["has-sticky-notifications"]] = stickyNotifications && hasNotificationsContent,
            _b[visual_refresh_styles_css["is-overlap-disabled"]] = isOverlapDisabled,
            _b), test_classes_styles_css.root), ref: layoutElement, style: tslib_es6_assign(tslib_es6_assign(tslib_es6_assign(tslib_es6_assign((_c = {}, _c[custom_css_properties.headerHeight] = "".concat(headerHeight, "px"), _c[custom_css_properties.footerHeight] = "".concat(footerHeight, "px"), _c[custom_css_properties.layoutWidth] = "".concat(layoutWidth, "px"), _c[custom_css_properties.mainOffsetLeft] = "".concat(mainOffsetLeft, "px"), _c), (maxContentWidth && (_d = {}, _d[custom_css_properties.maxContentWidth] = "".concat(maxContentWidth, "px"), _d))), (minContentWidth && (_e = {}, _e[custom_css_properties.minContentWidth] = "".concat(minContentWidth, "px"), _e))), (_f = {}, _f[custom_css_properties.notificationsHeight] = "".concat(notificationsHeight, "px"), _f)), (!isOverlapDisabled &&
            dynamicOverlapHeight > 0 && (_g = {}, _g[custom_css_properties.overlapHeight] = "".concat(dynamicOverlapHeight, "px"), _g))) }, children));
}
/**
 * When the Navigation and Tools are present the grid definition has the center column
 * touch the first and last columns with no gap. The forms with the circular buttons
 * for Navigation and Tools have internal padding which creates the necessary
 * horizontal space when the drawers are closed. The remaining conditions below
 * determine the necessity of utilizing the content gap left property to create
 * horizontal space between the center column and its adjacent siblings.
 */
function getContentGapRight(splitPanelPosition, isSplitPanelOpen, isToolsOpen, splitPanelDisplayed, toolsHide) {
    var hasContentGapRight = false;
    // Main is touching the edge of the Layout and needs a content gap
    if (!splitPanelDisplayed && toolsHide) {
        hasContentGapRight = true;
    }
    // Main is touching the Tools drawer and needs a content gap
    if ((!splitPanelDisplayed || !isSplitPanelOpen) && !toolsHide && isToolsOpen) {
        hasContentGapRight = true;
    }
    // Main is touching the edge of the Layout and needs a content gap
    if (splitPanelDisplayed && splitPanelPosition === 'bottom' && (isToolsOpen || toolsHide)) {
        hasContentGapRight = true;
    }
    // Main is touching the Split Panel drawer and needs a content gap
    if (splitPanelDisplayed && isSplitPanelOpen && splitPanelPosition === 'side') {
        hasContentGapRight = true;
    }
    return hasContentGapRight;
}
/**
 * Additional function to determine whether or not a content gap is needed
 * on the left (see the getContentGapRight function). The same render logic applies
 * regarding the center column touching an adjacent sibling but the only
 * component state that needs to be tracked is the Navigation.
 */
function getContentGapLeft(isNavigationOpen, navigationHide) {
    return isNavigationOpen || navigationHide ? true : false;
}
/**
 * Determine whether the overlap between the contentHeader and content slots should be disabled.
 * The disableContentHeaderOverlap property is absolute and will always disable the overlap
 * if it is set to true. If there is no contentHeader then the overlap should be disabled
 * unless there is a dynamicOverlapHeight. The dynamicOverlapHeight property is set by a
 * component in the content slot that needs to manually control the overlap height. Components
 * such as the Table (full page variant), Wizard, ContentLayout use this property and will
 * retain the overlap even if there is nothing rendered in the contentHeader slot.
 */
function getOverlapDisabled(dynamicOverlapHeight, contentHeader, disableContentHeaderOverlap) {
    var isOverlapDisabled = false;
    if (disableContentHeaderOverlap) {
        isOverlapDisabled = true;
    }
    else if (!contentHeader && dynamicOverlapHeight <= 0) {
        isOverlapDisabled = true;
    }
    return isOverlapDisabled;
}
//# sourceMappingURL=layout.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/app-layout/visual-refresh/main.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0






function Main() {
    var _a, _b;
    var _c = useAppLayoutInternals(), breadcrumbs = _c.breadcrumbs, content = _c.content, contentHeader = _c.contentHeader, contentType = _c.contentType, disableContentPaddings = _c.disableContentPaddings, dynamicOverlapHeight = _c.dynamicOverlapHeight, hasNotificationsContent = _c.hasNotificationsContent, isNavigationOpen = _c.isNavigationOpen, isSplitPanelOpen = _c.isSplitPanelOpen, isToolsOpen = _c.isToolsOpen, isMobile = _c.isMobile, isAnyPanelOpen = _c.isAnyPanelOpen, mainElement = _c.mainElement, splitPanelDisplayed = _c.splitPanelDisplayed, offsetBottom = _c.offsetBottom, footerHeight = _c.footerHeight, splitPanelPosition = _c.splitPanelPosition;
    var isUnfocusable = isMobile && isAnyPanelOpen;
    var splitPanelHeight = offsetBottom - footerHeight;
    return (react.createElement("div", { className: clsx_m(visual_refresh_styles_css.container, visual_refresh_styles_css["content-type-".concat(contentType)], visual_refresh_styles_css["split-panel-position-".concat(splitPanelPosition !== null && splitPanelPosition !== void 0 ? splitPanelPosition : 'bottom')], (_a = {},
            _a[visual_refresh_styles_css["disable-content-paddings"]] = disableContentPaddings,
            _a[visual_refresh_styles_css["has-breadcrumbs"]] = breadcrumbs,
            _a[visual_refresh_styles_css["has-dynamic-overlap-height"]] = dynamicOverlapHeight > 0,
            _a[visual_refresh_styles_css["has-header"]] = contentHeader,
            _a[visual_refresh_styles_css["has-notifications-content"]] = hasNotificationsContent,
            _a[visual_refresh_styles_css["has-split-panel"]] = splitPanelDisplayed,
            _a[visual_refresh_styles_css["is-navigation-open"]] = isNavigationOpen,
            _a[visual_refresh_styles_css["is-tools-open"]] = isToolsOpen,
            _a[visual_refresh_styles_css["is-split-panel-open"]] = isSplitPanelOpen,
            _a[visual_refresh_styles_css.unfocusable] = isUnfocusable,
            _a), test_classes_styles_css.content), ref: mainElement, style: (_b = {},
            _b[custom_css_properties.splitPanelHeight] = "".concat(splitPanelHeight, "px"),
            _b) }, content));
}
//# sourceMappingURL=main.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/app-layout/visual-refresh/trigger-button.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0





function TriggerButton(_a, ref) {
    var _b;
    var ariaLabel = _a.ariaLabel, iconName = _a.iconName, onClick = _a.onClick, _c = _a.selected, selected = _c === void 0 ? false : _c, className = _a.className;
    var focusVisible = useFocusVisible();
    return (react.createElement("button", tslib_es6_assign({ "aria-label": ariaLabel, "aria-expanded": false, "aria-haspopup": true, className: clsx_m(visual_refresh_styles_css.trigger, (_b = {},
            _b[visual_refresh_styles_css.selected] = selected,
            _b), className), onClick: onClick, type: "button", ref: ref }, focusVisible),
        react.createElement(internal, { name: iconName })));
}
/* harmony default export */ const trigger_button = (react.forwardRef(TriggerButton));
//# sourceMappingURL=trigger-button.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/app-layout/visual-refresh/navigation.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0











/**
 * The Navigation component consists of the following elements:
 * the container, or root element, that sits as a direct child to the Layout grid definition;
 * the show navigation form that contains the trigger for the drawer in large viewports;
 * the navigation, or drawer, that contains the hide navigation form and the children
 * passed through the API;
 */
function Navigation() {
    var _a = useAppLayoutInternals(), ariaLabels = _a.ariaLabels, handleNavigationClick = _a.handleNavigationClick, isMobile = _a.isMobile, isNavigationOpen = _a.isNavigationOpen, navigation = _a.navigation, navigationHide = _a.navigationHide, navigationWidth = _a.navigationWidth, isToolsOpen = _a.isToolsOpen, isAnyPanelOpen = _a.isAnyPanelOpen, toolsHide = _a.toolsHide;
    var focusRefs = useFocusControl(isNavigationOpen).refs;
    if (navigationHide) {
        return null;
    }
    // Close the Navigation drawer on mobile when a user clicks a link inside.
    var onNavigationClick = function (event) {
        var hasLink = findUpUntil(event.target, function (node) { return node.tagName === 'A' && !!node.href; });
        if (hasLink && isMobile) {
            handleNavigationClick(false);
        }
    };
    var isUnfocusable = isMobile && isAnyPanelOpen && isToolsOpen && !toolsHide;
    return (react.createElement(transition_Transition, { "in": isNavigationOpen }, function (state, transitionEventsRef) {
        var _a, _b, _c, _d;
        var _e, _f, _g;
        return (react.createElement("div", { className: clsx_m(visual_refresh_styles_css["navigation-container"], (_a = {},
                _a[test_classes_styles_css["drawer-closed"]] = !isNavigationOpen,
                _a[visual_refresh_styles_css.unfocusable] = isUnfocusable,
                _a)),
            // Overwrite the default nav width (depends on breakpoints) only when the `navigationWidth` property is set.
            style: tslib_es6_assign({}, (navigationWidth && (_b = {}, _b[custom_css_properties.navigationWidth] = "".concat(navigationWidth, "px"), _b))) },
            !isMobile && (react.createElement("nav", { "aria-hidden": isMobile || isNavigationOpen ? true : false, "aria-label": (_e = ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.navigation) !== null && _e !== void 0 ? _e : undefined, className: clsx_m(visual_refresh_styles_css["show-navigation"], (_c = {},
                    _c[visual_refresh_styles_css.animating] = state === 'exiting',
                    _c[visual_refresh_styles_css["is-navigation-open"]] = isNavigationOpen,
                    _c)), ref: state === 'exiting' ? transitionEventsRef : undefined },
                react.createElement(trigger_button, { ariaLabel: ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.navigationToggle, iconName: "menu", className: test_classes_styles_css["navigation-toggle"], onClick: function () { return handleNavigationClick(true); }, ref: focusRefs.toggle }))),
            react.createElement("nav", { "aria-label": (_f = ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.navigation) !== null && _f !== void 0 ? _f : undefined, className: clsx_m(visual_refresh_styles_css.navigation, (_d = {},
                    _d[visual_refresh_styles_css.animating] = state === 'entering',
                    _d[visual_refresh_styles_css["is-navigation-open"]] = isNavigationOpen,
                    _d), test_classes_styles_css.navigation), ref: state !== 'exiting' ? transitionEventsRef : undefined, "aria-hidden": !isNavigationOpen, onClick: function (event) {
                    onNavigationClick && onNavigationClick(event);
                } },
                react.createElement("div", { className: clsx_m(visual_refresh_styles_css["animated-content"]) },
                    react.createElement("div", { className: clsx_m(visual_refresh_styles_css["hide-navigation"]) },
                        react.createElement(InternalButton, { ariaLabel: (_g = ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.navigationClose) !== null && _g !== void 0 ? _g : undefined, iconName: isMobile ? 'close' : 'angle-left', onClick: function () { return handleNavigationClick(false); }, variant: "icon", formAction: "none", className: test_classes_styles_css["navigation-close"], ref: focusRefs.close })),
                    navigation))));
    }));
}
//# sourceMappingURL=navigation.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/app-layout/visual-refresh/notifications.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0





/**
 * The CSS class 'awsui-context-content-header' needs to be added to the root element so
 * that the design tokens used are overridden with the appropriate values.
 */
function notifications_Notifications() {
    var _a;
    var _b;
    var _c = useAppLayoutInternals(), ariaLabels = _c.ariaLabels, hasNotificationsContent = _c.hasNotificationsContent, notifications = _c.notifications, notificationsElement = _c.notificationsElement, stickyNotifications = _c.stickyNotifications;
    if (!notifications) {
        return null;
    }
    return (react.createElement("div", { role: "region", "aria-label": (_b = ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.notifications) !== null && _b !== void 0 ? _b : undefined, className: clsx_m(visual_refresh_styles_css.notifications, (_a = {},
            _a[visual_refresh_styles_css["has-notifications-content"]] = hasNotificationsContent,
            _a[visual_refresh_styles_css["sticky-notifications"]] = stickyNotifications,
            _a), test_classes_styles_css.notifications, 'awsui-context-content-header'), ref: notificationsElement }, notifications));
}
//# sourceMappingURL=notifications.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/split-panel/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/split-panel/styles.css.js


    /* harmony default export */ const split_panel_styles_css = ({
  "drawer": "awsui_drawer_1r9lg_19fwa_189",
  "refresh": "awsui_refresh_1r9lg_19fwa_189",
  "animating": "awsui_animating_1r9lg_19fwa_203",
  "preference-icon--layout-border": "awsui_preference-icon--layout-border_1r9lg_19fwa_226",
  "preference-icon--layout-background": "awsui_preference-icon--layout-background_1r9lg_19fwa_230",
  "preference-icon--layout-header": "awsui_preference-icon--layout-header_1r9lg_19fwa_233",
  "preference-icon--border": "awsui_preference-icon--border_1r9lg_19fwa_236",
  "preference-icon--primary-button": "awsui_preference-icon--primary-button_1r9lg_19fwa_240",
  "preference-icon--secondary": "awsui_preference-icon--secondary_1r9lg_19fwa_243",
  "preference-icon--disabled-element": "awsui_preference-icon--disabled-element_1r9lg_19fwa_246",
  "preference-icon--separator": "awsui_preference-icon--separator_1r9lg_19fwa_249",
  "preference-icon--focus-text": "awsui_preference-icon--focus-text_1r9lg_19fwa_252",
  "preference-icon-refresh--layout-top": "awsui_preference-icon-refresh--layout-top_1r9lg_19fwa_256",
  "preference-icon-refresh--layout-main": "awsui_preference-icon-refresh--layout-main_1r9lg_19fwa_259",
  "preference-icon-refresh--primary": "awsui_preference-icon-refresh--primary_1r9lg_19fwa_262",
  "preference-icon-refresh--disabled": "awsui_preference-icon-refresh--disabled_1r9lg_19fwa_265",
  "preference-icon-refresh--column-header": "awsui_preference-icon-refresh--column-header_1r9lg_19fwa_268",
  "preference-icon-refresh--window": "awsui_preference-icon-refresh--window_1r9lg_19fwa_271",
  "preference-icon-refresh--secondary": "awsui_preference-icon-refresh--secondary_1r9lg_19fwa_275",
  "preference-icon-refresh--default": "awsui_preference-icon-refresh--default_1r9lg_19fwa_278",
  "preference-icon-refresh--separator": "awsui_preference-icon-refresh--separator_1r9lg_19fwa_281",
  "preference-icon-refresh--input-default": "awsui_preference-icon-refresh--input-default_1r9lg_19fwa_284",
  "preference-icon-refresh--heading": "awsui_preference-icon-refresh--heading_1r9lg_19fwa_287",
  "resize-active": "awsui_resize-active_1r9lg_19fwa_292",
  "resize-side": "awsui_resize-side_1r9lg_19fwa_298",
  "resize-bottom": "awsui_resize-bottom_1r9lg_19fwa_301",
  "root": "awsui_root_1r9lg_19fwa_306",
  "preferences-button": "awsui_preferences-button_1r9lg_19fwa_317",
  "close-button": "awsui_close-button_1r9lg_19fwa_321",
  "drawer-closed": "awsui_drawer-closed_1r9lg_19fwa_332",
  "drawer-content-side": "awsui_drawer-content-side_1r9lg_19fwa_337",
  "drawer-content-bottom": "awsui_drawer-content-bottom_1r9lg_19fwa_357",
  "position-bottom": "awsui_position-bottom_1r9lg_19fwa_366",
  "position-side": "awsui_position-side_1r9lg_19fwa_393",
  "slider": "awsui_slider_1r9lg_19fwa_399",
  "slider-side": "awsui_slider-side_1r9lg_19fwa_428",
  "slider-wrapper-bottom": "awsui_slider-wrapper-bottom_1r9lg_19fwa_433",
  "slider-wrapper-side": "awsui_slider-wrapper-side_1r9lg_19fwa_444",
  "open-button": "awsui_open-button_1r9lg_19fwa_455",
  "open-button-side": "awsui_open-button-side_1r9lg_19fwa_459",
  "slider-icon": "awsui_slider-icon_1r9lg_19fwa_466",
  "slider-icon-bottom": "awsui_slider-icon-bottom_1r9lg_19fwa_472",
  "slider-icon-side": "awsui_slider-icon-side_1r9lg_19fwa_475",
  "pane-header-wrapper-bottom": "awsui_pane-header-wrapper-bottom_1r9lg_19fwa_479",
  "drawer-mobile": "awsui_drawer-mobile_1r9lg_19fwa_489",
  "drawer-disable-content-paddings": "awsui_drawer-disable-content-paddings_1r9lg_19fwa_492",
  "content-bottom": "awsui_content-bottom_1r9lg_19fwa_500",
  "pane-bottom-center-align": "awsui_pane-bottom-center-align_1r9lg_19fwa_511",
  "pane-bottom-content-nav-padding": "awsui_pane-bottom-content-nav-padding_1r9lg_19fwa_516",
  "pane-bottom-content-tools-padding": "awsui_pane-bottom-content-tools-padding_1r9lg_19fwa_520",
  "content-bottom-max-width": "awsui_content-bottom-max-width_1r9lg_19fwa_524",
  "content-side": "awsui_content-side_1r9lg_19fwa_529",
  "pane-header-wrapper-side": "awsui_pane-header-wrapper-side_1r9lg_19fwa_540",
  "pane-content-wrapper-side": "awsui_pane-content-wrapper-side_1r9lg_19fwa_543",
  "header": "awsui_header_1r9lg_19fwa_548",
  "header-text": "awsui_header-text_1r9lg_19fwa_557",
  "header-divider": "awsui_header-divider_1r9lg_19fwa_567",
  "header-actions": "awsui_header-actions_1r9lg_19fwa_573",
  "divider": "awsui_divider_1r9lg_19fwa_581"
});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/app-layout/visual-refresh/tools.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0










/**
 * The Tools component consists of the following elements:
 * the container, or root element, that sits as a direct child to the Layout grid definition;
 * the split panel, which exists only if there is a split panel in side position;
 * the tools, or drawer, that contains the hide tools form and the children passed through the API;
 * the show tools form that contains the triggers for both the drawer and the
 * split panel in large viewports;
 */
function Tools(_a) {
    var children = _a.children;
    var _b = useAppLayoutInternals(), ariaLabels = _b.ariaLabels, handleSplitPanelClick = _b.handleSplitPanelClick, handleToolsClick = _b.handleToolsClick, hasDefaultToolsWidth = _b.hasDefaultToolsWidth, isNavigationOpen = _b.isNavigationOpen, isMobile = _b.isMobile, isSplitPanelOpen = _b.isSplitPanelOpen, isToolsOpen = _b.isToolsOpen, splitPanelDisplayed = _b.splitPanelDisplayed, tools = _b.tools, toolsHide = _b.toolsHide, toolsWidth = _b.toolsWidth, isAnyPanelOpen = _b.isAnyPanelOpen, navigationHide = _b.navigationHide, toolsFocusControl = _b.toolsFocusControl, splitPanelPosition = _b.splitPanelPosition, splitPanelToggle = _b.splitPanelToggle;
    var hasSplitPanel = getSplitPanelStatus(splitPanelDisplayed, splitPanelPosition);
    var hasToolsForm = getToolsFormStatus(hasSplitPanel, isMobile, isSplitPanelOpen, isToolsOpen, toolsHide);
    var hasToolsFormPersistence = getToolsFormPersistence(hasSplitPanel, isSplitPanelOpen, isToolsOpen, toolsHide);
    var focusRefs = toolsFocusControl.refs;
    if (toolsHide && !hasSplitPanel) {
        return null;
    }
    var isUnfocusable = isMobile && isAnyPanelOpen && isNavigationOpen && !navigationHide;
    return (react.createElement(transition_Transition, { "in": isToolsOpen !== null && isToolsOpen !== void 0 ? isToolsOpen : false }, function (state, transitionEventsRef) {
        var _a, _b, _c, _d;
        var _e, _f, _g;
        return (react.createElement("div", { className: clsx_m(visual_refresh_styles_css["tools-container"], (_a = {},
                _a[test_classes_styles_css["drawer-closed"]] = !isToolsOpen,
                _a[visual_refresh_styles_css.unfocusable] = isUnfocusable,
                _a)), style: (_b = {},
                _b[custom_css_properties.toolsAnimationStartingOpacity] = "".concat(hasSplitPanel && isSplitPanelOpen ? 1 : 0),
                // Overwrite the default tools width (depends on breakpoints) only when the `toolsWidth` property has been set.
                _b[custom_css_properties.toolsWidth] = hasDefaultToolsWidth ? '' : "".concat(toolsWidth, "px"),
                _b), onBlur: function (e) {
                if (!e.relatedTarget || !e.currentTarget.contains(e.relatedTarget)) {
                    toolsFocusControl.loseFocus();
                }
            } },
            children,
            !toolsHide && (react.createElement("aside", { "aria-hidden": !isToolsOpen ? true : false, "aria-label": (_e = ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.tools) !== null && _e !== void 0 ? _e : undefined, className: clsx_m(visual_refresh_styles_css.tools, (_c = {},
                    _c[visual_refresh_styles_css.animating] = state === 'entering',
                    _c[visual_refresh_styles_css["has-tools-form-persistence"]] = hasToolsFormPersistence,
                    _c[visual_refresh_styles_css["is-tools-open"]] = isToolsOpen,
                    _c), test_classes_styles_css.tools), ref: state !== 'exiting' ? transitionEventsRef : undefined },
                react.createElement("div", { className: clsx_m(visual_refresh_styles_css["animated-content"]) },
                    react.createElement("div", { className: clsx_m(visual_refresh_styles_css["hide-tools"]) },
                        react.createElement(InternalButton, { ariaLabel: (_f = ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.toolsClose) !== null && _f !== void 0 ? _f : undefined, iconName: isMobile ? 'close' : 'angle-right', onClick: function () { return handleToolsClick(false); }, variant: "icon", formAction: "none", className: test_classes_styles_css["tools-close"], ref: focusRefs.close })),
                    tools))),
            !isMobile && (react.createElement("aside", { "aria-hidden": !hasToolsForm ? true : false, "aria-label": (_g = ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.tools) !== null && _g !== void 0 ? _g : undefined, className: clsx_m(visual_refresh_styles_css["show-tools"], (_d = {},
                    _d[visual_refresh_styles_css.animating] = state === 'exiting',
                    _d[visual_refresh_styles_css["has-tools-form"]] = hasToolsForm,
                    _d[visual_refresh_styles_css["has-tools-form-persistence"]] = hasToolsFormPersistence,
                    _d), split_panel_styles_css.root), ref: state === 'exiting' ? transitionEventsRef : undefined },
                !toolsHide && (react.createElement(trigger_button, { ariaLabel: ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.toolsToggle, iconName: "status-info", onClick: function () { return handleToolsClick(!isToolsOpen); }, selected: hasSplitPanel && isToolsOpen, className: test_classes_styles_css["tools-toggle"], ref: focusRefs.toggle })),
                hasSplitPanel && splitPanelToggle.displayed && (react.createElement(trigger_button, { ariaLabel: splitPanelToggle.ariaLabel, iconName: "view-vertical", onClick: function () { return handleSplitPanelClick(); }, selected: hasSplitPanel && isSplitPanelOpen, className: split_panel_styles_css["open-button"] }))))));
    }));
}
/**
 * Determine the default state of the Tools component. Mobile viewports should be
 * closed by default under all circumstances. If the toolsOpen prop has not been
 * set then it should be closed as well. Otherwise, default to the toolsOpen prop.
 */
function getToolsDefaultState(isMobile, stateFromProps) {
    var isToolsOpen;
    if (isMobile || stateFromProps === undefined) {
        isToolsOpen = false;
    }
    else {
        isToolsOpen = stateFromProps;
    }
    return isToolsOpen;
}
/**
 * This simple function returns the presence of the split panel as a child of the
 * Tools component. It must exist and be in side position.
 */
function getSplitPanelStatus(splitPanelDisplayed, splitPanelPosition) {
    return splitPanelDisplayed && splitPanelPosition === 'side' ? true : false;
}
/**
 * By default the Tools form is styled as display: none; This behavior should
 * be unchanged in mobile viewports where the Tools form is always suppressed.
 * In large viewports, however the Tools form and its corresponding buttons
 * should be present in the UI under the below circumstances.
 */
function getToolsFormStatus(hasSplitPanel, isMobile, isSplitPanelOpen, isToolsOpen, toolsHide) {
    var hasToolsForm = false;
    if (!isMobile) {
        // Both the Split Panel and Tools button are needed
        if (hasSplitPanel && !toolsHide) {
            hasToolsForm = true;
        }
        // The Split Panel button is needed
        if (hasSplitPanel && !isSplitPanelOpen && toolsHide) {
            hasToolsForm = true;
        }
        // The Tools button is needed
        if (!hasSplitPanel && !toolsHide && !isToolsOpen) {
            hasToolsForm = true;
        }
    }
    return hasToolsForm;
}
/**
 * Under two scenarios the Tools form that contains the triggers
 * for the Tools content and the Split Panel may be persistent
 * in the UI (as opposed to disappearing when one of the drawers
 * is open). This will also add a white background as opposed to the
 * default transparent background. The buttons will present and in a
 * selected / not selected state.
 */
function getToolsFormPersistence(hasSplitPanel, isSplitPanelOpen, isToolsOpen, toolsHide) {
    var hasToolsFormPersistence = false;
    // Both Tools and Split Panel exist and one or both is open
    if (hasSplitPanel && !toolsHide && (isSplitPanelOpen || isToolsOpen)) {
        hasToolsFormPersistence = true;
    }
    return hasToolsFormPersistence;
}
//# sourceMappingURL=tools.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/app-layout/visual-refresh/index.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0












/**
 * In mobile viewports the AppBar position changes to sticky and is placed
 * above the notifications. This is handled by adjusting the row positions
 * in CSS for the AppBar and Notifications components relative to the grid
 * definition in the Layout component. In order to keep alignment between
 * the visual ordering and logical ordering of the document the logical order
 * of these components is also modified in the markup below.
 */
var AppLayoutWithRef = react.forwardRef(function AppLayout(props, ref) {
    var isMobile = useMobile();
    return (react.createElement(AppLayoutInternalsProvider, tslib_es6_assign({}, props, { ref: ref }),
        react.createElement(split_panel, null,
            react.createElement(Layout, null,
                react.createElement(Background, null),
                react.createElement(Navigation, null),
                isMobile && react.createElement(AppBar, null),
                react.createElement(notifications_Notifications, null),
                !isMobile && react.createElement(AppBar, null),
                react.createElement(Header, null),
                react.createElement(Main, null),
                react.createElement(split_panel.Bottom, null),
                react.createElement(Tools, null,
                    react.createElement(split_panel.Side, null))))));
});
/* harmony default export */ const visual_refresh = (AppLayoutWithRef);
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/app-layout/index.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

































var AppLayout = react.forwardRef(function (_a, ref) {
    var _b = _a.contentType, contentType = _b === void 0 ? 'default' : _b, _c = _a.headerSelector, headerSelector = _c === void 0 ? '#b #h' : _c, _d = _a.footerSelector, footerSelector = _d === void 0 ? '#b #f' : _d, rest = __rest(_a, ["contentType", "headerSelector", "footerSelector"]);
    var __internalRootRef = useBaseComponent('AppLayout').__internalRootRef;
    var isRefresh = useVisualRefresh();
    // This re-builds the props including the default values
    var props = tslib_es6_assign({ contentType: contentType, headerSelector: headerSelector, footerSelector: footerSelector }, rest);
    var baseProps = getBaseProps(rest);
    return (react.createElement("div", tslib_es6_assign({ ref: __internalRootRef }, baseProps), isRefresh ? react.createElement(visual_refresh, tslib_es6_assign({}, props, { ref: ref })) : react.createElement(OldAppLayout, tslib_es6_assign({}, props, { ref: ref }))));
});
var OldAppLayout = react.forwardRef(function (_a, ref) {
    var _b;
    var _c;
    var navigation = _a.navigation, _d = _a.navigationWidth, navigationWidth = _d === void 0 ? 280 : _d, navigationHide = _a.navigationHide, controlledNavigationOpen = _a.navigationOpen, tools = _a.tools, _e = _a.toolsWidth, toolsWidth = _e === void 0 ? 290 : _e, toolsHide = _a.toolsHide, controlledToolsOpen = _a.toolsOpen, breadcrumbs = _a.breadcrumbs, notifications = _a.notifications, stickyNotifications = _a.stickyNotifications, contentHeader = _a.contentHeader, disableContentHeaderOverlap = _a.disableContentHeaderOverlap, content = _a.content, _f = _a.contentType, contentType = _f === void 0 ? 'default' : _f, disableContentPaddings = _a.disableContentPaddings, disableBodyScroll = _a.disableBodyScroll, maxContentWidth = _a.maxContentWidth, minContentWidth = _a.minContentWidth, _g = _a.headerSelector, headerSelector = _g === void 0 ? '#b #h' : _g, _h = _a.footerSelector, footerSelector = _h === void 0 ? '#b #f' : _h, ariaLabels = _a.ariaLabels, splitPanel = _a.splitPanel, controlledSplitPanelSize = _a.splitPanelSize, controlledSplitPanelOpen = _a.splitPanelOpen, controlledSplitPanelPreferences = _a.splitPanelPreferences, onSplitPanelPreferencesChange = _a.onSplitPanelPreferencesChange, onSplitPanelResize = _a.onSplitPanelResize, onSplitPanelToggle = _a.onSplitPanelToggle, onNavigationChange = _a.onNavigationChange, onToolsChange = _a.onToolsChange;
    if (isDevelopment) {
        if (controlledToolsOpen && toolsHide) {
            logging_warnOnce('AppLayout', "You have enabled both the `toolsOpen` prop and the `toolsHide` prop. This is not supported. Set `toolsOpen` to `false` when you set `toolsHide` to `true`.");
        }
    }
    var rootRef = (0,react.useRef)(null);
    var isMobile = useMobile();
    var isMotionEnabled = rootRef.current ? !isMotionDisabled(rootRef.current) : false;
    var defaults = applyDefaults(contentType, { maxContentWidth: maxContentWidth, minContentWidth: minContentWidth }, false);
    var _j = useControllable(controlledNavigationOpen, onNavigationChange, isMobile ? false : defaults.navigationOpen, { componentName: 'AppLayout', controlledProp: 'navigationOpen', changeHandler: 'onNavigationChange' }), _k = _j[0], navigationOpen = _k === void 0 ? false : _k, setNavigationOpen = _j[1];
    var _l = useControllable(controlledToolsOpen, onToolsChange, isMobile ? false : defaults.toolsOpen, { componentName: 'AppLayout', controlledProp: 'toolsOpen', changeHandler: 'onToolsChange' }), _m = _l[0], toolsOpen = _m === void 0 ? false : _m, setToolsOpen = _l[1];
    var onNavigationToggle = (0,react.useCallback)(function (open) {
        setNavigationOpen(open);
        fireNonCancelableEvent(onNavigationChange, { open: open });
    }, [setNavigationOpen, onNavigationChange]);
    var onToolsToggle = (0,react.useCallback)(function (open) {
        setToolsOpen(open);
        fireNonCancelableEvent(onToolsChange, { open: open });
    }, [setToolsOpen, onToolsChange]);
    var onNavigationClick = function (event) {
        var hasLink = findUpUntil(event.target, function (node) { return node.tagName === 'A' && !!node.href; });
        if (hasLink) {
            onNavigationToggle(false);
        }
    };
    var navigationVisible = !navigationHide && navigationOpen;
    var toolsVisible = !toolsHide && toolsOpen;
    var _o = useContentHeight(headerSelector, footerSelector, disableBodyScroll), contentHeightStyle = _o.contentHeightStyle, headerHeight = _o.headerHeight, footerHeight = _o.footerHeight, panelHeightStyle = _o.panelHeightStyle;
    var _p = (0,react.useState)(false), isSplitpanelForcedPosition = _p[0], setIsSplitpanelForcedPosition = _p[1];
    var _q = useContainerQuery(function (rect) { return rect.height; }), notificationsHeight = _q[0], notificationsRef = _q[1];
    var anyPanelOpen = navigationVisible || toolsVisible;
    var hasRenderedNotifications = notificationsHeight ? notificationsHeight > 0 : false;
    var stickyNotificationsHeight = stickyNotifications ? notificationsHeight : null;
    var _r = useControllable(controlledSplitPanelPreferences, onSplitPanelPreferencesChange, undefined, {
        componentName: 'AppLayout',
        controlledProp: 'splitPanelPreferences',
        changeHandler: 'onSplitPanelPreferencesChange'
    }), splitPanelPreferences = _r[0], setSplitPanelPreferences = _r[1];
    var _s = useControllable(controlledSplitPanelOpen, onSplitPanelToggle, false, {
        componentName: 'AppLayout',
        controlledProp: 'splitPanelOpen',
        changeHandler: 'onSplitPanelToggle'
    }), _t = _s[0], splitPanelOpen = _t === void 0 ? false : _t, setSplitPanelOpen = _s[1];
    var splitPanelPosition = (splitPanelPreferences === null || splitPanelPreferences === void 0 ? void 0 : splitPanelPreferences.position) || 'bottom';
    var _u = (0,react.useState)({
        displayed: false,
        ariaLabel: undefined
    }), splitPanelReportedToggle = _u[0], setSplitPanelReportedToggle = _u[1];
    var splitPanelDisplayed = !!(splitPanel && (splitPanelReportedToggle.displayed || splitPanelOpen));
    var closedDrawerWidth = 40;
    var effectiveNavigationWidth = navigationHide ? 0 : navigationOpen ? navigationWidth : closedDrawerWidth;
    var effectiveToolsWidth = toolsHide && (!splitPanelDisplayed || (splitPanelPreferences === null || splitPanelPreferences === void 0 ? void 0 : splitPanelPreferences.position) !== 'side')
        ? 0
        : toolsOpen
            ? toolsWidth
            : closedDrawerWidth;
    var defaultSplitPanelSize = getSplitPanelDefaultSize(splitPanelPosition);
    var _v = useControllable(controlledSplitPanelSize, onSplitPanelResize, defaultSplitPanelSize, {
        componentName: 'AppLayout',
        controlledProp: 'splitPanelSize',
        changeHandler: 'onSplitPanelResize'
    }), _w = _v[0], splitPanelSize = _w === void 0 ? defaultSplitPanelSize : _w, setSplitPanelSize = _v[1];
    var mainContentRef = (0,react.useRef)(null);
    var legacyScrollRootRef = (0,react.useRef)(null);
    var onSplitPanelPreferencesSet = (0,react.useCallback)(function (detail) {
        setSplitPanelPreferences(detail);
        fireNonCancelableEvent(onSplitPanelPreferencesChange, detail);
    }, [setSplitPanelPreferences, onSplitPanelPreferencesChange]);
    var onSplitPanelSizeSet = (0,react.useCallback)(function (detail) {
        setSplitPanelSize(detail.size);
        fireNonCancelableEvent(onSplitPanelResize, detail);
    }, [setSplitPanelSize, onSplitPanelResize]);
    var onToggle = (0,react.useCallback)(function () {
        setSplitPanelOpen(!splitPanelOpen);
        fireNonCancelableEvent(onSplitPanelToggle, { open: !splitPanelOpen });
    }, [setSplitPanelOpen, splitPanelOpen, onSplitPanelToggle]);
    var getSplitPanelMaxWidth = use_stable_event_handler_useStableEventHandler(function () {
        if (!mainContentRef.current || !defaults.minContentWidth) {
            return NaN;
        }
        var width = parseInt(getComputedStyle(mainContentRef.current).width);
        // when disableContentPaddings is true there is less available space,
        // so we subtract space-scaled-2x-xxxl * 2 for left and right padding
        var contentPadding = disableContentPaddings ? 80 : 0;
        var spaceAvailable = width - defaults.minContentWidth - contentPadding;
        var spaceTaken = finalSplitPanePosition === 'side' ? splitPanelSize : 0;
        return Math.max(0, spaceTaken + spaceAvailable);
    });
    var getSplitPanelMaxHeight = use_stable_event_handler_useStableEventHandler(function () {
        if (typeof document === 'undefined') {
            return 0; // render the split panel in its minimum possible size
        }
        else if (disableBodyScroll && legacyScrollRootRef.current) {
            var availableHeight = legacyScrollRootRef.current.clientHeight;
            return availableHeight < CONSTRAINED_PAGE_HEIGHT ? availableHeight : availableHeight - MAIN_PANEL_MIN_HEIGHT;
        }
        else {
            var availableHeight = document.documentElement.clientHeight - headerHeight - footerHeight;
            return availableHeight < CONSTRAINED_PAGE_HEIGHT
                ? availableHeight - CONSTRAINED_MAIN_PANEL_MIN_HEIGHT
                : availableHeight - MAIN_PANEL_MIN_HEIGHT;
        }
    });
    var finalSplitPanePosition = isSplitpanelForcedPosition ? 'bottom' : splitPanelPosition;
    var splitPaneAvailableOnTheSide = splitPanelDisplayed && finalSplitPanePosition === 'side';
    var splitPanelOpenOnTheSide = splitPaneAvailableOnTheSide && splitPanelOpen;
    var toggleButtonsBarWidth = 0;
    var windowWidth = useWindowWidth();
    var _x = useAppLayoutOffsets(rootRef.current), leftOffset = _x.left, rightOffset = _x.right;
    var contentWidthWithSplitPanel = windowWidth -
        leftOffset -
        rightOffset -
        effectiveToolsWidth -
        effectiveNavigationWidth -
        (disableContentPaddings ? 0 : toggleButtonsBarWidth);
    (0,react.useEffect)(function () {
        var contentWidth = contentWidthWithSplitPanel - splitPanelSize;
        setIsSplitpanelForcedPosition(isMobile || (defaults.minContentWidth || 0) > contentWidth);
        // This is a workaround to avoid a forced position due to splitPanelSize, which is
        // user controlled variable.
        // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [contentWidthWithSplitPanel, defaults.minContentWidth, isMobile]);
    var navigationClosedWidth = navigationHide || isMobile ? 0 : closedDrawerWidth;
    var toolsClosedWidth = toolsHide || isMobile ? 0 : closedDrawerWidth;
    var _y = (0,react.useState)(), splitPanelLastInteraction = _y[0], setSplitPanelLastInteraction = _y[1];
    useEffectOnUpdate(function () { return setSplitPanelLastInteraction(splitPanelOpen ? { type: 'open' } : { type: 'close' }); }, [splitPanelOpen]);
    useEffectOnUpdate(function () { return setSplitPanelLastInteraction({ type: 'position' }); }, [splitPanelPosition]);
    var contentMaxWidthStyle = !isMobile ? { maxWidth: defaults.maxContentWidth } : undefined;
    var _z = (0,react.useState)(0), splitPanelReportedSize = _z[0], setSplitPanelReportedSize = _z[1];
    var _0 = (0,react.useState)(0), splitPanelReportedHeaderHeight = _0[0], setSplitPanelReportedHeaderHeight = _0[1];
    var splitPanelContext = {
        topOffset: headerHeight + (finalSplitPanePosition === 'bottom' ? stickyNotificationsHeight || 0 : 0),
        bottomOffset: footerHeight,
        leftOffset: leftOffset + (isMobile ? 0 : !navigationHide && navigationOpen ? navigationWidth : navigationClosedWidth),
        rightOffset: rightOffset + (isMobile ? 0 : !toolsHide && toolsOpen ? toolsWidth : toolsClosedWidth),
        position: finalSplitPanePosition,
        size: splitPanelSize,
        getMaxWidth: getSplitPanelMaxWidth,
        getMaxHeight: getSplitPanelMaxHeight,
        disableContentPaddings: disableContentPaddings,
        contentWidthStyles: contentMaxWidthStyle,
        isOpen: splitPanelOpen,
        isMobile: isMobile,
        isForcedPosition: isSplitpanelForcedPosition,
        lastInteraction: splitPanelLastInteraction,
        onResize: onSplitPanelSizeSet,
        onToggle: onToggle,
        onPreferencesChange: onSplitPanelPreferencesSet,
        setSplitPanelToggle: setSplitPanelReportedToggle,
        reportSize: setSplitPanelReportedSize,
        reportHeaderHeight: setSplitPanelReportedHeaderHeight
    };
    var splitPanelWrapped = splitPanel && (react.createElement(SplitPanelContextProvider, { value: splitPanelContext }, splitPanel));
    var contentWrapperProps = {
        contentType: contentType,
        navigationPadding: navigationHide || !!navigationOpen,
        toolsPadding:
        // tools padding is displayed in one of the three cases
        // 1. Nothing on the that screen edge (no tools panel and no split panel)
        (toolsHide && (!splitPanelDisplayed || finalSplitPanePosition !== 'side')) ||
            // 2. Tools panel is present and open
            toolsVisible ||
            // 3. Split panel is open in side position
            splitPanelOpenOnTheSide,
        isMobile: isMobile
    };
    var navigationRefs = useFocusControl(navigationOpen).refs;
    var _1 = useFocusControl(toolsOpen, true), toolsRefs = _1.refs, focusToolsClose = _1.setFocus, loseToolsFocus = _1.loseFocus;
    (0,react.useImperativeHandle)(ref, function () { return ({
        openTools: function () { return onToolsToggle(true); },
        closeNavigationIfNecessary: function () {
            if (isMobile) {
                onNavigationToggle(false);
            }
        },
        focusToolsClose: focusToolsClose
    }); }, [isMobile, onNavigationToggle, onToolsToggle, focusToolsClose]);
    var splitPanelBottomOffset = (_c = (!splitPanelDisplayed || finalSplitPanePosition !== 'bottom'
        ? undefined
        : splitPanelOpen
            ? splitPanelReportedSize
            : splitPanelReportedHeaderHeight)) !== null && _c !== void 0 ? _c : undefined;
    var contentWidthStyles = !isMobile
        ? { minWidth: defaults.minContentWidth, maxWidth: defaults.maxContentWidth }
        : undefined;
    var isToolsDrawerHidden = disableContentPaddings;
    var toolsDrawerWidth = (function () {
        if (isMobile) {
            return 0;
        }
        var toolsPanelWidth = toolsHide ? 0 : toolsOpen ? toolsWidth : closedDrawerWidth;
        var splitPanelWidth = !splitPanelDisplayed || finalSplitPanePosition !== 'side'
            ? 0
            : splitPanelOpen
                ? splitPanelReportedSize
                : closedDrawerWidth;
        return toolsPanelWidth + splitPanelWidth;
    })();
    var navigationDrawerWidth = (function () {
        if (isMobile) {
            return 0;
        }
        return effectiveNavigationWidth;
    })();
    var previousContentWidth = usePreviousFrameValue(contentWidthWithSplitPanel - (splitPanelOpenOnTheSide ? splitPanelReportedSize : 0));
    var contentScaleX = (function () {
        if (isMobile || !isMotionEnabled || !disableContentPaddings || !previousContentWidth) {
            return undefined;
        }
    })();
    return (react.createElement("div", { className: clsx_m(app_layout_styles_css.root, test_classes_styles_css.root, disableBodyScroll && app_layout_styles_css["root-no-scroll"]), ref: rootRef },
        react.createElement("div", { className: app_layout_styles_css["layout-wrapper"], style: contentHeightStyle },
            isMobile && (!toolsHide || !navigationHide || breadcrumbs) && (react.createElement(MobileToolbar, { anyPanelOpen: anyPanelOpen, toggleRefs: { navigation: navigationRefs.toggle, tools: toolsRefs.toggle }, topOffset: headerHeight, ariaLabels: ariaLabels, navigationHide: navigationHide, toolsHide: toolsHide, onNavigationOpen: function () { return onNavigationToggle(true); }, onToolsOpen: function () { return onToolsToggle(true); }, unfocusable: anyPanelOpen }, breadcrumbs)),
            react.createElement("div", { className: clsx_m(app_layout_styles_css.layout, disableBodyScroll && app_layout_styles_css["layout-no-scroll"]) },
                !navigationHide && (react.createElement(NavigationPanel, { ariaLabels: ariaLabels, footerHeight: footerHeight, headerHeight: headerHeight, isHidden: disableContentPaddings, isMobile: isMobile, isMotionEnabled: isMotionEnabled, navigation: navigation, navigationDrawerWidth: navigationDrawerWidth, navigationOpen: navigationOpen, onClick: isMobile ? onNavigationClick : undefined, onNavigationToggle: onNavigationToggle, panelHeightStyle: panelHeightStyle, toggleRefs: navigationRefs, navigationWidth: navigationWidth })),
                react.createElement("main", { ref: legacyScrollRootRef, className: clsx_m(app_layout_styles_css["layout-main"], (_b = {},
                        _b[app_layout_styles_css["layout-main-scrollable"]] = disableBodyScroll,
                        _b[test_classes_styles_css["disable-body-scroll-root"]] = disableBodyScroll,
                        _b[app_layout_styles_css.unfocusable] = isMobile && anyPanelOpen,
                        _b)) },
                    react.createElement("div", { style: {
                            marginBottom: splitPanelBottomOffset,
                            transform: contentScaleX ? "scaleX(".concat(contentScaleX, ")") : undefined
                        } },
                        notifications && (react.createElement(Notifications, { testUtilsClassName: clsx_m(app_layout_styles_css.notifications, test_classes_styles_css.notifications), labels: ariaLabels, topOffset: disableBodyScroll ? 0 : headerHeight, sticky: !isMobile && stickyNotifications, ref: notificationsRef, isMobile: isMobile, navigationPadding: contentWrapperProps.navigationPadding, toolsPadding: contentWrapperProps.toolsPadding, contentWidthStyles: contentWidthStyles }, notifications)),
                        ((!isMobile && breadcrumbs) || contentHeader) && (react.createElement(content_wrapper, tslib_es6_assign({}, contentWrapperProps, { contentWidthStyles: contentWidthStyles }),
                            !isMobile && breadcrumbs && (react.createElement("div", { className: clsx_m(app_layout_styles_css.breadcrumbs, test_classes_styles_css.breadcrumbs, app_layout_styles_css["breadcrumbs-desktop"]) }, breadcrumbs)),
                            contentHeader && (react.createElement("div", { className: clsx_m(app_layout_styles_css["content-header-wrapper"], !hasRenderedNotifications &&
                                    (isMobile || !breadcrumbs) &&
                                    app_layout_styles_css["content-extra-top-padding"], !hasRenderedNotifications && !breadcrumbs && app_layout_styles_css["content-header-wrapper-first-child"], !disableContentHeaderOverlap && app_layout_styles_css["content-header-wrapper-overlapped"]) }, contentHeader)))),
                        react.createElement(content_wrapper, tslib_es6_assign({}, contentWrapperProps, { ref: mainContentRef, disablePaddings: disableContentPaddings,
                            // eslint-disable-next-line react/forbid-component-props
                            className: clsx_m(!disableContentPaddings && app_layout_styles_css["content-wrapper"], !disableContentPaddings &&
                                (isMobile || !breadcrumbs) &&
                                !contentHeader &&
                                app_layout_styles_css["content-extra-top-padding"], !hasRenderedNotifications &&
                                !breadcrumbs &&
                                !isMobile &&
                                !contentHeader &&
                                app_layout_styles_css["content-wrapper-first-child"]) }),
                            react.createElement("div", { className: clsx_m(app_layout_styles_css.content, test_classes_styles_css.content, !disableContentHeaderOverlap && contentHeader && app_layout_styles_css["content-overlapped"]), style: contentWidthStyles },
                                react.createElement(AppLayoutContext.Provider, { value: {
                                        stickyOffsetTop: (disableBodyScroll ? 0 : headerHeight) +
                                            (stickyNotificationsHeight !== null ? stickyNotificationsHeight : 0),
                                        stickyOffsetBottom: footerHeight + (splitPanelBottomOffset || 0),
                                        hasBreadcrumbs: !!breadcrumbs
                                    } }, content)))),
                    finalSplitPanePosition === 'bottom' && splitPanelWrapped),
                react.createElement(ToolsAndSplitPanel, { splitPanel: finalSplitPanePosition === 'side' ? splitPanelWrapped : undefined, ariaLabels: ariaLabels, closedDrawerWidth: closedDrawerWidth, contentHeightStyle: contentHeightStyle, disableContentPaddings: disableContentPaddings, drawerWidth: toolsDrawerWidth, footerHeight: footerHeight, headerHeight: headerHeight, isHidden: isToolsDrawerHidden, isMobile: isMobile, isMotionEnabled: isMotionEnabled, onToolsToggle: onToolsToggle, panelHeightStyle: panelHeightStyle, splitPanelOpen: splitPanelOpenOnTheSide, splitPanelReportedSize: splitPanelReportedSize, toggleRefs: toolsRefs, onLoseToolsFocus: loseToolsFocus, tools: tools, toolsHide: Boolean(toolsHide), toolsOpen: toolsOpen, toolsWidth: toolsWidth })))));
});
applyDisplayName(AppLayout, 'AppLayout');
/* harmony default export */ const app_layout = (AppLayout);
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
function extends_extends() {
  extends_extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return extends_extends.apply(this, arguments);
}
;// CONCATENATED MODULE: ./node_modules/dom-helpers/esm/hasClass.js
/**
 * Checks if a given element has a CSS class.
 *
 * @param element the element
 * @param className the CSS class name
 */
function hasClass(element, className) {
  if (element.classList) return !!className && element.classList.contains(className);
  return (" " + (element.className.baseVal || element.className) + " ").indexOf(" " + className + " ") !== -1;
}
;// CONCATENATED MODULE: ./node_modules/dom-helpers/esm/addClass.js

/**
 * Adds a CSS class to a given element.
 *
 * @param element the element
 * @param className the CSS class name
 */

function addClass_addClass(element, className) {
  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + " " + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + " " + className);
}
;// CONCATENATED MODULE: ./node_modules/dom-helpers/esm/removeClass.js
function replaceClassName(origClass, classToRemove) {
  return origClass.replace(new RegExp("(^|\\s)" + classToRemove + "(?:\\s|$)", 'g'), '$1').replace(/\s+/g, ' ').replace(/^\s*|\s*$/g, '');
}
/**
 * Removes a CSS class from a given element.
 *
 * @param element the element
 * @param className the CSS class name
 */


function removeClass_removeClass(element, className) {
  if (element.classList) {
    element.classList.remove(className);
  } else if (typeof element.className === 'string') {
    element.className = replaceClassName(element.className, className);
  } else {
    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));
  }
}
;// CONCATENATED MODULE: ./node_modules/react-transition-group/esm/CSSTransition.js











var _addClass = function addClass(node, classes) {
  return node && classes && classes.split(' ').forEach(function (c) {
    return addClass_addClass(node, c);
  });
};

var removeClass = function removeClass(node, classes) {
  return node && classes && classes.split(' ').forEach(function (c) {
    return removeClass_removeClass(node, c);
  });
};
/**
 * A transition component inspired by the excellent
 * [ng-animate](https://docs.angularjs.org/api/ngAnimate) library, you should
 * use it if you're using CSS transitions or animations. It's built upon the
 * [`Transition`](https://reactcommunity.org/react-transition-group/transition)
 * component, so it inherits all of its props.
 *
 * `CSSTransition` applies a pair of class names during the `appear`, `enter`,
 * and `exit` states of the transition. The first class is applied and then a
 * second `*-active` class in order to activate the CSS transition. After the
 * transition, matching `*-done` class names are applied to persist the
 * transition state.
 *
 * ```jsx
 * function App() {
 *   const [inProp, setInProp] = useState(false);
 *   return (
 *     <div>
 *       <CSSTransition in={inProp} timeout={200} classNames="my-node">
 *         <div>
 *           {"I'll receive my-node-* classes"}
 *         </div>
 *       </CSSTransition>
 *       <button type="button" onClick={() => setInProp(true)}>
 *         Click to Enter
 *       </button>
 *     </div>
 *   );
 * }
 * ```
 *
 * When the `in` prop is set to `true`, the child component will first receive
 * the class `example-enter`, then the `example-enter-active` will be added in
 * the next tick. `CSSTransition` [forces a
 * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)
 * between before adding the `example-enter-active`. This is an important trick
 * because it allows us to transition between `example-enter` and
 * `example-enter-active` even though they were added immediately one after
 * another. Most notably, this is what makes it possible for us to animate
 * _appearance_.
 *
 * ```css
 * .my-node-enter {
 *   opacity: 0;
 * }
 * .my-node-enter-active {
 *   opacity: 1;
 *   transition: opacity 200ms;
 * }
 * .my-node-exit {
 *   opacity: 1;
 * }
 * .my-node-exit-active {
 *   opacity: 0;
 *   transition: opacity 200ms;
 * }
 * ```
 *
 * `*-active` classes represent which styles you want to animate **to**, so it's
 * important to add `transition` declaration only to them, otherwise transitions
 * might not behave as intended! This might not be obvious when the transitions
 * are symmetrical, i.e. when `*-enter-active` is the same as `*-exit`, like in
 * the example above (minus `transition`), but it becomes apparent in more
 * complex transitions.
 *
 * **Note**: If you're using the
 * [`appear`](http://reactcommunity.org/react-transition-group/transition#Transition-prop-appear)
 * prop, make sure to define styles for `.appear-*` classes as well.
 */


var CSSTransition = /*#__PURE__*/function (_React$Component) {
  _inheritsLoose(CSSTransition, _React$Component);

  function CSSTransition() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.appliedClasses = {
      appear: {},
      enter: {},
      exit: {}
    };

    _this.onEnter = function (maybeNode, maybeAppearing) {
      var _this$resolveArgument = _this.resolveArguments(maybeNode, maybeAppearing),
          node = _this$resolveArgument[0],
          appearing = _this$resolveArgument[1];

      _this.removeClasses(node, 'exit');

      _this.addClass(node, appearing ? 'appear' : 'enter', 'base');

      if (_this.props.onEnter) {
        _this.props.onEnter(maybeNode, maybeAppearing);
      }
    };

    _this.onEntering = function (maybeNode, maybeAppearing) {
      var _this$resolveArgument2 = _this.resolveArguments(maybeNode, maybeAppearing),
          node = _this$resolveArgument2[0],
          appearing = _this$resolveArgument2[1];

      var type = appearing ? 'appear' : 'enter';

      _this.addClass(node, type, 'active');

      if (_this.props.onEntering) {
        _this.props.onEntering(maybeNode, maybeAppearing);
      }
    };

    _this.onEntered = function (maybeNode, maybeAppearing) {
      var _this$resolveArgument3 = _this.resolveArguments(maybeNode, maybeAppearing),
          node = _this$resolveArgument3[0],
          appearing = _this$resolveArgument3[1];

      var type = appearing ? 'appear' : 'enter';

      _this.removeClasses(node, type);

      _this.addClass(node, type, 'done');

      if (_this.props.onEntered) {
        _this.props.onEntered(maybeNode, maybeAppearing);
      }
    };

    _this.onExit = function (maybeNode) {
      var _this$resolveArgument4 = _this.resolveArguments(maybeNode),
          node = _this$resolveArgument4[0];

      _this.removeClasses(node, 'appear');

      _this.removeClasses(node, 'enter');

      _this.addClass(node, 'exit', 'base');

      if (_this.props.onExit) {
        _this.props.onExit(maybeNode);
      }
    };

    _this.onExiting = function (maybeNode) {
      var _this$resolveArgument5 = _this.resolveArguments(maybeNode),
          node = _this$resolveArgument5[0];

      _this.addClass(node, 'exit', 'active');

      if (_this.props.onExiting) {
        _this.props.onExiting(maybeNode);
      }
    };

    _this.onExited = function (maybeNode) {
      var _this$resolveArgument6 = _this.resolveArguments(maybeNode),
          node = _this$resolveArgument6[0];

      _this.removeClasses(node, 'exit');

      _this.addClass(node, 'exit', 'done');

      if (_this.props.onExited) {
        _this.props.onExited(maybeNode);
      }
    };

    _this.resolveArguments = function (maybeNode, maybeAppearing) {
      return _this.props.nodeRef ? [_this.props.nodeRef.current, maybeNode] // here `maybeNode` is actually `appearing`
      : [maybeNode, maybeAppearing];
    };

    _this.getClassNames = function (type) {
      var classNames = _this.props.classNames;
      var isStringClassNames = typeof classNames === 'string';
      var prefix = isStringClassNames && classNames ? classNames + "-" : '';
      var baseClassName = isStringClassNames ? "" + prefix + type : classNames[type];
      var activeClassName = isStringClassNames ? baseClassName + "-active" : classNames[type + "Active"];
      var doneClassName = isStringClassNames ? baseClassName + "-done" : classNames[type + "Done"];
      return {
        baseClassName: baseClassName,
        activeClassName: activeClassName,
        doneClassName: doneClassName
      };
    };

    return _this;
  }

  var _proto = CSSTransition.prototype;

  _proto.addClass = function addClass(node, type, phase) {
    var className = this.getClassNames(type)[phase + "ClassName"];

    var _this$getClassNames = this.getClassNames('enter'),
        doneClassName = _this$getClassNames.doneClassName;

    if (type === 'appear' && phase === 'done' && doneClassName) {
      className += " " + doneClassName;
    } // This is to force a repaint,
    // which is necessary in order to transition styles when adding a class name.


    if (phase === 'active') {
      if (node) forceReflow(node);
    }

    if (className) {
      this.appliedClasses[type][phase] = className;

      _addClass(node, className);
    }
  };

  _proto.removeClasses = function removeClasses(node, type) {
    var _this$appliedClasses$ = this.appliedClasses[type],
        baseClassName = _this$appliedClasses$.base,
        activeClassName = _this$appliedClasses$.active,
        doneClassName = _this$appliedClasses$.done;
    this.appliedClasses[type] = {};

    if (baseClassName) {
      removeClass(node, baseClassName);
    }

    if (activeClassName) {
      removeClass(node, activeClassName);
    }

    if (doneClassName) {
      removeClass(node, doneClassName);
    }
  };

  _proto.render = function render() {
    var _this$props = this.props,
        _ = _this$props.classNames,
        props = objectWithoutPropertiesLoose_objectWithoutPropertiesLoose(_this$props, ["classNames"]);

    return /*#__PURE__*/react.createElement(esm_Transition, extends_extends({}, props, {
      onEnter: this.onEnter,
      onEntered: this.onEntered,
      onEntering: this.onEntering,
      onExit: this.onExit,
      onExiting: this.onExiting,
      onExited: this.onExited
    }));
  };

  return CSSTransition;
}(react.Component);

CSSTransition.defaultProps = {
  classNames: ''
};
CSSTransition.propTypes =  false ? 0 : {};
/* harmony default export */ const esm_CSSTransition = (CSSTransition);
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/hooks/use-unique-id/index.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

var counter = 0;
function generateUniqueId(prefix) {
    return "".concat(prefix ? prefix : '').concat(counter++, "-").concat(Date.now(), "-").concat(Math.round(Math.random() * 10000));
}
function useUniqueId(prefix) {
    var idRef = (0,react.useRef)(null);
    if (!idRef.current) {
        idRef.current = generateUniqueId(prefix);
    }
    return idRef.current;
}
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/expandable-section/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/expandable-section/styles.css.js


    /* harmony default export */ const expandable_section_styles_css = ({
  "content-enter": "awsui_content-enter_gwq0h_1rk8x_97",
  "awsui-motion-fade-in": "awsui_awsui-motion-fade-in_gwq0h_1rk8x_1",
  "trigger-expanded": "awsui_trigger-expanded_gwq0h_1rk8x_119",
  "icon": "awsui_icon_gwq0h_1rk8x_133",
  "root": "awsui_root_gwq0h_1rk8x_151",
  "expanded": "awsui_expanded_gwq0h_1rk8x_169",
  "icon-container": "awsui_icon-container_gwq0h_1rk8x_173",
  "trigger": "awsui_trigger_gwq0h_1rk8x_119",
  "trigger-default": "awsui_trigger-default_gwq0h_1rk8x_188",
  "trigger-footer": "awsui_trigger-footer_gwq0h_1rk8x_191",
  "trigger-navigation": "awsui_trigger-navigation_gwq0h_1rk8x_197",
  "trigger-container": "awsui_trigger-container_gwq0h_1rk8x_211",
  "header": "awsui_header_gwq0h_1rk8x_221",
  "header-container": "awsui_header-container_gwq0h_1rk8x_224",
  "header-container-button": "awsui_header-container-button_gwq0h_1rk8x_240",
  "header-navigation": "awsui_header-navigation_gwq0h_1rk8x_248",
  "content": "awsui_content_gwq0h_1rk8x_97",
  "content-default": "awsui_content-default_gwq0h_1rk8x_284",
  "content-footer": "awsui_content-footer_gwq0h_1rk8x_287",
  "content-expanded": "awsui_content-expanded_gwq0h_1rk8x_290",
  "focusable": "awsui_focusable_gwq0h_1rk8x_294"
});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/utils/scrollable-containers.js
var getOverflowParents = function (element) {
    var parents = [];
    var node = element;
    while ((node = node.parentElement) && node !== document.body) {
        getComputedStyle(node).overflow !== 'visible' && parents.push(node);
    }
    return parents;
};
var getOverflowParentDimensions = function (element, excludeClosestParent, expandToViewport, canExpandOutsideViewport) {
    if (excludeClosestParent === void 0) { excludeClosestParent = false; }
    if (expandToViewport === void 0) { expandToViewport = false; }
    if (canExpandOutsideViewport === void 0) { canExpandOutsideViewport = false; }
    var parents = expandToViewport
        ? []
        : getOverflowParents(element).map(function (el) {
            var _a = el.getBoundingClientRect(), height = _a.height, width = _a.width, top = _a.top, left = _a.left;
            return {
                // Treat the whole scrollable area as the available height
                // if we're allowed to expand past the viewport.
                height: canExpandOutsideViewport ? el.scrollHeight : height,
                width: width,
                top: top,
                left: left
            };
        });
    if (canExpandOutsideViewport && !expandToViewport) {
        var documentDimensions = document.documentElement.getBoundingClientRect();
        parents.push({
            width: Math.max(documentDimensions.width, document.documentElement.clientWidth),
            height: Math.max(documentDimensions.height, document.documentElement.clientHeight),
            top: documentDimensions.top,
            left: documentDimensions.left
        });
    }
    else {
        parents.push({
            height: window.innerHeight,
            width: window.innerWidth,
            top: 0,
            left: 0
        });
    }
    if (excludeClosestParent && !expandToViewport) {
        parents.shift();
    }
    return parents;
};
/**
 * Calls `scrollIntoView` on the provided element with sensible defaults. If
 * the element does not existed or does not support the `scrollIntoView`
 * method, it will do nothing. This wrapper is created to support environments
 * where the native function is not available like JSDom (feature request:
 * https://github.com/jsdom/jsdom/issues/1422).
 *
 * @param element to be scrolled into view
 * @param options native options for `scrollIntoView`
 */
function scrollElementIntoView(element, options) {
    var _a;
    if (options === void 0) { options = { block: 'nearest', inline: 'nearest' }; }
    (_a = element === null || element === void 0 ? void 0 : element.scrollIntoView) === null || _a === void 0 ? void 0 : _a.call(element, options);
}
//# sourceMappingURL=scrollable-containers.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/container/use-sticky-header.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0







var StickyHeaderContext = (0,react.createContext)({ isStuck: false });
var useStickyHeader = function (rootRef, headerRef, __stickyHeader, __stickyOffset) {
    var currentRootRef = rootRef.current;
    var currentHeaderRef = headerRef.current;
    var totalBorder = (0,react.useMemo)(function () {
        var containerRootBorder = currentRootRef
            ? parseInt(getComputedStyle(currentRootRef).getPropertyValue('border-top-width'), 10)
            : 0;
        var headerBorder = currentHeaderRef
            ? parseInt(getComputedStyle(currentHeaderRef).getPropertyValue('border-top-width'), 10)
            : 0;
        return containerRootBorder + headerBorder;
    }, [currentRootRef, currentHeaderRef]);
    // We reach into AppLayoutContext in case sticky header needs to be offset down by the height
    // of other sticky elements positioned on top of the view.
    var stickyOffsetTop = useAppLayoutContext().stickyOffsetTop;
    var isSticky = useSupportsStickyHeader() && !!__stickyHeader;
    var isRefresh = useVisualRefresh();
    // If it has overflow parents inside the app layout, we shouldn't apply a sticky offset.
    var _a = (0,react.useState)(false), hasInnerOverflowParents = _a[0], setHasInnerOverflowParents = _a[1];
    var _b = (0,react.useState)(false), isStuck = _b[0], setIsStuck = _b[1];
    (0,react.useLayoutEffect)(function () {
        if (rootRef.current) {
            var overflowParents = getOverflowParents(rootRef.current);
            var mainElement = findUpUntil(rootRef.current, function (elem) { return elem.tagName === 'MAIN'; });
            // In both versions of the app layout, the scrolling element for disableBodyScroll
            // is the <main>. If the closest overflow parent is also the closest <main> and we have
            // offset values, it's safe to assume that it's the app layout scroll root and we
            // should stop there.
            setHasInnerOverflowParents(overflowParents.length > 0 && overflowParents[0] !== mainElement);
        }
    }, [rootRef]);
    var effectiveStickyOffset = __stickyOffset !== null && __stickyOffset !== void 0 ? __stickyOffset : (hasInnerOverflowParents ? 0 : stickyOffsetTop);
    /**
     * The AppLayout refactor removed the need for passing the sticky offset in px all the time through the
     * AppLayoutDomContext provider because that information already exists on the DOM in a custom property
     * on the Layout subcomponent. Thus, if the Container header is sticky, we are in Visual Refresh and use
     * body scroll then we will use that property. When a component is used outside AppLayout, we fall back
     * to the default offset calculated in AppLayoutDomContext.
     */
    var computedOffset = "".concat(effectiveStickyOffset - totalBorder, "px");
    if (isRefresh && !hasInnerOverflowParents) {
        computedOffset = "var(".concat(custom_css_properties.offsetTopWithNotifications, ", ").concat(computedOffset, ")");
    }
    var stickyStyles = isSticky
        ? {
            style: {
                top: computedOffset
            }
        }
        : {};
    // "stuck" state, when the header has moved from its original posititon has a
    // box-shadow, applied here by a "header-stuck" className
    var checkIfStuck = (0,react.useCallback)(function () {
        if (rootRef.current && headerRef.current) {
            var rootTop = rootRef.current.getBoundingClientRect().top;
            var headerTop = headerRef.current.getBoundingClientRect().top;
            if (rootTop + totalBorder < headerTop) {
                setIsStuck(true);
            }
            else {
                setIsStuck(false);
            }
        }
    }, [rootRef, headerRef, totalBorder]);
    (0,react.useEffect)(function () {
        if (isSticky) {
            window.addEventListener('scroll', checkIfStuck, true);
            window.addEventListener('resize', checkIfStuck);
            return function () {
                window.removeEventListener('scroll', checkIfStuck, true);
                window.removeEventListener('resize', checkIfStuck);
            };
        }
    }, [isSticky, checkIfStuck]);
    return {
        isSticky: isSticky,
        isStuck: isStuck,
        stickyStyles: stickyStyles
    };
};
function useSupportsStickyHeader() {
    var isMobile = useMobile();
    return supportsStickyPosition() && !isMobile;
}
//# sourceMappingURL=use-sticky-header.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/hooks/use-dynamic-overlap/index.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0



/**
 * Observes the height of an element referenced by the returning ref and sets the value as overlapping
 * height for the surrounding AppLayout component.
 * @param props.disabled disables hook if not applicable
 * @returns ref to be measured as overlapping height
 */
function useDynamicOverlap(props) {
    var _a;
    var disabled = (_a = props === null || props === void 0 ? void 0 : props.disabled) !== null && _a !== void 0 ? _a : false;
    var setDynamicOverlapHeight = useAppLayoutContext().setDynamicOverlapHeight;
    var _b = useContainerQuery(function (rect) { return rect.height; }), overlapContainerQuery = _b[0], overlapElementRef = _b[1];
    (0,react.useLayoutEffect)(function handleDynamicOverlapHeight() {
        if (!disabled) {
            setDynamicOverlapHeight === null || setDynamicOverlapHeight === void 0 ? void 0 : setDynamicOverlapHeight(overlapContainerQuery !== null && overlapContainerQuery !== void 0 ? overlapContainerQuery : 0);
        }
        return function () {
            if (!disabled) {
                setDynamicOverlapHeight === null || setDynamicOverlapHeight === void 0 ? void 0 : setDynamicOverlapHeight(0);
            }
        };
    }, [disabled, overlapContainerQuery, setDynamicOverlapHeight]);
    return overlapElementRef;
}
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/container/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/container/styles.css.js


    /* harmony default export */ const container_styles_css = ({
  "root": "awsui_root_14iqq_wbmbk_97",
  "root-fit-height": "awsui_root-fit-height_14iqq_wbmbk_108",
  "variant-default": "awsui_variant-default_14iqq_wbmbk_114",
  "variant-stacked": "awsui_variant-stacked_14iqq_wbmbk_114",
  "header": "awsui_header_14iqq_wbmbk_137",
  "header-sticky-disabled": "awsui_header-sticky-disabled_14iqq_wbmbk_142",
  "header-sticky-enabled": "awsui_header-sticky-enabled_14iqq_wbmbk_146",
  "header-stuck": "awsui_header-stuck_14iqq_wbmbk_152",
  "header-dynamic-height": "awsui_header-dynamic-height_14iqq_wbmbk_157",
  "with-paddings": "awsui_with-paddings_14iqq_wbmbk_163",
  "with-hidden-content": "awsui_with-hidden-content_14iqq_wbmbk_166",
  "header-variant-cards": "awsui_header-variant-cards_14iqq_wbmbk_170",
  "header-variant-full-page": "awsui_header-variant-full-page_14iqq_wbmbk_194",
  "dark-header": "awsui_dark-header_14iqq_wbmbk_212",
  "content": "awsui_content_14iqq_wbmbk_216",
  "footer": "awsui_footer_14iqq_wbmbk_227",
  "with-divider": "awsui_with-divider_14iqq_wbmbk_230"
});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/container/internal.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0









function InternalContainer(_a) {
    var _b, _c, _d;
    var header = _a.header, footer = _a.footer, children = _a.children, _e = _a.variant, variant = _e === void 0 ? 'default' : _e, _f = _a.disableHeaderPaddings, disableHeaderPaddings = _f === void 0 ? false : _f, _g = _a.disableContentPaddings, disableContentPaddings = _g === void 0 ? false : _g, fitHeight = _a.fitHeight, __stickyOffset = _a.__stickyOffset, _h = _a.__stickyHeader, __stickyHeader = _h === void 0 ? false : _h, _j = _a.__internalRootRef, __internalRootRef = _j === void 0 ? null : _j, _k = _a.__disableFooterDivider, __disableFooterDivider = _k === void 0 ? false : _k, _l = _a.__disableFooterPaddings, __disableFooterPaddings = _l === void 0 ? false : _l, _m = _a.__hiddenContent, __hiddenContent = _m === void 0 ? false : _m, __headerRef = _a.__headerRef, __headerId = _a.__headerId, _o = _a.__darkHeader, __darkHeader = _o === void 0 ? false : _o, restProps = __rest(_a, ["header", "footer", "children", "variant", "disableHeaderPaddings", "disableContentPaddings", "fitHeight", "__stickyOffset", "__stickyHeader", "__internalRootRef", "__disableFooterDivider", "__disableFooterPaddings", "__hiddenContent", "__headerRef", "__headerId", "__darkHeader"]);
    var baseProps = getBaseProps(restProps);
    var rootRef = (0,react.useRef)(null);
    var headerRef = (0,react.useRef)(null);
    var _p = useStickyHeader(rootRef, headerRef, __stickyHeader, __stickyOffset), isSticky = _p.isSticky, isStuck = _p.isStuck, stickyStyles = _p.stickyStyles;
    var setHasStickyBackground = useAppLayoutContext().setHasStickyBackground;
    var isRefresh = useVisualRefresh();
    var hasDynamicHeight = isRefresh && variant === 'full-page';
    var overlapElement = useDynamicOverlap({ disabled: !hasDynamicHeight || !__darkHeader });
    var mergedRef = useMergeRefs(rootRef, __internalRootRef);
    var headerMergedRef = useMergeRefs(headerRef, overlapElement, __headerRef);
    var headerIdProp = __headerId ? { id: __headerId } : {};
    /**
     * The visual refresh AppLayout component needs to know if a child component
     * has a high contrast sticky header. This is to make sure the background element
     * stays in the same vertical position as the header content.
     */
    (0,react.useEffect)(function () {
        var shouldUpdateStickyBackground = isSticky && variant === 'full-page' && setHasStickyBackground;
        if (shouldUpdateStickyBackground) {
            setHasStickyBackground(true);
        }
        return function () {
            if (shouldUpdateStickyBackground) {
                setHasStickyBackground(false);
            }
        };
    }, [isSticky, setHasStickyBackground, variant]);
    return (react.createElement("div", tslib_es6_assign({}, baseProps, { className: clsx_m(baseProps.className, container_styles_css.root, container_styles_css["variant-".concat(variant)], fitHeight && container_styles_css["root-fit-height"]), ref: mergedRef }),
        header && (react.createElement(StickyHeaderContext.Provider, { value: { isStuck: isStuck } },
            react.createElement("div", tslib_es6_assign({ className: clsx_m(container_styles_css.header, container_styles_css["header-variant-".concat(variant)], (_b = {},
                    _b[container_styles_css["header-sticky-disabled"]] = __stickyHeader && !isSticky,
                    _b[container_styles_css["header-sticky-enabled"]] = isSticky,
                    _b[container_styles_css["header-dynamic-height"]] = hasDynamicHeight,
                    _b[container_styles_css["header-stuck"]] = isStuck,
                    _b[container_styles_css["with-paddings"]] = !disableHeaderPaddings,
                    _b[container_styles_css["with-hidden-content"]] = __hiddenContent,
                    _b)) }, headerIdProp, stickyStyles, { ref: headerMergedRef }), __darkHeader ? (react.createElement("div", { className: clsx_m(container_styles_css["dark-header"], 'awsui-context-content-header') }, header)) : (header)))),
        react.createElement("div", { className: clsx_m(container_styles_css.content, (_c = {},
                _c[container_styles_css["with-paddings"]] = !disableContentPaddings,
                _c)) }, children),
        footer && (react.createElement("div", { className: clsx_m(container_styles_css.footer, (_d = {},
                _d[container_styles_css["with-divider"]] = !__disableFooterDivider,
                _d[container_styles_css["with-paddings"]] = !__disableFooterPaddings,
                _d)) }, footer))));
}
//# sourceMappingURL=internal.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/expandable-section/expandable-section-container.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0


var ExpandableSectionContainer = function (_a) {
    var className = _a.className, children = _a.children, header = _a.header, variant = _a.variant, expanded = _a.expanded, disableContentPaddings = _a.disableContentPaddings, __internalRootRef = _a.__internalRootRef, rest = __rest(_a, ["className", "children", "header", "variant", "expanded", "disableContentPaddings", "__internalRootRef"]);
    if (variant === 'container') {
        return (react.createElement(InternalContainer, tslib_es6_assign({}, rest, { className: className, header: header, variant: "default", disableContentPaddings: disableContentPaddings || !expanded, disableHeaderPaddings: true, __hiddenContent: !expanded, __internalRootRef: __internalRootRef }), children));
    }
    return (react.createElement("div", tslib_es6_assign({ className: className }, rest, { ref: __internalRootRef }),
        header,
        children));
};
//# sourceMappingURL=expandable-section-container.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/header/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/header/styles.css.js


    /* harmony default export */ const header_styles_css = ({
  "root": "awsui_root_2qdw9_rse6p_93",
  "root-no-actions": "awsui_root-no-actions_2qdw9_rse6p_108",
  "root-variant-h1": "awsui_root-variant-h1_2qdw9_rse6p_108",
  "root-variant-h1-refresh": "awsui_root-variant-h1-refresh_2qdw9_rse6p_111",
  "root-variant-h2": "awsui_root-variant-h2_2qdw9_rse6p_114",
  "root-has-description": "awsui_root-has-description_2qdw9_rse6p_114",
  "root-variant-h2-refresh": "awsui_root-variant-h2-refresh_2qdw9_rse6p_117",
  "root-variant-h3": "awsui_root-variant-h3_2qdw9_rse6p_120",
  "root-variant-h3-refresh": "awsui_root-variant-h3-refresh_2qdw9_rse6p_123",
  "root-no-wrap": "awsui_root-no-wrap_2qdw9_rse6p_126",
  "main": "awsui_main_2qdw9_rse6p_130",
  "main-variant-h1": "awsui_main-variant-h1_2qdw9_rse6p_138",
  "main-variant-h1-refresh": "awsui_main-variant-h1-refresh_2qdw9_rse6p_141",
  "main-variant-h2": "awsui_main-variant-h2_2qdw9_rse6p_147",
  "main-variant-h3": "awsui_main-variant-h3_2qdw9_rse6p_147",
  "main-variant-h2-refresh": "awsui_main-variant-h2-refresh_2qdw9_rse6p_153",
  "actions": "awsui_actions_2qdw9_rse6p_160",
  "actions-variant-h1": "awsui_actions-variant-h1_2qdw9_rse6p_164",
  "actions-variant-h1-refresh": "awsui_actions-variant-h1-refresh_2qdw9_rse6p_167",
  "actions-variant-h2": "awsui_actions-variant-h2_2qdw9_rse6p_170",
  "actions-variant-h3": "awsui_actions-variant-h3_2qdw9_rse6p_170",
  "actions-variant-h2-refresh": "awsui_actions-variant-h2-refresh_2qdw9_rse6p_176",
  "actions-variant-h3-refresh": "awsui_actions-variant-h3-refresh_2qdw9_rse6p_179",
  "title": "awsui_title_2qdw9_rse6p_183",
  "title-variant-h1": "awsui_title-variant-h1_2qdw9_rse6p_189",
  "title-variant-h2": "awsui_title-variant-h2_2qdw9_rse6p_192",
  "title-variant-h3": "awsui_title-variant-h3_2qdw9_rse6p_192",
  "title-variant-h2-refresh": "awsui_title-variant-h2-refresh_2qdw9_rse6p_198",
  "info": "awsui_info_2qdw9_rse6p_205",
  "description": "awsui_description_2qdw9_rse6p_209",
  "description-variant-h1": "awsui_description-variant-h1_2qdw9_rse6p_214",
  "description-variant-h1-refresh": "awsui_description-variant-h1-refresh_2qdw9_rse6p_219",
  "description-variant-h2": "awsui_description-variant-h2_2qdw9_rse6p_222",
  "description-variant-h3": "awsui_description-variant-h3_2qdw9_rse6p_227",
  "description-variant-h3-refresh": "awsui_description-variant-h3-refresh_2qdw9_rse6p_233",
  "heading": "awsui_heading_2qdw9_rse6p_237",
  "heading-variant-h1": "awsui_heading-variant-h1_2qdw9_rse6p_246",
  "heading-variant-h2": "awsui_heading-variant-h2_2qdw9_rse6p_251",
  "heading-variant-h3": "awsui_heading-variant-h3_2qdw9_rse6p_256",
  "heading-text": "awsui_heading-text_2qdw9_rse6p_262",
  "heading-text-variant-h1": "awsui_heading-text-variant-h1_2qdw9_rse6p_265",
  "heading-text-variant-h2": "awsui_heading-text-variant-h2_2qdw9_rse6p_273",
  "heading-text-variant-h3": "awsui_heading-text-variant-h3_2qdw9_rse6p_281",
  "counter": "awsui_counter_2qdw9_rse6p_290"
});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/header/internal.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0






function InternalHeader(_a) {
    var variant = _a.variant, headingTagOverride = _a.headingTagOverride, children = _a.children, actions = _a.actions, counter = _a.counter, description = _a.description, info = _a.info, _b = _a.__internalRootRef, __internalRootRef = _b === void 0 ? null : _b, __disableActionsWrapping = _a.__disableActionsWrapping, restProps = __rest(_a, ["variant", "headingTagOverride", "children", "actions", "counter", "description", "info", "__internalRootRef", "__disableActionsWrapping"]);
    var HeadingTag = headingTagOverride !== null && headingTagOverride !== void 0 ? headingTagOverride : (variant === 'awsui-h1-sticky' ? 'h1' : variant);
    var isStuck = (0,react.useContext)(StickyHeaderContext).isStuck;
    var baseProps = getBaseProps(restProps);
    var isRefresh = useVisualRefresh();
    var dynamicVariant = isStuck ? 'h2' : 'h1';
    var variantOverride = variant === 'awsui-h1-sticky' ? (isRefresh ? dynamicVariant : 'h2') : variant;
    return (react.createElement("div", tslib_es6_assign({}, baseProps, { className: clsx_m(header_styles_css.root, baseProps.className, header_styles_css["root-variant-".concat(variantOverride)], isRefresh && header_styles_css["root-variant-".concat(variantOverride, "-refresh")], !actions && [header_styles_css["root-no-actions"]], description && [header_styles_css["root-has-description"]], __disableActionsWrapping && [header_styles_css["root-no-wrap"]]), ref: __internalRootRef }),
        react.createElement("div", { className: clsx_m(header_styles_css.main, header_styles_css["main-variant-".concat(variantOverride)], isRefresh && header_styles_css["main-variant-".concat(variantOverride, "-refresh")]) },
            react.createElement("div", { className: clsx_m(header_styles_css.title, header_styles_css["title-variant-".concat(variantOverride)], isRefresh && header_styles_css["title-variant-".concat(variantOverride, "-refresh")]) },
                react.createElement(HeadingTag, { className: clsx_m(header_styles_css.heading, header_styles_css["heading-variant-".concat(variantOverride)]) },
                    react.createElement("span", { className: clsx_m(header_styles_css["heading-text"], header_styles_css["heading-text-variant-".concat(variantOverride)]) }, children),
                    counter !== undefined && react.createElement("span", { className: header_styles_css.counter },
                        " ",
                        counter)),
                info && react.createElement("span", { className: header_styles_css.info }, info)),
            description && (react.createElement("p", { className: clsx_m(header_styles_css.description, header_styles_css["description-variant-".concat(variantOverride)], isRefresh && header_styles_css["description-variant-".concat(variantOverride, "-refresh")]) }, description))),
        actions && (react.createElement("div", { className: clsx_m(header_styles_css.actions, header_styles_css["actions-variant-".concat(variantOverride)], isRefresh && header_styles_css["actions-variant-".concat(variantOverride, "-refresh")]) }, actions))));
}
//# sourceMappingURL=internal.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/expandable-section/expandable-section-header.js











var ExpandableDefaultHeader = function (_a) {
    var id = _a.id, className = _a.className, onClick = _a.onClick, ariaLabel = _a.ariaLabel, ariaControls = _a.ariaControls, expanded = _a.expanded, children = _a.children, icon = _a.icon, onKeyUp = _a.onKeyUp, onKeyDown = _a.onKeyDown;
    var focusVisible = useFocusVisible();
    return (react.createElement("div", tslib_es6_assign({ id: id, role: "button", className: className, tabIndex: 0, onKeyUp: onKeyUp, onKeyDown: onKeyDown, onClick: onClick, "aria-label": ariaLabel, "aria-controls": ariaControls, "aria-expanded": expanded }, focusVisible),
        react.createElement("div", { className: expandable_section_styles_css["icon-container"] }, icon),
        children));
};
var ExpandableNavigationHeader = function (_a) {
    var id = _a.id, className = _a.className, onClick = _a.onClick, ariaLabelledBy = _a.ariaLabelledBy, ariaLabel = _a.ariaLabel, ariaControls = _a.ariaControls, expanded = _a.expanded, children = _a.children, icon = _a.icon;
    var focusVisible = useFocusVisible();
    return (react.createElement("div", { id: id, className: className, onClick: onClick },
        react.createElement("button", tslib_es6_assign({ className: expandable_section_styles_css["icon-container"], "aria-labelledby": ariaLabelledBy, "aria-label": ariaLabel, "aria-controls": ariaControls, "aria-expanded": expanded }, focusVisible), icon),
        children));
};
var ExpandableContainerHeader = function (_a) {
    var id = _a.id, className = _a.className, onClick = _a.onClick, ariaLabel = _a.ariaLabel, ariaControls = _a.ariaControls, expanded = _a.expanded, children = _a.children, icon = _a.icon, headerDescription = _a.headerDescription, headerCounter = _a.headerCounter, headingTagOverride = _a.headingTagOverride, onKeyUp = _a.onKeyUp, onKeyDown = _a.onKeyDown;
    var focusVisible = useFocusVisible();
    var screenreaderContentId = generateUniqueId('expandable-section-header-content-');
    return (react.createElement("div", tslib_es6_assign({ id: id, className: className, onClick: onClick }, focusVisible),
        react.createElement(InternalHeader, { variant: 'h2', description: headerDescription, counter: headerCounter, headingTagOverride: headingTagOverride },
            react.createElement("span", { className: expandable_section_styles_css["header-container-button"], role: "button", tabIndex: 0, onKeyUp: onKeyUp, onKeyDown: onKeyDown, "aria-label": ariaLabel, "aria-labelledby": ariaLabel ? undefined : screenreaderContentId, "aria-controls": ariaControls, "aria-expanded": expanded },
                react.createElement("span", { className: expandable_section_styles_css["icon-container"] }, icon),
                react.createElement("span", null, children))),
        react.createElement(ScreenreaderOnly, { id: screenreaderContentId },
            children,
            " ",
            headerCounter,
            " ",
            headerDescription)));
};
var ExpandableSectionHeader = function (_a) {
    var id = _a.id, className = _a.className, variant = _a.variant, header = _a.header, headerText = _a.headerText, headerDescription = _a.headerDescription, headerCounter = _a.headerCounter, headingTagOverride = _a.headingTagOverride, expanded = _a.expanded, ariaControls = _a.ariaControls, ariaLabel = _a.ariaLabel, ariaLabelledBy = _a.ariaLabelledBy, onKeyUp = _a.onKeyUp, onKeyDown = _a.onKeyDown, onClick = _a.onClick;
    var icon = (react.createElement(internal, { size: variant === 'container' ? 'medium' : 'normal', className: clsx_m(expandable_section_styles_css.icon, expanded && expandable_section_styles_css.expanded), name: "caret-down-filled" }));
    var defaultHeaderProps = {
        id: id,
        icon: icon,
        expanded: expanded,
        ariaControls: ariaControls,
        ariaLabel: ariaLabel,
        onClick: onClick
    };
    var triggerClassName = clsx_m(expandable_section_styles_css.trigger, expandable_section_styles_css["trigger-".concat(variant)], expanded && expandable_section_styles_css["trigger-expanded"]);
    if (variant === 'navigation') {
        return (react.createElement(ExpandableNavigationHeader, tslib_es6_assign({ className: clsx_m(className, triggerClassName), ariaLabelledBy: ariaLabelledBy }, defaultHeaderProps), headerText !== null && headerText !== void 0 ? headerText : header));
    }
    if (variant === 'container' && headerText) {
        return (react.createElement(ExpandableContainerHeader, tslib_es6_assign({ className: clsx_m(className, triggerClassName, expanded && expandable_section_styles_css.expanded), headerDescription: headerDescription, headerCounter: headerCounter, headingTagOverride: headingTagOverride, onKeyUp: onKeyUp, onKeyDown: onKeyDown }, defaultHeaderProps), headerText));
    }
    if (variant === 'container' && header && isDevelopment) {
        logging_warnOnce('ExpandableSection', 'Use `headerText` instead of `header` to provide the button within the heading for a11y.');
    }
    return (react.createElement(ExpandableDefaultHeader, tslib_es6_assign({ className: clsx_m(className, triggerClassName, expandable_section_styles_css.focusable, expanded && expandable_section_styles_css.expanded), onKeyUp: onKeyUp, onKeyDown: onKeyDown }, defaultHeaderProps), headerText !== null && headerText !== void 0 ? headerText : header));
};
//# sourceMappingURL=expandable-section-header.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/expandable-section/internal.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0











function InternalExpandableSection(_a) {
    var controlledExpanded = _a.expanded, defaultExpanded = _a.defaultExpanded, onChange = _a.onChange, _b = _a.variant, variant = _b === void 0 ? 'default' : _b, children = _a.children, header = _a.header, headerText = _a.headerText, headerCounter = _a.headerCounter, headerDescription = _a.headerDescription, headingTagOverride = _a.headingTagOverride, disableContentPaddings = _a.disableContentPaddings, headerAriaLabel = _a.headerAriaLabel, __internalRootRef = _a.__internalRootRef, props = __rest(_a, ["expanded", "defaultExpanded", "onChange", "variant", "children", "header", "headerText", "headerCounter", "headerDescription", "headingTagOverride", "disableContentPaddings", "headerAriaLabel", "__internalRootRef"]);
    var ref = (0,react.useRef)(null);
    var controlId = useUniqueId();
    var triggerControlId = "".concat(controlId, "-trigger");
    var baseProps = getBaseProps(props);
    var _c = useControllable(controlledExpanded, onChange, defaultExpanded, {
        componentName: 'ExpandableSection',
        controlledProp: 'expanded',
        changeHandler: 'onChange'
    }), expanded = _c[0], setExpanded = _c[1];
    var onExpandChange = (0,react.useCallback)(function (expanded) {
        setExpanded(expanded);
        fireNonCancelableEvent(onChange, { expanded: expanded });
    }, [onChange, setExpanded]);
    var onClick = (0,react.useCallback)(function () {
        onExpandChange(!expanded);
    }, [onExpandChange, expanded]);
    var onKeyUp = (0,react.useCallback)(function (event) {
        var interactionKeys = [KeyCode.enter, KeyCode.space];
        if (interactionKeys.indexOf(event.keyCode) !== -1) {
            onExpandChange(!expanded);
        }
    }, [onExpandChange, expanded]);
    var onKeyDown = (0,react.useCallback)(function (event) {
        if (event.keyCode === KeyCode.space) {
            // Prevent the page from scrolling when toggling the component with the space bar.
            event.preventDefault();
        }
    }, []);
    var triggerProps = {
        ariaControls: controlId,
        ariaLabel: headerAriaLabel,
        ariaLabelledBy: headerAriaLabel ? undefined : triggerControlId,
        onKeyUp: onKeyUp,
        onKeyDown: onKeyDown,
        onClick: onClick
    };
    return (react.createElement(ExpandableSectionContainer, tslib_es6_assign({}, baseProps, { expanded: expanded, className: clsx_m(baseProps.className, expandable_section_styles_css.root), variant: variant, disableContentPaddings: disableContentPaddings, header: react.createElement(ExpandableSectionHeader, tslib_es6_assign({ id: triggerControlId, className: clsx_m(expandable_section_styles_css.header, expandable_section_styles_css["header-".concat(variant)]), variant: variant, expanded: !!expanded, header: header, headerText: headerText, headerDescription: headerDescription, headerCounter: headerCounter, headingTagOverride: headingTagOverride }, triggerProps)), __internalRootRef: __internalRootRef }),
        react.createElement(esm_CSSTransition, { "in": expanded, timeout: 30, classNames: { enter: expandable_section_styles_css["content-enter"] }, nodeRef: ref },
            react.createElement("div", { id: controlId, ref: ref, className: clsx_m(expandable_section_styles_css.content, expandable_section_styles_css["content-".concat(variant)], expanded && expandable_section_styles_css["content-expanded"]), role: "group", "aria-label": triggerProps.ariaLabel, "aria-labelledby": triggerProps.ariaLabelledBy }, children))));
}
//# sourceMappingURL=internal.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/side-navigation/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/side-navigation/styles.css.js


    /* harmony default export */ const side_navigation_styles_css = ({
  "root": "awsui_root_l0dv0_1mr3e_93",
  "header": "awsui_header_l0dv0_1mr3e_107",
  "header-link": "awsui_header-link_l0dv0_1mr3e_112",
  "header-link--has-logo": "awsui_header-link--has-logo_l0dv0_1mr3e_122",
  "header-link-text": "awsui_header-link-text_l0dv0_1mr3e_122",
  "header-logo": "awsui_header-logo_l0dv0_1mr3e_126",
  "header-logo--stretched": "awsui_header-logo--stretched_l0dv0_1mr3e_132",
  "list-container": "awsui_list-container_l0dv0_1mr3e_137",
  "list": "awsui_list_l0dv0_1mr3e_137",
  "list-variant-root": "awsui_list-variant-root_l0dv0_1mr3e_147",
  "list-variant-expandable-link-group": "awsui_list-variant-expandable-link-group_l0dv0_1mr3e_153",
  "list-item": "awsui_list-item_l0dv0_1mr3e_157",
  "section": "awsui_section_l0dv0_1mr3e_163",
  "expandable-link-group": "awsui_expandable-link-group_l0dv0_1mr3e_164",
  "section-header": "awsui_section-header_l0dv0_1mr3e_177",
  "link": "awsui_link_l0dv0_1mr3e_182",
  "link-active": "awsui_link-active_l0dv0_1mr3e_189",
  "info": "awsui_info_l0dv0_1mr3e_223",
  "external-icon": "awsui_external-icon_l0dv0_1mr3e_227",
  "divider": "awsui_divider_l0dv0_1mr3e_231",
  "divider-default": "awsui_divider-default_l0dv0_1mr3e_236",
  "divider-header": "awsui_divider-header_l0dv0_1mr3e_240"
});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/side-navigation/util.js

function hasActiveLink(items, activeHref) {
    for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {
        var item = items_1[_i];
        if ((item.type === 'link' || item.type === 'link-group' || item.type === 'expandable-link-group') &&
            item.href === activeHref) {
            return true;
        }
        if ((item.type === 'section' || item.type === 'link-group' || item.type === 'expandable-link-group') &&
            hasActiveLink(item.items, activeHref)) {
            return true;
        }
    }
    return false;
}
function generateExpandableItemsMapping(items, mapping, expandableParents) {
    if (mapping === void 0) { mapping = new WeakMap(); }
    if (expandableParents === void 0) { expandableParents = []; }
    items.forEach(function (item) {
        var nextLevelParents = expandableParents.slice();
        if (item.type === 'section' || item.type === 'expandable-link-group') {
            mapping.set(item, expandableParents);
            nextLevelParents.unshift(item);
        }
        if (item.type === 'section' || item.type === 'link-group' || item.type === 'expandable-link-group') {
            generateExpandableItemsMapping(item.items, mapping, nextLevelParents);
        }
    });
    return mapping;
}
function checkDuplicateHrefs(items) {
    var hrefs = new Set();
    var queue = items.slice();
    while (queue.length > 0) {
        // We just checked that there's items in the queue.
        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
        var item = queue.shift();
        // Check duplicated hrefs
        if ('href' in item) {
            if (hrefs.has(item.href)) {
                logging_warnOnce('SideNavigation', "duplicate href in \"".concat(item.text, "\": ").concat(item.href));
            }
            hrefs.add(item.href);
        }
        if ('items' in item) {
            queue.push.apply(queue, item.items);
        }
    }
}
//# sourceMappingURL=util.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/side-navigation/internal.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0









function internal_Header(_a) {
    var _b, _c;
    var definition = _a.definition, activeHref = _a.activeHref, fireFollow = _a.fireFollow;
    checkSafeUrl('SideNavigation', definition.href);
    var focusVisible = useFocusVisible();
    var onClick = (0,react.useCallback)(function (event) {
        if (isPlainLeftClick(event)) {
            fireFollow(definition, event);
        }
    }, [fireFollow, definition]);
    return (react.createElement(react.Fragment, null,
        react.createElement("div", { className: side_navigation_styles_css.header },
            react.createElement("a", tslib_es6_assign({}, focusVisible, { href: definition.href, className: clsx_m(side_navigation_styles_css["header-link"], (_b = {}, _b[side_navigation_styles_css["header-link--has-logo"]] = !!definition.logo, _b)), "aria-current": definition.href === activeHref ? 'page' : undefined, onClick: onClick }),
                definition.logo && (react.createElement("img", tslib_es6_assign({ className: clsx_m(side_navigation_styles_css["header-logo"], (_c = {},
                        _c[side_navigation_styles_css["header-logo--stretched"]] = !definition.text,
                        _c)) }, definition.logo))),
                react.createElement("span", { className: side_navigation_styles_css["header-link-text"] }, definition.text))),
        react.createElement(Divider, { variant: "header" })));
}
function ItemList(_a) {
    var variant = _a.variant, items = _a.items, activeHref = _a.activeHref, fireChange = _a.fireChange, fireFollow = _a.fireFollow;
    return (react.createElement("ul", { className: clsx_m(side_navigation_styles_css.list, side_navigation_styles_css["list-variant-".concat(variant)]) }, items.map(function (item, i) { return (react.createElement("li", { key: i, className: side_navigation_styles_css["list-item"] },
        item.type === 'link' && (react.createElement(internal_Link, { definition: item, activeHref: activeHref, fireChange: fireChange, fireFollow: fireFollow })),
        item.type === 'section' && (react.createElement(Section, { definition: item, activeHref: activeHref, fireChange: fireChange, fireFollow: fireFollow })),
        item.type === 'link-group' && (react.createElement(LinkGroup, { definition: item, activeHref: activeHref, fireChange: fireChange, fireFollow: fireFollow })),
        item.type === 'expandable-link-group' && (react.createElement(ExpandableLinkGroup, { definition: item, activeHref: activeHref, fireChange: fireChange, fireFollow: fireFollow })),
        ((i === 0 && item.type === 'divider') || (items[i + 1] && items[i + 1].type === 'divider')) && (react.createElement(Divider, { variant: "default" })))); })));
}
function Divider(_a) {
    var _b = _a.variant, variant = _b === void 0 ? 'default' : _b;
    return react.createElement("hr", { className: clsx_m(side_navigation_styles_css.divider, side_navigation_styles_css["divider-".concat(variant)]) });
}
function internal_Link(_a) {
    var _b;
    var definition = _a.definition, expanded = _a.expanded, activeHref = _a.activeHref, fireFollow = _a.fireFollow;
    checkSafeUrl('SideNavigation', definition.href);
    var isActive = definition.href === activeHref;
    var focusVisible = useFocusVisible();
    var onClick = (0,react.useCallback)(function (event) {
        // Prevent the click event from toggling outer expandable sections.
        event.stopPropagation();
        if (isPlainLeftClick(event)) {
            fireFollow(definition, event);
        }
    }, [fireFollow, definition]);
    return (react.createElement(react.Fragment, null,
        react.createElement("a", tslib_es6_assign({}, focusVisible, { href: definition.href, className: clsx_m(side_navigation_styles_css.link, (_b = {}, _b[side_navigation_styles_css["link-active"]] = isActive, _b)), target: definition.external ? '_blank' : undefined, rel: definition.external ? 'noopener noreferrer' : undefined, "aria-expanded": expanded, "aria-current": definition.href === activeHref ? 'page' : undefined, onClick: onClick }),
            definition.text,
            definition.external && (react.createElement("span", { "aria-label": definition.externalIconAriaLabel, role: definition.externalIconAriaLabel ? 'img' : undefined },
                react.createElement(internal, { name: "external", className: side_navigation_styles_css["external-icon"] })))),
        definition.info && react.createElement("span", { className: side_navigation_styles_css.info }, definition.info)));
}
function Section(_a) {
    var _b;
    var definition = _a.definition, activeHref = _a.activeHref, fireFollow = _a.fireFollow, fireChange = _a.fireChange;
    var _c = (0,react.useState)((_b = definition.defaultExpanded) !== null && _b !== void 0 ? _b : true), expanded = _c[0], setExpanded = _c[1];
    var onExpandedChange = (0,react.useCallback)(function (e) {
        fireChange(definition, e.detail.expanded);
        setExpanded(e.detail.expanded);
    }, [definition, fireChange]);
    (0,react.useEffect)(function () {
        var _a;
        setExpanded((_a = definition.defaultExpanded) !== null && _a !== void 0 ? _a : true);
    }, [definition]);
    return (react.createElement(InternalExpandableSection, { variant: "footer", expanded: expanded, onChange: onExpandedChange, className: side_navigation_styles_css.section, headerText: definition.text },
        react.createElement(ItemList, { variant: "section", items: definition.items, fireFollow: fireFollow, fireChange: fireChange, activeHref: activeHref })));
}
function LinkGroup(_a) {
    var definition = _a.definition, activeHref = _a.activeHref, fireFollow = _a.fireFollow, fireChange = _a.fireChange;
    checkSafeUrl('SideNavigation', definition.href);
    return (react.createElement(react.Fragment, null,
        react.createElement(internal_Link, { definition: { type: 'link', href: definition.href, text: definition.text }, fireFollow: function (_, event) { return fireFollow(definition, event); }, fireChange: fireChange, activeHref: activeHref }),
        react.createElement(ItemList, { variant: "link-group", items: definition.items, fireFollow: fireFollow, fireChange: fireChange, activeHref: activeHref })));
}
function ExpandableLinkGroup(_a) {
    var definition = _a.definition, fireFollow = _a.fireFollow, fireChange = _a.fireChange, activeHref = _a.activeHref;
    // Check whether the definition contains an active link and memoize it to avoid
    // rechecking every time.
    var containsActiveLink = (0,react.useMemo)(function () {
        return activeHref ? hasActiveLink(definition.items, activeHref) : false;
    }, [activeHref, definition.items]);
    var _b = (0,react.useState)(function () {
        var _a;
        return (_a = definition.defaultExpanded) !== null && _a !== void 0 ? _a : (definition.href === activeHref || containsActiveLink);
    }), expanded = _b[0], setExpanded = _b[1];
    var _c = (0,react.useState)(), userExpanded = _c[0], setUserExpanded = _c[1];
    // Reset user expansion status when the items property is updated.
    (0,react.useEffect)(function () { return setUserExpanded(undefined); }, [definition]);
    // By default, the expandable section is open when there's an active link inside.
    (0,react.useEffect)(function () {
        setExpanded(definition.href === activeHref || containsActiveLink);
    }, [definition.href, containsActiveLink, activeHref]);
    // If the definition object itself is updated, reset the expansion state to default.
    (0,react.useEffect)(function () {
        if (definition.defaultExpanded !== undefined) {
            setExpanded(definition.defaultExpanded);
        }
    }, [definition]);
    var onExpandedChange = (0,react.useCallback)(function (e) {
        fireChange(definition, e.detail.expanded);
        setUserExpanded(e.detail.expanded);
    }, [definition, fireChange]);
    var onHeaderFollow = function (_, event) {
        fireFollow(definition, event);
        setUserExpanded(true);
        if (!expanded) {
            fireChange(definition, true);
        }
    };
    return (react.createElement(InternalExpandableSection, { className: side_navigation_styles_css["expandable-link-group"], variant: "navigation", expanded: userExpanded !== null && userExpanded !== void 0 ? userExpanded : expanded, onChange: onExpandedChange, headerText: react.createElement(internal_Link, { definition: { type: 'link', href: definition.href, text: definition.text }, expanded: userExpanded !== null && userExpanded !== void 0 ? userExpanded : expanded, fireFollow: onHeaderFollow, fireChange: fireChange, activeHref: activeHref }) },
        react.createElement(ItemList, { variant: "expandable-link-group", items: definition.items, fireFollow: fireFollow, fireChange: fireChange, activeHref: activeHref })));
}
//# sourceMappingURL=internal.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/side-navigation/index.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0










function SideNavigation(_a) {
    var header = _a.header, activeHref = _a.activeHref, _b = _a.items, items = _b === void 0 ? [] : _b, onFollow = _a.onFollow, onChange = _a.onChange, props = __rest(_a, ["header", "activeHref", "items", "onFollow", "onChange"]);
    var __internalRootRef = useBaseComponent('SideNavigation').__internalRootRef;
    var baseProps = getBaseProps(props);
    var parentMap = (0,react.useMemo)(function () { return generateExpandableItemsMapping(items); }, [items]);
    if (isDevelopment) {
        // This code should be wiped in production anyway.
        // eslint-disable-next-line react-hooks/rules-of-hooks
        (0,react.useEffect)(function () { return checkDuplicateHrefs(items); }, [items]);
    }
    var onChangeHandler = (0,react.useCallback)(function (item, expanded) {
        // generateExpandableItemsMapping walks through the entire tree, so we're certain about getting a value.
        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
        fireNonCancelableEvent(onChange, { item: item, expanded: expanded, expandableParents: parentMap.get(item) });
    }, [onChange, parentMap]);
    var onFollowHandler = (0,react.useCallback)(function (item, sourceEvent) {
        fireCancelableEvent(onFollow, item, sourceEvent);
    }, [onFollow]);
    return (react.createElement("div", tslib_es6_assign({}, baseProps, { className: clsx_m(side_navigation_styles_css.root, baseProps.className), ref: __internalRootRef }),
        header && (react.createElement(internal_Header, { definition: header, activeHref: activeHref, fireChange: onChangeHandler, fireFollow: onFollowHandler })),
        items && (react.createElement("div", { className: side_navigation_styles_css["list-container"] },
            react.createElement(ItemList, { variant: "root", items: items, fireFollow: onFollowHandler, fireChange: onChangeHandler, activeHref: activeHref })))));
}
applyDisplayName(SideNavigation, 'SideNavigation');
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/components/visual-context/index.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0




var useVisualContext = function (elementRef) {
    var contextMatch = /awsui-context-([\w-]+)/;
    var _a = (0,react.useState)(''), value = _a[0], setValue = _a[1];
    useMutationObserver(elementRef, function (node) {
        var contextParent = findUpUntil(node, function (node) { return !!node.className.match(contextMatch); });
        setValue(contextParent ? contextParent.className.match(contextMatch)[1] : '');
    });
    return value;
};
/**
 * This function returns only the className string needed to apply a
 * visual context to the DOM. It is used by the default export but
 * can also be imported directly for situations where the insertion
 * of a <div> node creates style problems.
 */
function getVisualContextClassname(contextName) {
    return "awsui-context-".concat(contextName);
}
function VisualContext(_a) {
    var contextName = _a.contextName, className = _a.className, children = _a.children;
    return react.createElement("div", { className: clsx_m(getVisualContextClassname(contextName), className) }, children);
}
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/components/portal/index.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0


/**
 * A safe react portal component that renders to a provided node.
 * If a node isn't provided, it creates one under document.body.
 */
function Portal(_a) {
    var container = _a.container, children = _a.children;
    var _b = (0,react.useState)(container !== null && container !== void 0 ? container : null), activeContainer = _b[0], setActiveContainer = _b[1];
    (0,react.useLayoutEffect)(function () {
        if (container) {
            setActiveContainer(container);
            return;
        }
        var newContainer = document.createElement('div');
        document.body.appendChild(newContainer);
        setActiveContainer(newContainer);
        return function () {
            document.body.removeChild(newContainer);
            setActiveContainer(null);
        };
    }, [container]);
    return activeContainer && (0,react_dom.createPortal)(children, activeContainer);
}
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/hooks/container-queries/use-container-breakpoints.js


/**
 * Re-renders the component when the breakpoint for the component changes. Scopes the re-renders to the specific
 * breakpoints you want to break at. "default" is always included as a fallback, so ["xs"] would trigger for
 * "default" and "xs".
 *
 * @param triggers The relevant breakpoints to trigger for.
 */
function useContainerBreakpoints(triggers) {
    // triggers.join() gives us a stable value to use for the dependencies argument
    var triggersDep = triggers === null || triggers === void 0 ? void 0 : triggers.join();
    // eslint-disable-next-line react-hooks/exhaustive-deps
    return useContainerQuery(function (rect) { return getMatchingBreakpoint(rect.width, triggers); }, [triggersDep]);
}
//# sourceMappingURL=use-container-breakpoints.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/top-navigation/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/top-navigation/styles.css.js


    /* harmony default export */ const top_navigation_styles_css = ({
  "icon": "awsui_icon_k5dlb_1a945_93",
  "top-navigation": "awsui_top-navigation_k5dlb_1a945_111",
  "padding-box": "awsui_padding-box_k5dlb_1a945_122",
  "medium": "awsui_medium_k5dlb_1a945_132",
  "narrow": "awsui_narrow_k5dlb_1a945_132",
  "virtual": "awsui_virtual_k5dlb_1a945_143",
  "hidden": "awsui_hidden_k5dlb_1a945_147",
  "\t": "awsui_\t_k5dlb_1a945_1",
  "identity": "awsui_identity_k5dlb_1a945_159",
  "identity-link": "awsui_identity-link_k5dlb_1a945_162",
  "no-logo": "awsui_no-logo_k5dlb_1a945_179",
  "logo": "awsui_logo_k5dlb_1a945_183",
  "title": "awsui_title_k5dlb_1a945_195",
  "inputs": "awsui_inputs_k5dlb_1a945_210",
  "search": "awsui_search_k5dlb_1a945_217",
  "search-expanded": "awsui_search-expanded_k5dlb_1a945_221",
  "utilities": "awsui_utilities_k5dlb_1a945_225",
  "utility-wrapper": "awsui_utility-wrapper_k5dlb_1a945_236",
  "utility-type-button-link": "awsui_utility-type-button-link_k5dlb_1a945_257",
  "utility-type-menu-dropdown": "awsui_utility-type-menu-dropdown_k5dlb_1a945_261",
  "utility-type-button-primary-button": "awsui_utility-type-button-primary-button_k5dlb_1a945_269",
  "utility-link-icon": "awsui_utility-link-icon_k5dlb_1a945_277",
  "utility-button-external-icon": "awsui_utility-button-external-icon_k5dlb_1a945_281",
  "offset-right-none": "awsui_offset-right-none_k5dlb_1a945_285",
  "offset-right-l": "awsui_offset-right-l_k5dlb_1a945_289",
  "offset-right-xxl": "awsui_offset-right-xxl_k5dlb_1a945_293",
  "overflow-menu-drawer": "awsui_overflow-menu-drawer_k5dlb_1a945_298",
  "overflow-menu": "awsui_overflow-menu_k5dlb_1a945_298",
  "overflow-menu-header": "awsui_overflow-menu-header_k5dlb_1a945_318",
  "overflow-menu-header-text": "awsui_overflow-menu-header-text_k5dlb_1a945_325",
  "overflow-menu-header-text--secondary": "awsui_overflow-menu-header-text--secondary_k5dlb_1a945_336",
  "overflow-menu-header-text--title": "awsui_overflow-menu-header-text--title_k5dlb_1a945_342",
  "overflow-menu-back-button": "awsui_overflow-menu-back-button_k5dlb_1a945_346",
  "overflow-menu-dismiss-button": "awsui_overflow-menu-dismiss-button_k5dlb_1a945_350",
  "overflow-menu-control": "awsui_overflow-menu-control_k5dlb_1a945_354",
  "overflow-menu-list-item-utility": "awsui_overflow-menu-list-item-utility_k5dlb_1a945_369",
  "overflow-menu-control-link": "awsui_overflow-menu-control-link_k5dlb_1a945_376",
  "overflow-menu-control-expandable-menu-trigger": "awsui_overflow-menu-control-expandable-menu-trigger_k5dlb_1a945_379",
  "overflow-menu-list": "awsui_overflow-menu-list_k5dlb_1a945_369",
  "overflow-menu-list-submenu": "awsui_overflow-menu-list-submenu_k5dlb_1a945_410",
  "overflow-menu-list-item": "awsui_overflow-menu-list-item_k5dlb_1a945_369",
  "overflow-menu-list-item-icon": "awsui_overflow-menu-list-item-icon_k5dlb_1a945_418",
  "overflow-menu-list-item-text": "awsui_overflow-menu-list-item-text_k5dlb_1a945_421",
  "overflow-menu-list-item-submenu": "awsui_overflow-menu-list-item-submenu_k5dlb_1a945_430",
  "overflow-menu-list-item-dropdown-menu": "awsui_overflow-menu-list-item-dropdown-menu_k5dlb_1a945_435",
  "overflow-menu-list-item-expandable": "awsui_overflow-menu-list-item-expandable_k5dlb_1a945_438",
  "expanded": "awsui_expanded_k5dlb_1a945_446"
});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/top-navigation/use-top-navigation.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0




// A small buffer to make calculations more lenient against browser lag or padding adjustments.
var RESPONSIVENESS_BUFFER = 20;
function useTopNavigation(_a) {
    var identity = _a.identity, search = _a.search, utilities = _a.utilities;
    // Refs and breakpoints
    var mainRef = (0,react.useRef)(null);
    var virtualRef = (0,react.useRef)(null);
    var _b = useContainerBreakpoints(['xxs', 's']), breakpoint = _b[0], breakpointRef = _b[1];
    // Responsiveness state
    // The component works by calculating the possible resize states that it can
    // be in, and having a state variable to track which state we're currently in.
    var hasSearch = !!search;
    var hasTitleWithLogo = identity && !!identity.logo && !!identity.title;
    var responsiveStates = (0,react.useMemo)(function () {
        return generateResponsiveStateKeys(utilities, hasSearch, hasTitleWithLogo);
    }, [utilities, hasSearch, hasTitleWithLogo]);
    // To hide/show elements dynamically, we need to know how much space they take up,
    // even if they're not being rendered. The top navigation elements are hidden/resized
    // based on the available size or if a search bar is open, and they need to be available
    // for calculations so we know where to toggle them. So we render a second, more stable
    // top-nav off screen to do these calculations against.
    //
    // We can't "affix" these values to pixels because they can depend on spacing tokens.
    // It's easier to render all of these utilities separately rather than figuring out
    // spacing token values, icon sizes, text widths, etc.
    var _c = (0,react.useState)(), responsiveState = _c[0], setResponsiveState = _c[1];
    var recalculateFit = (0,react.useCallback)(function () {
        var _a, _b, _c, _d;
        if (!(mainRef === null || mainRef === void 0 ? void 0 : mainRef.current) || !virtualRef.current) {
            setResponsiveState(responsiveStates[0]);
            return;
        }
        // Get available width from the visible top navigation.
        var availableWidth = getContentBoxWidth(mainRef.current.querySelector(".".concat(top_navigation_styles_css["padding-box"])));
        if (availableWidth === 0) {
            // Likely in an SSR or Jest situation.
            setResponsiveState(responsiveStates[0]);
            return;
        }
        var sizeConfiguration = {
            hasSearch: hasSearch,
            availableWidth: availableWidth,
            // Get widths from the hidden top navigation
            fullIdentityWidth: virtualRef.current.querySelector(".".concat(top_navigation_styles_css.identity)).getBoundingClientRect().width,
            titleWidth: (_b = (_a = virtualRef.current.querySelector(".".concat(top_navigation_styles_css.title))) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect().width) !== null && _b !== void 0 ? _b : 0,
            searchSlotWidth: (_d = (_c = virtualRef.current.querySelector(".".concat(top_navigation_styles_css.search))) === null || _c === void 0 ? void 0 : _c.getBoundingClientRect().width) !== null && _d !== void 0 ? _d : 0,
            searchUtilityWidth: virtualRef.current.querySelector('[data-utility-special="search"]').getBoundingClientRect()
                .width,
            utilitiesLeftPadding: parseFloat(getComputedStyle(virtualRef.current.querySelector(".".concat(top_navigation_styles_css.utilities))).paddingLeft || '0px'),
            utilityWithLabelWidths: Array.prototype.slice
                .call(virtualRef.current.querySelectorAll("[data-utility-hide=\"false\"]"))
                .map(function (element) { return element.getBoundingClientRect().width; }),
            utilityWithoutLabelWidths: Array.prototype.slice
                .call(virtualRef.current.querySelectorAll("[data-utility-hide=\"true\"]"))
                .map(function (element) { return element.getBoundingClientRect().width; }),
            menuTriggerUtilityWidth: virtualRef.current
                .querySelector('[data-utility-special="menu-trigger"]')
                .getBoundingClientRect().width
        };
        setResponsiveState(determineBestResponsiveState(responsiveStates, sizeConfiguration));
    }, [responsiveStates, hasSearch]);
    var _d = useContainerQuery(function () {
        recalculateFit();
    }, [recalculateFit]), containerQueryRef = _d[1];
    // Due to being rendered in a portal, the virtual navigation isn't rendered
    // at the same time as the main one.
    var onVirtualMount = (0,react.useCallback)(function (element) {
        virtualRef.current = element;
        recalculateFit();
    }, [recalculateFit]);
    // Search slot expansion on small screens
    var _e = (0,react.useState)(true), isSearchMinimized = _e[0], setSearchMinimized = _e[1];
    var isSearchExpanded = !isSearchMinimized && hasSearch && (responsiveState === null || responsiveState === void 0 ? void 0 : responsiveState.hideSearch);
    // If the search was expanded, and then the screen resized so that the
    // expansion is no longer necessary. So we implicitly minimize it.
    (0,react.useEffect)(function () {
        if (!(responsiveState === null || responsiveState === void 0 ? void 0 : responsiveState.hideSearch)) {
            setSearchMinimized(true);
        }
    }, [responsiveState]);
    // If the search is expanded after clicking on the search utility, move
    // the focus to the input. Since this is a user-controlled slot, we're just
    // assuming that it contains an input, though it's a pretty safe guess.
    (0,react.useEffect)(function () {
        var _a, _b;
        if (isSearchExpanded) {
            (_b = (_a = mainRef === null || mainRef === void 0 ? void 0 : mainRef.current) === null || _a === void 0 ? void 0 : _a.querySelector(".".concat(top_navigation_styles_css.search, " input"))) === null || _b === void 0 ? void 0 : _b.focus();
        }
    }, [isSearchExpanded, mainRef]);
    var mergedMainRef = useMergeRefs(mainRef, containerQueryRef, breakpointRef);
    return {
        mainRef: mergedMainRef,
        virtualRef: onVirtualMount,
        responsiveState: responsiveState !== null && responsiveState !== void 0 ? responsiveState : responsiveStates[0],
        breakpoint: breakpoint !== null && breakpoint !== void 0 ? breakpoint : 'default',
        isSearchExpanded: !!isSearchExpanded,
        onSearchUtilityClick: function () { return setSearchMinimized(function (isSearchMinimized) { return !isSearchMinimized; }); }
    };
}
/**
 * Get the width of the content box (assuming the element's box-sizing is border-box).
 */
function getContentBoxWidth(element) {
    var style = getComputedStyle(element);
    return (parseFloat(style.width || '0px') - parseFloat(style.paddingLeft || '0px') - parseFloat(style.paddingRight || '0px'));
}
/**
 * Generates the series of responsive steps that can be performed on the header in order.
 */
function generateResponsiveStateKeys(utilities, canHideSearch, canHideTitle) {
    var states = [{}];
    if (utilities.some(function (utility) { return utility.text; })) {
        states.push({ hideUtilityText: true });
    }
    if (canHideSearch) {
        states.push({
            hideUtilityText: true,
            hideSearch: true
        });
    }
    var hiddenUtilties = [];
    for (var i = 0; i < utilities.length; i++) {
        if (!utilities[i].disableUtilityCollapse) {
            hiddenUtilties.push(i);
            states.push({
                hideUtilityText: true,
                hideSearch: canHideSearch || undefined,
                hideUtilities: hiddenUtilties.length > 0 ? hiddenUtilties.slice() : undefined
            });
        }
    }
    if (canHideTitle) {
        states.push({
            hideUtilityText: true,
            hideSearch: canHideSearch || undefined,
            hideUtilities: hiddenUtilties.length > 0 ? hiddenUtilties.slice() : undefined,
            hideTitle: true
        });
    }
    return states;
}
/**
 * Determines the best responsive state configuration of the top navigation, based on the given list of possible responsive states
 * and the current sizes of all elements inside the navigation bar.
 */
function determineBestResponsiveState(possibleStates, sizes) {
    var hasSearch = sizes.hasSearch, availableWidth = sizes.availableWidth, utilitiesLeftPadding = sizes.utilitiesLeftPadding, fullIdentityWidth = sizes.fullIdentityWidth, titleWidth = sizes.titleWidth, searchSlotWidth = sizes.searchSlotWidth, searchUtilityWidth = sizes.searchUtilityWidth, utilityWithLabelWidths = sizes.utilityWithLabelWidths, utilityWithoutLabelWidths = sizes.utilityWithoutLabelWidths, menuTriggerUtilityWidth = sizes.menuTriggerUtilityWidth;
    var _loop_1 = function (state) {
        var searchWidth = hasSearch ? (state.hideSearch ? searchUtilityWidth : searchSlotWidth) : 0;
        var utilitiesWidth = (state.hideUtilityText ? utilityWithoutLabelWidths : utilityWithLabelWidths)
            .filter(function (_width, i) { return !state.hideUtilities || state.hideUtilities.indexOf(i) === -1; })
            .reduce(function (sum, width) { return sum + width; }, 0);
        var menuTriggerWidth = state.hideUtilities ? menuTriggerUtilityWidth : 0;
        var identityWidth = state.hideTitle ? fullIdentityWidth - titleWidth : fullIdentityWidth;
        var expectedInnerWidth = identityWidth + searchWidth + utilitiesLeftPadding + utilitiesWidth + menuTriggerWidth;
        if (expectedInnerWidth <= availableWidth - RESPONSIVENESS_BUFFER) {
            return { value: state };
        }
    };
    // Iterate through each state and calculate its expected required width.
    for (var _i = 0, possibleStates_1 = possibleStates; _i < possibleStates_1.length; _i++) {
        var state = possibleStates_1[_i];
        var state_1 = _loop_1(state);
        if (typeof state_1 === "object")
            return state_1.value;
    }
    // If nothing matches, pick the smallest possible state.
    return possibleStates[possibleStates.length - 1];
}
//# sourceMappingURL=use-top-navigation.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/link/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/link/styles.css.js


    /* harmony default export */ const link_styles_css = ({
  "link": "awsui_link_4c84z_1r9bu_93",
  "variant-secondary": "awsui_variant-secondary_4c84z_1r9bu_138",
  "variant-primary": "awsui_variant-primary_4c84z_1r9bu_173",
  "variant-info": "awsui_variant-info_4c84z_1r9bu_208",
  "variant-value-large": "awsui_variant-value-large_4c84z_1r9bu_245",
  "variant-top-navigation": "awsui_variant-top-navigation_4c84z_1r9bu_279",
  "variant-recovery": "awsui_variant-recovery_4c84z_1r9bu_314",
  "button": "awsui_button_4c84z_1r9bu_349",
  "color-inverted": "awsui_color-inverted_4c84z_1r9bu_386",
  "font-size-body-s": "awsui_font-size-body-s_4c84z_1r9bu_405",
  "font-size-body-m": "awsui_font-size-body-m_4c84z_1r9bu_410",
  "font-size-heading-xs": "awsui_font-size-heading-xs_4c84z_1r9bu_414",
  "font-size-heading-s": "awsui_font-size-heading-s_4c84z_1r9bu_418",
  "font-size-heading-m": "awsui_font-size-heading-m_4c84z_1r9bu_423",
  "font-size-heading-l": "awsui_font-size-heading-l_4c84z_1r9bu_428",
  "font-size-heading-xl": "awsui_font-size-heading-xl_4c84z_1r9bu_433",
  "font-size-display-l": "awsui_font-size-display-l_4c84z_1r9bu_438",
  "font-size-inherit": "awsui_font-size-inherit_4c84z_1r9bu_443",
  "icon-wrapper": "awsui_icon-wrapper_4c84z_1r9bu_449",
  "icon": "awsui_icon_4c84z_1r9bu_449"
});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/link/internal.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0












var InternalLink = react.forwardRef(function (_a, ref) {
    var _b = _a.variant, variant = _b === void 0 ? 'secondary' : _b, _c = _a.fontSize, fontSize = _c === void 0 ? 'body-m' : _c, _d = _a.color, color = _d === void 0 ? 'normal' : _d, _e = _a.external, external = _e === void 0 ? false : _e, target = _a.target, href = _a.href, rel = _a.rel, ariaLabel = _a.ariaLabel, externalIconAriaLabel = _a.externalIconAriaLabel, onFollow = _a.onFollow, children = _a.children, _f = _a.__internalRootRef, __internalRootRef = _f === void 0 ? null : _f, props = __rest(_a, ["variant", "fontSize", "color", "external", "target", "href", "rel", "ariaLabel", "externalIconAriaLabel", "onFollow", "children", "__internalRootRef"]);
    checkSafeUrl('Link', href);
    var isButton = !href;
    var specialStyles = ['top-navigation', 'link', 'recovery'];
    var hasSpecialStyle = specialStyles.indexOf(variant) > -1;
    var focusVisible = useFocusVisible();
    var baseProps = getBaseProps(props);
    var anchorTarget = target !== null && target !== void 0 ? target : (external ? '_blank' : undefined);
    var anchorRel = rel !== null && rel !== void 0 ? rel : (anchorTarget === '_blank' ? 'noopener noreferrer' : undefined);
    var fireFollowEvent = function (event) {
        fireCancelableEvent(onFollow, { href: href, external: external, target: anchorTarget }, event);
    };
    var handleLinkClick = function (event) {
        if (isPlainLeftClick(event)) {
            fireFollowEvent(event);
        }
    };
    var handleButtonClick = function (event) {
        fireFollowEvent(event);
    };
    var handleButtonKeyDown = function (event) {
        if (event.keyCode === KeyCode.space || event.keyCode === KeyCode.enter) {
            event.preventDefault();
            fireFollowEvent(event);
        }
    };
    var linkRef = (0,react.useRef)(null);
    var isVisualRefresh = useVisualRefresh();
    useForwardFocus(ref, linkRef);
    // Visual refresh should only add styles to buttons that don't already have unique styles (e.g. primary/secondary variants)
    var applyButtonStyles = isButton && isVisualRefresh && !hasSpecialStyle;
    var sharedProps = tslib_es6_assign(tslib_es6_assign(tslib_es6_assign({}, focusVisible), baseProps), {
        // https://github.com/microsoft/TypeScript/issues/36659
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        ref: useMergeRefs(linkRef, __internalRootRef), className: clsx_m(link_styles_css.link, baseProps.className, applyButtonStyles ? link_styles_css.button : null, link_styles_css[getVariantStyle(variant)], link_styles_css[getFontSizeStyle(variant, fontSize)], link_styles_css[getColorStyle(variant, color)]), 'aria-label': ariaLabel });
    var content = (react.createElement(react.Fragment, null,
        children,
        external && (react.createElement("span", { className: link_styles_css["icon-wrapper"] },
            "\u00A0",
            react.createElement("span", { className: link_styles_css.icon, "aria-label": externalIconAriaLabel, role: externalIconAriaLabel ? 'img' : undefined },
                react.createElement(internal, { name: "external", size: "inherit" }))))));
    if (isButton) {
        return (react.createElement("a", tslib_es6_assign({}, sharedProps, { role: "button", tabIndex: 0, onKeyDown: handleButtonKeyDown, onClick: handleButtonClick }), content));
    }
    return (
    // we dynamically set proper rel in the code above
    // eslint-disable-next-line react/jsx-no-target-blank
    react.createElement("a", tslib_es6_assign({}, sharedProps, { target: anchorTarget, rel: anchorRel, href: href, onClick: handleLinkClick }), content));
});
function getVariantStyle(variant) {
    return "variant-".concat(variant.replace(/^awsui-/, ''));
}
function getFontSizeStyle(variant, fontSize) {
    switch (variant) {
        case 'info':
            return 'font-size-body-s';
        case 'awsui-value-large':
            return 'font-size-display-l';
        default:
            return "font-size-".concat(fontSize);
    }
}
function getColorStyle(variant, color) {
    return "color-".concat(variant === 'info' ? 'normal' : color);
}
/* harmony default export */ const link_internal = (InternalLink);
//# sourceMappingURL=internal.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/button-dropdown/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/button-dropdown/styles.css.js


    /* harmony default export */ const button_dropdown_styles_css = ({
  "button-dropdown": "awsui_button-dropdown_sne0l_1gwdq_93",
  "items-list-container": "awsui_items-list-container_sne0l_1gwdq_97",
  "awsui-motion-fade-in-0": "awsui_awsui-motion-fade-in-0_sne0l_1gwdq_1",
  "rotate-up": "awsui_rotate-up_sne0l_1gwdq_114",
  "rotate-down": "awsui_rotate-down_sne0l_1gwdq_129",
  "header": "awsui_header_sne0l_1gwdq_144",
  "title": "awsui_title_sne0l_1gwdq_153",
  "description": "awsui_description_sne0l_1gwdq_154"
});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/components/dropdown/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/components/dropdown/styles.css.js


    /* harmony default export */ const dropdown_styles_css = ({
  "dropdown-content-wrapper": "awsui_dropdown-content-wrapper_qwoo0_1aum0_93",
  "awsui-motion-fade-in-dropdown": "awsui_awsui-motion-fade-in-dropdown_qwoo0_1aum0_1",
  "refresh": "awsui_refresh_qwoo0_1aum0_114",
  "awsui-motion-fade-in-0": "awsui_awsui-motion-fade-in-0_qwoo0_1aum0_1",
  "root": "awsui_root_qwoo0_1aum0_143",
  "interior": "awsui_interior_qwoo0_1aum0_155",
  "dropdown": "awsui_dropdown_qwoo0_1aum0_93",
  "use-portal": "awsui_use-portal_qwoo0_1aum0_166",
  "dropdown-drop-up": "awsui_dropdown-drop-up_qwoo0_1aum0_211",
  "with-limited-width": "awsui_with-limited-width_qwoo0_1aum0_215",
  "dropdown-drop-left": "awsui_dropdown-drop-left_qwoo0_1aum0_218",
  "dropdown-drop-right": "awsui_dropdown-drop-right_qwoo0_1aum0_221",
  "occupy-entire-width": "awsui_occupy-entire-width_qwoo0_1aum0_224",
  "hide-upper-border": "awsui_hide-upper-border_qwoo0_1aum0_227",
  "open": "awsui_open_qwoo0_1aum0_234",
  "nowrap": "awsui_nowrap_qwoo0_1aum0_243",
  "is-empty": "awsui_is-empty_qwoo0_1aum0_247",
  "dropdown-content": "awsui_dropdown-content_qwoo0_1aum0_93",
  "ie11-wrapper": "awsui_ie11-wrapper_qwoo0_1aum0_257",
  "stretch-trigger-height": "awsui_stretch-trigger-height_qwoo0_1aum0_261"
});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/components/dropdown/dropdown-fit-handler.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0


var AVAILABLE_SPACE_RESERVE_DEFAULT = 50;
var AVAILABLE_SPACE_RESERVE_MOBILE_VERTICAL = 19; // 50 - 31
var AVAILABLE_SPACE_RESERVE_MOBILE_HORIZONTAL = 20;
var getClosestParentDimensions = function (element) {
    var parents = getOverflowParents(element).map(function (el) {
        var _a = el.getBoundingClientRect(), height = _a.height, width = _a.width, top = _a.top, left = _a.left;
        return {
            height: height,
            width: width,
            top: top,
            left: left
        };
    });
    return parents.shift();
};
var getAvailableSpace = function (trigger, dropdown, overflowParents, stretchWidth, stretchHeight, isMobile) {
    if (stretchWidth === void 0) { stretchWidth = false; }
    if (stretchHeight === void 0) { stretchHeight = false; }
    var availableSpaceReserveVertical = stretchHeight
        ? 0
        : isMobile
            ? AVAILABLE_SPACE_RESERVE_MOBILE_VERTICAL
            : AVAILABLE_SPACE_RESERVE_DEFAULT;
    var availableSpaceReserveHorizontal = stretchWidth
        ? 0
        : isMobile
            ? AVAILABLE_SPACE_RESERVE_MOBILE_HORIZONTAL
            : AVAILABLE_SPACE_RESERVE_DEFAULT;
    var _a = trigger.getBoundingClientRect(), triggerBottom = _a.bottom, triggerLeft = _a.left, triggerRight = _a.right;
    return overflowParents.reduce(function (_a, overflowParent) {
        var above = _a.above, below = _a.below, left = _a.left, right = _a.right;
        var offsetTop = triggerBottom - overflowParent.top;
        var currentAbove = offsetTop - trigger.offsetHeight - availableSpaceReserveVertical;
        var currentBelow = overflowParent.height - offsetTop - availableSpaceReserveVertical;
        var currentLeft = triggerRight - overflowParent.left - availableSpaceReserveHorizontal;
        var currentRight = overflowParent.left + overflowParent.width - triggerLeft - availableSpaceReserveHorizontal;
        return {
            above: Math.min(above, currentAbove),
            below: Math.min(below, currentBelow),
            left: Math.min(left, currentLeft),
            right: Math.min(right, currentRight)
        };
    }, { above: Number.MAX_VALUE, below: Number.MAX_VALUE, left: Number.MAX_VALUE, right: Number.MAX_VALUE });
};
var getInteriorAvailableSpace = function (trigger, dropdown, overflowParents, isMobile) {
    var AVAILABLE_SPACE_RESERVE_VERTICAL = isMobile
        ? AVAILABLE_SPACE_RESERVE_MOBILE_VERTICAL
        : AVAILABLE_SPACE_RESERVE_DEFAULT;
    var AVAILABLE_SPACE_RESERVE_HORIZONTAL = isMobile
        ? AVAILABLE_SPACE_RESERVE_MOBILE_HORIZONTAL
        : AVAILABLE_SPACE_RESERVE_DEFAULT;
    var _a = trigger.getBoundingClientRect(), triggerBottom = _a.bottom, triggerTop = _a.top, triggerLeft = _a.left, triggerRight = _a.right;
    return overflowParents.reduce(function (_a, overflowParent) {
        var above = _a.above, below = _a.below, left = _a.left, right = _a.right;
        var currentAbove = triggerBottom - overflowParent.top - AVAILABLE_SPACE_RESERVE_VERTICAL;
        var currentBelow = overflowParent.height - triggerTop + overflowParent.top - AVAILABLE_SPACE_RESERVE_VERTICAL;
        var currentLeft = triggerLeft - overflowParent.left - AVAILABLE_SPACE_RESERVE_HORIZONTAL;
        var currentRight = overflowParent.left + overflowParent.width - triggerRight - AVAILABLE_SPACE_RESERVE_HORIZONTAL;
        return {
            above: Math.min(above, currentAbove),
            below: Math.min(below, currentBelow),
            left: Math.min(left, currentLeft),
            right: Math.min(right, currentRight)
        };
    }, { above: Number.MAX_VALUE, below: Number.MAX_VALUE, left: Number.MAX_VALUE, right: Number.MAX_VALUE });
};
var getDropdownPosition = function (trigger, dropdown, overflowParents, minWidth, preferCenter, stretchWidth, stretchHeight, isMobile) {
    if (preferCenter === void 0) { preferCenter = false; }
    if (stretchWidth === void 0) { stretchWidth = false; }
    if (stretchHeight === void 0) { stretchHeight = false; }
    var availableSpace = getAvailableSpace(trigger, dropdown, overflowParents, stretchWidth, stretchHeight, isMobile);
    var triggerWidth = trigger.getBoundingClientRect().width;
    minWidth = minWidth ? Math.min(triggerWidth, minWidth) : triggerWidth;
    var requiredWidth = dropdown.getBoundingClientRect().width;
    // dropdown should not be smaller than the trigger
    var idealWidth = Math.max(requiredWidth, minWidth);
    var dropLeft;
    var left = null;
    var width = idealWidth;
    //1. Can it be positioned with ideal width to the right?
    if (idealWidth <= availableSpace.right) {
        dropLeft = false;
        //2. Can it be positioned with ideal width to the left?
    }
    else if (idealWidth <= availableSpace.left) {
        dropLeft = true;
        //3. Fit into biggest available space either on left or right
    }
    else {
        dropLeft = availableSpace.left > availableSpace.right;
        width = Math.max(availableSpace.left, availableSpace.right, minWidth);
    }
    if (preferCenter) {
        var spillOver = (idealWidth - triggerWidth) / 2;
        // availableSpace always includes the trigger width, but we want to exclude that
        var availableOutsideLeft = availableSpace.left - triggerWidth;
        var availableOutsideRight = availableSpace.right - triggerWidth;
        var fitsInCenter = availableOutsideLeft >= spillOver && availableOutsideRight >= spillOver;
        if (fitsInCenter) {
            left = -spillOver;
        }
    }
    var dropUp = availableSpace.below < dropdown.offsetHeight && availableSpace.above > availableSpace.below;
    var availableHeight = dropUp ? availableSpace.above : availableSpace.below;
    // Try and crop the bottom item when all options can't be displayed, affordance for "there's more"
    var croppedHeight = stretchHeight ? availableHeight : Math.floor(availableHeight / 31) * 31 + 16;
    return {
        dropUp: dropUp,
        dropLeft: dropLeft,
        left: left === null ? 'auto' : "".concat(left, "px"),
        height: "".concat(croppedHeight, "px"),
        width: "".concat(width, "px")
    };
};
var getInteriorDropdownPosition = function (trigger, dropdown, overflowParents, isMobile) {
    var availableSpace = getInteriorAvailableSpace(trigger, dropdown, overflowParents, isMobile);
    var _a = trigger.getBoundingClientRect(), triggerBottom = _a.bottom, triggerTop = _a.top, triggerWidth = _a.width;
    var _b = getClosestParentDimensions(trigger), parentDropdownTop = _b.top, parentDropdownHeight = _b.height;
    var dropLeft;
    var width = dropdown.getBoundingClientRect().width;
    var top = triggerTop - parentDropdownTop;
    if (width <= availableSpace.right) {
        dropLeft = false;
    }
    else if (width <= availableSpace.left) {
        dropLeft = true;
    }
    else {
        dropLeft = availableSpace.left > availableSpace.right;
        width = Math.max(availableSpace.left, availableSpace.right);
    }
    var left = dropLeft ? 0 - width : triggerWidth;
    var dropUp = availableSpace.below < dropdown.offsetHeight && availableSpace.above > availableSpace.below;
    var bottom = dropUp ? parentDropdownTop + parentDropdownHeight - triggerBottom : 0;
    var availableHeight = dropUp ? availableSpace.above : availableSpace.below;
    // Try and crop the bottom item when all options can't be displayed, affordance for "there's more"
    var croppedHeight = Math.floor(availableHeight / 31) * 31 + 16;
    return {
        dropUp: dropUp,
        dropLeft: dropLeft,
        height: "".concat(croppedHeight, "px"),
        width: "".concat(width, "px"),
        top: "".concat(top, "px"),
        bottom: "".concat(bottom, "px"),
        left: "".concat(left, "px")
    };
};
var calculatePosition = function (dropdownElement, triggerElement, verticalContainerElement, interior, expandToViewport, preferCenter, stretchWidth, stretchHeight, isMobile, minWidth) {
    // cleaning previously assigned values,
    // so that they are not reused in case of screen resize and similar events
    verticalContainerElement.style.maxHeight = '';
    dropdownElement.style.width = '';
    dropdownElement.style.top = '';
    dropdownElement.style.bottom = '';
    dropdownElement.style.left = '';
    dropdownElement.classList.remove(dropdown_styles_css["dropdown-drop-left"]);
    dropdownElement.classList.remove(dropdown_styles_css["dropdown-drop-right"]);
    dropdownElement.classList.remove(dropdown_styles_css["dropdown-drop-up"]);
    var overflowParents = getOverflowParentDimensions(dropdownElement, interior, expandToViewport, stretchHeight);
    var position = interior
        ? getInteriorDropdownPosition(triggerElement, dropdownElement, overflowParents, isMobile)
        : getDropdownPosition(triggerElement, dropdownElement, overflowParents, minWidth, preferCenter, stretchWidth, stretchHeight, isMobile);
    var triggerBox = triggerElement.getBoundingClientRect();
    return [position, triggerBox];
};
//# sourceMappingURL=dropdown-fit-handler.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/hooks/use-portal-mode-classes/index.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0



function usePortalModeClasses(ref) {
    var _a;
    var colorMode = useCurrentMode(ref);
    var densityMode = useDensityMode(ref);
    var context = useVisualContext(ref);
    var visualRefresh = useVisualRefresh();
    return clsx_m((_a = {
            'awsui-polaris-dark-mode awsui-dark-mode': colorMode === 'dark',
            'awsui-polaris-compact-mode awsui-compact-mode': densityMode === 'compact',
            'awsui-visual-refresh': visualRefresh
        },
        _a["awsui-context-".concat(context)] = context,
        _a));
}
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/components/dropdown/context.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

var DropdownContext = react.createContext({
    position: 'bottom-right'
});
function DropdownContextProvider(_a) {
    var children = _a.children, _b = _a.position, position = _b === void 0 ? 'bottom-right' : _b;
    return react.createElement(DropdownContext.Provider, { value: { position: position } }, children);
}
function useDropdownContext() {
    return (0,react.useContext)(DropdownContext);
}
//# sourceMappingURL=context.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/components/tab-trap/index.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

// This component handles focus-forwarding when navigating through the calendar grid.
// When the customer focuses that component the `next` callback function is called
// with forwards the focus.
function TabTrap(_a) {
    var focusNextCallback = _a.focusNextCallback, _b = _a.disabled, disabled = _b === void 0 ? false : _b;
    return react.createElement("div", { tabIndex: disabled ? -1 : 0, onFocus: focusNextCallback });
}
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/components/focus-lock/utils.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
// Credits to
// https://github.com/theKashey/focus-lock/blob/33f8b4bd9675d2605b15e2e4015b77fe35fbd6d0/src/utils/tabbables.ts
var tabbables = [
    'button:enabled',
    'select:enabled',
    'textarea:enabled',
    'input:enabled',
    'a[href]',
    'area[href]',
    'summary',
    'iframe',
    'object',
    'embed',
    'audio[controls]',
    'video[controls]',
    '[tabindex]',
    '[contenteditable]',
    '[autofocus]',
].join(',');
function getFocusables(container) {
    return Array.prototype.slice
        .call(container.querySelectorAll(tabbables))
        .filter(function (element) { return element.tabIndex !== -1; });
}
function getFirstFocusable(container) {
    var _a;
    var focusables = getFocusables(container);
    return (_a = focusables[0]) !== null && _a !== void 0 ? _a : null;
}
function getLastFocusable(container) {
    var _a;
    var focusables = getFocusables(container);
    return (_a = focusables[focusables.length - 1]) !== null && _a !== void 0 ? _a : null;
}
//# sourceMappingURL=utils.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/components/dropdown/index.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0














var DropdownContainer = function (_a) {
    var children = _a.children, _b = _a.renderWithPortal, renderWithPortal = _b === void 0 ? false : _b, id = _a.id, open = _a.open;
    if (renderWithPortal) {
        if (open) {
            return (0,react_dom.createPortal)(react.createElement("div", { id: id }, children), document.body);
        }
        else {
            return null;
        }
    }
    else {
        return react.createElement(react.Fragment, null, children);
    }
};
var TransitionContent = function (_a) {
    var _b;
    var state = _a.state, transitionRef = _a.transitionRef, dropdownClasses = _a.dropdownClasses, stretchWidth = _a.stretchWidth, interior = _a.interior, isRefresh = _a.isRefresh, dropdownRef = _a.dropdownRef, verticalContainerRef = _a.verticalContainerRef, expandToViewport = _a.expandToViewport, header = _a.header, children = _a.children, footer = _a.footer, position = _a.position, open = _a.open, onMouseDown = _a.onMouseDown;
    var contentRef = useMergeRefs(dropdownRef, transitionRef);
    return (react.createElement("div", { className: clsx_m(dropdown_styles_css.dropdown, dropdownClasses, (_b = {},
            _b[dropdown_styles_css.open] = open,
            _b[dropdown_styles_css["with-limited-width"]] = !stretchWidth,
            _b[dropdown_styles_css["hide-upper-border"]] = stretchWidth,
            _b[dropdown_styles_css.interior] = interior,
            _b[dropdown_styles_css["is-empty"]] = !header && !children,
            _b[dropdown_styles_css.refresh] = isRefresh,
            _b[dropdown_styles_css["use-portal"]] = expandToViewport && !interior,
            _b)), ref: contentRef, "data-open": open, "data-animating": state !== 'exited', "aria-hidden": !open, onMouseDown: onMouseDown },
        react.createElement("div", { className: clsx_m(dropdown_styles_css["dropdown-content-wrapper"], isRefresh && dropdown_styles_css.refresh) },
            react.createElement("div", { className: dropdown_styles_css["ie11-wrapper"] },
                react.createElement("div", { ref: verticalContainerRef, className: dropdown_styles_css["dropdown-content"] },
                    react.createElement(DropdownContextProvider, { position: position },
                        header,
                        children,
                        footer))))));
};
var Dropdown = function (_a) {
    var children = _a.children, trigger = _a.trigger, open = _a.open, onDropdownClose = _a.onDropdownClose, onMouseDown = _a.onMouseDown, header = _a.header, footer = _a.footer, dropdownId = _a.dropdownId, _b = _a.stretchTriggerHeight, stretchTriggerHeight = _b === void 0 ? false : _b, _c = _a.stretchWidth, stretchWidth = _c === void 0 ? true : _c, _d = _a.stretchHeight, stretchHeight = _d === void 0 ? false : _d, _e = _a.stretchToTriggerWidth, stretchToTriggerWidth = _e === void 0 ? true : _e, _f = _a.expandToViewport, expandToViewport = _f === void 0 ? false : _f, _g = _a.preferCenter, preferCenter = _g === void 0 ? false : _g, _h = _a.interior, interior = _h === void 0 ? false : _h, minWidth = _a.minWidth, _j = _a.scrollable, scrollable = _j === void 0 ? true : _j, _k = _a.loopFocus, loopFocus = _k === void 0 ? expandToViewport : _k, onFocus = _a.onFocus, onBlur = _a.onBlur, contentKey = _a.contentKey;
    var wrapperRef = (0,react.useRef)(null);
    var triggerRef = (0,react.useRef)(null);
    var dropdownRef = (0,react.useRef)(null);
    var dropdownContainerRef = (0,react.useRef)(null);
    // This container is only needed to apply max-height to. We can't move max-height to it's parent
    // because of an IE11 issue with flexbox. https://github.com/philipwalton/flexbugs/issues/216
    var verticalContainerRef = (0,react.useRef)(null);
    // To keep track of the initial position (drop up/down) which is kept the same during fixed repositioning
    var fixedPosition = (0,react.useRef)(null);
    var isRefresh = useVisualRefresh();
    var dropdownClasses = usePortalModeClasses(triggerRef);
    var _l = (0,react.useState)('bottom-right'), position = _l[0], setPosition = _l[1];
    var isMobile = useMobile();
    var setDropdownPosition = function (position, triggerBox, target, verticalContainer) {
        var entireWidth = !interior && stretchWidth;
        if (!stretchWidth) {
            // 1px offset for dropdowns where the dropdown itself needs a border, rather than on the items
            verticalContainer.style.maxHeight = "".concat(parseInt(position.height) + 1, "px");
        }
        else {
            verticalContainer.style.maxHeight = position.height;
        }
        if (entireWidth && !expandToViewport) {
            if (stretchToTriggerWidth) {
                target.classList.add(dropdown_styles_css["occupy-entire-width"]);
            }
        }
        else {
            target.style.width = position.width;
        }
        // Using styles for main dropdown to adjust its position as preferred alternative
        if (position.dropUp && !interior) {
            target.classList.add(dropdown_styles_css["dropdown-drop-up"]);
            if (!expandToViewport) {
                target.style.bottom = '100%';
            }
        }
        else {
            target.classList.remove(dropdown_styles_css["dropdown-drop-up"]);
        }
        target.classList.add(position.dropLeft ? dropdown_styles_css["dropdown-drop-left"] : dropdown_styles_css["dropdown-drop-right"]);
        if (position.left && position.left !== 'auto') {
            target.style.left = position.left;
        }
        // Position normal overflow dropdowns with fixed positioning relative to viewport
        if (expandToViewport && !interior) {
            target.style.position = 'fixed';
            if (position.dropUp) {
                target.style.bottom = "calc(100% - ".concat(triggerBox.top, "px)");
            }
            else {
                target.style.top = "".concat(triggerBox.bottom, "px");
            }
            if (position.dropLeft) {
                target.style.left = "calc(".concat(triggerBox.right, "px - ").concat(position.width, ")");
            }
            else {
                target.style.left = "".concat(triggerBox.left, "px");
            }
            // Keep track of the initial dropdown position and direction.
            // Dropdown direction doesn't need to change as the user scrolls, just needs to stay attached to the trigger.
            fixedPosition.current = position;
            return;
        }
        // For an interior dropdown (the fly out) we need exact values for positioning
        // and classes are not enough
        // usage of relative position is impossible due to overwrite of overflow-x
        if (interior && isInteriorPosition(position)) {
            if (position.dropUp) {
                target.style.bottom = position.bottom;
            }
            else {
                target.style.top = position.top;
            }
            target.style.left = position.left;
        }
        if (position.dropUp && position.dropLeft) {
            setPosition('top-left');
        }
        else if (position.dropUp) {
            setPosition('top-right');
        }
        else if (position.dropLeft) {
            setPosition('bottom-left');
        }
        else {
            setPosition('bottom-right');
        }
    };
    var isOutsideDropdown = function (element) {
        return (!wrapperRef.current || !wrapperRef.current.contains(element)) &&
            (!dropdownContainerRef.current || !dropdownContainerRef.current.contains(element));
    };
    var focusHandler = function (event) {
        if (!event.relatedTarget || isOutsideDropdown(event.relatedTarget)) {
            fireNonCancelableEvent(onFocus, event);
        }
    };
    var blurHandler = function (event) {
        if (!event.relatedTarget || isOutsideDropdown(event.relatedTarget)) {
            fireNonCancelableEvent(onBlur, event);
        }
    };
    (0,react.useLayoutEffect)(function () {
        var onDropdownOpen = function () {
            if (open && dropdownRef.current && triggerRef.current && verticalContainerRef.current) {
                // calculate scroll width only for dropdowns that has a scrollbar and ignore it for date picker components
                if (scrollable) {
                    dropdownRef.current.classList.add(dropdown_styles_css.nowrap);
                }
                setDropdownPosition.apply(void 0, tslib_es6_spreadArray(tslib_es6_spreadArray([], calculatePosition(dropdownRef.current, triggerRef.current, verticalContainerRef.current, interior, expandToViewport, preferCenter, stretchWidth, stretchHeight, isMobile, minWidth), false), [dropdownRef.current,
                    verticalContainerRef.current], false));
                if (scrollable) {
                    dropdownRef.current.classList.remove(dropdown_styles_css.nowrap);
                }
            }
        };
        onDropdownOpen();
        if (open) {
            // window may scroll when dropdown opens, for example when soft keyboard shows up
            window.addEventListener('scroll', onDropdownOpen);
            // only listen to window scroll within very short time after the dropdown opens
            // do not want to interfere dropdown position on scroll afterwards
            var timeoutId_1 = setTimeout(function () {
                window.removeEventListener('scroll', onDropdownOpen);
            }, 500);
            return function () {
                clearTimeout(timeoutId_1);
                window.removeEventListener('scroll', onDropdownOpen);
            };
        }
        // See AWSUI-13040
        // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [open, dropdownRef, triggerRef, verticalContainerRef, interior, stretchWidth, isMobile, contentKey]);
    // subscribe to outside click
    (0,react.useEffect)(function () {
        if (!open) {
            return;
        }
        var clickListener = function (e) {
            var _a, _b;
            if (!((_a = dropdownRef.current) === null || _a === void 0 ? void 0 : _a.contains(e.target)) && !((_b = triggerRef.current) === null || _b === void 0 ? void 0 : _b.contains(e.target))) {
                fireNonCancelableEvent(onDropdownClose);
            }
        };
        window.addEventListener('click', clickListener, true);
        return function () {
            window.removeEventListener('click', clickListener, true);
        };
    }, [open, onDropdownClose]);
    // sync dropdown position on scroll and resize
    (0,react.useLayoutEffect)(function () {
        if (!expandToViewport || !open) {
            return;
        }
        var updateDropdownPosition = function () {
            if (triggerRef.current && dropdownRef.current && verticalContainerRef.current) {
                var triggerRect = triggerRef.current.getBoundingClientRect();
                var target = dropdownRef.current;
                if (fixedPosition.current) {
                    if (fixedPosition.current.dropUp) {
                        dropdownRef.current.style.bottom = "calc(100% - ".concat(triggerRect.top, "px)");
                    }
                    else {
                        target.style.top = "".concat(triggerRect.bottom, "px");
                    }
                    if (fixedPosition.current.dropLeft) {
                        target.style.left = "calc(".concat(triggerRect.right, "px - ").concat(fixedPosition.current.width, ")");
                    }
                    else {
                        target.style.left = "".concat(triggerRect.left, "px");
                    }
                }
            }
        };
        updateDropdownPosition();
        window.addEventListener('scroll', updateDropdownPosition, true);
        window.addEventListener('resize', updateDropdownPosition, true);
        return function () {
            window.removeEventListener('scroll', updateDropdownPosition, true);
            window.removeEventListener('resize', updateDropdownPosition, true);
        };
    }, [open, expandToViewport]);
    return (react.createElement("div", { className: clsx_m(dropdown_styles_css.root, interior && dropdown_styles_css.interior, stretchTriggerHeight && dropdown_styles_css["stretch-trigger-height"]), ref: wrapperRef, onFocus: focusHandler, onBlur: blurHandler },
        react.createElement("div", { className: clsx_m(stretchTriggerHeight && dropdown_styles_css["stretch-trigger-height"]), ref: triggerRef }, trigger),
        react.createElement(TabTrap, { focusNextCallback: function () { var _a; return dropdownRef.current && ((_a = getFirstFocusable(dropdownRef.current)) === null || _a === void 0 ? void 0 : _a.focus()); }, disabled: !open || !loopFocus }),
        react.createElement(DropdownContainer, { renderWithPortal: expandToViewport && !interior, id: dropdownId, open: open },
            react.createElement(transition_Transition, { "in": open !== null && open !== void 0 ? open : false, exit: false }, function (state, ref) { return (react.createElement("div", { ref: dropdownContainerRef },
                react.createElement(TabTrap, { focusNextCallback: function () { var _a; return triggerRef.current && ((_a = getLastFocusable(triggerRef.current)) === null || _a === void 0 ? void 0 : _a.focus()); }, disabled: !open || !loopFocus }),
                react.createElement(TransitionContent, { state: state, transitionRef: ref, dropdownClasses: dropdownClasses, open: open, stretchWidth: stretchWidth, interior: interior, header: header, expandToViewport: expandToViewport, footer: footer, onMouseDown: onMouseDown, isRefresh: isRefresh, dropdownRef: dropdownRef, verticalContainerRef: verticalContainerRef, position: position }, children),
                react.createElement(TabTrap, { focusNextCallback: function () { var _a; return triggerRef.current && ((_a = getFirstFocusable(triggerRef.current)) === null || _a === void 0 ? void 0 : _a.focus()); }, disabled: !open || !loopFocus }))); }))));
};
var isInteriorPosition = function (position) { return position.bottom !== undefined; };
/* harmony default export */ const dropdown = (Dropdown);
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/button-dropdown/utils/utils.js
var isItemGroup = function (item) {
    return item && item.items !== undefined;
};
var isLinkItem = function (item) {
    return item && item.href !== undefined;
};
var getItemTarget = function (item) { return (item.external ? '_blank' : undefined); };
function indexIncludes(source, target) {
    for (var index = 0; index < source.length; index++) {
        if (source[index] !== target[index]) {
            return false;
        }
    }
    return true;
}
function indexEquals(left, right) {
    if (left.length !== right.length) {
        return false;
    }
    for (var index = 0; index < left.length; index++) {
        if (left[index] !== right[index]) {
            return false;
        }
    }
    return true;
}
//# sourceMappingURL=utils.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/button-dropdown/item-element/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/button-dropdown/item-element/styles.css.js


    /* harmony default export */ const item_element_styles_css = ({
  "item-element": "awsui_item-element_93a1u_lwral_93",
  "disabled": "awsui_disabled_93a1u_lwral_103",
  "last": "awsui_last_93a1u_lwral_110",
  "highlighted": "awsui_highlighted_93a1u_lwral_113",
  "variant-icon": "awsui_variant-icon_93a1u_lwral_117",
  "variant-normal": "awsui_variant-normal_93a1u_lwral_117",
  "variant-primary": "awsui_variant-primary_93a1u_lwral_117",
  "is-focused": "awsui_is-focused_93a1u_lwral_127",
  "variant-navigation": "awsui_variant-navigation_93a1u_lwral_131",
  "first": "awsui_first_93a1u_lwral_134",
  "has-category-header": "awsui_has-category-header_93a1u_lwral_134",
  "menu-item": "awsui_menu-item_93a1u_lwral_148",
  "icon": "awsui_icon_93a1u_lwral_166",
  "external-icon": "awsui_external-icon_93a1u_lwral_171"
});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/popover/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/popover/styles.css.js


    /* harmony default export */ const popover_styles_css = ({
  "arrow": "awsui_arrow_xjuzf_1qvsu_185",
  "arrow-outer": "awsui_arrow-outer_xjuzf_1qvsu_189",
  "arrow-inner": "awsui_arrow-inner_xjuzf_1qvsu_189",
  "arrow-position-right-top": "awsui_arrow-position-right-top_xjuzf_1qvsu_220",
  "arrow-position-right-bottom": "awsui_arrow-position-right-bottom_xjuzf_1qvsu_220",
  "arrow-position-left-top": "awsui_arrow-position-left-top_xjuzf_1qvsu_223",
  "arrow-position-left-bottom": "awsui_arrow-position-left-bottom_xjuzf_1qvsu_223",
  "arrow-position-top-center": "awsui_arrow-position-top-center_xjuzf_1qvsu_226",
  "arrow-position-top-right": "awsui_arrow-position-top-right_xjuzf_1qvsu_226",
  "arrow-position-top-left": "awsui_arrow-position-top-left_xjuzf_1qvsu_226",
  "arrow-position-top-responsive": "awsui_arrow-position-top-responsive_xjuzf_1qvsu_226",
  "arrow-position-bottom-center": "awsui_arrow-position-bottom-center_xjuzf_1qvsu_229",
  "arrow-position-bottom-right": "awsui_arrow-position-bottom-right_xjuzf_1qvsu_229",
  "arrow-position-bottom-left": "awsui_arrow-position-bottom-left_xjuzf_1qvsu_229",
  "arrow-position-bottom-responsive": "awsui_arrow-position-bottom-responsive_xjuzf_1qvsu_229",
  "body": "awsui_body_xjuzf_1qvsu_325",
  "body-overflow-visible": "awsui_body-overflow-visible_xjuzf_1qvsu_339",
  "has-dismiss": "awsui_has-dismiss_xjuzf_1qvsu_343",
  "dismiss": "awsui_dismiss_xjuzf_1qvsu_348",
  "dismiss-control": "awsui_dismiss-control_xjuzf_1qvsu_355",
  "header-row": "awsui_header-row_xjuzf_1qvsu_359",
  "header": "awsui_header_xjuzf_1qvsu_359",
  "content": "awsui_content_xjuzf_1qvsu_385",
  "content-overflow-visible": "awsui_content-overflow-visible_xjuzf_1qvsu_392",
  "container": "awsui_container_xjuzf_1qvsu_488",
  "container-body": "awsui_container-body_xjuzf_1qvsu_496",
  "container-body-variant-annotation": "awsui_container-body-variant-annotation_xjuzf_1qvsu_511",
  "container-body-size-small": "awsui_container-body-size-small_xjuzf_1qvsu_516",
  "fixed-width": "awsui_fixed-width_xjuzf_1qvsu_519",
  "container-body-size-medium": "awsui_container-body-size-medium_xjuzf_1qvsu_523",
  "container-body-size-large": "awsui_container-body-size-large_xjuzf_1qvsu_530",
  "container-arrow": "awsui_container-arrow_xjuzf_1qvsu_542",
  "container-arrow-position-right-top": "awsui_container-arrow-position-right-top_xjuzf_1qvsu_546",
  "container-arrow-position-right-bottom": "awsui_container-arrow-position-right-bottom_xjuzf_1qvsu_546",
  "container-arrow-position-left-top": "awsui_container-arrow-position-left-top_xjuzf_1qvsu_558",
  "container-arrow-position-left-bottom": "awsui_container-arrow-position-left-bottom_xjuzf_1qvsu_558",
  "container-arrow-position-top-center": "awsui_container-arrow-position-top-center_xjuzf_1qvsu_570",
  "container-arrow-position-top-right": "awsui_container-arrow-position-top-right_xjuzf_1qvsu_570",
  "container-arrow-position-top-left": "awsui_container-arrow-position-top-left_xjuzf_1qvsu_570",
  "container-arrow-position-top-responsive": "awsui_container-arrow-position-top-responsive_xjuzf_1qvsu_570",
  "container-arrow-position-bottom-center": "awsui_container-arrow-position-bottom-center_xjuzf_1qvsu_586",
  "container-arrow-position-bottom-right": "awsui_container-arrow-position-bottom-right_xjuzf_1qvsu_590",
  "container-arrow-position-bottom-left": "awsui_container-arrow-position-bottom-left_xjuzf_1qvsu_594",
  "awsui-motion-fade-in": "awsui_awsui-motion-fade-in_xjuzf_1qvsu_1",
  "refresh": "awsui_refresh_xjuzf_1qvsu_712",
  "root": "awsui_root_xjuzf_1qvsu_734",
  "trigger": "awsui_trigger_xjuzf_1qvsu_747",
  "trigger-type-text": "awsui_trigger-type-text_xjuzf_1qvsu_754",
  "trigger-inner-text": "awsui_trigger-inner-text_xjuzf_1qvsu_783",
  "popover-content": "awsui_popover-content_xjuzf_1qvsu_787"
});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/popover/arrow.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0



var Arrow = function (props) { return (react.createElement("div", { className: clsx_m(popover_styles_css.arrow, props.position && popover_styles_css["arrow-position-".concat(props.position)]) },
    react.createElement("div", { className: popover_styles_css["arrow-outer"] }),
    react.createElement("div", { className: popover_styles_css["arrow-inner"] }))); };
/* harmony default export */ const arrow = (react.memo(Arrow));
//# sourceMappingURL=arrow.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/popover/utils/positions.js
var ARROW_OFFSET = 12;
var PRIORITY_MAPPING = {
    top: [
        'top-center',
        'top-right',
        'top-left',
        'bottom-center',
        'bottom-right',
        'bottom-left',
        'right-top',
        'right-bottom',
        'left-top',
        'left-bottom',
    ],
    bottom: [
        'bottom-center',
        'bottom-right',
        'bottom-left',
        'top-center',
        'top-right',
        'top-left',
        'right-top',
        'right-bottom',
        'left-top',
        'left-bottom',
    ],
    left: [
        'left-top',
        'left-bottom',
        'right-top',
        'right-bottom',
        'bottom-center',
        'top-center',
        'bottom-left',
        'top-left',
        'bottom-right',
        'top-right',
    ],
    right: [
        'right-top',
        'right-bottom',
        'left-top',
        'left-bottom',
        'bottom-center',
        'top-center',
        'bottom-right',
        'top-right',
        'bottom-left',
        'top-left',
    ]
};
var RECTANGLE_CALCULATIONS = {
    'top-center': function (_a) {
        var body = _a.body, trigger = _a.trigger, arrow = _a.arrow;
        return {
            top: trigger.top - body.height - arrow.height,
            left: trigger.left + trigger.width / 2 - body.width / 2,
            width: body.width,
            height: body.height
        };
    },
    'top-right': function (_a) {
        var body = _a.body, trigger = _a.trigger, arrow = _a.arrow;
        return {
            top: trigger.top - body.height - arrow.height,
            left: trigger.left,
            width: body.width,
            height: body.height
        };
    },
    'top-left': function (_a) {
        var body = _a.body, trigger = _a.trigger, arrow = _a.arrow;
        return {
            top: trigger.top - body.height - arrow.height,
            left: trigger.left + trigger.width - body.width,
            width: body.width,
            height: body.height
        };
    },
    'bottom-center': function (_a) {
        var body = _a.body, trigger = _a.trigger, arrow = _a.arrow;
        return {
            top: trigger.top + trigger.height + arrow.height,
            left: trigger.left + trigger.width / 2 - body.width / 2,
            width: body.width,
            height: body.height
        };
    },
    'bottom-right': function (_a) {
        var body = _a.body, trigger = _a.trigger, arrow = _a.arrow;
        return {
            top: trigger.top + trigger.height + arrow.height,
            left: trigger.left,
            width: body.width,
            height: body.height
        };
    },
    'bottom-left': function (_a) {
        var body = _a.body, trigger = _a.trigger, arrow = _a.arrow;
        return {
            top: trigger.top + trigger.height + arrow.height,
            left: trigger.left + trigger.width - body.width,
            width: body.width,
            height: body.height
        };
    },
    'right-top': function (_a) {
        var body = _a.body, trigger = _a.trigger, arrow = _a.arrow;
        return {
            top: trigger.top + trigger.height / 2 - ARROW_OFFSET - arrow.height,
            left: trigger.left + trigger.width + arrow.height,
            width: body.width,
            height: body.height
        };
    },
    'right-bottom': function (_a) {
        var body = _a.body, trigger = _a.trigger, arrow = _a.arrow;
        return {
            top: trigger.top + trigger.height / 2 - body.height + ARROW_OFFSET + arrow.height,
            left: trigger.left + trigger.width + arrow.height,
            width: body.width,
            height: body.height
        };
    },
    'left-top': function (_a) {
        var body = _a.body, trigger = _a.trigger, arrow = _a.arrow;
        return {
            top: trigger.top + trigger.height / 2 - ARROW_OFFSET - arrow.height,
            left: trigger.left - body.width - arrow.height,
            width: body.width,
            height: body.height
        };
    },
    'left-bottom': function (_a) {
        var body = _a.body, trigger = _a.trigger, arrow = _a.arrow;
        return {
            top: trigger.top + trigger.height / 2 - body.height + ARROW_OFFSET + arrow.height,
            left: trigger.left - body.width - arrow.height,
            width: body.width,
            height: body.height
        };
    }
};
/**
 * Returns whether one rectangle fits in another.
 */
function canRectFit(inner, outer) {
    return (inner.left >= outer.left &&
        inner.top >= outer.top &&
        inner.left + inner.width <= outer.left + outer.width &&
        inner.top + inner.height <= outer.top + outer.height);
}
function fitIntoContainer(inner, outer) {
    var left = inner.left, width = inner.width, top = inner.top, height = inner.height;
    // Adjust left boundary.
    if (left < outer.left) {
        width = left + width - outer.left;
        left = outer.left;
    }
    // Adjust right boundary.
    else if (left + width > outer.left + outer.width) {
        width = outer.left + outer.width - left;
    }
    // Adjust top boundary.
    if (top < outer.top) {
        height = top + height - outer.top;
        top = outer.top;
    }
    // Adjust bottom boundary.
    else if (top + height > outer.top + outer.height) {
        height = outer.top + outer.height - top;
    }
    return { left: left, width: width, top: top, height: height };
}
function getLargestRect(rect1, rect2) {
    var area1 = rect1.height * rect1.width;
    var area2 = rect2.height * rect2.width;
    return area1 >= area2 ? rect1 : rect2;
}
/**
 * Returns the area of the intersection of passed in rectangles or a null, if there is no intersection
 */
function intersectRectangles(rectangles) {
    var boundingOffset = null;
    for (var _i = 0, rectangles_1 = rectangles; _i < rectangles_1.length; _i++) {
        var currentRect = rectangles_1[_i];
        if (!boundingOffset) {
            boundingOffset = currentRect;
            continue;
        }
        var left = Math.max(boundingOffset.left, currentRect.left);
        var top_1 = Math.max(boundingOffset.top, currentRect.top);
        var right = Math.min(boundingOffset.left + boundingOffset.width, currentRect.left + currentRect.width);
        var bottom = Math.min(boundingOffset.top + boundingOffset.height, currentRect.top + currentRect.height);
        if (right < left || bottom < top_1) {
            return null;
        }
        boundingOffset = {
            left: left,
            top: top_1,
            width: right - left,
            height: bottom - top_1
        };
    }
    return boundingOffset && boundingOffset.height * boundingOffset.width;
}
/**
 * A functions that returns the correct popover position based on screen dimensions.
 */
function positions_calculatePosition(preferred, trigger, arrow, body, container, viewport,
// the popover is only bound by the viewport if it is rendered in a portal
renderWithPortal) {
    var bestPositionOutsideViewport = null;
    var largestArea = 0;
    // Attempt to position the popover based on the priority list for this position,
    // trying to fit it inside the container and inside the viewport.
    for (var _i = 0, _a = PRIORITY_MAPPING[preferred]; _i < _a.length; _i++) {
        var internalPosition_1 = _a[_i];
        var boundingOffset = RECTANGLE_CALCULATIONS[internalPosition_1]({ body: body, trigger: trigger, arrow: arrow });
        var fitsInContainer = renderWithPortal || canRectFit(boundingOffset, container);
        var fitsInViewport = canRectFit(boundingOffset, viewport);
        if (fitsInContainer && fitsInViewport) {
            return { internalPosition: internalPosition_1, boundingOffset: boundingOffset };
        }
        var boundingRectangles = [boundingOffset, viewport];
        if (!renderWithPortal) {
            boundingRectangles.push(container);
        }
        var availableArea = intersectRectangles(boundingRectangles);
        if (availableArea && availableArea > largestArea) {
            bestPositionOutsideViewport = { internalPosition: internalPosition_1, boundingOffset: boundingOffset };
            largestArea = availableArea;
        }
    }
    // Use best possible placement.
    var internalPosition = (bestPositionOutsideViewport === null || bestPositionOutsideViewport === void 0 ? void 0 : bestPositionOutsideViewport.internalPosition) || 'right-top';
    // Get default rect for that placement.
    var defaultOffset = RECTANGLE_CALCULATIONS[internalPosition]({ body: body, trigger: trigger, arrow: arrow });
    // Get largest possible rect that fits into viewport or container.
    var optimisedOffset = fitIntoContainer(defaultOffset, renderWithPortal ? viewport : getLargestRect(container, viewport));
    // If largest possible rect is smaller than original - set body scroll.
    var scrollable = optimisedOffset.height < defaultOffset.height;
    return { internalPosition: internalPosition, boundingOffset: optimisedOffset, scrollable: scrollable };
}
//# sourceMappingURL=positions.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/popover/container.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0







var INITIAL_STYLES = { position: 'absolute', top: -9999, left: -9999 };
function PopoverContainer(_a) {
    var _b;
    var position = _a.position, trackRef = _a.trackRef, trackKey = _a.trackKey, arrow = _a.arrow, children = _a.children, zIndex = _a.zIndex, renderWithPortal = _a.renderWithPortal, size = _a.size, fixedWidth = _a.fixedWidth, variant = _a.variant;
    var bodyRef = (0,react.useRef)(null);
    var contentRef = (0,react.useRef)(null);
    var popoverRef = (0,react.useRef)(null);
    var arrowRef = (0,react.useRef)(null);
    var _c = (0,react.useState)(INITIAL_STYLES), popoverStyle = _c[0], setPopoverStyle = _c[1];
    var _d = (0,react.useState)(null), internalPosition = _d[0], setInternalPosition = _d[1];
    var isRefresh = useVisualRefresh();
    // Store the handler in a ref so that it can still be replaced from outside of the listener closure.
    var positionHandlerRef = (0,react.useRef)(function () { });
    // Updates the position handler.
    var updatePositionHandler = (0,react.useCallback)(function () {
        if (!trackRef.current || !popoverRef.current || !bodyRef.current || !contentRef.current || !arrowRef.current) {
            return;
        }
        // Get important elements
        var popover = popoverRef.current;
        var body = bodyRef.current;
        var arrow = arrowRef.current;
        var document = popover.ownerDocument;
        var track = trackRef.current;
        // If the popover body isn't being rendered for whatever reason (e.g. "display: none" or JSDOM),
        // or track does not belong to the document - bail on calculating dimensions.
        if (popover.offsetWidth === 0 || popover.offsetHeight === 0 || !nodeContains(document.body, track)) {
            return;
        }
        // Imperatively move body off-screen to give it room to expand.
        // Not doing this in React because this recalculation should happen
        // in the span of a single frame without rerendering anything.
        var prevTop = popover.style.top;
        var prevLeft = popover.style.left;
        popover.style.top = '0';
        popover.style.left = '0';
        // Imperatively remove body styles that can remain from the previous computation.
        body.style.maxHeight = '';
        body.style.overflowX = '';
        body.style.overflowY = '';
        // Get rects representing key elements
        // Use getComputedStyle for arrowRect to avoid modifications made by transform
        var viewportRect = getViewportRect(document.defaultView);
        var trackRect = track.getBoundingClientRect();
        var arrowRect = {
            width: parseFloat(getComputedStyle(arrow).width),
            height: parseFloat(getComputedStyle(arrow).height)
        };
        var containingBlock = getContainingBlock(popover);
        var containingBlockRect = containingBlock ? containingBlock.getBoundingClientRect() : viewportRect;
        var bodyBorderWidth = getBorderWidth(body);
        var contentRect = contentRef.current.getBoundingClientRect();
        var contentBoundingBox = {
            width: contentRect.width + 2 * bodyBorderWidth,
            height: contentRect.height + 2 * bodyBorderWidth
        };
        // Calculate the arrow direction and viewport-relative position of the popover.
        var _a = positions_calculatePosition(position, trackRect, arrowRect, contentBoundingBox, containingBlock ? containingBlockRect : getDocumentRect(document), viewportRect, renderWithPortal), scrollable = _a.scrollable, newInternalPosition = _a.internalPosition, boundingOffset = _a.boundingOffset;
        // Get the position of the popover relative to the offset parent.
        var popoverOffset = toRelativePosition(boundingOffset, containingBlockRect);
        // Cache the distance between the trigger and the popover (which stays the same as you scroll),
        // and use that to recalculate the new popover position.
        var trackRelativeOffset = toRelativePosition(popoverOffset, toRelativePosition(trackRect, containingBlockRect));
        // Bring back the container to its original position to prevent any flashing.
        popover.style.top = prevTop;
        popover.style.left = prevLeft;
        // Allow popover body to scroll if can't fit the popover into the container/viewport otherwise.
        if (scrollable) {
            body.style.maxHeight = boundingOffset.height + 'px';
            body.style.overflowX = 'hidden';
            body.style.overflowY = 'auto';
        }
        // Position the popover
        setInternalPosition(newInternalPosition);
        setPopoverStyle({ top: popoverOffset.top, left: popoverOffset.left });
        positionHandlerRef.current = function () {
            var newTrackOffset = toRelativePosition(track.getBoundingClientRect(), containingBlock ? containingBlock.getBoundingClientRect() : viewportRect);
            setPopoverStyle({
                top: newTrackOffset.top + trackRelativeOffset.top,
                left: newTrackOffset.left + trackRelativeOffset.left
            });
        };
    }, [position, trackRef, renderWithPortal]);
    // Recalculate position when properties change.
    (0,react.useLayoutEffect)(function () {
        updatePositionHandler();
    }, [updatePositionHandler, trackKey]);
    // Recalculate position when content size changes.
    useResizeObserver(contentRef, function () { return updatePositionHandler(); });
    // Recalculate position on DOM events.
    (0,react.useLayoutEffect)(function () {
        /*
          This is a heuristic. Some layout changes are caused by user clicks (e.g. toggling the tools panel, submitting a form),
          and by tracking the click event we can adapt the popover's position to the new layout.

          TODO: extend this to Enter and Spacebar?
        */
        var updatePosition = function () { return requestAnimationFrame(function () { return updatePositionHandler(); }); };
        var refreshPosition = function () { return requestAnimationFrame(function () { return positionHandlerRef.current(); }); };
        window.addEventListener('click', updatePosition);
        window.addEventListener('resize', updatePosition);
        window.addEventListener('scroll', refreshPosition, true);
        return function () {
            window.removeEventListener('click', updatePosition);
            window.removeEventListener('resize', updatePosition);
            window.removeEventListener('scroll', refreshPosition, true);
        };
    }, [updatePositionHandler]);
    return (react.createElement("div", { ref: popoverRef, style: tslib_es6_assign(tslib_es6_assign({}, popoverStyle), { zIndex: zIndex }), className: clsx_m(popover_styles_css.container, isRefresh && popover_styles_css.refresh) },
        react.createElement("div", { ref: arrowRef, className: clsx_m(popover_styles_css["container-arrow"], popover_styles_css["container-arrow-position-".concat(internalPosition)]), "aria-hidden": true }, arrow(internalPosition)),
        react.createElement("div", { ref: bodyRef, className: clsx_m(popover_styles_css["container-body"], popover_styles_css["container-body-size-".concat(size)], (_b = {},
                _b[popover_styles_css["fixed-width"]] = fixedWidth,
                _b[popover_styles_css["container-body-variant-".concat(variant)]] = variant,
                _b)) },
            react.createElement("div", { ref: contentRef }, children))));
}
function getBorderWidth(element) {
    return parseInt(getComputedStyle(element).borderWidth) || 0;
}
/**
 * Convert a viewport-relative offset to an element-relative offset.
 */
function toRelativePosition(element, parent) {
    return {
        top: element.top - parent.top,
        left: element.left - parent.left
    };
}
/**
 * Get a BoundingOffset that represents the visible viewport.
 */
function getViewportRect(window) {
    return {
        top: 0,
        left: 0,
        width: window.innerWidth,
        height: window.innerHeight
    };
}
function getDocumentRect(document) {
    var _a = document.documentElement.getBoundingClientRect(), top = _a.top, left = _a.left;
    return {
        top: top,
        left: left,
        width: document.documentElement.scrollWidth,
        height: document.documentElement.scrollHeight
    };
}
//# sourceMappingURL=container.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/components/focus-lock/index.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0



function FocusLock(_a) {
    var className = _a.className, disabled = _a.disabled, autoFocus = _a.autoFocus, children = _a.children;
    var containerRef = (0,react.useRef)(null);
    var focusFirst = function () {
        var _a;
        if (containerRef.current) {
            (_a = getFirstFocusable(containerRef.current)) === null || _a === void 0 ? void 0 : _a.focus();
        }
    };
    var focusLast = function () {
        var _a;
        if (containerRef.current) {
            (_a = getLastFocusable(containerRef.current)) === null || _a === void 0 ? void 0 : _a.focus();
        }
    };
    (0,react.useEffect)(function () {
        if (autoFocus) {
            focusFirst();
        }
    }, [autoFocus]);
    return (react.createElement(react.Fragment, null,
        react.createElement(TabTrap, { disabled: disabled, focusNextCallback: focusLast }),
        react.createElement("div", { className: className, ref: containerRef }, children),
        react.createElement(TabTrap, { disabled: disabled, focusNextCallback: focusFirst })));
}
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/popover/body.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0







function PopoverBody(_a) {
    var _b, _c;
    var showDismissButton = _a.dismissButton, dismissAriaLabel = _a.dismissAriaLabel, header = _a.header, children = _a.children, onDismiss = _a.onDismiss, variant = _a.variant, overflowVisible = _a.overflowVisible, className = _a.className, ariaLabelledby = _a.ariaLabelledby;
    var labelledById = useUniqueId('awsui-popover-');
    var dismissButtonFocused = (0,react.useRef)(false);
    var dismissButtonRef = (0,react.useRef)(null);
    var onKeyDown = (0,react.useCallback)(function (event) {
        if (event.keyCode === KeyCode.escape) {
            onDismiss();
        }
    }, [onDismiss]);
    // Implement our own auto-focus rather than using FocusLock's,
    // because we also want to focus the dismiss button when it
    // is added dyamically (e.g. in chart popovers)
    (0,react.useEffect)(function () {
        var _a;
        if (showDismissButton && !dismissButtonFocused.current) {
            (_a = dismissButtonRef.current) === null || _a === void 0 ? void 0 : _a.focus({ preventScroll: true });
        }
        dismissButtonFocused.current = showDismissButton;
    }, [showDismissButton]);
    var dismissButton = (showDismissButton !== null && showDismissButton !== void 0 ? showDismissButton : null) && (react.createElement("div", { className: popover_styles_css.dismiss },
        react.createElement(InternalButton, { variant: "icon", formAction: "none", iconName: "close", className: popover_styles_css["dismiss-control"], ariaLabel: dismissAriaLabel, onClick: function () { return onDismiss(); }, ref: dismissButtonRef })));
    return (react.createElement("div", { className: clsx_m(popover_styles_css.body, className, (_b = {},
            _b[popover_styles_css["body-overflow-visible"]] = overflowVisible === 'both',
            _b)), role: header ? 'dialog' : undefined, onKeyDown: onKeyDown, "aria-modal": showDismissButton && variant !== 'annotation' ? true : undefined, "aria-labelledby": ariaLabelledby !== null && ariaLabelledby !== void 0 ? ariaLabelledby : (header ? labelledById : undefined) },
        react.createElement(FocusLock, { disabled: variant === 'annotation' || !showDismissButton, autoFocus: false },
            header && (react.createElement("div", { className: clsx_m(popover_styles_css["header-row"], showDismissButton && popover_styles_css["has-dismiss"]) },
                dismissButton,
                react.createElement("div", { className: popover_styles_css.header, id: labelledById },
                    react.createElement("h2", null, header)))),
            react.createElement("div", { className: !header && showDismissButton ? popover_styles_css["has-dismiss"] : undefined },
                !header && dismissButton,
                react.createElement("div", { className: clsx_m(popover_styles_css.content, (_c = {}, _c[popover_styles_css["content-overflow-visible"]] = !!overflowVisible, _c)) }, children)))));
}
//# sourceMappingURL=body.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/button-dropdown/tooltip.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0







var DEFAULT_OPEN_TIMEOUT_IN_MS = 120;
function Tooltip(_a) {
    var children = _a.children, content = _a.content, _b = _a.position, position = _b === void 0 ? 'right' : _b;
    var ref = (0,react.useRef)(null);
    var isReducedMotion = useReducedMotion(ref);
    var _c = useTooltipOpen(isReducedMotion ? 0 : DEFAULT_OPEN_TIMEOUT_IN_MS), open = _c.open, triggerProps = _c.triggerProps;
    var portalClasses = usePortalModeClasses(ref);
    return (react.createElement("span", tslib_es6_assign({ ref: ref }, triggerProps),
        children,
        open && (react.createElement(Portal, null,
            react.createElement("span", { className: portalClasses },
                react.createElement(PopoverContainer, { size: "small", fixedWidth: false, position: position, trackRef: ref, arrow: function (position) { return react.createElement(arrow, { position: position }); }, renderWithPortal: true, zIndex: 7000 },
                    react.createElement(PopoverBody, { dismissButton: false, dismissAriaLabel: undefined, header: null, onDismiss: function () { }, overflowVisible: "both" },
                        react.createElement("span", { "data-testid": "button-dropdown-disabled-reason", role: "tooltip" }, content))))))));
}
function useTooltipOpen(timeout) {
    var handle = (0,react.useRef)();
    var _a = (0,react.useState)(false), isOpen = _a[0], setIsOpen = _a[1];
    var close = function () {
        clearTimeout(handle.current);
        setIsOpen(false);
    };
    var open = function () { return setIsOpen(true); };
    var openDelayed = function () {
        handle.current = setTimeout(open, timeout);
    };
    var onKeyDown = function (e) {
        if (isOpen && isEscape(e.key)) {
            e.preventDefault();
            e.stopPropagation();
            close();
        }
    };
    var onFocus = openDelayed;
    var onBlur = close;
    return {
        open: isOpen,
        triggerProps: {
            onBlur: onBlur,
            onFocus: onFocus,
            onKeyDown: onKeyDown
        }
    };
}
var isEscape = function (key) { return key === 'Escape' || key === 'Esc'; };
//# sourceMappingURL=tooltip.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/button-dropdown/utils/use-hidden-description.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0


function useHiddenDescription(description) {
    var id = useUniqueId();
    return {
        targetProps: {
            'aria-describedby': description ? id : undefined
        },
        descriptionEl: description ? (react.createElement("span", { id: id, hidden: true }, description)) : null
    };
}
//# sourceMappingURL=use-hidden-description.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/button-dropdown/utils/menu-item.js
/**
 * @returns attributes for a menuitem widget given parameters
 */
var getMenuItemProps = function (_a) {
    var disabled = _a.disabled, parent = _a.parent, expanded = _a.expanded;
    return ({
        role: 'menuitem',
        'aria-disabled': disabled ? 'true' : undefined,
        'aria-haspopup': parent ? 'true' : undefined,
        'aria-expanded': expanded ? 'true' : parent ? 'false' : undefined
    });
};
//# sourceMappingURL=menu-item.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/button-dropdown/item-element/index.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0










var ItemElement = function (_a) {
    var _b;
    var item = _a.item, disabled = _a.disabled, onItemActivate = _a.onItemActivate, highlighted = _a.highlighted, highlightItem = _a.highlightItem, _c = _a.first, first = _c === void 0 ? false : _c, last = _a.last, hasCategoryHeader = _a.hasCategoryHeader, _d = _a.isKeyboardHighlighted, isKeyboardHighlighted = _d === void 0 ? false : _d, _e = _a.variant, variant = _e === void 0 ? 'normal' : _e;
    var isLink = isLinkItem(item);
    var onClick = function (event) {
        // Stop propagation to parent node and handle event exclusively in here. This ensures
        // that no group will interfere with the default behavior of links
        event.stopPropagation();
        if (!isLink) {
            event.preventDefault();
        }
        if (!disabled) {
            onItemActivate(item, event);
        }
    };
    var onHover = function (event) {
        event.preventDefault();
        highlightItem(item);
    };
    return (react.createElement("li", { className: clsx_m(item_element_styles_css["item-element"], item_element_styles_css["variant-".concat(variant)], (_b = {},
            _b[item_element_styles_css.highlighted] = highlighted,
            _b[item_element_styles_css.disabled] = disabled,
            _b[item_element_styles_css.first] = first,
            _b[item_element_styles_css.last] = last,
            _b[item_element_styles_css["has-category-header"]] = hasCategoryHeader,
            _b[item_element_styles_css["is-focused"]] = isKeyboardHighlighted,
            _b)), role: "presentation", "data-testid": item.id, "data-description": item.description, onClick: onClick, onMouseEnter: onHover, onTouchStart: onHover },
        react.createElement(MenuItem, { item: item, disabled: disabled, highlighted: highlighted })));
};
function MenuItem(_a) {
    var item = _a.item, disabled = _a.disabled, highlighted = _a.highlighted;
    var menuItemRef = (0,react.useRef)(null);
    (0,react.useEffect)(function () {
        if (highlighted && menuItemRef.current) {
            menuItemRef.current.focus();
        }
    }, [highlighted]);
    var isDisabledWithReason = disabled && item.disabledReason;
    var _b = useHiddenDescription(item.disabledReason), targetProps = _b.targetProps, descriptionEl = _b.descriptionEl;
    var menuItemProps = tslib_es6_assign(tslib_es6_assign({ className: item_element_styles_css["menu-item"], ref: menuItemRef,
        // We are using the roving tabindex technique to manage the focus state of the dropdown.
        // The current element will always have tabindex=0 which means that it can be tabbed to,
        // while all other items have tabindex=-1 so we can focus them when necessary.
        tabIndex: highlighted ? 0 : -1 }, getMenuItemProps({ disabled: disabled })), (isDisabledWithReason ? targetProps : {}));
    var menuItem = isLinkItem(item) ? (react.createElement("a", tslib_es6_assign({}, menuItemProps, { href: !disabled ? item.href : undefined, target: getItemTarget(item), rel: item.external ? 'noopener noreferrer' : undefined }),
        react.createElement(MenuItemContent, { item: item, disabled: disabled }))) : (react.createElement("span", tslib_es6_assign({}, menuItemProps),
        react.createElement(MenuItemContent, { item: item, disabled: disabled })));
    var position = useDropdownContext().position;
    var tooltipPosition = position === 'bottom-left' || position === 'top-left' ? 'left' : 'right';
    return isDisabledWithReason ? (react.createElement(Tooltip, { content: item.disabledReason, position: tooltipPosition },
        menuItem,
        descriptionEl)) : (menuItem);
}
var MenuItemContent = function (_a) {
    var item = _a.item, disabled = _a.disabled;
    var hasIcon = !!(item.iconName || item.iconUrl || item.iconSvg);
    var hasExternal = isLinkItem(item) && item.external;
    return (react.createElement(react.Fragment, null,
        hasIcon && react.createElement(MenuItemIcon, { name: item.iconName, url: item.iconUrl, svg: item.iconSvg, alt: item.iconAlt }),
        ' ',
        item.text,
        " ",
        hasExternal && react.createElement(ExternalIcon, { disabled: disabled, ariaLabel: item.externalIconAriaLabel })));
};
var MenuItemIcon = function (props) { return (react.createElement("span", { className: item_element_styles_css.icon },
    react.createElement(internal, tslib_es6_assign({}, props)))); };
var ExternalIcon = function (_a) {
    var disabled = _a.disabled, ariaLabel = _a.ariaLabel;
    var icon = react.createElement(internal, { variant: disabled ? 'disabled' : 'normal', name: "external" });
    return (react.createElement("span", { className: item_element_styles_css["external-icon"], role: ariaLabel ? 'img' : undefined, "aria-label": ariaLabel }, icon));
};
/* harmony default export */ const item_element = (ItemElement);
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/button-dropdown/category-elements/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/button-dropdown/category-elements/styles.css.js


    /* harmony default export */ const category_elements_styles_css = ({
  "header": "awsui_header_16mm3_qwnia_93",
  "disabled": "awsui_disabled_16mm3_qwnia_108",
  "expandable-header": "awsui_expandable-header_16mm3_qwnia_112",
  "rolled-down": "awsui_rolled-down_16mm3_qwnia_123",
  "highlighted": "awsui_highlighted_16mm3_qwnia_126",
  "is-focused": "awsui_is-focused_16mm3_qwnia_139",
  "variant-navigation": "awsui_variant-navigation_16mm3_qwnia_143",
  "category": "awsui_category_16mm3_qwnia_155",
  "expandable": "awsui_expandable_16mm3_qwnia_112",
  "expand-icon": "awsui_expand-icon_16mm3_qwnia_176",
  "expand-icon-up": "awsui_expand-icon-up_16mm3_qwnia_183",
  "expand-icon-right": "awsui_expand-icon-right_16mm3_qwnia_186",
  "items-list-container": "awsui_items-list-container_16mm3_qwnia_200"
});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/button-dropdown/category-elements/expandable-category-element.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0









var ExpandableCategoryElement = function (_a) {
    var _b, _c;
    var item = _a.item, onItemActivate = _a.onItemActivate, onGroupToggle = _a.onGroupToggle, targetItem = _a.targetItem, isHighlighted = _a.isHighlighted, isKeyboardHighlight = _a.isKeyboardHighlight, isExpanded = _a.isExpanded, highlightItem = _a.highlightItem, disabled = _a.disabled, expandToViewport = _a.expandToViewport, variant = _a.variant;
    var highlighted = isHighlighted(item);
    var expanded = isExpanded(item);
    var isKeyboardHighlighted = isKeyboardHighlight(item);
    var triggerRef = react.useRef(null);
    var ref = (0,react.useRef)(null);
    (0,react.useEffect)(function () {
        if (triggerRef.current && highlighted && !expanded) {
            triggerRef.current.focus();
        }
    }, [expanded, highlighted]);
    var onClick = function (event) {
        var _a;
        if (!disabled) {
            event.preventDefault();
            onGroupToggle(item, event);
            (_a = triggerRef.current) === null || _a === void 0 ? void 0 : _a.focus();
        }
    };
    var onHover = function (event) {
        event.preventDefault();
        highlightItem(item);
    };
    var isDisabledWithReason = !!item.disabledReason && item.disabled;
    var _d = useHiddenDescription(item.disabledReason), targetProps = _d.targetProps, descriptionEl = _d.descriptionEl;
    var trigger = item.text && (react.createElement("span", tslib_es6_assign({ className: clsx_m(category_elements_styles_css.header, category_elements_styles_css["expandable-header"], category_elements_styles_css["variant-".concat(variant)], (_b = {},
            _b[category_elements_styles_css.disabled] = disabled,
            _b[category_elements_styles_css.highlighted] = highlighted,
            _b[category_elements_styles_css["is-focused"]] = isKeyboardHighlighted,
            _b)),
        // We are using the roving tabindex technique to manage the focus state of the dropdown.
        // The current element will always have tabindex=0 which means that it can be tabbed to,
        // while all other items have tabindex=-1 so we can focus them when necessary.
        tabIndex: highlighted ? 0 : -1, ref: triggerRef }, getMenuItemProps({ parent: true, expanded: expanded, disabled: disabled }), (isDisabledWithReason ? targetProps : {})),
        item.text,
        react.createElement("span", { className: clsx_m(category_elements_styles_css["expand-icon"], category_elements_styles_css["expand-icon-right"]) },
            react.createElement(internal, { name: "caret-down-filled" }))));
    var content;
    // If the category element is disabled, we do not render a dropdown.
    // Screenreaders are confused by additional sections
    if (isDisabledWithReason) {
        content = (react.createElement(Tooltip, { content: item.disabledReason },
            trigger,
            descriptionEl));
    }
    else if (disabled) {
        content = trigger;
    }
    else {
        content = (react.createElement(dropdown, { open: expanded, stretchWidth: false, interior: true, expandToViewport: expandToViewport, trigger: trigger }, item.items && expanded && (react.createElement("ul", { role: "menu", "aria-label": item.text, className: clsx_m(category_elements_styles_css["items-list-container"]) },
            react.createElement(ItemsList, { items: item.items, onItemActivate: onItemActivate, onGroupToggle: onGroupToggle, targetItem: targetItem, isHighlighted: isHighlighted, isKeyboardHighlight: isKeyboardHighlight, isExpanded: isExpanded, highlightItem: highlightItem, variant: variant })))));
    }
    return (react.createElement("li", { className: clsx_m(category_elements_styles_css.category, category_elements_styles_css["variant-".concat(variant)], category_elements_styles_css.expandable, (_c = {},
            _c[category_elements_styles_css.expanded] = expanded,
            _c[category_elements_styles_css.disabled] = disabled,
            _c[category_elements_styles_css.highlighted] = highlighted,
            _c)), role: "presentation", "data-testid": item.id, ref: ref, onClick: onClick, onMouseEnter: onHover, onTouchStart: onHover }, content));
};
/* harmony default export */ const expandable_category_element = (ExpandableCategoryElement);
//# sourceMappingURL=expandable-category-element.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/button-dropdown/category-elements/category-element.js




var CategoryElement = function (_a) {
    var _b;
    var item = _a.item, onItemActivate = _a.onItemActivate, onGroupToggle = _a.onGroupToggle, targetItem = _a.targetItem, isHighlighted = _a.isHighlighted, isKeyboardHighlight = _a.isKeyboardHighlight, isExpanded = _a.isExpanded, highlightItem = _a.highlightItem, disabled = _a.disabled, variant = _a.variant;
    // Hide the category title element from screen readers because it will be
    // provided as an ARIA label.
    return (react.createElement("li", { className: clsx_m(category_elements_styles_css.category, category_elements_styles_css["variant-".concat(variant)], disabled && category_elements_styles_css.disabled), role: "presentation", "aria-disabled": disabled ? 'true' : undefined },
        item.text && (react.createElement("p", { className: clsx_m(category_elements_styles_css.header, (_b = {}, _b[category_elements_styles_css.disabled] = disabled, _b)), "aria-hidden": "true" }, item.text)),
        react.createElement("ul", { className: clsx_m(category_elements_styles_css["items-list-container"]), role: "group", "aria-label": item.text }, item.items && (react.createElement(ItemsList, { items: item.items, onItemActivate: onItemActivate, onGroupToggle: onGroupToggle, targetItem: targetItem, isHighlighted: isHighlighted, isKeyboardHighlight: isKeyboardHighlight, isExpanded: isExpanded, highlightItem: highlightItem, categoryDisabled: disabled, hasCategoryHeader: !!item.text, variant: variant })))));
};
/* harmony default export */ const category_element = (CategoryElement);
//# sourceMappingURL=category-element.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/button-dropdown/mobile-expandable-group/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/button-dropdown/mobile-expandable-group/styles.css.js


    /* harmony default export */ const mobile_expandable_group_styles_css = ({
  "root": "awsui_root_14cnr_zbvdk_93",
  "trigger": "awsui_trigger_14cnr_zbvdk_106",
  "dropdown": "awsui_dropdown_14cnr_zbvdk_109",
  "nowrap": "awsui_nowrap_14cnr_zbvdk_120",
  "open": "awsui_open_14cnr_zbvdk_123"
});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/button-dropdown/mobile-expandable-group/mobile-expandable-group.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0



var MobileExpandableGroup = function (_a) {
    var _b;
    var children = _a.children, trigger = _a.trigger, open = _a.open;
    return (react.createElement("div", { className: clsx_m(mobile_expandable_group_styles_css.root) },
        react.createElement("div", { className: mobile_expandable_group_styles_css.trigger }, trigger),
        react.createElement("div", { className: clsx_m(mobile_expandable_group_styles_css.dropdown, (_b = {}, _b[mobile_expandable_group_styles_css.open] = open, _b)), "data-open": open }, children)));
};
/* harmony default export */ const mobile_expandable_group = (MobileExpandableGroup);
//# sourceMappingURL=mobile-expandable-group.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/button-dropdown/category-elements/mobile-expandable-category-element.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0









var MobileExpandableCategoryElement = function (_a) {
    var _b, _c, _d;
    var item = _a.item, onItemActivate = _a.onItemActivate, onGroupToggle = _a.onGroupToggle, targetItem = _a.targetItem, isHighlighted = _a.isHighlighted, isKeyboardHighlight = _a.isKeyboardHighlight, isExpanded = _a.isExpanded, highlightItem = _a.highlightItem, disabled = _a.disabled, variant = _a.variant;
    var highlighted = isHighlighted(item);
    var expanded = isExpanded(item);
    var isKeyboardHighlighted = isKeyboardHighlight(item);
    var triggerRef = react.useRef(null);
    (0,react.useEffect)(function () {
        if (triggerRef.current && highlighted && !expanded) {
            triggerRef.current.focus();
        }
    }, [expanded, highlighted]);
    var onClick = function (e) {
        if (!disabled) {
            e.preventDefault();
            onGroupToggle(item, e);
        }
    };
    var onHover = function (event) {
        event.preventDefault();
        highlightItem(item);
    };
    var isDisabledWithReason = !!item.disabledReason && item.disabled;
    var _e = useHiddenDescription(item.disabledReason), targetProps = _e.targetProps, descriptionEl = _e.descriptionEl;
    var trigger = item.text && (react.createElement("span", tslib_es6_assign({ className: clsx_m(category_elements_styles_css.header, category_elements_styles_css["expandable-header"], category_elements_styles_css["variant-".concat(variant)], (_b = {},
            _b[category_elements_styles_css.highlighted] = highlighted,
            _b[category_elements_styles_css["rolled-down"]] = expanded,
            _b[category_elements_styles_css.disabled] = disabled,
            _b[category_elements_styles_css["is-focused"]] = isKeyboardHighlighted,
            _b)),
        // We are using the roving tabindex technique to manage the focus state of the dropdown.
        // The current element will always have tabindex=0 which means that it can be tabbed to,
        // while all other items have tabindex=-1 so we can focus them when necessary.
        tabIndex: highlighted ? 0 : -1, ref: triggerRef }, getMenuItemProps({ parent: true, disabled: disabled, expanded: expanded }), (isDisabledWithReason ? targetProps : {})),
        item.text,
        react.createElement("span", { className: clsx_m(category_elements_styles_css["expand-icon"], (_c = {},
                _c[category_elements_styles_css["expand-icon-up"]] = expanded,
                _c)) },
            react.createElement(internal, { name: "caret-down-filled" }))));
    var content;
    if (isDisabledWithReason) {
        content = (react.createElement(react.Fragment, null,
            descriptionEl,
            react.createElement(Tooltip, { content: item.disabledReason }, trigger)));
    }
    else if (disabled) {
        content = trigger;
    }
    else {
        content = (react.createElement(mobile_expandable_group, { open: expanded, trigger: trigger }, item.items && expanded && (react.createElement("ul", { role: "menu", "aria-label": item.text, className: clsx_m(category_elements_styles_css["items-list-container"]) },
            react.createElement(ItemsList, { items: item.items, onItemActivate: onItemActivate, onGroupToggle: onGroupToggle, targetItem: targetItem, isHighlighted: isHighlighted, isKeyboardHighlight: isKeyboardHighlight, isExpanded: isExpanded, highlightItem: highlightItem, hasCategoryHeader: true, variant: variant })))));
    }
    return (react.createElement("li", { className: clsx_m(category_elements_styles_css.category, category_elements_styles_css["variant-".concat(variant)], category_elements_styles_css.expandable, (_d = {},
            _d[category_elements_styles_css.expanded] = expanded,
            _d[category_elements_styles_css.disabled] = disabled,
            _d[category_elements_styles_css.highlighted] = highlighted || expanded,
            _d[category_elements_styles_css.expandable] = true,
            _d)), role: "presentation", onClick: onClick, onMouseEnter: onHover, onTouchStart: onHover, "data-testid": item.id }, content));
};
/* harmony default export */ const mobile_expandable_category_element = (MobileExpandableCategoryElement);
//# sourceMappingURL=mobile-expandable-category-element.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/button-dropdown/items-list.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0







function ItemsList(_a) {
    var items = _a.items, onItemActivate = _a.onItemActivate, onGroupToggle = _a.onGroupToggle, targetItem = _a.targetItem, isHighlighted = _a.isHighlighted, isKeyboardHighlight = _a.isKeyboardHighlight, isExpanded = _a.isExpanded, highlightItem = _a.highlightItem, _b = _a.categoryDisabled, categoryDisabled = _b === void 0 ? false : _b, _c = _a.hasExpandableGroups, hasExpandableGroups = _c === void 0 ? false : _c, _d = _a.hasCategoryHeader, hasCategoryHeader = _d === void 0 ? false : _d, _e = _a.expandToViewport, expandToViewport = _e === void 0 ? false : _e, _f = _a.variant, variant = _f === void 0 ? 'normal' : _f;
    var isMobile = useMobile();
    var elements = items.map(function (item, index) {
        var _a, _b, _c, _d;
        if (!isItemGroup(item)) {
            return (react.createElement(item_element, { key: index, item: item, onItemActivate: onItemActivate, disabled: (_a = item.disabled) !== null && _a !== void 0 ? _a : categoryDisabled, highlighted: isHighlighted(item), isKeyboardHighlighted: isKeyboardHighlight(item), highlightItem: highlightItem, first: index === 0 || isItemGroup(items[index - 1]), last: index === items.length - 1 || isItemGroup(items[index + 1]), hasCategoryHeader: hasCategoryHeader, variant: variant }));
        }
        if (hasExpandableGroups) {
            return item.text ? (isMobile ? (react.createElement(mobile_expandable_category_element, { key: index, item: item, onItemActivate: onItemActivate, onGroupToggle: onGroupToggle, targetItem: targetItem, isHighlighted: isHighlighted, isKeyboardHighlight: isKeyboardHighlight, isExpanded: isExpanded, highlightItem: highlightItem, disabled: (_b = item.disabled) !== null && _b !== void 0 ? _b : false, variant: variant })) : (react.createElement(expandable_category_element, { key: index, item: item, onItemActivate: onItemActivate, onGroupToggle: onGroupToggle, targetItem: targetItem, isHighlighted: isHighlighted, isKeyboardHighlight: isKeyboardHighlight, isExpanded: isExpanded, highlightItem: highlightItem, disabled: (_c = item.disabled) !== null && _c !== void 0 ? _c : false, expandToViewport: expandToViewport, variant: variant }))) : null;
        }
        return (react.createElement(category_element, { key: index, item: item, onItemActivate: onItemActivate, onGroupToggle: onGroupToggle, targetItem: targetItem, isHighlighted: isHighlighted, isKeyboardHighlight: isKeyboardHighlight, isExpanded: isExpanded, highlightItem: highlightItem, disabled: (_d = item.disabled) !== null && _d !== void 0 ? _d : false, variant: variant }));
    });
    return react.createElement(react.Fragment, null, elements);
}
//# sourceMappingURL=items-list.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/components/options-list/utils/use-open-state.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

var useOpenState = function (_a) {
    var onOpen = _a.onOpen, onClose = _a.onClose;
    var _b = (0,react.useState)(false), isOpen = _b[0], setIsOpen = _b[1];
    var openDropdown = function () {
        if (!isOpen) {
            setIsOpen(true);
            onOpen === null || onOpen === void 0 ? void 0 : onOpen();
        }
    };
    var closeDropdown = function () {
        if (isOpen) {
            setIsOpen(false);
            onClose === null || onClose === void 0 ? void 0 : onClose();
        }
    };
    var toggleDropdown = function () {
        if (isOpen) {
            closeDropdown();
        }
        else {
            openDropdown();
        }
    };
    return { isOpen: isOpen, openDropdown: openDropdown, closeDropdown: closeDropdown, toggleDropdown: toggleDropdown };
};
//# sourceMappingURL=use-open-state.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/button-dropdown/utils/create-items-tree.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

function createItemsTree(items) {
    var itemToIndex = new Map();
    var indexToItem = new Map();
    var flatIndices = [];
    traverseItems(items, function (item, index) {
        var indexKey = stringifyIndex(index);
        itemToIndex.set(item, indexKey);
        indexToItem.set(indexKey, item);
        flatIndices.push(indexKey);
    });
    return {
        getItem: function (index) {
            var indexKey = stringifyIndex(index);
            return indexToItem.get(indexKey) || null;
        },
        getItemIndex: function (item) {
            var indexKey = itemToIndex.get(item);
            if (!indexKey) {
                throw new Error('Invariant violation: item is not found.');
            }
            return parseIndex(indexKey);
        },
        getSequentialIndex: function (index, direction) {
            var indexKey = stringifyIndex(index);
            var position = flatIndices.indexOf(indexKey);
            var nextIndexKey = flatIndices[position + direction];
            if (!nextIndexKey) {
                return null;
            }
            return parseIndex(nextIndexKey);
        },
        getParentIndex: function (item) {
            var indexKey = itemToIndex.get(item);
            if (!indexKey) {
                throw new Error('Invariant violation: item is not found.');
            }
            var index = parseIndex(indexKey);
            // No parent
            if (index.length === 1) {
                return null;
            }
            return index.slice(0, index.length - 1);
        }
    };
}
function traverseItems(items, act, parentIndex) {
    if (parentIndex === void 0) { parentIndex = []; }
    items.forEach(function (item, index) {
        var itemIndex = tslib_es6_spreadArray(tslib_es6_spreadArray([], parentIndex, true), [index], false);
        act(item, itemIndex);
        if (isItemGroup(item)) {
            traverseItems(item.items, act, itemIndex);
        }
    });
}
function stringifyIndex(index) {
    return index.join('-');
}
function parseIndex(index) {
    return index.split('-').map(function (it) { return parseInt(it); });
}
//# sourceMappingURL=create-items-tree.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/button-dropdown/utils/move-highlight.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

function move_highlight_moveHighlight(_a) {
    var startIndex = _a.startIndex, expandedIndex = _a.expandedIndex, getNext = _a.getNext, hasExpandableGroups = _a.hasExpandableGroups, isInRestrictedView = _a.isInRestrictedView;
    var tryMove = function (currentIndex) {
        var _a;
        var next = getNext(currentIndex);
        if (!next) {
            return null;
        }
        // Prevents stepping into disabled expandable groups. However,
        // it's possible to navigate nested groups.
        if (((_a = next.parent) === null || _a === void 0 ? void 0 : _a.disabled) && hasExpandableGroups) {
            return tryMove(next.index);
        }
        // it is not allowed to highlight groups when non-expandable
        if (isItemGroup(next.item) && !hasExpandableGroups) {
            return tryMove(next.index);
        }
        // can only move within same parent unless is in restricted view
        if (hasExpandableGroups && !isInRestrictedView && !isSameParent(startIndex, next.index)) {
            return tryMove(next.index);
        }
        // in restricted view can only navigate to children if group is expanded
        if (hasExpandableGroups &&
            isInRestrictedView &&
            !isSameLevel(next.index, expandedIndex) &&
            !isIncluded(expandedIndex, next.index)) {
            return tryMove(next.index);
        }
        return next.index;
    };
    return tryMove(startIndex);
}
function isSameParent(left, right) {
    return indexEquals(left.slice(0, -1), right.slice(0, -1));
}
function isSameLevel(left, right) {
    return left.length === right.length;
}
function isIncluded(parent, child) {
    return indexEquals(parent, child.slice(0, -1));
}
//# sourceMappingURL=move-highlight.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/button-dropdown/utils/use-highlighted-menu.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0




function useHighlightedMenu(_a) {
    var items = _a.items, hasExpandableGroups = _a.hasExpandableGroups, _b = _a.isInRestrictedView, isInRestrictedView = _b === void 0 ? false : _b;
    var _c = (0,react.useState)([]), targetIndex = _c[0], setTargetIndex = _c[1];
    var _d = (0,react.useState)([]), expandedIndex = _d[0], setExpandedIndex = _d[1];
    var _e = (0,react.useState)(true), isUsingMouse = _e[0], setIsUsingMouse = _e[1];
    var _f = (0,react.useMemo)(function () { return createItemsTree(items); }, [items]), getItem = _f.getItem, getItemIndex = _f.getItemIndex, getSequentialIndex = _f.getSequentialIndex, getParentIndex = _f.getParentIndex;
    var targetItem = (0,react.useMemo)(function () { return getItem(targetIndex); }, [targetIndex, getItem]);
    var isHighlighted = (0,react.useCallback)(function (item) {
        var index = getItemIndex(item);
        return indexIncludes(index, targetIndex);
    }, [targetIndex, getItemIndex]);
    // check if keyboard focus is on the element
    var isKeyboardHighlight = (0,react.useCallback)(function (item) {
        var index = getItemIndex(item);
        return !isUsingMouse && indexEquals(index, targetIndex);
    }, [targetIndex, getItemIndex, isUsingMouse]);
    var isExpanded = (0,react.useCallback)(function (group) {
        var index = getItemIndex(group);
        return indexIncludes(index, expandedIndex);
    }, [expandedIndex, getItemIndex]);
    var moveHighlight = (0,react.useCallback)(function (direction) {
        var getNext = function (index) {
            var nextIndex = getSequentialIndex(index, direction);
            var item = getItem(nextIndex || [-1]);
            if (!nextIndex || !item) {
                return null;
            }
            var parentIndex = getParentIndex(item);
            var parentItem = parentIndex && getItem(parentIndex);
            return { index: nextIndex, item: item, parent: parentItem || undefined };
        };
        var nextIndex = move_highlight_moveHighlight({
            startIndex: targetIndex,
            expandedIndex: expandedIndex,
            getNext: getNext,
            hasExpandableGroups: hasExpandableGroups,
            isInRestrictedView: isInRestrictedView
        });
        if (nextIndex) {
            setTargetIndex(nextIndex);
        }
    }, [targetIndex, expandedIndex, getItem, getSequentialIndex, getParentIndex, hasExpandableGroups, isInRestrictedView]);
    var highlightItem = (0,react.useCallback)(function (item) {
        setTargetIndex(getItemIndex(item));
    }, [getItemIndex]);
    var expandGroup = (0,react.useCallback)(function (group) {
        var groupIndex = group ? getItemIndex(group) : targetIndex;
        var firstChildIndex = tslib_es6_spreadArray(tslib_es6_spreadArray([], groupIndex, true), [0], false);
        // move to the first child item unless in restricted mode
        setTargetIndex(isInRestrictedView ? groupIndex : firstChildIndex);
        setExpandedIndex(groupIndex);
    }, [targetIndex, getItemIndex, isInRestrictedView]);
    var collapseGroup = (0,react.useCallback)(function () {
        if (expandedIndex.length > 0) {
            setTargetIndex(expandedIndex);
            setExpandedIndex(expandedIndex.slice(0, -1));
        }
    }, [expandedIndex]);
    var reset = (0,react.useCallback)(function () {
        setTargetIndex([]);
        setExpandedIndex([]);
    }, []);
    return {
        targetItem: targetItem,
        isHighlighted: isHighlighted,
        isKeyboardHighlight: isKeyboardHighlight,
        isExpanded: isExpanded,
        moveHighlight: moveHighlight,
        highlightItem: highlightItem,
        expandGroup: expandGroup,
        collapseGroup: collapseGroup,
        reset: reset,
        setIsUsingMouse: setIsUsingMouse
    };
}
//# sourceMappingURL=use-highlighted-menu.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/button-dropdown/utils/use-button-dropdown.js






function useButtonDropdown(_a) {
    var items = _a.items, onItemClick = _a.onItemClick, onItemFollow = _a.onItemFollow, onReturnFocus = _a.onReturnFocus, hasExpandableGroups = _a.hasExpandableGroups, _b = _a.isInRestrictedView, isInRestrictedView = _b === void 0 ? false : _b, _c = _a.expandToViewport, expandToViewport = _c === void 0 ? false : _c;
    var _d = useHighlightedMenu({
        items: items,
        hasExpandableGroups: hasExpandableGroups,
        isInRestrictedView: isInRestrictedView
    }), targetItem = _d.targetItem, isHighlighted = _d.isHighlighted, isKeyboardHighlight = _d.isKeyboardHighlight, isExpanded = _d.isExpanded, highlightItem = _d.highlightItem, moveHighlight = _d.moveHighlight, expandGroup = _d.expandGroup, collapseGroup = _d.collapseGroup, reset = _d.reset, setIsUsingMouse = _d.setIsUsingMouse;
    var _e = useOpenState({ onClose: reset }), isOpen = _e.isOpen, closeDropdown = _e.closeDropdown, openStateProps = __rest(_e, ["isOpen", "closeDropdown"]);
    var toggleDropdown = function (options) {
        var _a;
        if (options === void 0) { options = {}; }
        var moveHighlightOnOpen = (_a = options.moveHighlightOnOpen) !== null && _a !== void 0 ? _a : true;
        if (!isOpen && moveHighlightOnOpen) {
            moveHighlight(1);
        }
        openStateProps.toggleDropdown();
    };
    var onGroupToggle = function (item) { return (!isExpanded(item) ? expandGroup(item) : collapseGroup()); };
    var onItemActivate = function (item, event) {
        var details = {
            id: item.id || 'undefined',
            href: item.href,
            external: item.external,
            target: getItemTarget(item)
        };
        if (onItemFollow && item.href && isPlainLeftClick(event)) {
            fireCancelableEvent(onItemFollow, details, event);
        }
        if (onItemClick) {
            fireCancelableEvent(onItemClick, details, event);
        }
        onReturnFocus();
        closeDropdown();
    };
    var doVerticalNavigation = function (direction) {
        if (isOpen) {
            moveHighlight(direction);
        }
    };
    var openAndSelectFirst = function (event) {
        toggleDropdown();
        event.preventDefault();
    };
    var actOnParentDropdown = function (event) {
        // if there is no highlighted item we act on the trigger by opening or closing dropdown
        if (!targetItem) {
            if (isOpen && !isInRestrictedView) {
                toggleDropdown();
            }
            else {
                openAndSelectFirst(event);
            }
        }
        else {
            if (isItemGroup(targetItem)) {
                onGroupToggle(targetItem, event);
            }
            else {
                onItemActivate(targetItem, event);
            }
        }
    };
    var activate = function (event, isEnter) {
        setIsUsingMouse(false);
        // if item is a link we rely on default behavior of an anchor, no need to prevent
        if (targetItem && isLinkItem(targetItem) && isEnter) {
            return;
        }
        event.preventDefault();
        actOnParentDropdown(event);
    };
    var onKeyDown = function (event) {
        setIsUsingMouse(false);
        switch (event.keyCode) {
            case KeyCode.down: {
                doVerticalNavigation(1);
                event.preventDefault();
                break;
            }
            case KeyCode.up: {
                doVerticalNavigation(-1);
                event.preventDefault();
                break;
            }
            case KeyCode.space: {
                // Prevent scrolling the list of items and highlighting the trigger
                event.preventDefault();
                break;
            }
            case KeyCode.enter: {
                if (!(targetItem === null || targetItem === void 0 ? void 0 : targetItem.disabled)) {
                    activate(event, true);
                }
                break;
            }
            case KeyCode.left:
            case KeyCode.right: {
                if (targetItem && !targetItem.disabled && isItemGroup(targetItem) && !isExpanded(targetItem)) {
                    expandGroup();
                }
                else if (hasExpandableGroups) {
                    collapseGroup();
                }
                event.preventDefault();
                break;
            }
            case KeyCode.escape: {
                onReturnFocus();
                closeDropdown();
                event.preventDefault();
                break;
            }
            case KeyCode.tab: {
                // When expanded to viewport the focus can't move naturally to the next element.
                // Returning the focus to the trigger instead.
                if (expandToViewport) {
                    onReturnFocus();
                }
                closeDropdown();
                break;
            }
        }
    };
    var onKeyUp = function (event) {
        // We need to handle activating items with Space separately because there is a bug
        // in Firefox where changing the focus during a Space keydown event it will trigger
        // unexpected click events on the new element: https://bugzilla.mozilla.org/show_bug.cgi?id=1220143
        if (event.keyCode === KeyCode.space && !(targetItem === null || targetItem === void 0 ? void 0 : targetItem.disabled)) {
            activate(event);
        }
    };
    return {
        isOpen: isOpen,
        targetItem: targetItem,
        isHighlighted: isHighlighted,
        isKeyboardHighlight: isKeyboardHighlight,
        isExpanded: isExpanded,
        highlightItem: highlightItem,
        onKeyDown: onKeyDown,
        onKeyUp: onKeyUp,
        onItemActivate: onItemActivate,
        onGroupToggle: onGroupToggle,
        toggleDropdown: toggleDropdown,
        setIsUsingMouse: setIsUsingMouse
    };
}
//# sourceMappingURL=use-button-dropdown.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/components/options-list/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/components/options-list/styles.css.js


    /* harmony default export */ const options_list_styles_css = ({
  "options-list": "awsui_options-list_19gcf_fc5oi_93",
  "decrease-top-margin": "awsui_decrease-top-margin_19gcf_fc5oi_113"
});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/components/options-list/index.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0







var BOTTOM_TRIGGER_OFFSET = 80;
var getItemIndex = function (containerRef, event) {
    var target = findUpUntil(event.target, function (element) { return element === containerRef.current || !!element.dataset.mouseTarget; });
    var mouseTarget = target === null || target === void 0 ? void 0 : target.dataset.mouseTarget;
    return mouseTarget ? parseInt(mouseTarget) : -1;
};
var OptionsList = function (_a, ref) {
    var _b;
    var open = _a.open, children = _a.children, _c = _a.nativeAttributes, nativeAttributes = _c === void 0 ? {} : _c, onKeyDown = _a.onKeyDown, onBlur = _a.onBlur, onFocus = _a.onFocus, onLoadMore = _a.onLoadMore, onMouseUp = _a.onMouseUp, onMouseMove = _a.onMouseMove, _d = _a.position, position = _d === void 0 ? 'relative' : _d, _e = _a.role, role = _e === void 0 ? 'listbox' : _e, _f = _a.decreaseTopMargin, decreaseTopMargin = _f === void 0 ? false : _f, ariaLabelledby = _a.ariaLabelledby, restProps = __rest(_a, ["open", "children", "nativeAttributes", "onKeyDown", "onBlur", "onFocus", "onLoadMore", "onMouseUp", "onMouseMove", "position", "role", "decreaseTopMargin", "ariaLabelledby"]);
    var baseProps = getBaseProps(restProps);
    var menuRef = (0,react.useRef)(null);
    var handleScroll = function () {
        var scrollContainer = menuRef === null || menuRef === void 0 ? void 0 : menuRef.current;
        if (scrollContainer) {
            var bottomEdgePosition = scrollContainer.scrollTop + scrollContainer.clientHeight;
            var remainingScrollHeight = scrollContainer.scrollHeight - bottomEdgePosition;
            if (remainingScrollHeight < BOTTOM_TRIGGER_OFFSET) {
                fireNonCancelableEvent(onLoadMore);
            }
        }
    };
    (0,react.useEffect)(function () {
        if (!open) {
            return;
        }
        handleScroll();
    });
    var className = clsx_m(options_list_styles_css["options-list"], (_b = {},
        _b[options_list_styles_css["decrease-top-margin"]] = decreaseTopMargin,
        _b));
    var mergedRef = useMergeRefs(ref, menuRef);
    return (react.createElement("ul", tslib_es6_assign({}, baseProps, nativeAttributes, { className: className, ref: mergedRef, style: { position: position }, role: role, onScroll: handleScroll, onKeyDown: function (event) { return onKeyDown && fireKeyboardEvent(onKeyDown, event); }, onMouseMove: function (event) { return onMouseMove === null || onMouseMove === void 0 ? void 0 : onMouseMove(getItemIndex(menuRef, event)); }, onMouseUp: function (event) { return onMouseUp === null || onMouseUp === void 0 ? void 0 : onMouseUp(getItemIndex(menuRef, event)); }, onBlur: function (event) { return fireNonCancelableEvent(onBlur, { relatedTarget: event.relatedTarget }); }, onFocus: function () { return fireNonCancelableEvent(onFocus); }, tabIndex: -1, "aria-labelledby": ariaLabelledby }), open && children));
};
/* harmony default export */ const options_list = (react.forwardRef(OptionsList));
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/box/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/box/styles.css.js


    /* harmony default export */ const box_styles_css = ({
  "root": "awsui_root_18wu0_sz2t7_93",
  "box": "awsui_box_18wu0_sz2t7_205",
  "p-variant": "awsui_p-variant_18wu0_sz2t7_205",
  "color-default": "awsui_color-default_18wu0_sz2t7_205",
  "b-variant": "awsui_b-variant_18wu0_sz2t7_205",
  "strong-variant": "awsui_strong-variant_18wu0_sz2t7_205",
  "code-variant": "awsui_code-variant_18wu0_sz2t7_205",
  "pre-variant": "awsui_pre-variant_18wu0_sz2t7_205",
  "samp-variant": "awsui_samp-variant_18wu0_sz2t7_205",
  "h1-variant": "awsui_h1-variant_18wu0_sz2t7_209",
  "h2-variant": "awsui_h2-variant_18wu0_sz2t7_209",
  "h3-variant": "awsui_h3-variant_18wu0_sz2t7_209",
  "h4-variant": "awsui_h4-variant_18wu0_sz2t7_209",
  "h5-variant": "awsui_h5-variant_18wu0_sz2t7_209",
  "small-variant": "awsui_small-variant_18wu0_sz2t7_213",
  "a-variant": "awsui_a-variant_18wu0_sz2t7_217",
  "font-size-default": "awsui_font-size-default_18wu0_sz2t7_221",
  "font-weight-default": "awsui_font-weight-default_18wu0_sz2t7_261",
  "key-label-variant": "awsui_key-label-variant_18wu0_sz2t7_301",
  "value-large-variant": "awsui_value-large-variant_18wu0_sz2t7_308",
  "font-weight-heavy": "awsui_font-weight-heavy_18wu0_sz2t7_315",
  "color-inverted": "awsui_color-inverted_18wu0_sz2t7_320",
  "color-text-label": "awsui_color-text-label_18wu0_sz2t7_323",
  "color-text-body-secondary": "awsui_color-text-body-secondary_18wu0_sz2t7_326",
  "color-text-status-error": "awsui_color-text-status-error_18wu0_sz2t7_329",
  "color-text-status-success": "awsui_color-text-status-success_18wu0_sz2t7_332",
  "color-text-status-info": "awsui_color-text-status-info_18wu0_sz2t7_335",
  "color-text-status-inactive": "awsui_color-text-status-inactive_18wu0_sz2t7_338",
  "color-inherit": "awsui_color-inherit_18wu0_sz2t7_341",
  "font-size-body-s": "awsui_font-size-body-s_18wu0_sz2t7_344",
  "font-size-body-m": "awsui_font-size-body-m_18wu0_sz2t7_349",
  "font-size-heading-xs": "awsui_font-size-heading-xs_18wu0_sz2t7_353",
  "font-size-heading-s": "awsui_font-size-heading-s_18wu0_sz2t7_357",
  "font-size-heading-m": "awsui_font-size-heading-m_18wu0_sz2t7_362",
  "font-size-heading-l": "awsui_font-size-heading-l_18wu0_sz2t7_367",
  "font-size-heading-xl": "awsui_font-size-heading-xl_18wu0_sz2t7_372",
  "font-size-display-l": "awsui_font-size-display-l_18wu0_sz2t7_377",
  "font-weight-light": "awsui_font-weight-light_18wu0_sz2t7_382",
  "font-weight-normal": "awsui_font-weight-normal_18wu0_sz2t7_385",
  "font-weight-bold": "awsui_font-weight-bold_18wu0_sz2t7_388",
  "t-left": "awsui_t-left_18wu0_sz2t7_395",
  "t-right": "awsui_t-right_18wu0_sz2t7_399",
  "t-center": "awsui_t-center_18wu0_sz2t7_403",
  "p-n": "awsui_p-n_18wu0_sz2t7_504",
  "p-top-n": "awsui_p-top-n_18wu0_sz2t7_508",
  "p-vertical-n": "awsui_p-vertical-n_18wu0_sz2t7_509",
  "p-right-n": "awsui_p-right-n_18wu0_sz2t7_513",
  "p-horizontal-n": "awsui_p-horizontal-n_18wu0_sz2t7_514",
  "p-bottom-n": "awsui_p-bottom-n_18wu0_sz2t7_518",
  "p-left-n": "awsui_p-left-n_18wu0_sz2t7_523",
  "p-xxxs": "awsui_p-xxxs_18wu0_sz2t7_528",
  "p-top-xxxs": "awsui_p-top-xxxs_18wu0_sz2t7_532",
  "p-vertical-xxxs": "awsui_p-vertical-xxxs_18wu0_sz2t7_533",
  "p-right-xxxs": "awsui_p-right-xxxs_18wu0_sz2t7_537",
  "p-horizontal-xxxs": "awsui_p-horizontal-xxxs_18wu0_sz2t7_538",
  "p-bottom-xxxs": "awsui_p-bottom-xxxs_18wu0_sz2t7_542",
  "p-left-xxxs": "awsui_p-left-xxxs_18wu0_sz2t7_547",
  "p-xxs": "awsui_p-xxs_18wu0_sz2t7_552",
  "p-top-xxs": "awsui_p-top-xxs_18wu0_sz2t7_556",
  "p-vertical-xxs": "awsui_p-vertical-xxs_18wu0_sz2t7_557",
  "p-right-xxs": "awsui_p-right-xxs_18wu0_sz2t7_561",
  "p-horizontal-xxs": "awsui_p-horizontal-xxs_18wu0_sz2t7_562",
  "p-bottom-xxs": "awsui_p-bottom-xxs_18wu0_sz2t7_566",
  "p-left-xxs": "awsui_p-left-xxs_18wu0_sz2t7_571",
  "p-xs": "awsui_p-xs_18wu0_sz2t7_576",
  "p-top-xs": "awsui_p-top-xs_18wu0_sz2t7_580",
  "p-vertical-xs": "awsui_p-vertical-xs_18wu0_sz2t7_581",
  "p-right-xs": "awsui_p-right-xs_18wu0_sz2t7_585",
  "p-horizontal-xs": "awsui_p-horizontal-xs_18wu0_sz2t7_586",
  "p-bottom-xs": "awsui_p-bottom-xs_18wu0_sz2t7_590",
  "p-left-xs": "awsui_p-left-xs_18wu0_sz2t7_595",
  "p-s": "awsui_p-s_18wu0_sz2t7_600",
  "p-top-s": "awsui_p-top-s_18wu0_sz2t7_604",
  "p-vertical-s": "awsui_p-vertical-s_18wu0_sz2t7_605",
  "p-right-s": "awsui_p-right-s_18wu0_sz2t7_609",
  "p-horizontal-s": "awsui_p-horizontal-s_18wu0_sz2t7_610",
  "p-bottom-s": "awsui_p-bottom-s_18wu0_sz2t7_614",
  "p-left-s": "awsui_p-left-s_18wu0_sz2t7_619",
  "p-m": "awsui_p-m_18wu0_sz2t7_624",
  "p-top-m": "awsui_p-top-m_18wu0_sz2t7_628",
  "p-vertical-m": "awsui_p-vertical-m_18wu0_sz2t7_629",
  "p-right-m": "awsui_p-right-m_18wu0_sz2t7_633",
  "p-horizontal-m": "awsui_p-horizontal-m_18wu0_sz2t7_634",
  "p-bottom-m": "awsui_p-bottom-m_18wu0_sz2t7_638",
  "p-left-m": "awsui_p-left-m_18wu0_sz2t7_643",
  "p-l": "awsui_p-l_18wu0_sz2t7_523",
  "p-top-l": "awsui_p-top-l_18wu0_sz2t7_652",
  "p-vertical-l": "awsui_p-vertical-l_18wu0_sz2t7_653",
  "p-right-l": "awsui_p-right-l_18wu0_sz2t7_657",
  "p-horizontal-l": "awsui_p-horizontal-l_18wu0_sz2t7_658",
  "p-bottom-l": "awsui_p-bottom-l_18wu0_sz2t7_662",
  "p-left-l": "awsui_p-left-l_18wu0_sz2t7_667",
  "p-xl": "awsui_p-xl_18wu0_sz2t7_672",
  "p-top-xl": "awsui_p-top-xl_18wu0_sz2t7_676",
  "p-vertical-xl": "awsui_p-vertical-xl_18wu0_sz2t7_677",
  "p-right-xl": "awsui_p-right-xl_18wu0_sz2t7_681",
  "p-horizontal-xl": "awsui_p-horizontal-xl_18wu0_sz2t7_682",
  "p-bottom-xl": "awsui_p-bottom-xl_18wu0_sz2t7_686",
  "p-left-xl": "awsui_p-left-xl_18wu0_sz2t7_691",
  "p-xxl": "awsui_p-xxl_18wu0_sz2t7_696",
  "p-top-xxl": "awsui_p-top-xxl_18wu0_sz2t7_700",
  "p-vertical-xxl": "awsui_p-vertical-xxl_18wu0_sz2t7_701",
  "p-right-xxl": "awsui_p-right-xxl_18wu0_sz2t7_705",
  "p-horizontal-xxl": "awsui_p-horizontal-xxl_18wu0_sz2t7_706",
  "p-bottom-xxl": "awsui_p-bottom-xxl_18wu0_sz2t7_710",
  "p-left-xxl": "awsui_p-left-xxl_18wu0_sz2t7_715",
  "p-xxxl": "awsui_p-xxxl_18wu0_sz2t7_720",
  "p-top-xxxl": "awsui_p-top-xxxl_18wu0_sz2t7_724",
  "p-vertical-xxxl": "awsui_p-vertical-xxxl_18wu0_sz2t7_725",
  "p-right-xxxl": "awsui_p-right-xxxl_18wu0_sz2t7_729",
  "p-horizontal-xxxl": "awsui_p-horizontal-xxxl_18wu0_sz2t7_730",
  "p-bottom-xxxl": "awsui_p-bottom-xxxl_18wu0_sz2t7_734",
  "p-left-xxxl": "awsui_p-left-xxxl_18wu0_sz2t7_739",
  "m-n": "awsui_m-n_18wu0_sz2t7_744",
  "m-top-n": "awsui_m-top-n_18wu0_sz2t7_748",
  "m-vertical-n": "awsui_m-vertical-n_18wu0_sz2t7_749",
  "m-right-n": "awsui_m-right-n_18wu0_sz2t7_753",
  "m-horizontal-n": "awsui_m-horizontal-n_18wu0_sz2t7_754",
  "m-bottom-n": "awsui_m-bottom-n_18wu0_sz2t7_758",
  "m-left-n": "awsui_m-left-n_18wu0_sz2t7_763",
  "m-xxxs": "awsui_m-xxxs_18wu0_sz2t7_768",
  "m-top-xxxs": "awsui_m-top-xxxs_18wu0_sz2t7_772",
  "m-vertical-xxxs": "awsui_m-vertical-xxxs_18wu0_sz2t7_773",
  "m-right-xxxs": "awsui_m-right-xxxs_18wu0_sz2t7_777",
  "m-horizontal-xxxs": "awsui_m-horizontal-xxxs_18wu0_sz2t7_778",
  "m-bottom-xxxs": "awsui_m-bottom-xxxs_18wu0_sz2t7_782",
  "m-left-xxxs": "awsui_m-left-xxxs_18wu0_sz2t7_787",
  "m-xxs": "awsui_m-xxs_18wu0_sz2t7_792",
  "m-top-xxs": "awsui_m-top-xxs_18wu0_sz2t7_796",
  "m-vertical-xxs": "awsui_m-vertical-xxs_18wu0_sz2t7_797",
  "m-right-xxs": "awsui_m-right-xxs_18wu0_sz2t7_801",
  "m-horizontal-xxs": "awsui_m-horizontal-xxs_18wu0_sz2t7_802",
  "m-bottom-xxs": "awsui_m-bottom-xxs_18wu0_sz2t7_806",
  "m-left-xxs": "awsui_m-left-xxs_18wu0_sz2t7_811",
  "m-xs": "awsui_m-xs_18wu0_sz2t7_816",
  "m-top-xs": "awsui_m-top-xs_18wu0_sz2t7_820",
  "m-vertical-xs": "awsui_m-vertical-xs_18wu0_sz2t7_821",
  "m-right-xs": "awsui_m-right-xs_18wu0_sz2t7_825",
  "m-horizontal-xs": "awsui_m-horizontal-xs_18wu0_sz2t7_826",
  "m-bottom-xs": "awsui_m-bottom-xs_18wu0_sz2t7_830",
  "m-left-xs": "awsui_m-left-xs_18wu0_sz2t7_835",
  "m-s": "awsui_m-s_18wu0_sz2t7_840",
  "m-top-s": "awsui_m-top-s_18wu0_sz2t7_844",
  "m-vertical-s": "awsui_m-vertical-s_18wu0_sz2t7_845",
  "m-right-s": "awsui_m-right-s_18wu0_sz2t7_849",
  "m-horizontal-s": "awsui_m-horizontal-s_18wu0_sz2t7_850",
  "m-bottom-s": "awsui_m-bottom-s_18wu0_sz2t7_854",
  "m-left-s": "awsui_m-left-s_18wu0_sz2t7_859",
  "m-m": "awsui_m-m_18wu0_sz2t7_864",
  "m-top-m": "awsui_m-top-m_18wu0_sz2t7_868",
  "m-vertical-m": "awsui_m-vertical-m_18wu0_sz2t7_869",
  "m-right-m": "awsui_m-right-m_18wu0_sz2t7_873",
  "m-horizontal-m": "awsui_m-horizontal-m_18wu0_sz2t7_874",
  "m-bottom-m": "awsui_m-bottom-m_18wu0_sz2t7_878",
  "m-left-m": "awsui_m-left-m_18wu0_sz2t7_883",
  "m-l": "awsui_m-l_18wu0_sz2t7_763",
  "m-top-l": "awsui_m-top-l_18wu0_sz2t7_892",
  "m-vertical-l": "awsui_m-vertical-l_18wu0_sz2t7_893",
  "m-right-l": "awsui_m-right-l_18wu0_sz2t7_897",
  "m-horizontal-l": "awsui_m-horizontal-l_18wu0_sz2t7_898",
  "m-bottom-l": "awsui_m-bottom-l_18wu0_sz2t7_902",
  "m-left-l": "awsui_m-left-l_18wu0_sz2t7_907",
  "m-xl": "awsui_m-xl_18wu0_sz2t7_912",
  "m-top-xl": "awsui_m-top-xl_18wu0_sz2t7_916",
  "m-vertical-xl": "awsui_m-vertical-xl_18wu0_sz2t7_917",
  "m-right-xl": "awsui_m-right-xl_18wu0_sz2t7_921",
  "m-horizontal-xl": "awsui_m-horizontal-xl_18wu0_sz2t7_922",
  "m-bottom-xl": "awsui_m-bottom-xl_18wu0_sz2t7_926",
  "m-left-xl": "awsui_m-left-xl_18wu0_sz2t7_931",
  "m-xxl": "awsui_m-xxl_18wu0_sz2t7_936",
  "m-top-xxl": "awsui_m-top-xxl_18wu0_sz2t7_940",
  "m-vertical-xxl": "awsui_m-vertical-xxl_18wu0_sz2t7_941",
  "m-right-xxl": "awsui_m-right-xxl_18wu0_sz2t7_945",
  "m-horizontal-xxl": "awsui_m-horizontal-xxl_18wu0_sz2t7_946",
  "m-bottom-xxl": "awsui_m-bottom-xxl_18wu0_sz2t7_950",
  "m-left-xxl": "awsui_m-left-xxl_18wu0_sz2t7_955",
  "m-xxxl": "awsui_m-xxxl_18wu0_sz2t7_960",
  "m-top-xxxl": "awsui_m-top-xxxl_18wu0_sz2t7_964",
  "m-vertical-xxxl": "awsui_m-vertical-xxxl_18wu0_sz2t7_965",
  "m-right-xxxl": "awsui_m-right-xxxl_18wu0_sz2t7_969",
  "m-horizontal-xxxl": "awsui_m-horizontal-xxxl_18wu0_sz2t7_970",
  "m-bottom-xxxl": "awsui_m-bottom-xxxl_18wu0_sz2t7_974",
  "m-left-xxxl": "awsui_m-left-xxxl_18wu0_sz2t7_979",
  "d-block": "awsui_d-block_18wu0_sz2t7_984",
  "d-inline": "awsui_d-inline_18wu0_sz2t7_987",
  "d-inline-block": "awsui_d-inline-block_18wu0_sz2t7_990",
  "d-none": "awsui_d-none_18wu0_sz2t7_993",
  "f-left": "awsui_f-left_18wu0_sz2t7_997",
  "f-right": "awsui_f-right_18wu0_sz2t7_1001"
});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/box/internal.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0




function InternalBox(_a) {
    var _b = _a.variant, variant = _b === void 0 ? 'div' : _b, tagOverride = _a.tagOverride, _c = _a.margin, margin = _c === void 0 ? {} : _c, _d = _a.padding, padding = _d === void 0 ? {} : _d, display = _a.display, textAlign = _a.textAlign, float = _a.float, fontSize = _a.fontSize, fontWeight = _a.fontWeight, color = _a.color, children = _a.children, _e = _a.__internalRootRef, __internalRootRef = _e === void 0 ? null : _e, props = __rest(_a, ["variant", "tagOverride", "margin", "padding", "display", "textAlign", "float", "fontSize", "fontWeight", "color", "children", "__internalRootRef"]);
    var baseProps = getBaseProps(props);
    var marginsClassNamesSuffices = getClassNamesSuffixes(margin);
    var paddingsClassNamesSuffices = getClassNamesSuffixes(padding);
    // This can be any arbitrary string if passed into tagOverride.
    // We appease the compiler with an incorrect type.
    var Tag = getTag(variant, tagOverride);
    var className = clsx_m(baseProps.className, box_styles_css.root, box_styles_css.box, box_styles_css["".concat(variant.replace(/^awsui-/, ''), "-variant")], marginsClassNamesSuffices.map(function (suffix) { return box_styles_css["m-".concat(suffix)]; }), paddingsClassNamesSuffices.map(function (suffix) { return box_styles_css["p-".concat(suffix)]; }), box_styles_css["d-".concat(display)], box_styles_css["f-".concat(float)], box_styles_css["color-".concat(color || 'default')], box_styles_css["font-size-".concat(fontSize || 'default')], box_styles_css["font-weight-".concat(fontWeight || 'default')], box_styles_css["t-".concat(textAlign)]);
    return (react.createElement(Tag, tslib_es6_assign({}, baseProps, { className: className, ref: __internalRootRef }), children));
}
var getClassNamesSuffixes = function (value) {
    if (typeof value === 'string') {
        return [value];
    }
    var sides = ['top', 'right', 'bottom', 'left', 'horizontal', 'vertical'];
    return sides.filter(function (side) { return !!value[side]; }).map(function (side) { return "".concat(side, "-").concat(value[side]); });
};
var getTag = function (variant, tagOverride) {
    if (tagOverride) {
        return tagOverride;
    }
    if (variant === 'awsui-value-large') {
        return 'span';
    }
    if (variant === 'awsui-key-label') {
        return 'div';
    }
    return variant;
};
//# sourceMappingURL=internal.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/button-dropdown/internal.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0














var InternalButtonDropdown = react.forwardRef(function (_a, ref) {
    var items = _a.items, _b = _a.variant, variant = _b === void 0 ? 'normal' : _b, _c = _a.loading, loading = _c === void 0 ? false : _c, loadingText = _a.loadingText, _d = _a.disabled, disabled = _d === void 0 ? false : _d, _e = _a.expandableGroups, expandableGroups = _e === void 0 ? false : _e, children = _a.children, onItemClick = _a.onItemClick, onItemFollow = _a.onItemFollow, customTriggerBuilder = _a.customTriggerBuilder, expandToViewport = _a.expandToViewport, ariaLabel = _a.ariaLabel, title = _a.title, description = _a.description, preferCenter = _a.preferCenter, __internalRootRef = _a.__internalRootRef, props = __rest(_a, ["items", "variant", "loading", "loadingText", "disabled", "expandableGroups", "children", "onItemClick", "onItemFollow", "customTriggerBuilder", "expandToViewport", "ariaLabel", "title", "description", "preferCenter", "__internalRootRef"]);
    var isInRestrictedView = useMobile();
    var dropdownId = useUniqueId('dropdown');
    for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {
        var item = items_1[_i];
        checkSafeUrl('ButtonDropdown', item.href);
    }
    var _f = useButtonDropdown({
        items: items,
        onItemClick: onItemClick,
        onItemFollow: onItemFollow,
        onReturnFocus: function () { var _a; return (_a = dropdownRef.current) === null || _a === void 0 ? void 0 : _a.focus(); },
        expandToViewport: expandToViewport,
        hasExpandableGroups: expandableGroups,
        isInRestrictedView: isInRestrictedView
    }), isOpen = _f.isOpen, targetItem = _f.targetItem, isHighlighted = _f.isHighlighted, isKeyboardHighlight = _f.isKeyboardHighlight, isExpanded = _f.isExpanded, highlightItem = _f.highlightItem, onKeyDown = _f.onKeyDown, onKeyUp = _f.onKeyUp, onItemActivate = _f.onItemActivate, onGroupToggle = _f.onGroupToggle, toggleDropdown = _f.toggleDropdown, setIsUsingMouse = _f.setIsUsingMouse;
    var handleMouseEvent = function () {
        setIsUsingMouse(true);
    };
    var baseProps = getBaseProps(props);
    var dropdownRef = (0,react.useRef)(null);
    useForwardFocus(ref, dropdownRef);
    var clickHandler = function () {
        if (!loading && !disabled) {
            // Prevent moving highlight on mobiles to avoid disabled state reason popup if defined.
            toggleDropdown({ moveHighlightOnOpen: !isInRestrictedView });
        }
    };
    var canBeOpened = !loading && !disabled;
    var triggerVariant = variant === 'navigation' ? undefined : variant;
    var iconProps = variant === 'icon'
        ? {
            iconName: 'ellipsis'
        }
        : {
            iconName: 'caret-down-filled',
            iconAlign: 'right',
            __iconClass: canBeOpened && isOpen ? button_dropdown_styles_css["rotate-up"] : button_dropdown_styles_css["rotate-down"]
        };
    var trigger = customTriggerBuilder ? (customTriggerBuilder(clickHandler, dropdownRef, disabled, isOpen, ariaLabel)) : (react.createElement(InternalButton, tslib_es6_assign({ ref: dropdownRef }, iconProps, { variant: triggerVariant, loading: loading, loadingText: loadingText, disabled: disabled, onClick: function (event) {
            event.preventDefault();
            clickHandler();
        }, ariaLabel: ariaLabel, "aria-haspopup": true, ariaExpanded: canBeOpened && isOpen, formAction: "none" }), children));
    var hasHeader = title || description;
    var headerId = useUniqueId('awsui-button-dropdown__header');
    return (react.createElement("div", tslib_es6_assign({}, baseProps, { onKeyDown: onKeyDown, onKeyUp: onKeyUp, onMouseDown: handleMouseEvent, onMouseMove: handleMouseEvent, className: clsx_m(button_dropdown_styles_css["button-dropdown"], button_dropdown_styles_css["variant-".concat(variant)], baseProps.className), "aria-owns": expandToViewport && isOpen ? dropdownId : undefined, ref: __internalRootRef }),
        react.createElement(dropdown, { open: canBeOpened && isOpen, stretchWidth: false, stretchTriggerHeight: variant === 'navigation', expandToViewport: expandToViewport, preferCenter: preferCenter, onDropdownClose: function () { return toggleDropdown(); }, trigger: trigger, dropdownId: dropdownId },
            hasHeader && (react.createElement("div", { className: button_dropdown_styles_css.header, id: headerId },
                title && (react.createElement("div", { className: button_dropdown_styles_css.title },
                    react.createElement(InternalBox, { fontSize: "heading-s", fontWeight: "bold", color: "inherit", tagOverride: "h2", margin: { vertical: 'n', horizontal: 'n' } }, title))),
                description && (react.createElement(InternalBox, { fontSize: "body-s" },
                    react.createElement("span", { className: button_dropdown_styles_css.description }, description))))),
            react.createElement(options_list, { open: canBeOpened && isOpen, position: "static", role: "menu", decreaseTopMargin: true, ariaLabelledby: hasHeader ? headerId : undefined },
                react.createElement(ItemsList, { items: items, onItemActivate: onItemActivate, onGroupToggle: onGroupToggle, hasExpandableGroups: expandableGroups, targetItem: targetItem, isHighlighted: isHighlighted, isKeyboardHighlight: isKeyboardHighlight, isExpanded: isExpanded, highlightItem: highlightItem, expandToViewport: expandToViewport, variant: variant })))));
});
/* harmony default export */ const button_dropdown_internal = (InternalButtonDropdown);
//# sourceMappingURL=internal.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/components/menu-dropdown/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/components/menu-dropdown/styles.css.js


    /* harmony default export */ const menu_dropdown_styles_css = ({
  "button": "awsui_button_m5h9f_1qu3j_93",
  "expanded": "awsui_expanded_m5h9f_1qu3j_125",
  "offset-right-none": "awsui_offset-right-none_m5h9f_1qu3j_136",
  "offset-right-l": "awsui_offset-right-l_m5h9f_1qu3j_139",
  "offset-right-xxl": "awsui_offset-right-xxl_m5h9f_1qu3j_142",
  "text": "awsui_text_m5h9f_1qu3j_164",
  "icon": "awsui_icon_m5h9f_1qu3j_168"
});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/components/menu-dropdown/index.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0









var ButtonTrigger = react.forwardRef(function (_a, ref) {
    var _b;
    var iconName = _a.iconName, iconUrl = _a.iconUrl, iconAlt = _a.iconAlt, iconSvg = _a.iconSvg, badge = _a.badge, ariaLabel = _a.ariaLabel, offsetRight = _a.offsetRight, disabled = _a.disabled, expanded = _a.expanded, children = _a.children, onClick = _a.onClick;
    var focusVisible = useFocusVisible();
    var hasIcon = iconName || iconUrl || iconSvg;
    return (react.createElement("button", tslib_es6_assign({}, focusVisible, { ref: ref, type: "button", className: clsx_m(menu_dropdown_styles_css.button, menu_dropdown_styles_css["offset-right-".concat(offsetRight)], (_b = {}, _b[menu_dropdown_styles_css.expanded] = expanded, _b)), "aria-label": ariaLabel, "aria-expanded": !!expanded, "aria-haspopup": true, disabled: disabled, onClick: function (event) {
            event.preventDefault();
            onClick && onClick();
        } }),
        hasIcon && (react.createElement(internal, { className: menu_dropdown_styles_css.icon, name: iconName, url: iconUrl, alt: iconAlt, svg: iconSvg, badge: badge })),
        children && react.createElement("span", { className: menu_dropdown_styles_css.text }, children),
        children && (react.createElement(internal, { name: "caret-down-filled", className: expanded ? button_dropdown_styles_css["rotate-up"] : button_dropdown_styles_css["rotate-down"] }))));
});
var MenuDropdown = function (_a) {
    var iconName = _a.iconName, iconUrl = _a.iconUrl, iconAlt = _a.iconAlt, iconSvg = _a.iconSvg, badge = _a.badge, ariaLabel = _a.ariaLabel, offsetRight = _a.offsetRight, children = _a.children, props = __rest(_a, ["iconName", "iconUrl", "iconAlt", "iconSvg", "badge", "ariaLabel", "offsetRight", "children"]);
    var baseProps = getBaseProps(props);
    var dropdownTrigger = function (clickHandler, ref, isDisabled, isExpanded) {
        return (react.createElement(ButtonTrigger, { ref: ref, disabled: isDisabled, expanded: isExpanded, iconName: iconName, iconUrl: iconUrl, iconAlt: iconAlt, iconSvg: iconSvg, badge: badge, ariaLabel: ariaLabel, offsetRight: offsetRight, onClick: clickHandler }, children));
    };
    return (react.createElement(button_dropdown_internal, tslib_es6_assign({}, baseProps, props, { variant: "navigation", customTriggerBuilder: dropdownTrigger, preferCenter: true })));
};
applyDisplayName(MenuDropdown, 'MenuDropdown');
/* harmony default export */ const menu_dropdown = (MenuDropdown);
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/utils/strings/join-strings.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
/**
 * Joins strings with a whitespace, discarding empty strings. Useful to combine multiple aria-labels.
 */
function joinStrings() {
    var strings = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        strings[_i] = arguments[_i];
    }
    return strings.filter(Boolean).join(' ') || undefined;
}
//# sourceMappingURL=join-strings.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/top-navigation/parts/utility.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0









function Utility(_a) {
    var _b;
    var hideText = _a.hideText, definition = _a.definition, offsetRight = _a.offsetRight;
    var hasIcon = !!definition.iconName || !!definition.iconUrl || !!definition.iconAlt || !!definition.iconSvg;
    var shouldHideText = hideText && !definition.disableTextCollapse && hasIcon;
    var ariaLabel = (_b = definition.ariaLabel) !== null && _b !== void 0 ? _b : definition.text;
    if (definition.type === 'button') {
        ariaLabel = definition.ariaLabel
            ? definition.ariaLabel
            : joinStrings(definition.text, definition.externalIconAriaLabel);
        checkSafeUrl('TopNavigation', definition.href);
        if (definition.variant === 'primary-button') {
            return (react.createElement("span", { className: top_navigation_styles_css["offset-right-".concat(offsetRight)] },
                react.createElement(InternalButton, { variant: "primary", href: definition.href, target: definition.external ? '_blank' : undefined, onClick: definition.onClick, ariaLabel: ariaLabel, iconName: definition.iconName, iconUrl: definition.iconUrl, iconAlt: definition.iconAlt, iconSvg: definition.iconSvg }, shouldHideText ? null : (react.createElement(react.Fragment, null,
                    definition.text,
                    definition.external && (react.createElement(react.Fragment, null,
                        ' ',
                        react.createElement("span", { className: clsx_m(top_navigation_styles_css["utility-button-external-icon"], top_navigation_styles_css["offset-right-".concat(offsetRight)]), "aria-label": definition.externalIconAriaLabel, role: definition.externalIconAriaLabel ? 'img' : undefined },
                            react.createElement(internal, { name: "external" })))))))));
        }
        else {
            // Link
            return (react.createElement("span", { className: top_navigation_styles_css["offset-right-".concat(offsetRight)] },
                react.createElement(link_internal, { variant: "top-navigation", href: definition.href, external: definition.external, onFollow: definition.onClick, ariaLabel: ariaLabel },
                    hasIcon && (react.createElement(internal, { name: definition.iconName, url: definition.iconUrl, alt: definition.iconAlt, svg: definition.iconSvg, badge: definition.badge })),
                    !shouldHideText && definition.text && (react.createElement("span", { className: hasIcon ? top_navigation_styles_css["utility-link-icon"] : undefined }, definition.text)))));
        }
    }
    else if (definition.type === 'menu-dropdown') {
        var title = definition.title || definition.text;
        var shouldShowTitle = shouldHideText || !definition.text;
        checkSafeUrlRecursively(definition.items);
        return (react.createElement(menu_dropdown, tslib_es6_assign({}, definition, { title: shouldShowTitle ? title : '', ariaLabel: ariaLabel, offsetRight: offsetRight }), !shouldHideText && definition.text));
    }
    return null;
}
function checkSafeUrlRecursively(itemOrGroup) {
    for (var _i = 0, itemOrGroup_1 = itemOrGroup; _i < itemOrGroup_1.length; _i++) {
        var item = itemOrGroup_1[_i];
        checkSafeUrl('TopNavigation', item.href);
        if ('items' in item) {
            checkSafeUrlRecursively(item.items);
        }
    }
}
//# sourceMappingURL=utility.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/top-navigation/parts/overflow-menu/router.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

var defaultCtx = { state: { view: 'utilities', data: null }, setState: function () { } };
var ViewContext = (0,react.createContext)(defaultCtx);
var router_useNavigate = function () {
    var setState = (0,react.useContext)(ViewContext).setState;
    var navigate = function (view, data) {
        setState({ view: view, data: data });
    };
    return navigate;
};
var router_Route = function (_a) {
    var view = _a.view, element = _a.element;
    var state = (0,react.useContext)(ViewContext).state;
    if (view === state.view) {
        if (typeof element === 'function') {
            return element(state.data);
        }
        return react.createElement(react.Fragment, null, element);
    }
    return null;
};
var router_Router = function (_a) {
    var children = _a.children;
    var _b = (0,react.useState)({ view: 'utilities', data: null }), state = _b[0], setState = _b[1];
    return react.createElement(ViewContext.Provider, { value: { state: state, setState: setState } }, children);
};
/* harmony default export */ const router = (router_Router);
//# sourceMappingURL=router.js.map
;// CONCATENATED MODULE: ./node_modules/focus-lock/dist/es2015/constants.js
var FOCUS_GROUP = 'data-focus-lock';
var FOCUS_DISABLED = 'data-focus-lock-disabled';
var FOCUS_ALLOW = 'data-no-focus-lock';
var FOCUS_AUTO = 'data-autofocus-inside';

;// CONCATENATED MODULE: ./node_modules/use-callback-ref/dist/es2015/assignRef.js
/**
 * Assigns a value for a given ref, no matter of the ref format
 * @param {RefObject} ref - a callback function or ref object
 * @param value - a new value
 *
 * @see https://github.com/theKashey/use-callback-ref#assignref
 * @example
 * const refObject = useRef();
 * const refFn = (ref) => {....}
 *
 * assignRef(refObject, "refValue");
 * assignRef(refFn, "refValue");
 */
function assignRef(ref, value) {
    if (typeof ref === 'function') {
        ref(value);
    }
    else if (ref) {
        ref.current = value;
    }
    return ref;
}

;// CONCATENATED MODULE: ./node_modules/use-callback-ref/dist/es2015/useRef.js

/**
 * creates a MutableRef with ref change callback
 * @param initialValue - initial ref value
 * @param {Function} callback - a callback to run when value changes
 *
 * @example
 * const ref = useCallbackRef(0, (newValue, oldValue) => console.log(oldValue, '->', newValue);
 * ref.current = 1;
 * // prints 0 -> 1
 *
 * @see https://reactjs.org/docs/hooks-reference.html#useref
 * @see https://github.com/theKashey/use-callback-ref#usecallbackref---to-replace-reactuseref
 * @returns {MutableRefObject}
 */
function useCallbackRef(initialValue, callback) {
    var ref = (0,react.useState)(function () { return ({
        // value
        value: initialValue,
        // last callback
        callback: callback,
        // "memoized" public interface
        facade: {
            get current() {
                return ref.value;
            },
            set current(value) {
                var last = ref.value;
                if (last !== value) {
                    ref.value = value;
                    ref.callback(value, last);
                }
            },
        },
    }); })[0];
    // update callback
    ref.callback = callback;
    return ref.facade;
}

;// CONCATENATED MODULE: ./node_modules/use-callback-ref/dist/es2015/useMergeRef.js


/**
 * Merges two or more refs together providing a single interface to set their value
 * @param {RefObject|Ref} refs
 * @returns {MutableRefObject} - a new ref, which translates all changes to {refs}
 *
 * @see {@link mergeRefs} a version without buit-in memoization
 * @see https://github.com/theKashey/use-callback-ref#usemergerefs
 * @example
 * const Component = React.forwardRef((props, ref) => {
 *   const ownRef = useRef();
 *   const domRef = useMergeRefs([ref, ownRef]); // 👈 merge together
 *   return <div ref={domRef}>...</div>
 * }
 */
function useMergeRef_useMergeRefs(refs, defaultValue) {
    return useCallbackRef(defaultValue || null, function (newValue) { return refs.forEach(function (ref) { return assignRef(ref, newValue); }); });
}

;// CONCATENATED MODULE: ./node_modules/react-focus-lock/dist/es2015/FocusGuard.js


var hiddenGuard = {
  width: '1px',
  height: '0px',
  padding: 0,
  overflow: 'hidden',
  position: 'fixed',
  top: '1px',
  left: '1px'
};

var InFocusGuard = function InFocusGuard(_ref) {
  var children = _ref.children;
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("div", {
    key: "guard-first",
    "data-focus-guard": true,
    "data-focus-auto-guard": true,
    style: hiddenGuard
  }), children, children && /*#__PURE__*/react.createElement("div", {
    key: "guard-last",
    "data-focus-guard": true,
    "data-focus-auto-guard": true,
    style: hiddenGuard
  }));
};

InFocusGuard.propTypes =  false ? 0 : {};
InFocusGuard.defaultProps = {
  children: null
};
/* harmony default export */ const FocusGuard = ((/* unused pure expression or super */ null && (InFocusGuard)));
;// CONCATENATED MODULE: ./node_modules/use-sidecar/dist/es2015/medium.js

function ItoI(a) {
    return a;
}
function innerCreateMedium(defaults, middleware) {
    if (middleware === void 0) { middleware = ItoI; }
    var buffer = [];
    var assigned = false;
    var medium = {
        read: function () {
            if (assigned) {
                throw new Error('Sidecar: could not `read` from an `assigned` medium. `read` could be used only with `useMedium`.');
            }
            if (buffer.length) {
                return buffer[buffer.length - 1];
            }
            return defaults;
        },
        useMedium: function (data) {
            var item = middleware(data, assigned);
            buffer.push(item);
            return function () {
                buffer = buffer.filter(function (x) { return x !== item; });
            };
        },
        assignSyncMedium: function (cb) {
            assigned = true;
            while (buffer.length) {
                var cbs = buffer;
                buffer = [];
                cbs.forEach(cb);
            }
            buffer = {
                push: function (x) { return cb(x); },
                filter: function () { return buffer; },
            };
        },
        assignMedium: function (cb) {
            assigned = true;
            var pendingQueue = [];
            if (buffer.length) {
                var cbs = buffer;
                buffer = [];
                cbs.forEach(cb);
                pendingQueue = buffer;
            }
            var executeQueue = function () {
                var cbs = pendingQueue;
                pendingQueue = [];
                cbs.forEach(cb);
            };
            var cycle = function () { return Promise.resolve().then(executeQueue); };
            cycle();
            buffer = {
                push: function (x) {
                    pendingQueue.push(x);
                    cycle();
                },
                filter: function (filter) {
                    pendingQueue = pendingQueue.filter(filter);
                    return buffer;
                },
            };
        },
    };
    return medium;
}
function createMedium(defaults, middleware) {
    if (middleware === void 0) { middleware = ItoI; }
    return innerCreateMedium(defaults, middleware);
}
// eslint-disable-next-line @typescript-eslint/ban-types
function createSidecarMedium(options) {
    if (options === void 0) { options = {}; }
    var medium = innerCreateMedium(null);
    medium.options = tslib_es6_assign({ async: true, ssr: false }, options);
    return medium;
}

;// CONCATENATED MODULE: ./node_modules/react-focus-lock/dist/es2015/medium.js

var mediumFocus = createMedium({}, function (_ref) {
  var target = _ref.target,
      currentTarget = _ref.currentTarget;
  return {
    target: target,
    currentTarget: currentTarget
  };
});
var mediumBlur = createMedium();
var mediumEffect = createMedium();
var mediumSidecar = createSidecarMedium({
  async: true
});
;// CONCATENATED MODULE: ./node_modules/react-focus-lock/dist/es2015/Lock.js








var emptyArray = [];
var Lock_FocusLock = /*#__PURE__*/react.forwardRef(function FocusLockUI(props, parentRef) {
  var _extends2;

  var _React$useState = react.useState(),
      realObserved = _React$useState[0],
      setObserved = _React$useState[1];

  var observed = react.useRef();
  var isActive = react.useRef(false);
  var originalFocusedElement = react.useRef(null);
  var children = props.children,
      disabled = props.disabled,
      noFocusGuards = props.noFocusGuards,
      persistentFocus = props.persistentFocus,
      crossFrame = props.crossFrame,
      autoFocus = props.autoFocus,
      allowTextSelection = props.allowTextSelection,
      group = props.group,
      className = props.className,
      whiteList = props.whiteList,
      hasPositiveIndices = props.hasPositiveIndices,
      _props$shards = props.shards,
      shards = _props$shards === void 0 ? emptyArray : _props$shards,
      _props$as = props.as,
      Container = _props$as === void 0 ? 'div' : _props$as,
      _props$lockProps = props.lockProps,
      containerProps = _props$lockProps === void 0 ? {} : _props$lockProps,
      SideCar = props.sideCar,
      shouldReturnFocus = props.returnFocus,
      focusOptions = props.focusOptions,
      onActivationCallback = props.onActivation,
      onDeactivationCallback = props.onDeactivation;

  var _React$useState2 = react.useState({}),
      id = _React$useState2[0]; // SIDE EFFECT CALLBACKS


  var onActivation = react.useCallback(function () {
    originalFocusedElement.current = originalFocusedElement.current || document && document.activeElement;

    if (observed.current && onActivationCallback) {
      onActivationCallback(observed.current);
    }

    isActive.current = true;
  }, [onActivationCallback]);
  var onDeactivation = react.useCallback(function () {
    isActive.current = false;

    if (onDeactivationCallback) {
      onDeactivationCallback(observed.current);
    }
  }, [onDeactivationCallback]);
  (0,react.useEffect)(function () {
    if (!disabled) {
      // cleanup return focus on trap deactivation
      // sideEffect/returnFocus should happen by this time
      originalFocusedElement.current = null;
    }
  }, []);
  var returnFocus = react.useCallback(function (allowDefer) {
    var returnFocusTo = originalFocusedElement.current;

    if (returnFocusTo && returnFocusTo.focus) {
      var howToReturnFocus = typeof shouldReturnFocus === 'function' ? shouldReturnFocus(returnFocusTo) : shouldReturnFocus;

      if (howToReturnFocus) {
        var returnFocusOptions = typeof howToReturnFocus === 'object' ? howToReturnFocus : undefined;
        originalFocusedElement.current = null;

        if (allowDefer) {
          // React might return focus after update
          // it's safer to defer the action
          Promise.resolve().then(function () {
            return returnFocusTo.focus(returnFocusOptions);
          });
        } else {
          returnFocusTo.focus(returnFocusOptions);
        }
      }
    }
  }, [shouldReturnFocus]); // MEDIUM CALLBACKS

  var onFocus = react.useCallback(function (event) {
    if (isActive.current) {
      mediumFocus.useMedium(event);
    }
  }, []);
  var onBlur = mediumBlur.useMedium; // REF PROPAGATION
  // not using real refs due to race conditions

  var setObserveNode = react.useCallback(function (newObserved) {
    if (observed.current !== newObserved) {
      observed.current = newObserved;
      setObserved(newObserved);
    }
  }, []);

  if (false) {}

  var lockProps = extends_extends((_extends2 = {}, _extends2[FOCUS_DISABLED] = disabled && 'disabled', _extends2[FOCUS_GROUP] = group, _extends2), containerProps);

  var hasLeadingGuards = noFocusGuards !== true;
  var hasTailingGuards = hasLeadingGuards && noFocusGuards !== 'tail';
  var mergedRef = useMergeRef_useMergeRefs([parentRef, setObserveNode]);
  return /*#__PURE__*/react.createElement(react.Fragment, null, hasLeadingGuards && [
  /*#__PURE__*/
  // nearest focus guard
  react.createElement("div", {
    key: "guard-first",
    "data-focus-guard": true,
    tabIndex: disabled ? -1 : 0,
    style: hiddenGuard
  }), // first tabbed element guard
  hasPositiveIndices ? /*#__PURE__*/react.createElement("div", {
    key: "guard-nearest",
    "data-focus-guard": true,
    tabIndex: disabled ? -1 : 1,
    style: hiddenGuard
  }) : null], !disabled && /*#__PURE__*/react.createElement(SideCar, {
    id: id,
    sideCar: mediumSidecar,
    observed: realObserved,
    disabled: disabled,
    persistentFocus: persistentFocus,
    crossFrame: crossFrame,
    autoFocus: autoFocus,
    whiteList: whiteList,
    shards: shards,
    onActivation: onActivation,
    onDeactivation: onDeactivation,
    returnFocus: returnFocus,
    focusOptions: focusOptions
  }), /*#__PURE__*/react.createElement(Container, extends_extends({
    ref: mergedRef
  }, lockProps, {
    className: className,
    onBlur: onBlur,
    onFocus: onFocus
  }), children), hasTailingGuards && /*#__PURE__*/react.createElement("div", {
    "data-focus-guard": true,
    tabIndex: disabled ? -1 : 0,
    style: hiddenGuard
  }));
});
Lock_FocusLock.propTypes =  false ? 0 : {};
Lock_FocusLock.defaultProps = {
  children: undefined,
  disabled: false,
  returnFocus: false,
  focusOptions: undefined,
  noFocusGuards: false,
  autoFocus: true,
  persistentFocus: false,
  crossFrame: true,
  hasPositiveIndices: undefined,
  allowTextSelection: undefined,
  group: undefined,
  className: undefined,
  whiteList: undefined,
  shards: undefined,
  as: 'div',
  lockProps: {},
  onActivation: undefined,
  onDeactivation: undefined
};
/* harmony default export */ const Lock = (Lock_FocusLock);
;// CONCATENATED MODULE: ./node_modules/react-clientside-effect/lib/index.es.js




function withSideEffect(reducePropsToState, handleStateChangeOnClient) {
  if (false) {}

  function getDisplayName(WrappedComponent) {
    return WrappedComponent.displayName || WrappedComponent.name || 'Component';
  }

  return function wrap(WrappedComponent) {
    if (false) {}

    var mountedInstances = [];
    var state;

    function emitChange() {
      state = reducePropsToState(mountedInstances.map(function (instance) {
        return instance.props;
      }));
      handleStateChangeOnClient(state);
    }

    var SideEffect = /*#__PURE__*/function (_PureComponent) {
      _inheritsLoose(SideEffect, _PureComponent);

      function SideEffect() {
        return _PureComponent.apply(this, arguments) || this;
      }

      // Try to use displayName of wrapped component
      SideEffect.peek = function peek() {
        return state;
      };

      var _proto = SideEffect.prototype;

      _proto.componentDidMount = function componentDidMount() {
        mountedInstances.push(this);
        emitChange();
      };

      _proto.componentDidUpdate = function componentDidUpdate() {
        emitChange();
      };

      _proto.componentWillUnmount = function componentWillUnmount() {
        var index = mountedInstances.indexOf(this);
        mountedInstances.splice(index, 1);
        emitChange();
      };

      _proto.render = function render() {
        return /*#__PURE__*/react.createElement(WrappedComponent, this.props);
      };

      return SideEffect;
    }(react.PureComponent);

    defineProperty_defineProperty(SideEffect, "displayName", "SideEffect(" + getDisplayName(WrappedComponent) + ")");

    return SideEffect;
  };
}

/* harmony default export */ const index_es = (withSideEffect);

;// CONCATENATED MODULE: ./node_modules/focus-lock/dist/es2015/utils/array.js
var toArray = function (a) {
    var ret = Array(a.length);
    for (var i = 0; i < a.length; ++i) {
        ret[i] = a[i];
    }
    return ret;
};
var asArray = function (a) { return (Array.isArray(a) ? a : [a]); };

;// CONCATENATED MODULE: ./node_modules/focus-lock/dist/es2015/utils/getActiveElement.js
var getActiveElement = function () {
    return (document.activeElement
        ? document.activeElement.shadowRoot
            ? document.activeElement.shadowRoot.activeElement
            : document.activeElement
        : undefined);
};

;// CONCATENATED MODULE: ./node_modules/focus-lock/dist/es2015/focusIsHidden.js



var focusIsHidden = function () {
    var activeElement = document && getActiveElement();
    if (!activeElement) {
        return false;
    }
    return toArray(document.querySelectorAll("[".concat(FOCUS_ALLOW, "]"))).some(function (node) { return node.contains(activeElement); });
};

;// CONCATENATED MODULE: ./node_modules/focus-lock/dist/es2015/utils/all-affected.js


var filterNested = function (nodes) {
    var contained = new Set();
    var l = nodes.length;
    for (var i = 0; i < l; i += 1) {
        for (var j = i + 1; j < l; j += 1) {
            var position = nodes[i].compareDocumentPosition(nodes[j]);
            if ((position & Node.DOCUMENT_POSITION_CONTAINED_BY) > 0) {
                contained.add(j);
            }
            if ((position & Node.DOCUMENT_POSITION_CONTAINS) > 0) {
                contained.add(i);
            }
        }
    }
    return nodes.filter(function (_, index) { return !contained.has(index); });
};
var getTopParent = function (node) {
    return node.parentNode ? getTopParent(node.parentNode) : node;
};
var getAllAffectedNodes = function (node) {
    var nodes = asArray(node);
    return nodes.filter(Boolean).reduce(function (acc, currentNode) {
        var group = currentNode.getAttribute(FOCUS_GROUP);
        acc.push.apply(acc, (group
            ? filterNested(toArray(getTopParent(currentNode).querySelectorAll("[".concat(FOCUS_GROUP, "=\"").concat(group, "\"]:not([").concat(FOCUS_DISABLED, "=\"disabled\"])"))))
            : [currentNode]));
        return acc;
    }, []);
};

;// CONCATENATED MODULE: ./node_modules/focus-lock/dist/es2015/focusInside.js



var focusInFrame = function (frame) { return frame === document.activeElement; };
var focusInsideIframe = function (topNode) {
    return Boolean(toArray(topNode.querySelectorAll('iframe')).some(function (node) { return focusInFrame(node); }));
};
var focusInside = function (topNode) {
    var activeElement = document && getActiveElement();
    if (!activeElement || (activeElement.dataset && activeElement.dataset.focusGuard)) {
        return false;
    }
    return getAllAffectedNodes(topNode).reduce(function (result, node) { return result || node.contains(activeElement) || focusInsideIframe(node); }, false);
};

;// CONCATENATED MODULE: ./node_modules/focus-lock/dist/es2015/utils/is.js
var isElementHidden = function (node) {
    if (node.nodeType !== Node.ELEMENT_NODE) {
        return false;
    }
    var computedStyle = window.getComputedStyle(node, null);
    if (!computedStyle || !computedStyle.getPropertyValue) {
        return false;
    }
    return (computedStyle.getPropertyValue('display') === 'none' || computedStyle.getPropertyValue('visibility') === 'hidden');
};
var isVisibleUncached = function (node, checkParent) {
    return !node ||
        node === document ||
        (node && node.nodeType === Node.DOCUMENT_NODE) ||
        (!isElementHidden(node) &&
            checkParent(node.parentNode && node.parentNode.nodeType === Node.DOCUMENT_FRAGMENT_NODE
                ?
                    node.parentNode.host
                : node.parentNode));
};
var isVisibleCached = function (visibilityCache, node) {
    var cached = visibilityCache.get(node);
    if (cached !== undefined) {
        return cached;
    }
    var result = isVisibleUncached(node, isVisibleCached.bind(undefined, visibilityCache));
    visibilityCache.set(node, result);
    return result;
};
var getDataset = function (node) {
    return node.dataset;
};
var isHTMLButtonElement = function (node) { return node.tagName === 'BUTTON'; };
var isHTMLInputElement = function (node) { return node.tagName === 'INPUT'; };
var isRadioElement = function (node) {
    return isHTMLInputElement(node) && node.type === 'radio';
};
var notHiddenInput = function (node) {
    return !((isHTMLInputElement(node) || isHTMLButtonElement(node)) && (node.type === 'hidden' || node.disabled)) &&
        !node.ariaDisabled;
};
var isGuard = function (node) { var _a; return Boolean(node && ((_a = getDataset(node)) === null || _a === void 0 ? void 0 : _a.focusGuard)); };
var isNotAGuard = function (node) { return !isGuard(node); };
var isDefined = function (x) { return Boolean(x); };

;// CONCATENATED MODULE: ./node_modules/focus-lock/dist/es2015/utils/correctFocus.js

var findSelectedRadio = function (node, nodes) {
    return nodes
        .filter(isRadioElement)
        .filter(function (el) { return el.name === node.name; })
        .filter(function (el) { return el.checked; })[0] || node;
};
var correctNode = function (node, nodes) {
    if (isRadioElement(node) && node.name) {
        return findSelectedRadio(node, nodes);
    }
    return node;
};
var correctNodes = function (nodes) {
    var resultSet = new Set();
    nodes.forEach(function (node) { return resultSet.add(correctNode(node, nodes)); });
    return nodes.filter(function (node) { return resultSet.has(node); });
};

;// CONCATENATED MODULE: ./node_modules/focus-lock/dist/es2015/utils/firstFocus.js

var pickFirstFocus = function (nodes) {
    if (nodes[0] && nodes.length > 1) {
        return correctNode(nodes[0], nodes);
    }
    return nodes[0];
};
var pickFocusable = function (nodes, index) {
    if (nodes.length > 1) {
        return nodes.indexOf(correctNode(nodes[index], nodes));
    }
    return index;
};

;// CONCATENATED MODULE: ./node_modules/focus-lock/dist/es2015/solver.js



var NEW_FOCUS = 'NEW_FOCUS';
var newFocus = function (innerNodes, outerNodes, activeElement, lastNode) {
    var cnt = innerNodes.length;
    var firstFocus = innerNodes[0];
    var lastFocus = innerNodes[cnt - 1];
    var isOnGuard = isGuard(activeElement);
    if (activeElement && innerNodes.indexOf(activeElement) >= 0) {
        return undefined;
    }
    var activeIndex = activeElement !== undefined ? outerNodes.indexOf(activeElement) : -1;
    var lastIndex = lastNode ? outerNodes.indexOf(lastNode) : activeIndex;
    var lastNodeInside = lastNode ? innerNodes.indexOf(lastNode) : -1;
    var indexDiff = activeIndex - lastIndex;
    var firstNodeIndex = outerNodes.indexOf(firstFocus);
    var lastNodeIndex = outerNodes.indexOf(lastFocus);
    var correctedNodes = correctNodes(outerNodes);
    var correctedIndex = activeElement !== undefined ? correctedNodes.indexOf(activeElement) : -1;
    var correctedIndexDiff = correctedIndex - (lastNode ? correctedNodes.indexOf(lastNode) : activeIndex);
    var returnFirstNode = pickFocusable(innerNodes, 0);
    var returnLastNode = pickFocusable(innerNodes, cnt - 1);
    if (activeIndex === -1 || lastNodeInside === -1) {
        return NEW_FOCUS;
    }
    if (!indexDiff && lastNodeInside >= 0) {
        return lastNodeInside;
    }
    if (activeIndex <= firstNodeIndex && isOnGuard && Math.abs(indexDiff) > 1) {
        return returnLastNode;
    }
    if (activeIndex >= lastNodeIndex && isOnGuard && Math.abs(indexDiff) > 1) {
        return returnFirstNode;
    }
    if (indexDiff && Math.abs(correctedIndexDiff) > 1) {
        return lastNodeInside;
    }
    if (activeIndex <= firstNodeIndex) {
        return returnLastNode;
    }
    if (activeIndex > lastNodeIndex) {
        return returnFirstNode;
    }
    if (indexDiff) {
        if (Math.abs(indexDiff) > 1) {
            return lastNodeInside;
        }
        return (cnt + lastNodeInside + indexDiff) % cnt;
    }
    return undefined;
};

;// CONCATENATED MODULE: ./node_modules/focus-lock/dist/es2015/utils/tabOrder.js

var tabSort = function (a, b) {
    var tabDiff = a.tabIndex - b.tabIndex;
    var indexDiff = a.index - b.index;
    if (tabDiff) {
        if (!a.tabIndex) {
            return 1;
        }
        if (!b.tabIndex) {
            return -1;
        }
    }
    return tabDiff || indexDiff;
};
var orderByTabIndex = function (nodes, filterNegative, keepGuards) {
    return toArray(nodes)
        .map(function (node, index) { return ({
        node: node,
        index: index,
        tabIndex: keepGuards && node.tabIndex === -1 ? ((node.dataset || {}).focusGuard ? 0 : -1) : node.tabIndex,
    }); })
        .filter(function (data) { return !filterNegative || data.tabIndex >= 0; })
        .sort(tabSort);
};

;// CONCATENATED MODULE: ./node_modules/focus-lock/dist/es2015/utils/tabbables.js
var tabbables_tabbables = [
    'button:enabled',
    'select:enabled',
    'textarea:enabled',
    'input:enabled',
    'a[href]',
    'area[href]',
    'summary',
    'iframe',
    'object',
    'embed',
    'audio[controls]',
    'video[controls]',
    '[tabindex]',
    '[contenteditable]',
    '[autofocus]',
];

;// CONCATENATED MODULE: ./node_modules/focus-lock/dist/es2015/utils/tabUtils.js



var queryTabbables = tabbables_tabbables.join(',');
var queryGuardTabbables = "".concat(queryTabbables, ", [data-focus-guard]");
var tabUtils_getFocusables = function (parents, withGuards) {
    return parents.reduce(function (acc, parent) {
        return acc.concat(toArray(parent.querySelectorAll(withGuards ? queryGuardTabbables : queryTabbables)), parent.parentNode
            ? toArray(parent.parentNode.querySelectorAll(queryTabbables)).filter(function (node) { return node === parent; })
            : []);
    }, []);
};
var getParentAutofocusables = function (parent) {
    var parentFocus = parent.querySelectorAll("[".concat(FOCUS_AUTO, "]"));
    return toArray(parentFocus)
        .map(function (node) { return tabUtils_getFocusables([node]); })
        .reduce(function (acc, nodes) { return acc.concat(nodes); }, []);
};

;// CONCATENATED MODULE: ./node_modules/focus-lock/dist/es2015/utils/DOMutils.js




var filterFocusable = function (nodes, visibilityCache) {
    return toArray(nodes)
        .filter(function (node) { return isVisibleCached(visibilityCache, node); })
        .filter(function (node) { return notHiddenInput(node); });
};
var getTabbableNodes = function (topNodes, visibilityCache, withGuards) {
    return orderByTabIndex(filterFocusable(tabUtils_getFocusables(topNodes, withGuards), visibilityCache), true, withGuards);
};
var getAllTabbableNodes = function (topNodes, visibilityCache) {
    return orderByTabIndex(filterFocusable(tabUtils_getFocusables(topNodes), visibilityCache), false);
};
var parentAutofocusables = function (topNode, visibilityCache) {
    return filterFocusable(getParentAutofocusables(topNode), visibilityCache);
};

;// CONCATENATED MODULE: ./node_modules/focus-lock/dist/es2015/utils/parenting.js


var getParents = function (node, parents) {
    if (parents === void 0) { parents = []; }
    parents.push(node);
    if (node.parentNode) {
        getParents(node.parentNode, parents);
    }
    return parents;
};
var getCommonParent = function (nodeA, nodeB) {
    var parentsA = getParents(nodeA);
    var parentsB = getParents(nodeB);
    for (var i = 0; i < parentsA.length; i += 1) {
        var currentParent = parentsA[i];
        if (parentsB.indexOf(currentParent) >= 0) {
            return currentParent;
        }
    }
    return false;
};
var getTopCommonParent = function (baseActiveElement, leftEntry, rightEntries) {
    var activeElements = asArray(baseActiveElement);
    var leftEntries = asArray(leftEntry);
    var activeElement = activeElements[0];
    var topCommon = false;
    leftEntries.filter(Boolean).forEach(function (entry) {
        topCommon = getCommonParent(topCommon || entry, entry) || topCommon;
        rightEntries.filter(Boolean).forEach(function (subEntry) {
            var common = getCommonParent(activeElement, subEntry);
            if (common) {
                if (!topCommon || common.contains(topCommon)) {
                    topCommon = common;
                }
                else {
                    topCommon = getCommonParent(common, topCommon);
                }
            }
        });
    });
    return topCommon;
};
var allParentAutofocusables = function (entries, visibilityCache) {
    return entries.reduce(function (acc, node) { return acc.concat(parentAutofocusables(node, visibilityCache)); }, []);
};

;// CONCATENATED MODULE: ./node_modules/focus-lock/dist/es2015/focusMerge.js







var findAutoFocused = function (autoFocusables) {
    return function (node) { var _a; return node.autofocus || !!((_a = getDataset(node)) === null || _a === void 0 ? void 0 : _a.autofocus) || autoFocusables.indexOf(node) >= 0; };
};
var reorderNodes = function (srcNodes, dstNodes) {
    var remap = new Map();
    dstNodes.forEach(function (entity) { return remap.set(entity.node, entity); });
    return srcNodes.map(function (node) { return remap.get(node); }).filter(isDefined);
};
var getFocusMerge = function (topNode, lastNode) {
    var activeElement = document && getActiveElement();
    var entries = getAllAffectedNodes(topNode).filter(isNotAGuard);
    var commonParent = getTopCommonParent(activeElement || topNode, topNode, entries);
    var visibilityCache = new Map();
    var anyFocusable = getAllTabbableNodes(entries, visibilityCache);
    var innerElements = getTabbableNodes(entries, visibilityCache).filter(function (_a) {
        var node = _a.node;
        return isNotAGuard(node);
    });
    if (!innerElements[0]) {
        innerElements = anyFocusable;
        if (!innerElements[0]) {
            return undefined;
        }
    }
    var outerNodes = getAllTabbableNodes([commonParent], visibilityCache).map(function (_a) {
        var node = _a.node;
        return node;
    });
    var orderedInnerElements = reorderNodes(outerNodes, innerElements);
    var innerNodes = orderedInnerElements.map(function (_a) {
        var node = _a.node;
        return node;
    });
    var newId = newFocus(innerNodes, outerNodes, activeElement, lastNode);
    if (newId === NEW_FOCUS) {
        var autoFocusable = anyFocusable
            .map(function (_a) {
            var node = _a.node;
            return node;
        })
            .filter(findAutoFocused(allParentAutofocusables(entries, visibilityCache)));
        return {
            node: autoFocusable && autoFocusable.length ? pickFirstFocus(autoFocusable) : pickFirstFocus(innerNodes),
        };
    }
    if (newId === undefined) {
        return newId;
    }
    return orderedInnerElements[newId];
};

;// CONCATENATED MODULE: ./node_modules/focus-lock/dist/es2015/setFocus.js

var focusOn = function (target, focusOptions) {
    if ('focus' in target) {
        target.focus(focusOptions);
    }
    if ('contentWindow' in target && target.contentWindow) {
        target.contentWindow.focus();
    }
};
var guardCount = 0;
var lockDisabled = false;
var setFocus = function (topNode, lastNode, options) {
    if (options === void 0) { options = {}; }
    var focusable = getFocusMerge(topNode, lastNode);
    if (lockDisabled) {
        return;
    }
    if (focusable) {
        if (guardCount > 2) {
            console.error('FocusLock: focus-fighting detected. Only one focus management system could be active. ' +
                'See https://github.com/theKashey/focus-lock/#focus-fighting');
            lockDisabled = true;
            setTimeout(function () {
                lockDisabled = false;
            }, 1);
            return;
        }
        guardCount++;
        focusOn(focusable.node, options.focusOptions);
        guardCount--;
    }
};

;// CONCATENATED MODULE: ./node_modules/focus-lock/dist/es2015/index.js











/* harmony default export */ const es2015 = (setFocus);

;// CONCATENATED MODULE: ./node_modules/focus-lock/dist/es2015/focusables.js




var getFocusabledIn = function (topNode) {
    var entries = getAllAffectedNodes(topNode).filter(isNotAGuard);
    var commonParent = getTopCommonParent(topNode, topNode, entries);
    var visibilityCache = new Map();
    var outerNodes = getTabbableNodes([commonParent], visibilityCache, true);
    var innerElements = getTabbableNodes(entries, visibilityCache)
        .filter(function (_a) {
        var node = _a.node;
        return isNotAGuard(node);
    })
        .map(function (_a) {
        var node = _a.node;
        return node;
    });
    return outerNodes.map(function (_a) {
        var node = _a.node, index = _a.index;
        return ({
            node: node,
            index: index,
            lockItem: innerElements.indexOf(node) >= 0,
            guard: isGuard(node),
        });
    });
};

;// CONCATENATED MODULE: ./node_modules/react-focus-lock/dist/es2015/util.js
function deferAction(action) {
  // Hidding setImmediate from Webpack to avoid inserting polyfill
  var _window = window,
      setImmediate = _window.setImmediate;

  if (typeof setImmediate !== 'undefined') {
    setImmediate(action);
  } else {
    setTimeout(action, 1);
  }
}
var inlineProp = function inlineProp(name, value) {
  var obj = {};
  obj[name] = value;
  return obj;
};
;// CONCATENATED MODULE: ./node_modules/react-focus-lock/dist/es2015/Trap.js







var focusOnBody = function focusOnBody() {
  return document && document.activeElement === document.body;
};

var isFreeFocus = function isFreeFocus() {
  return focusOnBody() || focusIsHidden();
};

var lastActiveTrap = null;
var lastActiveFocus = null;
var lastPortaledElement = null;
var focusWasOutsideWindow = false;

var defaultWhitelist = function defaultWhitelist() {
  return true;
};

var focusWhitelisted = function focusWhitelisted(activeElement) {
  return (lastActiveTrap.whiteList || defaultWhitelist)(activeElement);
};

var recordPortal = function recordPortal(observerNode, portaledElement) {
  lastPortaledElement = {
    observerNode: observerNode,
    portaledElement: portaledElement
  };
};

var focusIsPortaledPair = function focusIsPortaledPair(element) {
  return lastPortaledElement && lastPortaledElement.portaledElement === element;
};

function autoGuard(startIndex, end, step, allNodes) {
  var lastGuard = null;
  var i = startIndex;

  do {
    var item = allNodes[i];

    if (item.guard) {
      if (item.node.dataset.focusAutoGuard) {
        lastGuard = item;
      }
    } else if (item.lockItem) {
      if (i !== startIndex) {
        // we will tab to the next element
        return;
      }

      lastGuard = null;
    } else {
      break;
    }
  } while ((i += step) !== end);

  if (lastGuard) {
    lastGuard.node.tabIndex = 0;
  }
}

var extractRef = function extractRef(ref) {
  return ref && 'current' in ref ? ref.current : ref;
};

var focusWasOutside = function focusWasOutside(crossFrameOption) {
  if (crossFrameOption) {
    // with cross frame return true for any value
    return Boolean(focusWasOutsideWindow);
  } // in other case return only of focus went a while aho


  return focusWasOutsideWindow === 'meanwhile';
};

var checkInHost = function checkInHost(check, el, boundary) {
  return el // find host equal to active element and check nested active element
  && (el.host === check && (!el.activeElement || boundary.contains(el.activeElement)) // dive up
  || el.parentNode && checkInHost(check, el.parentNode, boundary));
};

var withinHost = function withinHost(activeElement, workingArea) {
  return workingArea.some(function (area) {
    return checkInHost(activeElement, area, area);
  });
};

var activateTrap = function activateTrap() {
  var result = false;

  if (lastActiveTrap) {
    var _lastActiveTrap = lastActiveTrap,
        observed = _lastActiveTrap.observed,
        persistentFocus = _lastActiveTrap.persistentFocus,
        autoFocus = _lastActiveTrap.autoFocus,
        shards = _lastActiveTrap.shards,
        crossFrame = _lastActiveTrap.crossFrame,
        focusOptions = _lastActiveTrap.focusOptions;
    var workingNode = observed || lastPortaledElement && lastPortaledElement.portaledElement;
    var activeElement = document && document.activeElement;

    if (workingNode) {
      var workingArea = [workingNode].concat(shards.map(extractRef).filter(Boolean));

      if (!activeElement || focusWhitelisted(activeElement)) {
        if (persistentFocus || focusWasOutside(crossFrame) || !isFreeFocus() || !lastActiveFocus && autoFocus) {
          if (workingNode && !( // active element is "inside" working area
          focusInside(workingArea) || // check for shadow-dom contained elements
          activeElement && withinHost(activeElement, workingArea) || focusIsPortaledPair(activeElement, workingNode))) {
            if (document && !lastActiveFocus && activeElement && !autoFocus) {
              // Check if blur() exists, which is missing on certain elements on IE
              if (activeElement.blur) {
                activeElement.blur();
              }

              document.body.focus();
            } else {
              result = es2015(workingArea, lastActiveFocus, {
                focusOptions: focusOptions
              });
              lastPortaledElement = {};
            }
          }

          focusWasOutsideWindow = false;
          lastActiveFocus = document && document.activeElement;
        }
      }

      if (document) {
        var newActiveElement = document && document.activeElement;
        var allNodes = getFocusabledIn(workingArea);
        var focusedIndex = allNodes.map(function (_ref) {
          var node = _ref.node;
          return node;
        }).indexOf(newActiveElement);

        if (focusedIndex > -1) {
          // remove old focus
          allNodes.filter(function (_ref2) {
            var guard = _ref2.guard,
                node = _ref2.node;
            return guard && node.dataset.focusAutoGuard;
          }).forEach(function (_ref3) {
            var node = _ref3.node;
            return node.removeAttribute('tabIndex');
          });
          autoGuard(focusedIndex, allNodes.length, +1, allNodes);
          autoGuard(focusedIndex, -1, -1, allNodes);
        }
      }
    }
  }

  return result;
};

var onTrap = function onTrap(event) {
  if (activateTrap() && event) {
    // prevent scroll jump
    event.stopPropagation();
    event.preventDefault();
  }
};

var onBlur = function onBlur() {
  return deferAction(activateTrap);
};

var Trap_onFocus = function onFocus(event) {
  // detect portal
  var source = event.target;
  var currentNode = event.currentTarget;

  if (!currentNode.contains(source)) {
    recordPortal(currentNode, source);
  }
};

var FocusWatcher = function FocusWatcher() {
  return null;
};

var FocusTrap = function FocusTrap(_ref4) {
  var children = _ref4.children;
  return /*#__PURE__*/react.createElement("div", {
    onBlur: onBlur,
    onFocus: Trap_onFocus
  }, children);
};

FocusTrap.propTypes =  false ? 0 : {};

var onWindowBlur = function onWindowBlur() {
  focusWasOutsideWindow = 'just'; // using setTimeout to set  this variable after React/sidecar reaction

  setTimeout(function () {
    focusWasOutsideWindow = 'meanwhile';
  }, 0);
};

var attachHandler = function attachHandler() {
  document.addEventListener('focusin', onTrap);
  document.addEventListener('focusout', onBlur);
  window.addEventListener('blur', onWindowBlur);
};

var detachHandler = function detachHandler() {
  document.removeEventListener('focusin', onTrap);
  document.removeEventListener('focusout', onBlur);
  window.removeEventListener('blur', onWindowBlur);
};

function reducePropsToState(propsList) {
  return propsList.filter(function (_ref5) {
    var disabled = _ref5.disabled;
    return !disabled;
  });
}

function handleStateChangeOnClient(traps) {
  var trap = traps.slice(-1)[0];

  if (trap && !lastActiveTrap) {
    attachHandler();
  }

  var lastTrap = lastActiveTrap;
  var sameTrap = lastTrap && trap && trap.id === lastTrap.id;
  lastActiveTrap = trap;

  if (lastTrap && !sameTrap) {
    lastTrap.onDeactivation(); // return focus only of last trap was removed

    if (!traps.filter(function (_ref6) {
      var id = _ref6.id;
      return id === lastTrap.id;
    }).length) {
      // allow defer is no other trap is awaiting restore
      lastTrap.returnFocus(!trap);
    }
  }

  if (trap) {
    lastActiveFocus = null;

    if (!sameTrap || lastTrap.observed !== trap.observed) {
      trap.onActivation();
    }

    activateTrap(true);
    deferAction(activateTrap);
  } else {
    detachHandler();
    lastActiveFocus = null;
  }
} // bind medium


mediumFocus.assignSyncMedium(Trap_onFocus);
mediumBlur.assignMedium(onBlur);
mediumEffect.assignMedium(function (cb) {
  return cb({
    moveFocusInside: es2015,
    focusInside: focusInside
  });
});
/* harmony default export */ const Trap = (index_es(reducePropsToState, handleStateChangeOnClient)(FocusWatcher));
;// CONCATENATED MODULE: ./node_modules/react-focus-lock/dist/es2015/Combination.js





/* that would be a BREAKING CHANGE!
// delaying sidecar execution till the first usage
const RequireSideCar = (props) => {
  // eslint-disable-next-line global-require
  const SideCar = require('./Trap').default;
  return <SideCar {...props} />;
};
*/

var FocusLockCombination = /*#__PURE__*/react.forwardRef(function FocusLockUICombination(props, ref) {
  return /*#__PURE__*/react.createElement(Lock, extends_extends({
    sideCar: Trap,
    ref: ref
  }, props));
});

var _ref = Lock.propTypes || {},
    sideCar = _ref.sideCar,
    propTypes = objectWithoutPropertiesLoose_objectWithoutPropertiesLoose(_ref, ["sideCar"]);

FocusLockCombination.propTypes =  false ? 0 : {};
/* harmony default export */ const Combination = (FocusLockCombination);
;// CONCATENATED MODULE: ./node_modules/react-focus-lock/dist/es2015/index.js


/* harmony default export */ const dist_es2015 = (Combination);
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/top-navigation/parts/overflow-menu/header.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0



var header_Header = function (_a) {
    var children = _a.children, secondaryText = _a.secondaryText, backIconAriaLabel = _a.backIconAriaLabel, dismissIconAriaLabel = _a.dismissIconAriaLabel, onBack = _a.onBack, onClose = _a.onClose;
    return (react.createElement("div", { className: top_navigation_styles_css["overflow-menu-header"] },
        onBack && (react.createElement(button_internal
        // Used for test-utils, which require the selectable element to have a classname.
        // eslint-disable-next-line react/forbid-component-props
        , {
            // Used for test-utils, which require the selectable element to have a classname.
            // eslint-disable-next-line react/forbid-component-props
            className: top_navigation_styles_css["overflow-menu-back-button"], ariaLabel: backIconAriaLabel, iconName: "angle-left", variant: "icon", onClick: function () { return onBack(); } })),
        react.createElement("h2", { className: top_navigation_styles_css["overflow-menu-header-text"] },
            react.createElement("div", { className: top_navigation_styles_css["overflow-menu-header-text--title"] }, children),
            secondaryText && react.createElement("div", { className: top_navigation_styles_css["overflow-menu-header-text--secondary"] }, secondaryText)),
        react.createElement(button_internal
        // eslint-disable-next-line react/forbid-component-props
        , {
            // eslint-disable-next-line react/forbid-component-props
            className: top_navigation_styles_css["overflow-menu-dismiss-button"], ariaLabel: dismissIconAriaLabel, iconName: "close", variant: "icon", onClick: function () { return onClose && onClose(); } })));
};
/* harmony default export */ const header = (header_Header);
//# sourceMappingURL=header.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/top-navigation/parts/overflow-menu/menu-item.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0








var ListItem = function (_a) {
    var children = _a.children, startIcon = _a.startIcon, endIcon = _a.endIcon;
    return (react.createElement(react.Fragment, null,
        startIcon && react.createElement("span", { className: top_navigation_styles_css["overflow-menu-list-item-icon"] }, startIcon),
        react.createElement("span", { className: top_navigation_styles_css["overflow-menu-list-item-text"] }, children),
        endIcon && endIcon));
};
var LinkItem = (0,react.forwardRef)(function (_a, ref) {
    var children = _a.children, external = _a.external, href = _a.href, startIcon = _a.startIcon, endIcon = _a.endIcon, onFollow = _a.onFollow, context = _a.context, testId = _a.testId;
    var focusVisible = useFocusVisible();
    var rel = external ? 'noopener noreferrer' : undefined;
    var target = external ? '_blank' : undefined;
    var anchorProps = {
        rel: rel,
        target: target,
        href: href,
        onClick: function (event) {
            if (isPlainLeftClick(event)) {
                onFollow === null || onFollow === void 0 ? void 0 : onFollow(event);
            }
        }
    };
    var buttonProps = {
        role: 'button',
        tabIndex: 0,
        onKeyDown: function (event) {
            if (event.key === ' ') {
                event.preventDefault();
            }
        },
        onKeyUp: function (event) {
            if (event.key === ' ' || event.key === 'Enter') {
                onFollow === null || onFollow === void 0 ? void 0 : onFollow(event);
            }
        },
        onClick: onFollow
    };
    return (react.createElement("a", tslib_es6_assign({ ref: ref, className: clsx_m(top_navigation_styles_css["overflow-menu-control"], top_navigation_styles_css["overflow-menu-control-link"], context && top_navigation_styles_css["overflow-menu-control-".concat(context)]) }, (typeof href === 'string' ? anchorProps : buttonProps), focusVisible, (testId ? { 'data-testid': testId } : {})),
        react.createElement(ListItem, { startIcon: startIcon, endIcon: endIcon }, children)));
});
var ButtonItem = (0,react.forwardRef)(function (_a, ref) {
    var children = _a.children, startIcon = _a.startIcon, endIcon = _a.endIcon, onClick = _a.onFollow, testId = _a.testId;
    var focusVisible = useFocusVisible();
    return (react.createElement("button", tslib_es6_assign({ ref: ref, className: top_navigation_styles_css["overflow-menu-control"], onClick: onClick }, focusVisible, (typeof testId === 'string' ? { 'data-testid': testId } : {})),
        react.createElement(ListItem, { startIcon: startIcon, endIcon: endIcon }, children)));
});
var NavigationItem = (0,react.forwardRef)(function (_a, ref) {
    var startIcon = _a.startIcon, children = _a.children, index = _a.index, testId = _a.testId, definition = __rest(_a, ["startIcon", "children", "index", "testId"]);
    var navigate = router_useNavigate();
    return (react.createElement(ButtonItem, { ref: ref, startIcon: startIcon, endIcon: react.createElement(internal, { name: "angle-right" }), testId: testId, onFollow: function () {
            return navigate('dropdown-menu', {
                definition: definition,
                headerText: definition.text || definition.title,
                headerSecondaryText: definition.description,
                utilityIndex: index
            });
        } }, children));
});
var ExpandableItem = function (_a) {
    var children = _a.children, onItemClick = _a.onItemClick, definition = __rest(_a, ["children", "onItemClick"]);
    var focusVisible = useFocusVisible();
    var _b = (0,react.useState)(false), expanded = _b[0], setExpanded = _b[1];
    var headerId = useUniqueId('overflow-menu-item');
    return (react.createElement(react.Fragment, null,
        react.createElement("button", tslib_es6_assign({ className: clsx_m(top_navigation_styles_css["overflow-menu-control"], top_navigation_styles_css["overflow-menu-control-expandable-menu-trigger"]), onClick: function () { return setExpanded(function (value) { return !value; }); }, "aria-expanded": expanded }, focusVisible),
            react.createElement(ListItem, { endIcon: react.createElement("span", { className: clsx_m(top_navigation_styles_css.icon, expanded && top_navigation_styles_css.expanded) },
                    react.createElement(internal, { name: "caret-up-filled" })) },
                react.createElement("span", { id: headerId }, children))),
        expanded && (react.createElement("ul", { className: clsx_m(top_navigation_styles_css["overflow-menu-list"], top_navigation_styles_css["overflow-menu-list-submenu"]), "aria-labelledby": headerId }, definition.items.map(function (item, index) {
            var isGroup = typeof item.items !== 'undefined';
            return (react.createElement("li", { key: index, className: clsx_m(top_navigation_styles_css["overflow-menu-list-item"], top_navigation_styles_css["overflow-menu-list-item-dropdown-menu"]) }, dropdownComponentFactory(item, isGroup, onItemClick)));
        })))));
};
function utilityComponentFactory(utility, index, ref) {
    var label = utility.text || utility.title;
    var hasIcon = !!utility.iconName || !!utility.iconUrl || !!utility.iconAlt || !!utility.iconSvg;
    var startIcon = hasIcon && (react.createElement(internal, { name: utility.iconName, url: utility.iconUrl, alt: utility.iconAlt, svg: utility.iconSvg }));
    switch (utility.type) {
        case 'button': {
            var handleClick = function (event) {
                fireCancelableEvent(utility.onClick, {}, event);
            };
            if (utility.variant === 'primary-button') {
                return (react.createElement(ButtonItem, { ref: ref, startIcon: startIcon, onFollow: handleClick, testId: "__".concat(index) }, label));
            }
            return (react.createElement(LinkItem, { ref: ref, startIcon: startIcon, href: utility.href, external: utility.external, testId: "__".concat(index), onFollow: handleClick },
                label,
                utility.external && (react.createElement(react.Fragment, null,
                    ' ',
                    react.createElement("span", { "aria-label": utility.externalIconAriaLabel, role: utility.externalIconAriaLabel ? 'img' : undefined },
                        react.createElement(internal, { name: "external", size: "normal" }))))));
        }
        case 'menu-dropdown': {
            return (react.createElement(NavigationItem, tslib_es6_assign({ ref: ref, startIcon: startIcon, index: index }, utility, { testId: "__".concat(index) }), label));
        }
    }
}
function dropdownComponentFactory(item, expandable, onItemClick) {
    var label = item.text;
    var hasIcon = !!item.iconName || !!item.iconUrl || !!item.iconAlt || !!item.iconSvg;
    var startIcon = hasIcon && (react.createElement(internal, { name: item.iconName, url: item.iconUrl, alt: item.iconAlt, svg: item.iconSvg }));
    if (expandable) {
        return (react.createElement(ExpandableItem, tslib_es6_assign({}, item, { onItemClick: onItemClick }), label));
    }
    return (react.createElement(LinkItem, { startIcon: startIcon, href: item.href, external: item.external, context: "dropdown-menu", testId: item.id, onFollow: function () { return onItemClick(item); } },
        label,
        item.external && (react.createElement(react.Fragment, null,
            ' ',
            react.createElement("span", { "aria-label": item.externalIconAriaLabel, role: item.externalIconAriaLabel ? 'img' : undefined },
                react.createElement(internal, { name: "external", size: "normal" }))))));
}
var UtilityMenuItem = (0,react.forwardRef)(function (_a, ref) {
    var index = _a.index, props = __rest(_a, ["index"]);
    return (react.createElement("li", { className: clsx_m(top_navigation_styles_css["overflow-menu-list-item"], top_navigation_styles_css["overflow-menu-list-item-utility"]) }, utilityComponentFactory(props, index, ref)));
});
var SubmenuItem = function (props) {
    var expandable = typeof props.items !== 'undefined';
    return (react.createElement("li", { className: clsx_m(top_navigation_styles_css["overflow-menu-list-item"], top_navigation_styles_css["overflow-menu-list-item-submenu"], expandable && top_navigation_styles_css["overflow-menu-list-item-expandable"]) }, dropdownComponentFactory(props, expandable, props.onItemClick)));
};
//# sourceMappingURL=menu-item.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/top-navigation/parts/overflow-menu/views/utilities.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0






var UtilitiesView = function (_a) {
    var headerText = _a.headerText, dismissIconAriaLabel = _a.dismissIconAriaLabel, onClose = _a.onClose, _b = _a.items, items = _b === void 0 ? [] : _b, focusIndex = _a.focusIndex;
    var headerId = useUniqueId('overflow-menu-header');
    var ref = (0,react.useRef)(null);
    (0,react.useEffect)(function () {
        var _a;
        // A focus index is used to set the focus back to the submenu trigger
        // returning from a submenu.
        if (typeof focusIndex === 'number') {
            (_a = ref.current) === null || _a === void 0 ? void 0 : _a.focus();
        }
    }, [focusIndex]);
    return (react.createElement(dist_es2015, { returnFocus: true },
        react.createElement(header, { dismissIconAriaLabel: dismissIconAriaLabel, onClose: onClose },
            react.createElement("span", { id: headerId }, headerText)),
        react.createElement("ul", { className: top_navigation_styles_css["overflow-menu-list"], "aria-labelledby": headerId }, items.map(function (utility, index) { return (react.createElement(UtilityMenuItem, tslib_es6_assign({ key: index, index: index, ref: index === focusIndex ? ref : undefined }, utility))); }))));
};
/* harmony default export */ const utilities = (UtilitiesView);
//# sourceMappingURL=utilities.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/top-navigation/parts/overflow-menu/views/submenu.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0









var SubmenuView = function (_a) {
    var onClose = _a.onClose, utilityIndex = _a.utilityIndex, headerText = _a.headerText, headerSecondaryText = _a.headerSecondaryText, dismissIconAriaLabel = _a.dismissIconAriaLabel, backIconAriaLabel = _a.backIconAriaLabel, definition = _a.definition;
    var navigate = router_useNavigate();
    var headerId = useUniqueId('overflow-menu-header');
    return (react.createElement(dist_es2015, { returnFocus: true },
        react.createElement(header, { secondaryText: headerSecondaryText, dismissIconAriaLabel: dismissIconAriaLabel, backIconAriaLabel: backIconAriaLabel, onClose: onClose, onBack: function () { return navigate('utilities', { utilityIndex: utilityIndex }); } },
            react.createElement("span", { id: headerId }, headerText)),
        react.createElement("ul", { className: clsx_m(top_navigation_styles_css["overflow-menu-list"], top_navigation_styles_css["overflow-menu-list-submenu"]), "aria-labelledby": headerId }, definition.items.map(function (item, index) { return (react.createElement(SubmenuItem, tslib_es6_assign({ key: index }, item, { onItemClick: function (item) {
                fireCancelableEvent(definition.onItemClick, { id: item.id, href: item.href, external: item.external });
                onClose === null || onClose === void 0 ? void 0 : onClose();
            } }))); }))));
};
/* harmony default export */ const submenu = (SubmenuView);
//# sourceMappingURL=submenu.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/top-navigation/parts/overflow-menu/index.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0





var OverflowMenu = function (_a) {
    var headerText = _a.headerText, dismissIconAriaLabel = _a.dismissIconAriaLabel, backIconAriaLabel = _a.backIconAriaLabel, _b = _a.items, items = _b === void 0 ? [] : _b, onClose = _a.onClose;
    return (react.createElement("div", { className: top_navigation_styles_css["overflow-menu"], onKeyUp: function (event) {
            if (event.key === 'Escape') {
                onClose === null || onClose === void 0 ? void 0 : onClose();
            }
        } },
        react.createElement(router, null,
            react.createElement(router_Route, { view: "utilities", element: function (data) { return (react.createElement(utilities, { headerText: headerText, items: items, focusIndex: data === null || data === void 0 ? void 0 : data.utilityIndex, dismissIconAriaLabel: dismissIconAriaLabel, backIconAriaLabel: backIconAriaLabel, onClose: onClose })); } }),
            react.createElement(router_Route, { view: "dropdown-menu", element: function (data) { return (react.createElement(submenu, { headerText: data === null || data === void 0 ? void 0 : data.headerText, headerSecondaryText: data === null || data === void 0 ? void 0 : data.headerSecondaryText, dismissIconAriaLabel: dismissIconAriaLabel, backIconAriaLabel: backIconAriaLabel, definition: data === null || data === void 0 ? void 0 : data.definition, utilityIndex: data === null || data === void 0 ? void 0 : data.utilityIndex, onClose: onClose })); } }))));
};
/* harmony default export */ const overflow_menu = (OverflowMenu);
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/top-navigation/internal.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0














function InternalTopNavigation(_a) {
    var __internalRootRef = _a.__internalRootRef, identity = _a.identity, i18nStrings = _a.i18nStrings, utilities = _a.utilities, search = _a.search, restProps = __rest(_a, ["__internalRootRef", "identity", "i18nStrings", "utilities", "search"]);
    checkSafeUrl('TopNavigation', identity.href);
    var baseProps = getBaseProps(restProps);
    var _b = useTopNavigation({ identity: identity, search: search, utilities: utilities }), mainRef = _b.mainRef, virtualRef = _b.virtualRef, breakpoint = _b.breakpoint, responsiveState = _b.responsiveState, isSearchExpanded = _b.isSearchExpanded, onSearchUtilityClick = _b.onSearchUtilityClick;
    var _c = (0,react.useState)(false), overflowMenuOpen = _c[0], setOverflowMenuOpen = _c[1];
    var overflowMenuTriggerRef = (0,react.useRef)(null);
    var isNarrowViewport = breakpoint === 'default';
    var isMediumViewport = breakpoint === 'xxs';
    var isLargeViewport = breakpoint === 's';
    var onIdentityClick = function (event) {
        if (isPlainLeftClick(event)) {
            fireCancelableEvent(identity.onFollow, {}, event);
        }
    };
    var toggleOverflowMenu = function () {
        setOverflowMenuOpen(function (overflowMenuOpen) { return !overflowMenuOpen; });
    };
    var focusVisible = useFocusVisible();
    var menuTriggerVisible = !isSearchExpanded && responsiveState.hideUtilities;
    (0,react.useEffect)(function () {
        setOverflowMenuOpen(false);
    }, [menuTriggerVisible]);
    useEffectOnUpdate(function () {
        var _a;
        if (!overflowMenuOpen) {
            (_a = overflowMenuTriggerRef.current) === null || _a === void 0 ? void 0 : _a.focus();
        }
    }, [overflowMenuOpen]);
    // Render the top nav twice; once as the top nav that users can see, and another
    // "virtual" top nav used just for calculations. The virtual top nav doesn't react to
    // layout changes and renders two sets of utilities: one with labels and one without.
    var content = function (isVirtual) {
        var _a, _b, _c, _d;
        var _e, _f;
        var Wrapper = isVirtual ? 'div' : 'header';
        var showIdentity = isVirtual || !isSearchExpanded;
        var showTitle = isVirtual || !responsiveState.hideTitle;
        var showSearchSlot = search && (isVirtual || !responsiveState.hideSearch || isSearchExpanded);
        var showSearchUtility = isVirtual || (search && responsiveState.hideSearch);
        var showUtilities = isVirtual || !isSearchExpanded;
        var showMenuTrigger = isVirtual || menuTriggerVisible;
        return (react.createElement(Wrapper, { ref: isVirtual ? virtualRef : mainRef, "aria-hidden": isVirtual ? true : undefined,
            // Wrapper is an alias for "div" or "header".
            // eslint-disable-next-line react/forbid-component-props
            className: clsx_m(top_navigation_styles_css["top-navigation"], (_a = {},
                _a[top_navigation_styles_css.virtual] = isVirtual,
                _a[top_navigation_styles_css.hidden] = isVirtual,
                _a[top_navigation_styles_css.narrow] = isNarrowViewport,
                _a[top_navigation_styles_css.medium] = isMediumViewport,
                _a)) },
            react.createElement("div", { className: top_navigation_styles_css["padding-box"] },
                showIdentity && (react.createElement("div", { className: clsx_m(top_navigation_styles_css.identity, !identity.logo && top_navigation_styles_css["no-logo"]) },
                    react.createElement("a", tslib_es6_assign({}, focusVisible, { className: top_navigation_styles_css["identity-link"], href: identity.href, onClick: onIdentityClick }),
                        identity.logo && (react.createElement("img", { role: "img", src: (_e = identity.logo) === null || _e === void 0 ? void 0 : _e.src, alt: (_f = identity.logo) === null || _f === void 0 ? void 0 : _f.alt, className: clsx_m(top_navigation_styles_css.logo, (_b = {},
                                _b[top_navigation_styles_css.narrow] = isNarrowViewport,
                                _b)) })),
                        showTitle && react.createElement("span", { className: top_navigation_styles_css.title }, identity.title)))),
                react.createElement("div", { className: top_navigation_styles_css.inputs }, showSearchSlot && (react.createElement("div", { className: clsx_m(top_navigation_styles_css.search, !isVirtual && isSearchExpanded && top_navigation_styles_css["search-expanded"]) }, search))),
                react.createElement("div", { className: top_navigation_styles_css.utilities },
                    showSearchUtility && (react.createElement("div", { className: clsx_m(top_navigation_styles_css["utility-wrapper"], top_navigation_styles_css["utility-type-button"], top_navigation_styles_css["utility-type-button-link"], (_c = {},
                            _c[top_navigation_styles_css.narrow] = isNarrowViewport,
                            _c[top_navigation_styles_css.medium] = isMediumViewport,
                            _c)), "data-utility-special": "search" },
                        react.createElement(Utility, { hideText: true, definition: {
                                type: 'button',
                                iconName: isSearchExpanded ? 'close' : 'search',
                                ariaLabel: isSearchExpanded
                                    ? i18nStrings.searchDismissIconAriaLabel
                                    : i18nStrings.searchIconAriaLabel,
                                onClick: onSearchUtilityClick
                            } }))),
                    showUtilities &&
                        utilities
                            .filter(function (_utility, i) {
                            return isVirtual || !responsiveState.hideUtilities || responsiveState.hideUtilities.indexOf(i) === -1;
                        })
                            .map(function (utility, i) {
                            var _a;
                            var _b;
                            var hideText = !!responsiveState.hideUtilityText;
                            var isLast = (isVirtual || !showMenuTrigger) && i === utilities.length - 1;
                            var offsetRight = isLast && isLargeViewport ? 'xxl' : isLast ? 'l' : undefined;
                            return (react.createElement("div", { key: i, className: clsx_m(top_navigation_styles_css["utility-wrapper"], top_navigation_styles_css["utility-type-".concat(utility.type)], utility.type === 'button' && top_navigation_styles_css["utility-type-button-".concat((_b = utility.variant) !== null && _b !== void 0 ? _b : 'link')], (_a = {},
                                    _a[top_navigation_styles_css.narrow] = isNarrowViewport,
                                    _a[top_navigation_styles_css.medium] = isMediumViewport,
                                    _a)), "data-utility-index": i, "data-utility-hide": "".concat(hideText) },
                                react.createElement(Utility, { hideText: hideText, definition: utility, offsetRight: offsetRight })));
                        }),
                    isVirtual &&
                        utilities.map(function (utility, i) {
                            var _a;
                            var _b;
                            var hideText = !responsiveState.hideUtilityText;
                            var isLast = !showMenuTrigger && i === utilities.length - 1;
                            var offsetRight = isLast && isLargeViewport ? 'xxl' : isLast ? 'l' : undefined;
                            return (react.createElement("div", { key: i, className: clsx_m(top_navigation_styles_css["utility-wrapper"], top_navigation_styles_css["utility-type-".concat(utility.type)], utility.type === 'button' && top_navigation_styles_css["utility-type-button-".concat((_b = utility.variant) !== null && _b !== void 0 ? _b : 'link')], (_a = {},
                                    _a[top_navigation_styles_css.narrow] = isNarrowViewport,
                                    _a[top_navigation_styles_css.medium] = isMediumViewport,
                                    _a)), "data-utility-index": i, "data-utility-hide": "".concat(hideText) },
                                react.createElement(Utility, { hideText: hideText, definition: utility, offsetRight: offsetRight })));
                        }),
                    showMenuTrigger && (react.createElement("div", { className: clsx_m(top_navigation_styles_css["utility-wrapper"], top_navigation_styles_css["utility-type-menu-dropdown"], (_d = {},
                            _d[top_navigation_styles_css.narrow] = isNarrowViewport,
                            _d[top_navigation_styles_css.medium] = isMediumViewport,
                            _d)), "data-utility-special": "menu-trigger" },
                        react.createElement(ButtonTrigger, { expanded: overflowMenuOpen, onClick: toggleOverflowMenu, offsetRight: "l", ref: !isVirtual ? overflowMenuTriggerRef : undefined }, i18nStrings.overflowMenuTriggerText)))))));
    };
    return (react.createElement("div", tslib_es6_assign({}, baseProps, { ref: __internalRootRef }),
        react.createElement(VisualContext, { contextName: "top-navigation" },
            content(false),
            react.createElement(Portal, null, content(true)),
            menuTriggerVisible && overflowMenuOpen && (react.createElement("div", { className: top_navigation_styles_css["overflow-menu-drawer"] },
                react.createElement(overflow_menu, { headerText: i18nStrings.overflowMenuTitleText, dismissIconAriaLabel: i18nStrings.overflowMenuDismissIconAriaLabel, backIconAriaLabel: i18nStrings.overflowMenuBackIconAriaLabel, items: utilities.filter(function (utility, i) {
                        return (!responsiveState.hideUtilities || responsiveState.hideUtilities.indexOf(i) !== -1) &&
                            !utility.disableUtilityCollapse;
                    }), onClose: toggleOverflowMenu }))))));
}
//# sourceMappingURL=internal.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/top-navigation/index.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0




function TopNavigation(_a) {
    var _b = _a.utilities, utilities = _b === void 0 ? [] : _b, restProps = __rest(_a, ["utilities"]);
    var baseComponentProps = useBaseComponent('TopNavigation');
    return react.createElement(InternalTopNavigation, tslib_es6_assign({}, baseComponentProps, { utilities: utilities }, restProps));
}
applyDisplayName(TopNavigation, 'TopNavigation');
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/box/index.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0




function Box(_a) {
    var _b = _a.variant, variant = _b === void 0 ? 'div' : _b, _c = _a.margin, margin = _c === void 0 ? {} : _c, _d = _a.padding, padding = _d === void 0 ? {} : _d, props = __rest(_a, ["variant", "margin", "padding"]);
    var baseComponentProps = useBaseComponent('Box');
    return react.createElement(InternalBox, tslib_es6_assign({ variant: variant, margin: margin, padding: padding }, props, baseComponentProps));
}
applyDisplayName(Box, 'Box');
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/space-between/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/space-between/styles.css.js


    /* harmony default export */ const space_between_styles_css = ({
  "root": "awsui_root_18582_66aol_93",
  "child": "awsui_child_18582_66aol_97",
  "horizontal": "awsui_horizontal_18582_66aol_108",
  "horizontal-xxxs": "awsui_horizontal-xxxs_18582_66aol_112",
  "horizontal-xxs": "awsui_horizontal-xxs_18582_66aol_116",
  "horizontal-xs": "awsui_horizontal-xs_18582_66aol_120",
  "horizontal-s": "awsui_horizontal-s_18582_66aol_124",
  "horizontal-m": "awsui_horizontal-m_18582_66aol_128",
  "horizontal-l": "awsui_horizontal-l_18582_66aol_132",
  "horizontal-xl": "awsui_horizontal-xl_18582_66aol_136",
  "horizontal-xxl": "awsui_horizontal-xxl_18582_66aol_140",
  "child-horizontal-xxxs": "awsui_child-horizontal-xxxs_18582_66aol_145",
  "child-horizontal-xxs": "awsui_child-horizontal-xxs_18582_66aol_151",
  "child-horizontal-xs": "awsui_child-horizontal-xs_18582_66aol_157",
  "child-horizontal-s": "awsui_child-horizontal-s_18582_66aol_163",
  "child-horizontal-m": "awsui_child-horizontal-m_18582_66aol_169",
  "child-horizontal-l": "awsui_child-horizontal-l_18582_66aol_175",
  "child-horizontal-xl": "awsui_child-horizontal-xl_18582_66aol_181",
  "child-horizontal-xxl": "awsui_child-horizontal-xxl_18582_66aol_187",
  "vertical": "awsui_vertical_18582_66aol_196",
  "child-vertical-xxxs": "awsui_child-vertical-xxxs_18582_66aol_200",
  "child-vertical-xxs": "awsui_child-vertical-xxs_18582_66aol_204",
  "child-vertical-xs": "awsui_child-vertical-xs_18582_66aol_208",
  "child-vertical-s": "awsui_child-vertical-s_18582_66aol_212",
  "child-vertical-m": "awsui_child-vertical-m_18582_66aol_216",
  "child-vertical-l": "awsui_child-vertical-l_18582_66aol_220",
  "child-vertical-xl": "awsui_child-vertical-xl_18582_66aol_224",
  "child-vertical-xxl": "awsui_child-vertical-xxl_18582_66aol_228"
});

// EXTERNAL MODULE: ./node_modules/react-keyed-flatten-children/index.js
var react_keyed_flatten_children = __webpack_require__(262);
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/space-between/internal.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0





function InternalSpaceBetween(_a) {
    var _b = _a.direction, direction = _b === void 0 ? 'vertical' : _b, size = _a.size, children = _a.children, __internalRootRef = _a.__internalRootRef, props = __rest(_a, ["direction", "size", "children", "__internalRootRef"]);
    var baseProps = getBaseProps(props);
    /*
     Flattening the children allows us to "see through" React Fragments and nested arrays.
     */
    var flattenedChildren = (0,react_keyed_flatten_children/* default */.Z)(children);
    return (react.createElement("div", tslib_es6_assign({}, baseProps, { className: clsx_m(baseProps.className, space_between_styles_css.root, space_between_styles_css[direction], space_between_styles_css["".concat(direction, "-").concat(size)]), ref: __internalRootRef }), flattenedChildren.map(function (child) {
        // If this react child is a primitive value, the key will be undefined
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        var key = child.key;
        return (react.createElement("div", { key: key, className: clsx_m(space_between_styles_css.child, space_between_styles_css["child-".concat(direction, "-").concat(size)]) }, child));
    })));
}
//# sourceMappingURL=internal.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/space-between/index.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0




function SpaceBetween(_a) {
    var _b = _a.direction, direction = _b === void 0 ? 'vertical' : _b, props = __rest(_a, ["direction"]);
    var baseComponentProps = useBaseComponent('SpaceBetween');
    return react.createElement(InternalSpaceBetween, tslib_es6_assign({ direction: direction }, props, baseComponentProps));
}
applyDisplayName(SpaceBetween, 'SpaceBetween');
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/utils/external-props.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
/**
 * Method to filter out internal properties prefixed by "__"
 */
var getExternalProps = function (props) {
    var externalPropNames = Object.keys(props).filter(function (propName) { return propName.indexOf('__') !== 0; });
    return externalPropNames.reduce(function (acc, propName) {
        acc[propName] = props[propName];
        return acc;
    }, {});
};
//# sourceMappingURL=external-props.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/container/index.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0





function Container(_a) {
    var _b = _a.variant, variant = _b === void 0 ? 'default' : _b, _c = _a.disableHeaderPaddings, disableHeaderPaddings = _c === void 0 ? false : _c, _d = _a.disableContentPaddings, disableContentPaddings = _d === void 0 ? false : _d, props = __rest(_a, ["variant", "disableHeaderPaddings", "disableContentPaddings"]);
    var baseComponentProps = useBaseComponent('Container');
    var externalProps = getExternalProps(props);
    return (react.createElement(InternalContainer, tslib_es6_assign({ variant: variant, disableHeaderPaddings: disableHeaderPaddings, disableContentPaddings: disableContentPaddings }, externalProps, baseComponentProps)));
}
applyDisplayName(Container, 'Container');
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/spinner/index.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0




function Spinner(_a) {
    var _b = _a.size, size = _b === void 0 ? 'normal' : _b, _c = _a.variant, variant = _c === void 0 ? 'normal' : _c, props = __rest(_a, ["size", "variant"]);
    var baseComponentProps = useBaseComponent('Spinner');
    return react.createElement(InternalSpinner, tslib_es6_assign({ size: size, variant: variant }, props, baseComponentProps));
}
applyDisplayName(Spinner, 'Spinner');
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/cards/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/cards/styles.css.js


    /* harmony default export */ const cards_styles_css = ({
  "card-inner": "awsui_card-inner_p8a6i_1f4yn_97",
  "root": "awsui_root_p8a6i_1f4yn_117",
  "header-variant-full-page": "awsui_header-variant-full-page_p8a6i_1f4yn_133",
  "header-refresh": "awsui_header-refresh_p8a6i_1f4yn_133",
  "list": "awsui_list_p8a6i_1f4yn_149",
  "list-grid-1": "awsui_list-grid-1_p8a6i_1f4yn_157",
  "card": "awsui_card_p8a6i_1f4yn_97",
  "list-grid-2": "awsui_list-grid-2_p8a6i_1f4yn_160",
  "list-grid-3": "awsui_list-grid-3_p8a6i_1f4yn_163",
  "list-grid-4": "awsui_list-grid-4_p8a6i_1f4yn_166",
  "list-grid-5": "awsui_list-grid-5_p8a6i_1f4yn_169",
  "list-grid-6": "awsui_list-grid-6_p8a6i_1f4yn_172",
  "list-grid-7": "awsui_list-grid-7_p8a6i_1f4yn_175",
  "list-grid-8": "awsui_list-grid-8_p8a6i_1f4yn_178",
  "list-grid-9": "awsui_list-grid-9_p8a6i_1f4yn_181",
  "list-grid-10": "awsui_list-grid-10_p8a6i_1f4yn_184",
  "list-grid-11": "awsui_list-grid-11_p8a6i_1f4yn_187",
  "list-grid-12": "awsui_list-grid-12_p8a6i_1f4yn_190",
  "list-grid-13": "awsui_list-grid-13_p8a6i_1f4yn_193",
  "list-grid-14": "awsui_list-grid-14_p8a6i_1f4yn_196",
  "list-grid-15": "awsui_list-grid-15_p8a6i_1f4yn_199",
  "list-grid-16": "awsui_list-grid-16_p8a6i_1f4yn_202",
  "list-grid-17": "awsui_list-grid-17_p8a6i_1f4yn_205",
  "list-grid-18": "awsui_list-grid-18_p8a6i_1f4yn_208",
  "list-grid-19": "awsui_list-grid-19_p8a6i_1f4yn_211",
  "list-grid-20": "awsui_list-grid-20_p8a6i_1f4yn_214",
  "selection-control": "awsui_selection-control_p8a6i_1f4yn_218",
  "loading": "awsui_loading_p8a6i_1f4yn_227",
  "empty": "awsui_empty_p8a6i_1f4yn_228",
  "has-header": "awsui_has-header_p8a6i_1f4yn_235",
  "card-header": "awsui_card-header_p8a6i_1f4yn_272",
  "card-header-inner": "awsui_card-header-inner_p8a6i_1f4yn_280",
  "card-selectable": "awsui_card-selectable_p8a6i_1f4yn_284",
  "card-selected": "awsui_card-selected_p8a6i_1f4yn_287",
  "section": "awsui_section_p8a6i_1f4yn_296",
  "section-header": "awsui_section-header_p8a6i_1f4yn_302",
  "section-content": "awsui_section-content_p8a6i_1f4yn_308"
});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/cards/cards-layout-helper.js
var WIDTHS = [1920, 1400, 1200, 992, 768];
// Transform the array of widths into a valid cardsPerRow property that is used as default
var defaultCardsPerRow = WIDTHS.map(function (value, index, widths) { return ({
    minWidth: value,
    cards: widths.length + 1 - index
}); });
var getCardsPerRow = function (width, config) {
    if (config.length === 0) {
        config = defaultCardsPerRow;
    }
    var cardsPerRow = 1;
    // sort them by descending order of minWidth
    var sortedConfig = config
        .slice()
        .map(function (value) { return ({
        minWidth: value.minWidth || 0,
        cards: value.cards
    }); })
        .sort(function (a, b) { return b.minWidth - a.minWidth; });
    sortedConfig.some(function (layout) {
        if (width >= layout.minWidth) {
            cardsPerRow = layout.cards;
            return true;
        }
    });
    return cardsPerRow;
};
//# sourceMappingURL=cards-layout-helper.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/table/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/table/styles.css.js


    /* harmony default export */ const table_styles_css = ({
  "root": "awsui_root_wih1l_1xb6i_97",
  "tools": "awsui_tools_wih1l_1xb6i_106",
  "tools-filtering": "awsui_tools-filtering_wih1l_1xb6i_112",
  "tools-align-right": "awsui_tools-align-right_wih1l_1xb6i_117",
  "tools-pagination": "awsui_tools-pagination_wih1l_1xb6i_121",
  "tools-preferences": "awsui_tools-preferences_wih1l_1xb6i_121",
  "tools-small": "awsui_tools-small_wih1l_1xb6i_127",
  "table": "awsui_table_wih1l_1xb6i_133",
  "table-layout-fixed": "awsui_table-layout-fixed_wih1l_1xb6i_139",
  "wrapper": "awsui_wrapper_wih1l_1xb6i_143",
  "variant-stacked": "awsui_variant-stacked_wih1l_1xb6i_151",
  "variant-container": "awsui_variant-container_wih1l_1xb6i_151",
  "variant-embedded": "awsui_variant-embedded_wih1l_1xb6i_155",
  "has-header": "awsui_has-header_wih1l_1xb6i_158",
  "has-footer": "awsui_has-footer_wih1l_1xb6i_161",
  "cell-merged": "awsui_cell-merged_wih1l_1xb6i_175",
  "cell-merged-content": "awsui_cell-merged-content_wih1l_1xb6i_186",
  "empty": "awsui_empty_wih1l_1xb6i_201",
  "loading": "awsui_loading_wih1l_1xb6i_205",
  "selection-control": "awsui_selection-control_wih1l_1xb6i_214",
  "selection-control-header": "awsui_selection-control-header_wih1l_1xb6i_221",
  "sticky-scrollbar": "awsui_sticky-scrollbar_wih1l_1xb6i_226",
  "sticky-scrollbar-content": "awsui_sticky-scrollbar-content_wih1l_1xb6i_236",
  "sticky-scrollbar-visible": "awsui_sticky-scrollbar-visible_wih1l_1xb6i_239",
  "dark-header": "awsui_dark-header_wih1l_1xb6i_247",
  "header-secondary": "awsui_header-secondary_wih1l_1xb6i_251",
  "table-has-header": "awsui_table-has-header_wih1l_1xb6i_267",
  "header-controls": "awsui_header-controls_wih1l_1xb6i_271",
  "footer-wrapper": "awsui_footer-wrapper_wih1l_1xb6i_285",
  "footer": "awsui_footer_wih1l_1xb6i_285",
  "thead-active": "awsui_thead-active_wih1l_1xb6i_294",
  "row": "awsui_row_wih1l_1xb6i_295",
  "row-selected": "awsui_row-selected_wih1l_1xb6i_296"
});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/table/tools-header.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0




function ToolsHeader(_a) {
    var header = _a.header, filter = _a.filter, pagination = _a.pagination, preferences = _a.preferences;
    var _b = useContainerBreakpoints(['xs']), breakpoint = _b[0], ref = _b[1];
    var isSmall = breakpoint === 'default';
    var hasTools = filter || pagination || preferences;
    return (react.createElement(react.Fragment, null,
        header,
        hasTools && (react.createElement("div", { ref: ref, className: clsx_m(table_styles_css.tools, isSmall && table_styles_css["tools-small"]) },
            filter && react.createElement("div", { className: table_styles_css["tools-filtering"] }, filter),
            react.createElement("div", { className: table_styles_css["tools-align-right"] },
                pagination && react.createElement("div", { className: table_styles_css["tools-pagination"] }, pagination),
                preferences && react.createElement("div", { className: table_styles_css["tools-preferences"] }, preferences))))));
}
//# sourceMappingURL=tools-header.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/table/utils.js

var applyTrackBy = function (trackBy, item) {
    if (typeof trackBy === 'function') {
        return trackBy(item);
    }
    return item[trackBy];
};
var getItemKey = function (trackBy, item, index) {
    if (!trackBy) {
        return index;
    }
    return applyTrackBy(trackBy, item);
};
var utils_getTrackableValue = function (trackBy, item) {
    if (!trackBy) {
        return item;
    }
    return applyTrackBy(trackBy, item);
};
var getColumnKey = function (column, index) {
    return column.id || index;
};
var toContainerVariant = function (variant) {
    var isDefaultVariant = !variant || variant === 'container';
    return isDefaultVariant ? 'default' : variant;
};
function checkSortingState(columnDefinitions, sortingComparator) {
    var matchedColumn = columnDefinitions.filter(function (column) { return column.sortingComparator === sortingComparator; })[0];
    if (!matchedColumn) {
        logging_warnOnce('Table', 'Currently active sorting comparator was not found in any columns. Make sure to provide the same comparator function instance on each render.');
    }
}
//# sourceMappingURL=utils.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/table/selection-control/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/table/selection-control/styles.css.js


    /* harmony default export */ const selection_control_styles_css = ({
  "root": "awsui_root_1ut8b_1vvgk_93",
  "label": "awsui_label_1ut8b_1vvgk_97",
  "stud": "awsui_stud_1ut8b_1vvgk_111"
});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/table/use-selection.js
var _a, _b, _c;

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0







var SELECTION_ITEM = 'selection-item';
var SELECTION_ROOT = 'selection-root';
function findSelectionControlByIndex(rootContainer, index) {
    if (index === -1) {
        // find "select all" checkbox
        return rootContainer.querySelector("[data-".concat(SELECTION_ITEM, "=\"all\"] .").concat(selection_control_styles_css.root, " input"));
    }
    return rootContainer.querySelectorAll("[data-".concat(SELECTION_ITEM, "=\"item\"] .").concat(selection_control_styles_css.root, " input"))[index];
}
function findRootContainer(element) {
    return findUpUntil(element, function (node) { return node.dataset.selectionRoot === 'true'; });
}
function useFocusMove(selectionType, totalItems) {
    if (selectionType !== 'multi') {
        return {};
    }
    function moveFocus(sourceElement, fromIndex, direction) {
        var index = fromIndex;
        var rootContainer = findRootContainer(sourceElement);
        while (index >= -1 && index < totalItems) {
            index += direction;
            var control = findSelectionControlByIndex(rootContainer, index);
            if (control && !control.disabled) {
                control.focus();
                break;
            }
        }
    }
    var _a = [1, -1].map(function (direction) {
        return function (event) {
            var target = event.currentTarget;
            var itemNode = findUpUntil(target, function (node) { return node.dataset.selectionItem === 'item'; });
            var fromIndex = Array.prototype.indexOf.call(itemNode.parentElement.children, itemNode);
            moveFocus(target, fromIndex, direction);
        };
    }), moveFocusDown = _a[0], moveFocusUp = _a[1];
    return {
        moveFocusDown: moveFocusDown,
        moveFocusUp: moveFocusUp,
        moveFocus: moveFocus
    };
}
// A set, that compares items by their "trackables" (the results of applying `trackBy` to them)
var ItemSet = /** @class */ (function () {
    function ItemSet(trackBy, items) {
        var _this = this;
        this.map = new Map();
        this.put = function (item) { return _this.map.set.call(_this.map, utils_getTrackableValue(_this.trackBy, item), item); };
        this.has = function (item) { return _this.map.has.call(_this.map, utils_getTrackableValue(_this.trackBy, item)); };
        this.forEach = this.map.forEach.bind(this.map);
        this.trackBy = trackBy;
        items.forEach(this.put);
    }
    return ItemSet;
}());
var focusMarkers = {
    item: (_a = {}, _a['data-' + SELECTION_ITEM] = 'item', _a),
    all: (_b = {}, _b['data-' + SELECTION_ITEM] = 'all', _b),
    root: (_c = {}, _c['data-' + SELECTION_ROOT] = 'true', _c)
};
function useSelection(_a) {
    var _b;
    var items = _a.items, _c = _a.selectedItems, selectedItems = _c === void 0 ? [] : _c, selectionType = _a.selectionType, _d = _a.isItemDisabled, isItemDisabled = _d === void 0 ? function () { return false; } : _d, trackBy = _a.trackBy, onSelectionChange = _a.onSelectionChange, ariaLabels = _a.ariaLabels;
    var _e = (0,react.useState)(false), shiftPressed = _e[0], setShiftPressed = _e[1];
    var _f = (0,react.useState)(null), lastClickedItem = _f[0], setLastClickedItem = _f[1];
    var selectionName = useUniqueId();
    var finalSelectedItems = selectionType === 'single' ? selectedItems.slice(0, 1) : selectedItems;
    var selectedSet = new ItemSet(trackBy, finalSelectedItems);
    var itemIndexesMap = new Map();
    items.forEach(function (item, i) { return itemIndexesMap.set(utils_getTrackableValue(trackBy, item), i); });
    var isItemSelected = selectedSet.has.bind(selectedSet);
    var getItemState = function (item) { return ({
        disabled: isItemDisabled(item),
        selected: isItemSelected(item)
    }); };
    var _g = selectionType
        ? items.reduce(function (_a, item) {
            var allDisabled = _a[0], allEnabledSelected = _a[1];
            var _b = getItemState(item), disabled = _b.disabled, selected = _b.selected;
            return [
                // all items are disabled (or none are present)
                allDisabled && disabled,
                // all enabled items are selected (or none are present)
                allEnabledSelected && (selected || disabled),
            ];
        }, [true, true])
        : [true, true], allDisabled = _g[0], allEnabledSelected = _g[1];
    // the page has at least one selected item
    var hasSelected = finalSelectedItems.length > 0;
    var handleToggleAll = function () {
        var requestedItems = new ItemSet(trackBy, items);
        var newSelectedItems = allEnabledSelected ? deselectItems(requestedItems) : selectItems(requestedItems);
        fireNonCancelableEvent(onSelectionChange, { selectedItems: newSelectedItems });
    };
    var getRequestedItems = function (item) {
        var requestedItems = new ItemSet(trackBy, [item]);
        var lastClickedItemIndex = lastClickedItem ? itemIndexesMap.get(utils_getTrackableValue(trackBy, lastClickedItem)) : -1;
        if (lastClickedItemIndex === undefined) {
            lastClickedItemIndex = -1;
        }
        // we use lastClickedItemIndex to determine if filtering/sorting/pagination
        // made previously selected item invisible, therefore we reset state for shift-select
        if (shiftPressed && lastClickedItemIndex !== -1) {
            // item is always in items
            var currentItemIndex = itemIndexesMap.get(utils_getTrackableValue(trackBy, item));
            var start = Math.min(currentItemIndex, lastClickedItemIndex);
            var end = Math.max(currentItemIndex, lastClickedItemIndex);
            items.slice(start, end + 1).forEach(function (item) { return requestedItems.put(item); });
        }
        return requestedItems;
    };
    var deselectItems = function (requestedItems) {
        var newSelectedItems = [];
        selectedItems.forEach(function (selectedItem) {
            var toUnselect = requestedItems.has(selectedItem);
            if (!toUnselect || isItemDisabled(selectedItem)) {
                newSelectedItems.push(selectedItem);
            }
        });
        return newSelectedItems;
    };
    var selectItems = function (requestedItems) {
        var newSelectedItems = tslib_es6_spreadArray([], selectedItems, true);
        requestedItems.forEach(function (newItem) {
            var _a = getItemState(newItem), selected = _a.selected, disabled = _a.disabled;
            if (!selected && !disabled) {
                newSelectedItems.push(newItem);
            }
        });
        return newSelectedItems;
    };
    var handleToggleItem = function (item) { return function () {
        var _a = getItemState(item), disabled = _a.disabled, selected = _a.selected;
        if (disabled || (selectionType === 'single' && selected)) {
            return;
        }
        if (selectionType === 'single') {
            fireNonCancelableEvent(onSelectionChange, { selectedItems: [item] });
        }
        else {
            var requestedItems = getRequestedItems(item);
            var selectedItems_1 = selected ? deselectItems(requestedItems) : selectItems(requestedItems);
            fireNonCancelableEvent(onSelectionChange, { selectedItems: selectedItems_1 });
            setLastClickedItem(item);
        }
    }; };
    return {
        isItemSelected: isItemSelected,
        selectAllProps: {
            name: selectionName,
            disabled: allDisabled,
            selectionType: selectionType,
            indeterminate: hasSelected && !allEnabledSelected,
            checked: hasSelected && allEnabledSelected,
            onChange: handleToggleAll,
            ariaLabel: joinStrings(ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.selectionGroupLabel, (_b = ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.allItemsSelectionLabel) === null || _b === void 0 ? void 0 : _b.call(ariaLabels, { selectedItems: selectedItems }))
        },
        getItemSelectionProps: function (item) {
            var _a;
            return ({
                name: selectionName,
                selectionType: selectionType,
                ariaLabel: joinStrings(ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.selectionGroupLabel, (_a = ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.itemSelectionLabel) === null || _a === void 0 ? void 0 : _a.call(ariaLabels, { selectedItems: selectedItems }, item)),
                onChange: handleToggleItem(item),
                checked: isItemSelected(item),
                disabled: isItemDisabled(item)
            });
        },
        updateShiftToggle: function (value) {
            setShiftPressed(value);
        }
    };
}
//# sourceMappingURL=use-selection.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/components/abstract-switch/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/components/abstract-switch/styles.css.js


    /* harmony default export */ const abstract_switch_styles_css = ({
  "content": "awsui_content_1wepg_3hhd4_93",
  "description": "awsui_description_1wepg_3hhd4_94",
  "label": "awsui_label_1wepg_3hhd4_95",
  "outline": "awsui_outline_1wepg_3hhd4_99",
  "native-input": "awsui_native-input_1wepg_3hhd4_103",
  "wrapper": "awsui_wrapper_1wepg_3hhd4_110",
  "label-wrapper": "awsui_label-wrapper_1wepg_3hhd4_117",
  "empty-content": "awsui_empty-content_1wepg_3hhd4_129",
  "description-bottom-padding": "awsui_description-bottom-padding_1wepg_3hhd4_139",
  "label-disabled": "awsui_label-disabled_1wepg_3hhd4_147",
  "description-disabled": "awsui_description-disabled_1wepg_3hhd4_148",
  "control": "awsui_control_1wepg_3hhd4_153"
});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/components/abstract-switch/index.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0





function joinString(values) {
    return values.filter(function (value) { return !!value; }).join(' ');
}
function AbstractSwitch(_a) {
    var _b, _c;
    var controlId = _a.controlId, controlClassName = _a.controlClassName, outlineClassName = _a.outlineClassName, disabled = _a.disabled, nativeControl = _a.nativeControl, styledControl = _a.styledControl, label = _a.label, description = _a.description, descriptionBottomPadding = _a.descriptionBottomPadding, ariaLabel = _a.ariaLabel, ariaLabelledby = _a.ariaLabelledby, ariaDescribedby = _a.ariaDescribedby, onClick = _a.onClick, __internalRootRef = _a.__internalRootRef, rest = __rest(_a, ["controlId", "controlClassName", "outlineClassName", "disabled", "nativeControl", "styledControl", "label", "description", "descriptionBottomPadding", "ariaLabel", "ariaLabelledby", "ariaDescribedby", "onClick", "__internalRootRef"]);
    var uniqueId = useUniqueId();
    var id = controlId || uniqueId;
    var focusVisible = useFocusVisible();
    var labelId = "".concat(id, "-label");
    var descriptionId = "".concat(id, "-description");
    var ariaLabelledByIds = [];
    if (label) {
        ariaLabelledByIds.push(labelId);
    }
    if (ariaLabelledby) {
        ariaLabelledByIds.push(ariaLabelledby);
    }
    var ariaDescriptons = [];
    if (ariaDescribedby) {
        ariaDescriptons.push(ariaDescribedby);
    }
    if (description) {
        ariaDescriptons.push(descriptionId);
    }
    return (react.createElement("div", tslib_es6_assign({}, rest, { className: clsx_m(abstract_switch_styles_css.wrapper, rest.className), ref: __internalRootRef }),
        react.createElement("div", { className: abstract_switch_styles_css["label-wrapper"], "aria-disabled": disabled ? 'true' : undefined, onClick: disabled ? undefined : onClick },
            react.createElement("span", { className: clsx_m(abstract_switch_styles_css.control, controlClassName) },
                styledControl,
                nativeControl(tslib_es6_assign(tslib_es6_assign({}, focusVisible), { id: id, disabled: disabled, className: abstract_switch_styles_css["native-input"], 'aria-describedby': ariaDescriptons.length ? joinString(ariaDescriptons) : undefined, 'aria-labelledby': ariaLabelledByIds.length ? joinString(ariaLabelledByIds) : undefined, 'aria-label': ariaLabel })),
                react.createElement("span", { className: clsx_m(abstract_switch_styles_css.outline, outlineClassName) })),
            react.createElement("span", { className: clsx_m(abstract_switch_styles_css.content, !label && !description && abstract_switch_styles_css["empty-content"]) },
                label && (react.createElement("span", { id: labelId, className: clsx_m(abstract_switch_styles_css.label, (_b = {}, _b[abstract_switch_styles_css["label-disabled"]] = disabled, _b)) }, label)),
                description && (react.createElement("span", { id: descriptionId, className: clsx_m(abstract_switch_styles_css.description, (_c = {},
                        _c[abstract_switch_styles_css["description-disabled"]] = disabled,
                        _c[abstract_switch_styles_css["description-bottom-padding"]] = descriptionBottomPadding,
                        _c)) }, description))))));
}
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/checkbox/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/checkbox/styles.css.js


    /* harmony default export */ const checkbox_styles_css = ({
  "root": "awsui_root_k2y2q_5zih0_93",
  "checkbox-control": "awsui_checkbox-control_k2y2q_5zih0_105",
  "outline": "awsui_outline_k2y2q_5zih0_113"
});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/components/checkbox-icon/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/components/checkbox-icon/styles.css.js


    /* harmony default export */ const checkbox_icon_styles_css = ({
  "root": "awsui_root_1fn7j_18k9z_93",
  "styled-box": "awsui_styled-box_1fn7j_18k9z_100",
  "styled-box-checked": "awsui_styled-box-checked_1fn7j_18k9z_106",
  "styled-box-indeterminate": "awsui_styled-box-indeterminate_1fn7j_18k9z_106",
  "styled-box-disabled": "awsui_styled-box-disabled_1fn7j_18k9z_110",
  "styled-line": "awsui_styled-line_1fn7j_18k9z_124",
  "styled-line-disabled": "awsui_styled-line-disabled_1fn7j_18k9z_129"
});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/components/checkbox-icon/index.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0





// Can't use css variables for svg attributes
var dimensionsByTheme = {
    "default": {
        viewBox: '0 0 14 14',
        indeterminate: '2.5,7 11.5,7',
        checked: '2.5,7 6,10 11,3',
        xy: 0.5,
        r: 1.5,
        size: 13
    },
    refresh: {
        viewBox: '0 0 16 16',
        indeterminate: '3.5,8 12.5,8',
        checked: '3.5,8 7,11 12,4',
        xy: 1,
        r: 2,
        size: 14
    }
};
var CheckboxIcon = function (_a) {
    var _b, _c;
    var checked = _a.checked, indeterminate = _a.indeterminate, _d = _a.disabled, disabled = _d === void 0 ? false : _d, restProps = __rest(_a, ["checked", "indeterminate", "disabled"]);
    var baseProps = getBaseProps(restProps);
    var theme = useVisualRefresh() ? 'refresh' : 'default';
    var dimensions = dimensionsByTheme[theme];
    return (react.createElement("svg", tslib_es6_assign({ className: checkbox_icon_styles_css.root, viewBox: dimensions.viewBox, "aria-hidden": "true", focusable: "false" }, baseProps),
        react.createElement("rect", { className: clsx_m(checkbox_icon_styles_css["styled-box"], (_b = {},
                _b[checkbox_icon_styles_css["styled-box-checked"]] = checked,
                _b[checkbox_icon_styles_css["styled-box-indeterminate"]] = indeterminate,
                _b[checkbox_icon_styles_css["styled-box-disabled"]] = disabled,
                _b)), x: dimensions.xy, y: dimensions.xy, rx: dimensions.r, ry: dimensions.r, width: dimensions.size, height: dimensions.size }),
        checked || indeterminate ? (react.createElement("polyline", { className: clsx_m(checkbox_icon_styles_css["styled-line"], (_c = {}, _c[checkbox_icon_styles_css["styled-line-disabled"]] = disabled, _c)), points: indeterminate ? dimensions.indeterminate : dimensions.checked })) : null));
};
/* harmony default export */ const checkbox_icon = (CheckboxIcon);
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/context/form-field-context.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

var FormFieldContext = (0,react.createContext)({});
function applyDefault(fields, defaults, keys) {
    var result = {};
    keys.forEach(function (key) {
        result[key] = fields[key] === undefined ? defaults[key] : fields[key];
    });
    return result;
}
function useFormFieldContext(props) {
    var context = (0,react.useContext)(FormFieldContext);
    return applyDefault(props, context, [
        'invalid',
        'controlId',
        'ariaLabelledby',
        'ariaDescribedby',
        '__useReactAutofocus',
    ]);
}
//# sourceMappingURL=form-field-context.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/checkbox/internal.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0









var InternalCheckbox = react.forwardRef(function (_a, ref) {
    var controlId = _a.controlId, name = _a.name, checked = _a.checked, disabled = _a.disabled, indeterminate = _a.indeterminate, children = _a.children, description = _a.description, ariaLabel = _a.ariaLabel, onFocus = _a.onFocus, onBlur = _a.onBlur, onChange = _a.onChange, tabIndex = _a.tabIndex, __internalRootRef = _a.__internalRootRef, rest = __rest(_a, ["controlId", "name", "checked", "disabled", "indeterminate", "children", "description", "ariaLabel", "onFocus", "onBlur", "onChange", "tabIndex", "__internalRootRef"]);
    var _b = useFormFieldContext(rest), ariaDescribedby = _b.ariaDescribedby, ariaLabelledby = _b.ariaLabelledby;
    var baseProps = getBaseProps(rest);
    var checkboxRef = (0,react.useRef)(null);
    useForwardFocus(ref, checkboxRef);
    (0,react.useEffect)(function () {
        if (checkboxRef.current) {
            checkboxRef.current.indeterminate = Boolean(indeterminate);
        }
    });
    return (react.createElement(AbstractSwitch, tslib_es6_assign({}, baseProps, { className: clsx_m(checkbox_styles_css.root, baseProps.className), controlClassName: checkbox_styles_css["checkbox-control"], outlineClassName: checkbox_styles_css.outline, controlId: controlId, disabled: disabled, label: children, description: description, descriptionBottomPadding: true, ariaLabel: ariaLabel, ariaLabelledby: ariaLabelledby, ariaDescribedby: ariaDescribedby, nativeControl: function (nativeControlProps) { return (react.createElement("input", tslib_es6_assign({}, nativeControlProps, { ref: checkboxRef, type: "checkbox", checked: checked, name: name, tabIndex: tabIndex, onFocus: function () { return fireNonCancelableEvent(onFocus); }, onBlur: function () { return fireNonCancelableEvent(onBlur); },
            // empty handler to suppress React controllability warning
            onChange: function () { } }))); }, onClick: function () {
            var _a;
            (_a = checkboxRef.current) === null || _a === void 0 ? void 0 : _a.focus();
            fireNonCancelableEvent(onChange,
            // for deterministic transitions "indeterminate" -> "checked" -> "unchecked"
            indeterminate ? { checked: true, indeterminate: false } : { checked: !checked, indeterminate: false });
        }, styledControl: react.createElement(checkbox_icon, { checked: checked, indeterminate: indeterminate, disabled: disabled }), __internalRootRef: __internalRootRef })));
});
/* harmony default export */ const checkbox_internal = (InternalCheckbox);
//# sourceMappingURL=internal.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/radio-group/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/radio-group/styles.css.js


    /* harmony default export */ const radio_group_styles_css = ({
  "root": "awsui_root_1mabk_1y9l8_93",
  "radio": "awsui_radio_1mabk_1y9l8_105",
  "radio--has-description": "awsui_radio--has-description_1mabk_1y9l8_113",
  "radio-control": "awsui_radio-control_1mabk_1y9l8_117",
  "outline": "awsui_outline_1mabk_1y9l8_125",
  "styled-circle-border": "awsui_styled-circle-border_1mabk_1y9l8_144",
  "styled-circle-disabled": "awsui_styled-circle-disabled_1mabk_1y9l8_148",
  "styled-circle-fill": "awsui_styled-circle-fill_1mabk_1y9l8_153",
  "styled-circle-checked": "awsui_styled-circle-checked_1mabk_1y9l8_159"
});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/radio-group/radio-button.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0







/* harmony default export */ const radio_button = (react.forwardRef(function RadioButton(_a, ref) {
    var _b, _c;
    var name = _a.name, label = _a.label, value = _a.value, checked = _a.checked, description = _a.description, disabled = _a.disabled, controlId = _a.controlId, onChange = _a.onChange;
    var isVisualRefresh = useVisualRefresh();
    var radioButtonRef = (0,react.useRef)(null);
    var mergedRefs = useMergeRefs(radioButtonRef, ref);
    return (react.createElement(AbstractSwitch, { className: clsx_m(radio_group_styles_css.radio, description && radio_group_styles_css["radio--has-description"]), controlClassName: radio_group_styles_css["radio-control"], outlineClassName: radio_group_styles_css.outline, label: label, description: description, disabled: disabled, controlId: controlId, nativeControl: function (nativeControlProps) { return (react.createElement("input", tslib_es6_assign({}, nativeControlProps, { type: "radio", ref: mergedRefs, name: name, value: value, checked: checked,
            // empty handler to suppress React controllability warning
            onChange: function () { } }))); }, onClick: function () {
            var _a;
            (_a = radioButtonRef.current) === null || _a === void 0 ? void 0 : _a.focus();
            if (checked) {
                return;
            }
            fireNonCancelableEvent(onChange, { value: value });
        }, styledControl: react.createElement("svg", { viewBox: "0 0 100 100", focusable: "false", "aria-hidden": "true" },
            react.createElement("circle", { className: clsx_m(radio_group_styles_css["styled-circle-border"], (_b = {}, _b[radio_group_styles_css["styled-circle-disabled"]] = disabled, _b)), strokeWidth: isVisualRefresh ? 12 : 8, cx: 50, cy: 50, r: isVisualRefresh ? 44 : 46 }),
            react.createElement("circle", { className: clsx_m(radio_group_styles_css["styled-circle-fill"], (_c = {},
                    _c[radio_group_styles_css["styled-circle-disabled"]] = disabled,
                    _c[radio_group_styles_css["styled-circle-checked"]] = checked,
                    _c)), strokeWidth: 30, cx: 50, cy: 50, r: 35 })) }));
}));
//# sourceMappingURL=radio-button.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/table/selection-control/index.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0







function SelectionControl(_a) {
    var selectionType = _a.selectionType, _b = _a.indeterminate, indeterminate = _b === void 0 ? false : _b, onShiftToggle = _a.onShiftToggle, onFocusUp = _a.onFocusUp, onFocusDown = _a.onFocusDown, name = _a.name, ariaLabel = _a.ariaLabel, sharedProps = __rest(_a, ["selectionType", "indeterminate", "onShiftToggle", "onFocusUp", "onFocusDown", "name", "ariaLabel"]);
    var controlId = useUniqueId();
    var isMultiSelection = selectionType === 'multi';
    var setShiftState = function (event) {
        if (isMultiSelection) {
            onShiftToggle && onShiftToggle(event.shiftKey);
        }
    };
    var onMouseDownHandler = function (event) {
        setShiftState(event);
        if (isMultiSelection) {
            // To overcome an issue
            // If you shift+click or ctrl+click on a label for a checkbox, checkbox is not checked.
            // https://bugzilla.mozilla.org/show_bug.cgi?id=559506
            event.preventDefault();
        }
    };
    // native checkboxes do not have focus move via keyboard, we implement it here programmatically
    var handleKeyDown = function (event) {
        setShiftState(event);
        if (isMultiSelection) {
            if (event.keyCode === KeyCode.up) {
                event.preventDefault();
                onFocusUp && onFocusUp(event);
            }
            if (event.keyCode === KeyCode.down) {
                event.preventDefault();
                onFocusDown && onFocusDown(event);
            }
        }
    };
    var handleClick = function (event) {
        var target = event.currentTarget;
        var nativeInput = (target.tagName === 'INPUT' ? target : target.querySelector('input'));
        // Clicking on input, does not focus it on Firefox (AWSUI-11345)
        nativeInput === null || nativeInput === void 0 ? void 0 : nativeInput.focus();
    };
    var selector = isMultiSelection ? (react.createElement(checkbox_internal, tslib_es6_assign({}, sharedProps, { controlId: controlId, indeterminate: indeterminate }))) : (react.createElement(radio_button, tslib_es6_assign({}, sharedProps, { controlId: controlId, name: name, value: '', label: '' })));
    return (react.createElement(react.Fragment, null,
        react.createElement("label", { onKeyDown: handleKeyDown, onKeyUp: setShiftState, onMouseDown: onMouseDownHandler, onMouseUp: setShiftState, onClick: handleClick, htmlFor: controlId, className: clsx_m(selection_control_styles_css.label, selection_control_styles_css.root), "aria-label": ariaLabel }, selector),
        react.createElement("span", { className: clsx_m(selection_control_styles_css.stud), "aria-hidden": true }, "\u00A0")));
}
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/status-indicator/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/status-indicator/styles.css.js


    /* harmony default export */ const status_indicator_styles_css = ({
  "icon-shake": "awsui_icon-shake_1cbgc_1dmb0_97",
  "awsui-motion-shake-horizontally": "awsui_awsui-motion-shake-horizontally_1cbgc_1dmb0_1",
  "container-fade-in": "awsui_container-fade-in_1cbgc_1dmb0_125",
  "awsui-motion-fade-in-0": "awsui_awsui-motion-fade-in-0_1cbgc_1dmb0_1",
  "root": "awsui_root_1cbgc_1dmb0_147",
  "status-error": "awsui_status-error_1cbgc_1dmb0_154",
  "status-warning": "awsui_status-warning_1cbgc_1dmb0_157",
  "status-success": "awsui_status-success_1cbgc_1dmb0_160",
  "status-info": "awsui_status-info_1cbgc_1dmb0_163",
  "status-stopped": "awsui_status-stopped_1cbgc_1dmb0_166",
  "status-pending": "awsui_status-pending_1cbgc_1dmb0_169",
  "status-in-progress": "awsui_status-in-progress_1cbgc_1dmb0_172",
  "status-loading": "awsui_status-loading_1cbgc_1dmb0_175",
  "color-override-red": "awsui_color-override-red_1cbgc_1dmb0_178",
  "color-override-grey": "awsui_color-override-grey_1cbgc_1dmb0_181",
  "color-override-blue": "awsui_color-override-blue_1cbgc_1dmb0_184",
  "color-override-green": "awsui_color-override-green_1cbgc_1dmb0_187",
  "icon": "awsui_icon_1cbgc_1dmb0_97",
  "container": "awsui_container_1cbgc_1dmb0_125",
  "overflow-ellipsis": "awsui_overflow-ellipsis_1cbgc_1dmb0_201"
});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/status-indicator/internal.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0






var typeToIcon = function (size) { return ({
    error: react.createElement(internal, { name: "status-negative", size: size }),
    warning: react.createElement(internal, { name: "status-warning", size: size }),
    success: react.createElement(internal, { name: "status-positive", size: size }),
    info: react.createElement(internal, { name: "status-info", size: size }),
    stopped: react.createElement(internal, { name: "status-stopped", size: size }),
    pending: react.createElement(internal, { name: "status-pending", size: size }),
    'in-progress': react.createElement(internal, { name: "status-in-progress", size: size }),
    loading: react.createElement(InternalSpinner, null)
}); };
function StatusIndicator(_a) {
    var _b;
    var type = _a.type, children = _a.children, iconAriaLabel = _a.iconAriaLabel, colorOverride = _a.colorOverride, _c = _a.wrapText, wrapText = _c === void 0 ? true : _c, _d = _a.__animate, __animate = _d === void 0 ? false : _d, __internalRootRef = _a.__internalRootRef, _e = _a.__size, __size = _e === void 0 ? 'normal' : _e, rest = __rest(_a, ["type", "children", "iconAriaLabel", "colorOverride", "wrapText", "__animate", "__internalRootRef", "__size"]);
    var baseProps = getBaseProps(rest);
    return (react.createElement("span", tslib_es6_assign({}, baseProps, { className: clsx_m(status_indicator_styles_css.root, status_indicator_styles_css["status-".concat(type)], (_b = {},
            _b[status_indicator_styles_css["color-override-".concat(colorOverride)]] = colorOverride,
            _b), baseProps.className), ref: __internalRootRef }),
        react.createElement("span", { className: clsx_m(status_indicator_styles_css.container, wrapText === false && status_indicator_styles_css["overflow-ellipsis"], __animate && status_indicator_styles_css["container-fade-in"]) },
            react.createElement("span", { className: clsx_m(status_indicator_styles_css.icon, __animate && status_indicator_styles_css["icon-shake"]), "aria-label": iconAriaLabel, role: iconAriaLabel ? 'img' : undefined }, typeToIcon(__size)[type]),
            children)));
}
//# sourceMappingURL=internal.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/table/sticky-scrolling.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

/**
 * @param containerRef ref to surrounding container with sticky element
 * @param stickyRef ref to sticky element scrolled inside of containerRef
 * @param containerOffset offset between header and container
 *                        originating borders or paddings
 */
function stickyScrolling(containerRef, stickyRef) {
    var scrollToTop = function () {
        if (!containerRef.current || !stickyRef.current) {
            return;
        }
        var scrollingOffset = calculateScrollingOffset(containerRef.current, stickyRef.current);
        if (scrollingOffset > 0) {
            scrollUpBy(scrollingOffset, containerRef.current);
        }
    };
    var scrollToItem = function (item) {
        if (!item || !containerRef.current || !stickyRef.current) {
            return;
        }
        var stickyBottom = stickyRef.current.getBoundingClientRect().bottom;
        var scrollingOffset = stickyBottom - item.getBoundingClientRect().top;
        if (scrollingOffset > 0) {
            scrollUpBy(scrollingOffset, containerRef.current);
        }
    };
    return {
        scrollToTop: scrollToTop,
        scrollToItem: scrollToItem
    };
}
/**
 * Calculates the scrolling offset between container and
 * sticky element with container offset caused by border
 * or padding
 * @param container
 * @param sticky element inside of container
 * @param containerOffset caused by borders or paddings
 */
function calculateScrollingOffset(container, sticky) {
    var stickyRect = sticky.getBoundingClientRect();
    var containerRect = container.getBoundingClientRect();
    return stickyRect.top - containerRect.top;
}
/**
 * Scrolls suitable parent of container up by amount of pixels
 * @param amount pixels to be scrolled up
 * @param container used to determine next parent element for scrolling
 */
function scrollUpBy(amount, container) {
    var parent = getOverflowParents(container);
    if (parent.length) {
        // Take next overflow parent in stack
        parent[0].scrollTop -= amount;
    }
    else {
        window.scrollTo({ top: window.pageYOffset - amount });
    }
}
//# sourceMappingURL=sticky-scrolling.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/hooks/use-mouse-down-target.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0


var useEventListenersSingleton = createSingletonHandler(function (setTarget) {
    function handleMouseDown(event) {
        setTarget(event.target);
    }
    function handleKeyDown() {
        setTarget(null);
    }
    window.addEventListener('mousedown', handleMouseDown);
    window.addEventListener('keydown', handleKeyDown);
    return function () {
        window.removeEventListener('mousedown', handleMouseDown);
        window.removeEventListener('keydown', handleKeyDown);
    };
});
/**
 * Captures last mouse down target and clears it on keydown.
 * @returns a callback to get the last detected mouse down target.
 */
function useMouseDownTarget() {
    var mouseDownTargetRef = (0,react.useRef)(null);
    useEventListenersSingleton(function (target) {
        mouseDownTargetRef.current = target;
    });
    return function () { return mouseDownTargetRef.current; };
}
//# sourceMappingURL=use-mouse-down-target.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/cards/index.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0





















var Cards = react.forwardRef(function (_a, ref) {
    var _b = _a.items, items = _b === void 0 ? [] : _b, cardDefinition = _a.cardDefinition, _c = _a.cardsPerRow, cardsPerRow = _c === void 0 ? [] : _c, header = _a.header, filter = _a.filter, pagination = _a.pagination, preferences = _a.preferences, empty = _a.empty, loading = _a.loading, loadingText = _a.loadingText, trackBy = _a.trackBy, selectedItems = _a.selectedItems, selectionType = _a.selectionType, isItemDisabled = _a.isItemDisabled, onSelectionChange = _a.onSelectionChange, ariaLabels = _a.ariaLabels, visibleSections = _a.visibleSections, stickyHeader = _a.stickyHeader, stickyHeaderVerticalOffset = _a.stickyHeaderVerticalOffset, _d = _a.variant, variant = _d === void 0 ? 'container' : _d, rest = __rest(_a, ["items", "cardDefinition", "cardsPerRow", "header", "filter", "pagination", "preferences", "empty", "loading", "loadingText", "trackBy", "selectedItems", "selectionType", "isItemDisabled", "onSelectionChange", "ariaLabels", "visibleSections", "stickyHeader", "stickyHeaderVerticalOffset", "variant"]);
    var __internalRootRef = useBaseComponent('Cards').__internalRootRef;
    var baseProps = getBaseProps(rest);
    var isRefresh = useVisualRefresh();
    var computedVariant = isRefresh ? variant : 'container';
    var instanceUniqueId = useUniqueId('cards');
    var cardsId = (baseProps === null || baseProps === void 0 ? void 0 : baseProps.id) || instanceUniqueId;
    var cardsHeaderId = header ? "".concat(cardsId, "-header") : undefined;
    var _e = useContainerQuery(function (_a) {
        var width = _a.width;
        return getCardsPerRow(width, cardsPerRow);
    }, [cardsPerRow]), columns = _e[0], measureRef = _e[1];
    var refObject = (0,react.useRef)(null);
    var mergedRef = useMergeRefs(measureRef, refObject, __internalRootRef);
    var getMouseDownTarget = useMouseDownTarget();
    var _f = useSelection({
        items: items,
        trackBy: trackBy,
        selectedItems: selectedItems,
        selectionType: selectionType,
        isItemDisabled: isItemDisabled,
        onSelectionChange: onSelectionChange,
        ariaLabels: ariaLabels
    }), isItemSelected = _f.isItemSelected, getItemSelectionProps = _f.getItemSelectionProps, updateShiftToggle = _f.updateShiftToggle;
    var hasToolsHeader = header || filter || pagination || preferences;
    var headerRef = (0,react.useRef)(null);
    var _g = stickyScrolling(refObject, headerRef), scrollToTop = _g.scrollToTop, scrollToItem = _g.scrollToItem;
    stickyHeader = useSupportsStickyHeader() && stickyHeader;
    var onCardFocus = function (event) {
        // When an element inside card receives focus we want to adjust the scroll.
        // However, that behavior is unwanted when the focus is received as result of a click
        // as it causes the click to never reach the target element.
        if (stickyHeader && !event.currentTarget.contains(getMouseDownTarget())) {
            scrollToItem(event.currentTarget);
        }
    };
    (0,react.useImperativeHandle)(ref, function () { return ({
        scrollToTop: function () {
            if (stickyHeader) {
                scrollToTop();
            }
        }
    }); }, [stickyHeader, scrollToTop]);
    var status;
    if (loading) {
        status = (react.createElement("div", { className: cards_styles_css.loading },
            react.createElement(StatusIndicator, { type: "loading" },
                react.createElement(live_region, { visible: true }, loadingText))));
    }
    else if (empty && !items.length) {
        status = react.createElement("div", { className: cards_styles_css.empty }, empty);
    }
    return (react.createElement("div", tslib_es6_assign({}, baseProps, { className: clsx_m(baseProps.className, cards_styles_css.root), ref: mergedRef }),
        react.createElement(InternalContainer, { header: hasToolsHeader && (react.createElement("div", { className: clsx_m(cards_styles_css.header, isRefresh && cards_styles_css["header-refresh"], cards_styles_css["header-variant-".concat(computedVariant)]) },
                react.createElement(ToolsHeader, { header: header, filter: filter, pagination: pagination, preferences: preferences }))), disableContentPaddings: true, disableHeaderPaddings: computedVariant === 'full-page', variant: computedVariant === 'container' ? 'cards' : computedVariant, __stickyHeader: stickyHeader, __stickyOffset: stickyHeaderVerticalOffset, __headerRef: headerRef, __headerId: cardsHeaderId, __darkHeader: computedVariant === 'full-page' },
            react.createElement("div", { className: clsx_m(hasToolsHeader && cards_styles_css["has-header"]) }, status !== null && status !== void 0 ? status : (react.createElement(CardsList, { items: items, cardDefinition: cardDefinition, trackBy: trackBy, selectionType: selectionType, columns: columns, isItemSelected: isItemSelected, getItemSelectionProps: getItemSelectionProps, visibleSections: visibleSections, updateShiftToggle: updateShiftToggle, onFocus: onCardFocus, ariaDescribedby: cardsHeaderId, ariaLabelledby: cardsHeaderId }))))));
});
/* harmony default export */ const cards = (Cards);
var CardsList = function (_a) {
    var items = _a.items, cardDefinition = _a.cardDefinition, trackBy = _a.trackBy, selectionType = _a.selectionType, columns = _a.columns, isItemSelected = _a.isItemSelected, getItemSelectionProps = _a.getItemSelectionProps, visibleSections = _a.visibleSections, updateShiftToggle = _a.updateShiftToggle, onFocus = _a.onFocus, ariaLabelledby = _a.ariaLabelledby, ariaDescribedby = _a.ariaDescribedby;
    var selectable = !!selectionType;
    var _b = useFocusMove(selectionType, items.length), moveFocusDown = _b.moveFocusDown, moveFocusUp = _b.moveFocusUp;
    var visibleSectionsDefinition = cardDefinition.sections || [];
    visibleSectionsDefinition = visibleSections
        ? visibleSectionsDefinition.filter(function (section) { return section.id && visibleSections.indexOf(section.id) !== -1; })
        : visibleSectionsDefinition;
    var listRole = undefined;
    var listItemRole = undefined;
    if (selectable) {
        listRole = 'group';
        listItemRole = 'presentation';
    }
    return (react.createElement("ol", tslib_es6_assign({ className: clsx_m(cards_styles_css.list, cards_styles_css["list-grid-".concat(columns || 1)]), role: listRole, "aria-labelledby": ariaLabelledby, "aria-describedby": ariaDescribedby }, (focusMarkers && focusMarkers.root)), items.map(function (item, index) {
        var _a;
        return (react.createElement("li", tslib_es6_assign({ className: clsx_m(cards_styles_css.card, (_a = {},
                _a[cards_styles_css["card-selectable"]] = selectable,
                _a[cards_styles_css["card-selected"]] = selectable && isItemSelected(item),
                _a)), key: getItemKey(trackBy, item, index), onFocus: onFocus }, (focusMarkers && focusMarkers.item), { role: listItemRole }),
            react.createElement("div", { className: cards_styles_css["card-inner"] },
                react.createElement("div", { className: cards_styles_css["card-header"] },
                    react.createElement("span", { className: cards_styles_css["card-header-inner"] }, cardDefinition.header ? cardDefinition.header(item) : ''),
                    selectable && (react.createElement("div", { className: cards_styles_css["selection-control"] },
                        react.createElement(SelectionControl, tslib_es6_assign({ onFocusDown: moveFocusDown, onFocusUp: moveFocusUp, onShiftToggle: updateShiftToggle }, getItemSelectionProps(item)))))),
                visibleSectionsDefinition.map(function (_a, index) {
                    var _b = _a.width, width = _b === void 0 ? 100 : _b, header = _a.header, content = _a.content, id = _a.id;
                    return (react.createElement("div", { key: id || index, className: cards_styles_css.section, style: { width: "".concat(width, "%") } },
                        header ? react.createElement("div", { className: cards_styles_css["section-header"] }, header) : '',
                        content ? react.createElement("div", { className: cards_styles_css["section-content"] }, content(item)) : ''));
                }))));
    })));
};
applyDisplayName(Cards, 'Cards');
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/header/index.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0




function components_header_Header(_a) {
    var _b = _a.variant, variant = _b === void 0 ? 'h2' : _b, props = __rest(_a, ["variant"]);
    var baseComponentProps = useBaseComponent('Header');
    return react.createElement(InternalHeader, tslib_es6_assign({ variant: variant }, props, baseComponentProps));
}
applyDisplayName(components_header_Header, 'Header');
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/link/index.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0




var link_Link = react.forwardRef(function (_a, ref) {
    var _b = _a.variant, variant = _b === void 0 ? 'secondary' : _b, _c = _a.fontSize, fontSize = _c === void 0 ? 'body-m' : _c, _d = _a.color, color = _d === void 0 ? 'normal' : _d, _e = _a.external, external = _e === void 0 ? false : _e, props = __rest(_a, ["variant", "fontSize", "color", "external"]);
    var baseComponentProps = useBaseComponent('Link');
    return (react.createElement(link_internal, tslib_es6_assign({ variant: variant, fontSize: fontSize, color: color, external: external }, props, baseComponentProps, { ref: ref })));
});
applyDisplayName(link_Link, 'Link');
/* harmony default export */ const components_link = (link_Link);
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/input/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/input/styles.css.js


    /* harmony default export */ const input_styles_css = ({
  "root": "awsui_root_2rhyz_dvvio_93",
  "input": "awsui_input_2rhyz_dvvio_97",
  "input-readonly": "awsui_input-readonly_2rhyz_dvvio_118",
  "input-invalid": "awsui_input-invalid_2rhyz_dvvio_179",
  "input-has-icon-left": "awsui_input-has-icon-left_2rhyz_dvvio_190",
  "input-type-search": "awsui_input-type-search_2rhyz_dvvio_195",
  "input-has-icon-right": "awsui_input-has-icon-right_2rhyz_dvvio_211",
  "input-has-no-border-radius": "awsui_input-has-no-border-radius_2rhyz_dvvio_214",
  "input-container": "awsui_input-container_2rhyz_dvvio_218",
  "input-icon": "awsui_input-icon_2rhyz_dvvio_223",
  "input-icon-hoverable": "awsui_input-icon-hoverable_2rhyz_dvvio_226",
  "input-icon-left": "awsui_input-icon-left_2rhyz_dvvio_230",
  "input-icon-right": "awsui_input-icon-right_2rhyz_dvvio_235"
});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/input/utils.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

var useSearchProps = function (type, disabled, readOnly, value, inputRef, onChange) {
    var searchProps = {};
    var handleIconClick = (0,react.useCallback)(function () {
        var _a;
        (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.focus();
        onChange('');
    }, [inputRef, onChange]);
    if (type === 'search' || type === 'visualSearch') {
        searchProps.__leftIcon = 'search';
        if (!disabled && !readOnly && value) {
            searchProps.__rightIcon = 'close';
            searchProps.__onRightIconClick = handleIconClick;
        }
    }
    return searchProps;
};
/**
 * Converts the boolean or string value of the `autoComplete` property to the correct `autocomplete` attribute value.
 */
var convertAutoComplete = function (propertyValue) {
    if (propertyValue === void 0) { propertyValue = false; }
    if (propertyValue === true) {
        return 'on';
    }
    return propertyValue || 'off';
};
//# sourceMappingURL=utils.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/debounce.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
// default delay for components defined by UX
var DEBOUNCE_DEFAULT_DELAY = 200;
// instead of using this function directly, consider using useDebounceCallback hook
function debounce(func, delay) {
    if (delay === void 0) { delay = DEBOUNCE_DEFAULT_DELAY; }
    var timeout;
    return function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (timeout) {
            clearTimeout(timeout);
        }
        timeout = setTimeout(function () {
            timeout = null;
            func.apply(void 0, args);
        }, delay);
    };
}
//# sourceMappingURL=debounce.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/hooks/use-debounce-callback/index.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0


function useDebounceCallback(callback, delay) {
    var callbackRef = (0,react.useRef)();
    callbackRef.current = callback;
    // ESLint rule requires an inline function which we cannot provide here
    // eslint-disable-next-line react-hooks/exhaustive-deps
    return (0,react.useCallback)(debounce((function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (callbackRef.current) {
            callbackRef.current.apply(callbackRef, args);
        }
    }), delay), []);
}
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/input/internal.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0










var iconClassName = function (position, hasHandler) {
    var _a;
    return clsx_m(input_styles_css["input-icon"], input_styles_css["input-icon-".concat(position)], (_a = {}, _a[input_styles_css["input-icon-hoverable"]] = hasHandler, _a));
};
var preventMouseDown = function (e) { return e.preventDefault(); };
function InternalInput(_a, ref) {
    var _b;
    var _c = _a.type, type = _c === void 0 ? 'text' : _c, step = _a.step, inputMode = _a.inputMode, _d = _a.autoComplete, autoComplete = _d === void 0 ? true : _d, ariaLabel = _a.ariaLabel, name = _a.name, value = _a.value, placeholder = _a.placeholder, autoFocus = _a.autoFocus, disabled = _a.disabled, readOnly = _a.readOnly, disableBrowserAutocorrect = _a.disableBrowserAutocorrect, spellcheck = _a.spellcheck, __noBorderRadius = _a.__noBorderRadius, __leftIcon = _a.__leftIcon, _e = _a.__leftIconVariant, __leftIconVariant = _e === void 0 ? 'subtle' : _e, __onLeftIconClick = _a.__onLeftIconClick, ariaRequired = _a.ariaRequired, __rightIcon = _a.__rightIcon, _f = _a.__rightIconVariant, __rightIconVariant = _f === void 0 ? 'normal' : _f, __onRightIconClick = _a.__onRightIconClick, onKeyDown = _a.onKeyDown, onKeyUp = _a.onKeyUp, onChange = _a.onChange, __onDelayedInput = _a.__onDelayedInput, __onBlurWithDetail = _a.__onBlurWithDetail, onBlur = _a.onBlur, onFocus = _a.onFocus, __nativeAttributes = _a.__nativeAttributes, __internalRootRef = _a.__internalRootRef, __inheritFormFieldProps = _a.__inheritFormFieldProps, rest = __rest(_a, ["type", "step", "inputMode", "autoComplete", "ariaLabel", "name", "value", "placeholder", "autoFocus", "disabled", "readOnly", "disableBrowserAutocorrect", "spellcheck", "__noBorderRadius", "__leftIcon", "__leftIconVariant", "__onLeftIconClick", "ariaRequired", "__rightIcon", "__rightIconVariant", "__onRightIconClick", "onKeyDown", "onKeyUp", "onChange", "__onDelayedInput", "__onBlurWithDetail", "onBlur", "onFocus", "__nativeAttributes", "__internalRootRef", "__inheritFormFieldProps"]);
    var baseProps = getBaseProps(rest);
    var fireDelayedInput = useDebounceCallback(function (value) { return fireNonCancelableEvent(__onDelayedInput, { value: value }); });
    var handleChange = function (value) {
        fireDelayedInput(value);
        fireNonCancelableEvent(onChange, { value: value });
    };
    var inputRef = (0,react.useRef)(null);
    var searchProps = useSearchProps(type, disabled, readOnly, value, inputRef, handleChange);
    __leftIcon = __leftIcon !== null && __leftIcon !== void 0 ? __leftIcon : searchProps.__leftIcon;
    __rightIcon = __rightIcon !== null && __rightIcon !== void 0 ? __rightIcon : searchProps.__rightIcon;
    __onRightIconClick = __onRightIconClick !== null && __onRightIconClick !== void 0 ? __onRightIconClick : searchProps.__onRightIconClick;
    var formFieldContext = useFormFieldContext(rest);
    var _g = __inheritFormFieldProps
        ? formFieldContext
        : tslib_es6_assign({ __useReactAutofocus: undefined }, rest), ariaLabelledby = _g.ariaLabelledby, ariaDescribedby = _g.ariaDescribedby, controlId = _g.controlId, invalid = _g.invalid, __useReactAutofocus = _g.__useReactAutofocus;
    var autoFocusEnabled = (__nativeAttributes === null || __nativeAttributes === void 0 ? void 0 : __nativeAttributes.autoFocus) || autoFocus;
    var reactAutofocusProps = __useReactAutofocus
        ? { autoFocus: !autoFocusEnabled, 'data-awsui-react-autofocus': autoFocusEnabled }
        : {};
    var attributes = tslib_es6_assign(tslib_es6_assign({ 'aria-label': ariaLabel, 'aria-labelledby': ariaLabelledby, 'aria-describedby': ariaDescribedby, name: name, placeholder: placeholder, autoFocus: autoFocus, id: controlId, className: clsx_m(input_styles_css.input, type && input_styles_css["input-type-".concat(type)], __rightIcon && input_styles_css["input-has-icon-right"], __leftIcon && input_styles_css["input-has-icon-left"], __noBorderRadius && input_styles_css["input-has-no-border-radius"], (_b = {},
            _b[input_styles_css["input-readonly"]] = readOnly,
            _b[input_styles_css["input-invalid"]] = invalid,
            _b)), autoComplete: convertAutoComplete(autoComplete), disabled: disabled, readOnly: readOnly, type: type, step: step, inputMode: inputMode, spellCheck: spellcheck, onKeyDown: onKeyDown && (function (event) { return fireKeyboardEvent(onKeyDown, event); }), onKeyUp: onKeyUp && (function (event) { return fireKeyboardEvent(onKeyUp, event); }),
        // We set a default value on the component in order to force it into the controlled mode.
        value: value !== null && value !== void 0 ? value : '', onChange: onChange && (function (event) { return handleChange(event.target.value); }), onBlur: function (e) {
            onBlur && fireNonCancelableEvent(onBlur);
            __onBlurWithDetail && fireNonCancelableEvent(__onBlurWithDetail, { relatedTarget: e.relatedTarget });
        }, onFocus: onFocus && (function () { return fireNonCancelableEvent(onFocus); }) }, __nativeAttributes), reactAutofocusProps);
    if (type === 'number') {
        // Chrome and Safari have a weird built-in behavior of letting focused
        // number inputs be controlled by scrolling on them. However, they don't
        // lock the browser's scroll, so it's very easy to accidentally increment
        // the input while scrolling down the page.
        attributes.onWheel = function (event) { return event.currentTarget.blur(); };
    }
    if (disableBrowserAutocorrect) {
        attributes.autoCorrect = 'off';
        attributes.autoCapitalize = 'off';
    }
    // ensure aria properties are string literal "true"
    if (ariaRequired) {
        attributes['aria-required'] = 'true';
    }
    if (invalid) {
        attributes['aria-invalid'] = 'true';
    }
    var mergedRef = useMergeRefs(ref, inputRef);
    // type = "visualSearch" renders a type="text' input
    if (attributes.type === 'visualSearch') {
        attributes.type = 'text';
    }
    (0,react.useEffect)(function () {
        var _a;
        if (__useReactAutofocus && autoFocusEnabled) {
            (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.focus({ preventScroll: true });
        }
    }, [__useReactAutofocus, autoFocusEnabled]);
    return (react.createElement("div", tslib_es6_assign({}, baseProps, { className: clsx_m(baseProps.className, input_styles_css["input-container"]), ref: __internalRootRef }),
        __leftIcon && (react.createElement("span", { onClick: __onLeftIconClick, className: iconClassName('left', !!__onLeftIconClick) },
            react.createElement(internal, { name: __leftIcon, variant: disabled ? 'disabled' : __leftIconVariant }))),
        react.createElement("input", tslib_es6_assign({ ref: mergedRef }, attributes)),
        __rightIcon && (react.createElement("span", { onClick: __onRightIconClick, onMouseDown: preventMouseDown, className: iconClassName('right', !!__onRightIconClick) },
            react.createElement(internal, { name: __rightIcon, variant: disabled ? 'disabled' : __rightIconVariant })))));
}
/* harmony default export */ const input_internal = (react.forwardRef(InternalInput));
//# sourceMappingURL=internal.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/text-filter/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/text-filter/styles.css.js


    /* harmony default export */ const text_filter_styles_css = ({
  "root": "awsui_root_1sdq3_mhcwk_93",
  "input": "awsui_input_1sdq3_mhcwk_107",
  "results": "awsui_results_1sdq3_mhcwk_111",
  "results-visible": "awsui_results-visible_1sdq3_mhcwk_117"
});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/text-filter/internal.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0







var InternalTextFilter = react.forwardRef(function (_a, ref) {
    var filteringText = _a.filteringText, filteringAriaLabel = _a.filteringAriaLabel, filteringPlaceholder = _a.filteringPlaceholder, disabled = _a.disabled, countText = _a.countText, onChange = _a.onChange, onDelayedChange = _a.onDelayedChange, __internalRootRef = _a.__internalRootRef, rest = __rest(_a, ["filteringText", "filteringAriaLabel", "filteringPlaceholder", "disabled", "countText", "onChange", "onDelayedChange", "__internalRootRef"]);
    var inputRef = (0,react.useRef)(null);
    var baseProps = getBaseProps(rest);
    useForwardFocus(ref, inputRef);
    var showResults = filteringText && countText && !disabled;
    return (react.createElement("span", tslib_es6_assign({}, baseProps, { className: clsx_m(baseProps.className, text_filter_styles_css.root), ref: __internalRootRef }),
        react.createElement(input_internal, { ref: inputRef, className: text_filter_styles_css.input, type: "search", ariaLabel: filteringAriaLabel, placeholder: filteringPlaceholder, value: filteringText, disabled: disabled, autoComplete: false, onChange: function (event) { return fireNonCancelableEvent(onChange, { filteringText: event.detail.value }); }, __onDelayedInput: function (event) { return fireNonCancelableEvent(onDelayedChange, { filteringText: event.detail.value }); } }),
        react.createElement("span", { "aria-live": "polite", "aria-atomic": "true", className: clsx_m(text_filter_styles_css.results, showResults && text_filter_styles_css["results-visible"]) }, showResults ? countText : '')));
});
/* harmony default export */ const text_filter_internal = (InternalTextFilter);
//# sourceMappingURL=internal.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/text-filter/index.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0




var TextFilter = react.forwardRef(function (props, ref) {
    var baseComponentProps = useBaseComponent('TextFilter');
    return react.createElement(text_filter_internal, tslib_es6_assign({}, props, baseComponentProps, { ref: ref }));
});
applyDisplayName(TextFilter, 'TextFilter');
/* harmony default export */ const text_filter = (TextFilter);
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/pagination/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/pagination/styles.css.js


    /* harmony default export */ const pagination_styles_css = ({
  "root": "awsui_root_fvjdu_yr7md_93",
  "button": "awsui_button_fvjdu_yr7md_111",
  "dots": "awsui_dots_fvjdu_yr7md_112",
  "button-disabled": "awsui_button-disabled_fvjdu_yr7md_134",
  "arrow": "awsui_arrow_fvjdu_yr7md_139",
  "page-number": "awsui_page-number_fvjdu_yr7md_149",
  "button-current": "awsui_button-current_fvjdu_yr7md_155",
  "page-item": "awsui_page-item_fvjdu_yr7md_172",
  "root-disabled": "awsui_root-disabled_fvjdu_yr7md_188"
});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/pagination/utils.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
// TODO [mjawors] _.range
function range(from, to) {
    var result = [];
    for (var i = from; i <= to; i++) {
        result.push(i);
    }
    return result;
}
function getPaginationState(currentPageIndex, totalPagesCount, isOpenEnd) {
    // Total number of elements handled here
    var numberOfControls = 7;
    // Max number of controls that can be displayed on the left and right hand side of the current page.
    // Works only for odd numbers
    var leftDelta = Math.floor(numberOfControls / 2);
    var rightDelta = leftDelta;
    // upper and lower limits for pages range
    var lowerLimit = 2;
    var upperLimit = totalPagesCount - 1;
    if (isOpenEnd) {
        rightDelta++;
        upperLimit = totalPagesCount + 1;
    }
    // Left and right indices based on delta calculation
    var leftIndex = currentPageIndex - leftDelta;
    var rightIndex = currentPageIndex + rightDelta;
    // adjust page indexes if page index is too small
    if (leftIndex < lowerLimit) {
        rightIndex += lowerLimit - leftIndex;
        leftIndex = lowerLimit;
    }
    // adjust page indexes if page index is to big
    if (rightIndex > upperLimit) {
        leftIndex -= rightIndex - upperLimit;
        rightIndex = upperLimit;
    }
    // adjust indexes one more time to avoid out of range errors
    leftIndex = Math.max(leftIndex, 2);
    rightIndex = Math.min(rightIndex, upperLimit);
    // consider adding dots
    var leftDots = leftIndex > 2;
    var rightDots = isOpenEnd || rightIndex < upperLimit;
    if (leftDots) {
        leftIndex++;
    }
    if (rightDots) {
        rightIndex--;
    }
    return { leftDots: leftDots, rightDots: rightDots, leftIndex: leftIndex, rightIndex: rightIndex };
}
//# sourceMappingURL=utils.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/pagination/internal.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0








var defaultAriaLabels = {
    nextPageLabel: '',
    paginationLabel: '',
    previousPageLabel: '',
    pageLabel: function (pageNumber) { return "".concat(pageNumber); }
};
function PageButton(_a) {
    var className = _a.className, ariaLabel = _a.ariaLabel, disabled = _a.disabled, pageIndex = _a.pageIndex, _b = _a.isCurrent, isCurrent = _b === void 0 ? false : _b, children = _a.children, onClick = _a.onClick;
    var focusVisible = useFocusVisible();
    function handleClick(event) {
        event.preventDefault();
        onClick(pageIndex);
    }
    return (react.createElement("li", { className: pagination_styles_css["page-item"] },
        react.createElement("button", tslib_es6_assign({}, focusVisible, { className: clsx_m(className, pagination_styles_css.button, disabled && pagination_styles_css["button-disabled"], isCurrent && pagination_styles_css["button-current"]), type: "button", "aria-label": ariaLabel, disabled: disabled, onClick: handleClick, "aria-current": isCurrent }), children)));
}
function PageNumber(_a) {
    var pageIndex = _a.pageIndex, rest = __rest(_a, ["pageIndex"]);
    return (react.createElement(PageButton, tslib_es6_assign({ className: pagination_styles_css["page-number"], pageIndex: pageIndex }, rest), pageIndex));
}
function InternalPagination(_a) {
    var _b, _c, _d;
    var openEnd = _a.openEnd, currentPageIndex = _a.currentPageIndex, ariaLabels = _a.ariaLabels, pagesCount = _a.pagesCount, disabled = _a.disabled, onChange = _a.onChange, onNextPageClick = _a.onNextPageClick, onPreviousPageClick = _a.onPreviousPageClick, _e = _a.__internalRootRef, __internalRootRef = _e === void 0 ? null : _e, rest = __rest(_a, ["openEnd", "currentPageIndex", "ariaLabels", "pagesCount", "disabled", "onChange", "onNextPageClick", "onPreviousPageClick", "__internalRootRef"]);
    var baseProps = getBaseProps(rest);
    var pageNumberLabelFn = (_b = ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.pageLabel) !== null && _b !== void 0 ? _b : defaultAriaLabels.pageLabel;
    var _f = getPaginationState(currentPageIndex, pagesCount, openEnd), leftDots = _f.leftDots, leftIndex = _f.leftIndex, rightIndex = _f.rightIndex, rightDots = _f.rightDots;
    function handlePrevPageClick(requestedPageIndex) {
        handlePageClick(requestedPageIndex);
        fireNonCancelableEvent(onPreviousPageClick, {
            requestedPageAvailable: true,
            requestedPageIndex: requestedPageIndex
        });
    }
    function handleNextPageClick(requestedPageIndex) {
        handlePageClick(requestedPageIndex);
        fireNonCancelableEvent(onNextPageClick, {
            requestedPageAvailable: currentPageIndex < pagesCount,
            requestedPageIndex: requestedPageIndex
        });
    }
    function handlePageClick(requestedPageIndex) {
        fireNonCancelableEvent(onChange, { currentPageIndex: requestedPageIndex });
    }
    return (react.createElement("ul", tslib_es6_assign({ "aria-label": ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.paginationLabel }, baseProps, { className: clsx_m(baseProps.className, pagination_styles_css.root, disabled && pagination_styles_css["root-disabled"]), ref: __internalRootRef }),
        react.createElement(PageButton, { className: pagination_styles_css.arrow, pageIndex: currentPageIndex - 1, ariaLabel: (_c = ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.previousPageLabel) !== null && _c !== void 0 ? _c : defaultAriaLabels.nextPageLabel, disabled: disabled || currentPageIndex === 1, onClick: handlePrevPageClick },
            react.createElement(internal, { name: "angle-left", variant: disabled ? 'disabled' : 'normal' })),
        react.createElement(PageNumber, { pageIndex: 1, isCurrent: currentPageIndex === 1, disabled: disabled, ariaLabel: pageNumberLabelFn(1), onClick: handlePageClick }),
        leftDots && react.createElement("li", { className: pagination_styles_css.dots }, "..."),
        range(leftIndex, rightIndex).map(function (pageIndex) { return (react.createElement(PageNumber, { key: pageIndex, isCurrent: currentPageIndex === pageIndex, pageIndex: pageIndex, disabled: disabled, ariaLabel: pageNumberLabelFn(pageIndex), onClick: handlePageClick })); }),
        rightDots && react.createElement("li", { className: pagination_styles_css.dots }, "..."),
        !openEnd && pagesCount > 1 && (react.createElement(PageNumber, { isCurrent: currentPageIndex === pagesCount, pageIndex: pagesCount, disabled: disabled, ariaLabel: pageNumberLabelFn(pagesCount), onClick: handlePageClick })),
        react.createElement(PageButton, { className: pagination_styles_css.arrow, pageIndex: currentPageIndex + 1, ariaLabel: (_d = ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.nextPageLabel) !== null && _d !== void 0 ? _d : defaultAriaLabels.nextPageLabel, disabled: disabled || (!openEnd && (pagesCount === 0 || currentPageIndex === pagesCount)), onClick: handleNextPageClick },
            react.createElement(internal, { name: "angle-right", variant: disabled ? 'disabled' : 'normal' }))));
}
//# sourceMappingURL=internal.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/pagination/index.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0




function Pagination(props) {
    var baseComponentProps = useBaseComponent('Pagination');
    return react.createElement(InternalPagination, tslib_es6_assign({}, props, baseComponentProps));
}
applyDisplayName(Pagination, 'Pagination');
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/table/header-cell/utils.js
var stateToIcon = {
    sortable: 'caret-down',
    ascending: 'caret-up-filled',
    descending: 'caret-down-filled'
};
var stateToAriaSort = {
    sortable: 'none',
    ascending: 'ascending',
    descending: 'descending'
};
var getSortingStatus = function (sortable, sorted, descending, disabled) {
    if (sorted) {
        if (descending) {
            return 'descending';
        }
        return 'ascending';
    }
    if (sortable && !disabled) {
        return 'sortable';
    }
    return undefined;
};
var getSortingIconName = function (sortingState) { return stateToIcon[sortingState]; };
var getAriaSort = function (sortingState) { return stateToAriaSort[sortingState]; };
var isSorted = function (column, sortingColumn) {
    return column === sortingColumn ||
        (column.sortingField !== undefined && column.sortingField === sortingColumn.sortingField) ||
        (column.sortingComparator !== undefined && column.sortingComparator === sortingColumn.sortingComparator);
};
//# sourceMappingURL=utils.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/table/header-cell/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/table/header-cell/styles.css.js


    /* harmony default export */ const header_cell_styles_css = ({
  "header-cell": "awsui_header-cell_1spae_lzlsa_93",
  "header-cell-sticky": "awsui_header-cell-sticky_1spae_lzlsa_105",
  "header-cell-stuck": "awsui_header-cell-stuck_1spae_lzlsa_108",
  "header-cell-variant-full-page": "awsui_header-cell-variant-full-page_1spae_lzlsa_108",
  "header-cell-hidden": "awsui_header-cell-hidden_1spae_lzlsa_111",
  "header-cell-sortable": "awsui_header-cell-sortable_1spae_lzlsa_114",
  "header-cell-resizable": "awsui_header-cell-resizable_1spae_lzlsa_126",
  "sorting-icon": "awsui_sorting-icon_1spae_lzlsa_130",
  "edit-icon": "awsui_edit-icon_1spae_lzlsa_137",
  "header-cell-content": "awsui_header-cell-content_1spae_lzlsa_143",
  "header-cell-fake-focus": "awsui_header-cell-fake-focus_1spae_lzlsa_172",
  "header-cell-disabled": "awsui_header-cell-disabled_1spae_lzlsa_190",
  "header-cell-sorted": "awsui_header-cell-sorted_1spae_lzlsa_190",
  "header-cell-text": "awsui_header-cell-text_1spae_lzlsa_204",
  "header-cell-text-wrap": "awsui_header-cell-text-wrap_1spae_lzlsa_204",
  "header-cell-ascending": "awsui_header-cell-ascending_1spae_lzlsa_210",
  "header-cell-descending": "awsui_header-cell-descending_1spae_lzlsa_211",
  "is-visual-refresh": "awsui_is-visual-refresh_1spae_lzlsa_221",
  "has-striped-rows": "awsui_has-striped-rows_1spae_lzlsa_232"
});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/table/resizer/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/table/resizer/styles.css.js


    /* harmony default export */ const resizer_styles_css = ({
  "resize-active": "awsui_resize-active_x7peu_1tckh_93",
  "resize-active-with-focus": "awsui_resize-active-with-focus_x7peu_1tckh_93",
  "resizer": "awsui_resizer_x7peu_1tckh_98",
  "resizer-active": "awsui_resizer-active_x7peu_1tckh_114",
  "has-focus": "awsui_has-focus_x7peu_1tckh_123",
  "tracker": "awsui_tracker_x7peu_1tckh_146"
});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/table/use-column-widths.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0




var DEFAULT_WIDTH = 120;
var SELECTION_CELL_WIDTH = 54;
function checkProperty(column, name) {
    var value = column[name];
    if (typeof value !== 'number' && typeof value !== 'undefined') {
        logging_warnOnce('Table', "resizableColumns feature requires ".concat(name, " property to be a number, got ").concat(value, ". The component may work incorrectly."));
    }
}
function checkColumnWidths(columnDefinitions) {
    for (var _i = 0, columnDefinitions_1 = columnDefinitions; _i < columnDefinitions_1.length; _i++) {
        var column = columnDefinitions_1[_i];
        checkProperty(column, 'minWidth');
        checkProperty(column, 'width');
    }
}
function readWidths(headerEl, columnDefinitions, hasSelection) {
    var result = {};
    for (var index = 0; index < columnDefinitions.length; index++) {
        var column = columnDefinitions[index];
        var id = getColumnKey(columnDefinitions[index], index);
        var width = column.width || 0;
        var minWidth = column.minWidth || width || DEFAULT_WIDTH;
        if (!width && // read width from the DOM if it is missing in the config
            index !== columnDefinitions.length - 1 // skip reading for the last column, because it expands to fully fit the container
        ) {
            var colIndex = hasSelection ? index + 2 : index + 1;
            var colEl = headerEl.querySelector(".".concat(header_cell_styles_css["header-cell"], ":nth-child(").concat(colIndex, ")"));
            width = colEl.getBoundingClientRect().width;
        }
        result[id] = Math.max(width, minWidth);
    }
    return result;
}
function updateWidths(columnDefinitions, oldWidths, newWidth, colIndex) {
    var _a;
    var definition = columnDefinitions[colIndex];
    var id = getColumnKey(definition, colIndex);
    var minWidth = typeof definition.minWidth === 'number' ? definition.minWidth : DEFAULT_WIDTH;
    newWidth = Math.max(newWidth, minWidth);
    if (oldWidths[id] === newWidth) {
        return oldWidths;
    }
    return tslib_es6_assign(tslib_es6_assign({}, oldWidths), (_a = {}, _a[id] = newWidth, _a));
}
var WidthsContext = (0,react.createContext)({
    totalWidth: 0,
    columnWidths: {},
    updateColumn: function () { }
});
function ColumnWidthsProvider(_a) {
    var tableRef = _a.tableRef, visibleColumnDefinitions = _a.visibleColumnDefinitions, resizableColumns = _a.resizableColumns, hasSelection = _a.hasSelection, children = _a.children;
    var visibleColumns = (0,react.useRef)(null);
    var _b = (0,react.useState)({}), columnWidths = _b[0], setColumnWidths = _b[1];
    (0,react.useEffect)(function () {
        if (!resizableColumns) {
            return;
        }
        var lastVisible = visibleColumns.current;
        if (lastVisible) {
            var _loop_1 = function (index) {
                var column = visibleColumnDefinitions[index];
                var id = getColumnKey(column, index);
                if (!columnWidths[id] && lastVisible.indexOf(column.id) === -1) {
                    setColumnWidths(function (columnWidths) {
                        var _a;
                        return (tslib_es6_assign(tslib_es6_assign({}, columnWidths), (_a = {}, _a[id] = column.width || DEFAULT_WIDTH, _a)));
                    });
                }
            };
            for (var index = 0; index < visibleColumnDefinitions.length; index++) {
                _loop_1(index);
            }
        }
        visibleColumns.current = visibleColumnDefinitions.map(function (column) { return column.id; });
    }, [columnWidths, resizableColumns, visibleColumnDefinitions]);
    (0,react.useEffect)(function () {
        if (!resizableColumns) {
            return;
        }
        setColumnWidths(function () { return readWidths(tableRef.current, visibleColumnDefinitions, hasSelection); });
        // This code is intended to run only at the first render and should not re-run when table props change
        // eslint-disable-next-line react-hooks/exhaustive-deps
    }, []);
    function updateColumn(colIndex, newWidth) {
        setColumnWidths(function (columnWidths) { return updateWidths(visibleColumnDefinitions, columnWidths, newWidth, colIndex); });
    }
    var totalWidth = visibleColumnDefinitions.reduce(function (total, column, index) { return total + (columnWidths[getColumnKey(column, index)] || DEFAULT_WIDTH); }, 0);
    if (hasSelection) {
        totalWidth += SELECTION_CELL_WIDTH;
    }
    return react.createElement(WidthsContext.Provider, { value: { columnWidths: columnWidths, totalWidth: totalWidth, updateColumn: updateColumn } }, children);
}
function useColumnWidths() {
    return (0,react.useContext)(WidthsContext);
}
//# sourceMappingURL=use-column-widths.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/table/resizer/index.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0









var AUTO_GROW_START_TIME = 10;
var AUTO_GROW_INTERVAL = 10;
var AUTO_GROW_INCREMENT = 5;
function Resizer(_a) {
    var onDragMove = _a.onDragMove, onFinish = _a.onFinish, ariaLabelledby = _a.ariaLabelledby, _b = _a.minWidth, minWidth = _b === void 0 ? DEFAULT_WIDTH : _b;
    var _c = (0,react.useState)(false), isDragging = _c[0], setIsDragging = _c[1];
    var _d = (0,react.useState)(), headerCell = _d[0], setHeaderCell = _d[1];
    var autoGrowTimeout = (0,react.useRef)();
    var onFinishStable = use_stable_event_handler_useStableEventHandler(onFinish);
    var onDragStable = use_stable_event_handler_useStableEventHandler(onDragMove);
    var _e = (0,react.useState)(false), resizerHasFocus = _e[0], setResizerHasFocus = _e[1];
    var _f = (0,react.useState)(0), headerCellWidth = _f[0], setHeaderCellWidth = _f[1];
    (0,react.useEffect)(function () {
        if ((!isDragging && !resizerHasFocus) || !headerCell) {
            return;
        }
        var rootElement = findUpUntil(headerCell, function (element) { return element.className.indexOf(table_styles_css.root) > -1; });
        var tableElement = rootElement.querySelector("table");
        // tracker is rendered inside table wrapper to align with its size
        var tracker = rootElement.querySelector(".".concat(resizer_styles_css.tracker));
        var scrollParent = getOverflowParents(headerCell)[0];
        var _a = scrollParent.getBoundingClientRect(), leftEdge = _a.left, rightEdge = _a.right;
        var updateTrackerPosition = function (newOffset) {
            var scrollParentLeft = tableElement.getBoundingClientRect().left;
            tracker.style.top = headerCell.getBoundingClientRect().height + 'px';
            // minus one pixel to offset the cell border
            tracker.style.left = newOffset - scrollParentLeft - 1 + 'px';
        };
        var updateColumnWidth = function (newWidth) {
            var _a = headerCell.getBoundingClientRect(), right = _a.right, width = _a.width;
            var updatedWidth = newWidth < minWidth ? minWidth : newWidth;
            updateTrackerPosition(right + updatedWidth - width);
            setHeaderCellWidth(newWidth);
            // callbacks must be the last calls in the handler, because they may cause an extra update
            onDragStable(newWidth);
        };
        var resizeColumn = function (offset) {
            if (offset > leftEdge) {
                var cellLeft = headerCell.getBoundingClientRect().left;
                var newWidth = offset - cellLeft;
                // callbacks must be the last calls in the handler, because they may cause an extra update
                updateColumnWidth(newWidth);
            }
        };
        var onAutoGrow = function () {
            var width = headerCell.getBoundingClientRect().width;
            autoGrowTimeout.current = setTimeout(onAutoGrow, AUTO_GROW_INTERVAL);
            // callbacks must be the last calls in the handler, because they may cause an extra update
            updateColumnWidth(width + AUTO_GROW_INCREMENT);
            scrollParent.scrollLeft += AUTO_GROW_INCREMENT;
        };
        var onMouseMove = function (event) {
            clearTimeout(autoGrowTimeout.current);
            var offset = event.pageX;
            if (offset > rightEdge) {
                autoGrowTimeout.current = setTimeout(onAutoGrow, AUTO_GROW_START_TIME);
            }
            else {
                resizeColumn(offset);
            }
        };
        var onMouseUp = function (event) {
            resizeColumn(event.pageX);
            setIsDragging(false);
            onFinishStable();
            clearTimeout(autoGrowTimeout.current);
        };
        var onKeyDown = function (event) {
            // prevent screenreader cursor move
            if (event.keyCode === KeyCode.left || event.keyCode === KeyCode.right) {
                event.preventDefault();
            }
            // update width
            if (event.keyCode === KeyCode.left) {
                updateColumnWidth(headerCell.getBoundingClientRect().width - 10);
            }
            if (event.keyCode === KeyCode.right) {
                updateColumnWidth(headerCell.getBoundingClientRect().width + 10);
            }
        };
        updateTrackerPosition(headerCell.getBoundingClientRect().right);
        document.body.classList.add(resizer_styles_css["resize-active"]);
        document.body.classList.remove(resizer_styles_css["resize-active-with-focus"]);
        if (isDragging) {
            document.addEventListener('mousemove', onMouseMove);
            document.addEventListener('mouseup', onMouseUp);
        }
        if (resizerHasFocus) {
            document.body.classList.add(resizer_styles_css["resize-active-with-focus"]);
            headerCell.addEventListener('keydown', onKeyDown);
        }
        return function () {
            clearTimeout(autoGrowTimeout.current);
            document.body.classList.remove(resizer_styles_css["resize-active"]);
            document.removeEventListener('mousemove', onMouseMove);
            document.removeEventListener('mouseup', onMouseUp);
            headerCell.removeEventListener('keydown', onKeyDown);
        };
    }, [headerCell, isDragging, onDragStable, onFinishStable, resizerHasFocus, minWidth]);
    return (react.createElement("span", { className: clsx_m(resizer_styles_css.resizer, isDragging && resizer_styles_css["resizer-active"], resizerHasFocus && resizer_styles_css["has-focus"]), onMouseDown: function (event) {
            if (event.button !== 0) {
                return;
            }
            event.preventDefault();
            var headerCell = findUpUntil(event.currentTarget, function (element) { return element.tagName.toLowerCase() === 'th'; });
            setIsDragging(true);
            setHeaderCell(headerCell);
        }, onFocus: function (event) {
            var headerCell = findUpUntil(event.currentTarget, function (element) { return element.tagName.toLowerCase() === 'th'; });
            setHeaderCellWidth(headerCell.getBoundingClientRect().width);
            setResizerHasFocus(true);
            setHeaderCell(headerCell);
        }, onBlur: function () {
            setResizerHasFocus(false);
        }, role: "separator", "aria-orientation": "vertical", "aria-labelledby": ariaLabelledby, "aria-valuenow": headerCellWidth, "aria-valuetext": headerCellWidth.toString(), "aria-valuemin": minWidth, tabIndex: 0 }));
}
function ResizeTracker() {
    return react.createElement("span", { className: resizer_styles_css.tracker });
}
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/table/header-cell/index.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0









function TableHeaderCell(_a) {
    var _b, _c, _d;
    var _e;
    var className = _a.className, style = _a.style, tabIndex = _a.tabIndex, column = _a.column, activeSortingColumn = _a.activeSortingColumn, sortingDescending = _a.sortingDescending, sortingDisabled = _a.sortingDisabled, wrapLines = _a.wrapLines, showFocusRing = _a.showFocusRing, hidden = _a.hidden, onClick = _a.onClick, colIndex = _a.colIndex, onFocus = _a.onFocus, onBlur = _a.onBlur, updateColumn = _a.updateColumn, resizableColumns = _a.resizableColumns, onResizeFinish = _a.onResizeFinish, isEditable = _a.isEditable;
    var focusVisible = useFocusVisible();
    var sortable = !!column.sortingComparator || !!column.sortingField;
    var sorted = !!activeSortingColumn && isSorted(column, activeSortingColumn);
    var sortingStatus = getSortingStatus(sortable, sorted, !!sortingDescending, !!sortingDisabled);
    var handleClick = function () {
        return onClick({
            sortingColumn: column,
            isDescending: sorted ? !sortingDescending : false
        });
    };
    // Elements with role="button" do not have the default behavior of <button>, where pressing
    // Enter or Space will trigger a click event. Therefore we need to add this ourselves.
    // The native <button> element cannot be used due to a misaligned implementation in Firefox:
    // https://bugzilla.mozilla.org/show_bug.cgi?id=843003
    var handleKeyPress = function (_a) {
        var e = _a.nativeEvent;
        if (e.keyCode === KeyCode.enter || e.keyCode === KeyCode.space) {
            e.preventDefault();
            handleClick();
        }
    };
    var headerId = useUniqueId('table-header-');
    return (react.createElement("th", { className: clsx_m(className, (_b = {},
            _b[header_cell_styles_css["header-cell-resizable"]] = !!resizableColumns,
            _b[header_cell_styles_css["header-cell-sortable"]] = sortingStatus,
            _b[header_cell_styles_css["header-cell-sorted"]] = sortingStatus === 'ascending' || sortingStatus === 'descending',
            _b[header_cell_styles_css["header-cell-disabled"]] = sortingDisabled,
            _b[header_cell_styles_css["header-cell-ascending"]] = sortingStatus === 'ascending',
            _b[header_cell_styles_css["header-cell-descending"]] = sortingStatus === 'descending',
            _b[header_cell_styles_css["header-cell-hidden"]] = hidden,
            _b)), "aria-sort": sortingStatus && getAriaSort(sortingStatus), style: style, scope: "col" },
        react.createElement("div", tslib_es6_assign({ className: clsx_m(header_cell_styles_css["header-cell-content"], (_c = {},
                _c[header_cell_styles_css["header-cell-fake-focus"]] = showFocusRing && focusVisible['data-awsui-focus-visible'],
                _c)), "aria-label": column.ariaLabel
                ? column.ariaLabel({
                    sorted: sorted,
                    descending: sorted && !!sortingDescending,
                    disabled: !!sortingDisabled
                })
                : undefined }, (sortingDisabled || !sortingStatus
            ? (_d = {}, _d['aria-disabled'] = 'true', _d) : tslib_es6_assign(tslib_es6_assign({ onKeyPress: handleKeyPress, tabIndex: tabIndex, role: 'button' }, focusVisible), { onClick: handleClick, onFocus: onFocus, onBlur: onBlur }))),
            react.createElement("div", { className: clsx_m(header_cell_styles_css["header-cell-text"], wrapLines && header_cell_styles_css["header-cell-text-wrap"]), id: headerId },
                column.header,
                isEditable ? (react.createElement("span", { className: header_cell_styles_css["edit-icon"], role: "img", "aria-label": (_e = column.editConfig) === null || _e === void 0 ? void 0 : _e.editIconAriaLabel },
                    react.createElement(internal, { name: "edit" }))) : null),
            sortingStatus && (react.createElement("span", { className: header_cell_styles_css["sorting-icon"] },
                react.createElement(internal, { name: getSortingIconName(sortingStatus) })))),
        resizableColumns && (react.createElement(react.Fragment, null,
            react.createElement(Resizer, { onDragMove: function (newWidth) { return updateColumn(colIndex, newWidth); }, onFinish: onResizeFinish, ariaLabelledby: headerId, minWidth: typeof column.minWidth === 'string' ? parseInt(column.minWidth) : column.minWidth })))));
}
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/table/thead.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0












var Thead = react.forwardRef(function (_a, outerRef) {
    var containerWidth = _a.containerWidth, selectionType = _a.selectionType, selectAllProps = _a.selectAllProps, columnDefinitions = _a.columnDefinitions, sortingColumn = _a.sortingColumn, sortingDisabled = _a.sortingDisabled, sortingDescending = _a.sortingDescending, resizableColumns = _a.resizableColumns, variant = _a.variant, wrapLines = _a.wrapLines, onFocusMove = _a.onFocusMove, onCellFocus = _a.onCellFocus, onCellBlur = _a.onCellBlur, onSortingChange = _a.onSortingChange, onResizeFinish = _a.onResizeFinish, singleSelectionHeaderAriaLabel = _a.singleSelectionHeaderAriaLabel, stripedRows = _a.stripedRows, _b = _a.showFocusRing, showFocusRing = _b === void 0 ? null : _b, _c = _a.sticky, sticky = _c === void 0 ? false : _c, _d = _a.hidden, hidden = _d === void 0 ? false : _d, _e = _a.stuck, stuck = _e === void 0 ? false : _e;
    var isVisualRefresh = useVisualRefresh();
    var headerCellClass = clsx_m(header_cell_styles_css["header-cell"], header_cell_styles_css["header-cell-variant-".concat(variant)], sticky && header_cell_styles_css["header-cell-sticky"], stuck && header_cell_styles_css["header-cell-stuck"], stripedRows && header_cell_styles_css["has-striped-rows"], isVisualRefresh && header_cell_styles_css["is-visual-refresh"]);
    var selectionCellClass = clsx_m(table_styles_css["selection-control"], table_styles_css["selection-control-header"], isVisualRefresh && table_styles_css["is-visual-refresh"]);
    var _f = useColumnWidths(), columnWidths = _f.columnWidths, totalWidth = _f.totalWidth, updateColumn = _f.updateColumn;
    return (react.createElement("thead", { className: clsx_m(!hidden && table_styles_css["thead-active"]) },
        react.createElement("tr", tslib_es6_assign({}, focusMarkers.all, { ref: outerRef, "aria-rowindex": 1 }),
            selectionType === 'multi' && (react.createElement("th", { className: clsx_m(headerCellClass, selectionCellClass, hidden && header_cell_styles_css["header-cell-hidden"]), scope: "col" },
                react.createElement(SelectionControl, tslib_es6_assign({ onFocusDown: function (event) { return onFocusMove(event.target, -1, +1); } }, selectAllProps, (hidden ? { tabIndex: -1 } : {}))))),
            selectionType === 'single' && (react.createElement("th", { className: clsx_m(headerCellClass, selectionCellClass, hidden && header_cell_styles_css["header-cell-hidden"]), scope: "col" },
                react.createElement(ScreenreaderOnly, null, singleSelectionHeaderAriaLabel))),
            columnDefinitions.map(function (column, colIndex) {
                var widthOverride;
                if (resizableColumns) {
                    if (columnWidths) {
                        // use stateful value if available
                        widthOverride = columnWidths[getColumnKey(column, colIndex)];
                    }
                    if (colIndex === columnDefinitions.length - 1 && containerWidth && containerWidth > totalWidth) {
                        // let the last column grow and fill the container width
                        widthOverride = 'auto';
                    }
                }
                return (react.createElement(TableHeaderCell, { key: getColumnKey(column, colIndex), className: headerCellClass, style: {
                        width: widthOverride || column.width,
                        minWidth: sticky ? undefined : column.minWidth,
                        maxWidth: resizableColumns || sticky ? undefined : column.maxWidth
                    }, tabIndex: sticky ? -1 : 0, showFocusRing: colIndex === showFocusRing, column: column, activeSortingColumn: sortingColumn, sortingDescending: sortingDescending, sortingDisabled: sortingDisabled, wrapLines: wrapLines, hidden: hidden, colIndex: colIndex, updateColumn: updateColumn, onResizeFinish: function () { return onResizeFinish(columnWidths); }, resizableColumns: resizableColumns, onClick: function (detail) { return fireNonCancelableEvent(onSortingChange, detail); }, onFocus: function () { return onCellFocus === null || onCellFocus === void 0 ? void 0 : onCellFocus(colIndex); }, onBlur: onCellBlur, isEditable: !!column.editConfig }));
            }))));
});
/* harmony default export */ const thead = (Thead);
//# sourceMappingURL=thead.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/table/body-cell/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/table/body-cell/styles.css.js


    /* harmony default export */ const body_cell_styles_css = ({
  "body-cell": "awsui_body-cell_c6tup_17cg6_93",
  "body-cell-wrap": "awsui_body-cell-wrap_c6tup_17cg6_102",
  "is-visual-refresh": "awsui_is-visual-refresh_c6tup_17cg6_114",
  "has-striped-rows": "awsui_has-striped-rows_c6tup_17cg6_126",
  "body-cell-edit-active": "awsui_body-cell-edit-active_c6tup_17cg6_129",
  "body-cell-editable": "awsui_body-cell-editable_c6tup_17cg6_129",
  "has-selection": "awsui_has-selection_c6tup_17cg6_135",
  "body-cell-first-row": "awsui_body-cell-first-row_c6tup_17cg6_141",
  "body-cell-last-row": "awsui_body-cell-last-row_c6tup_17cg6_144",
  "body-cell-selected": "awsui_body-cell-selected_c6tup_17cg6_144",
  "has-footer": "awsui_has-footer_c6tup_17cg6_144",
  "body-cell-shaded": "awsui_body-cell-shaded_c6tup_17cg6_154",
  "body-cell-next-selected": "awsui_body-cell-next-selected_c6tup_17cg6_176",
  "body-cell-prev-selected": "awsui_body-cell-prev-selected_c6tup_17cg6_180",
  "body-cell-editor": "awsui_body-cell-editor_c6tup_17cg6_204",
  "body-cell-editor-form": "awsui_body-cell-editor-form_c6tup_17cg6_214",
  "body-cell-editor-row": "awsui_body-cell-editor-row_c6tup_17cg6_223",
  "body-cell-editor-controls": "awsui_body-cell-editor-controls_c6tup_17cg6_233"
});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/table/body-cell/td-element.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0



var TableTdElement = react.forwardRef(function (_a, ref) {
    var className = _a.className, style = _a.style, children = _a.children, wrapLines = _a.wrapLines, isFirstRow = _a.isFirstRow, isLastRow = _a.isLastRow, isSelected = _a.isSelected, isNextSelected = _a.isNextSelected, isPrevSelected = _a.isPrevSelected, nativeAttributes = _a.nativeAttributes, onClick = _a.onClick, isEvenRow = _a.isEvenRow, stripedRows = _a.stripedRows, isVisualRefresh = _a.isVisualRefresh, hasSelection = _a.hasSelection, hasFooter = _a.hasFooter;
    return (react.createElement("td", tslib_es6_assign({ style: style, className: clsx_m(className, body_cell_styles_css["body-cell"], wrapLines && body_cell_styles_css["body-cell-wrap"], isFirstRow && body_cell_styles_css["body-cell-first-row"], isLastRow && body_cell_styles_css["body-cell-last-row"], isSelected && body_cell_styles_css["body-cell-selected"], isNextSelected && body_cell_styles_css["body-cell-next-selected"], isPrevSelected && body_cell_styles_css["body-cell-prev-selected"], !isEvenRow && stripedRows && body_cell_styles_css["body-cell-shaded"], stripedRows && body_cell_styles_css["has-striped-rows"], isVisualRefresh && body_cell_styles_css["is-visual-refresh"], hasSelection && body_cell_styles_css["has-selection"], hasFooter && body_cell_styles_css["has-footer"]), onClick: onClick, ref: ref }, nativeAttributes), children));
});
//# sourceMappingURL=td-element.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/grid/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/grid/styles.css.js


    /* harmony default export */ const grid_styles_css = ({
  "grid": "awsui_grid_14yj0_1ecf3_93",
  "no-gutters": "awsui_no-gutters_14yj0_1ecf3_107",
  "grid-column": "awsui_grid-column_14yj0_1ecf3_111",
  "colspan-1": "awsui_colspan-1_14yj0_1ecf3_120",
  "push-1": "awsui_push-1_14yj0_1ecf3_124",
  "pull-1": "awsui_pull-1_14yj0_1ecf3_127",
  "colspan-2": "awsui_colspan-2_14yj0_1ecf3_130",
  "push-2": "awsui_push-2_14yj0_1ecf3_134",
  "pull-2": "awsui_pull-2_14yj0_1ecf3_137",
  "colspan-3": "awsui_colspan-3_14yj0_1ecf3_140",
  "push-3": "awsui_push-3_14yj0_1ecf3_144",
  "pull-3": "awsui_pull-3_14yj0_1ecf3_147",
  "colspan-4": "awsui_colspan-4_14yj0_1ecf3_150",
  "push-4": "awsui_push-4_14yj0_1ecf3_154",
  "pull-4": "awsui_pull-4_14yj0_1ecf3_157",
  "colspan-5": "awsui_colspan-5_14yj0_1ecf3_160",
  "push-5": "awsui_push-5_14yj0_1ecf3_164",
  "pull-5": "awsui_pull-5_14yj0_1ecf3_167",
  "colspan-6": "awsui_colspan-6_14yj0_1ecf3_170",
  "push-6": "awsui_push-6_14yj0_1ecf3_174",
  "pull-6": "awsui_pull-6_14yj0_1ecf3_177",
  "colspan-7": "awsui_colspan-7_14yj0_1ecf3_180",
  "push-7": "awsui_push-7_14yj0_1ecf3_184",
  "pull-7": "awsui_pull-7_14yj0_1ecf3_187",
  "colspan-8": "awsui_colspan-8_14yj0_1ecf3_190",
  "push-8": "awsui_push-8_14yj0_1ecf3_194",
  "pull-8": "awsui_pull-8_14yj0_1ecf3_197",
  "colspan-9": "awsui_colspan-9_14yj0_1ecf3_200",
  "push-9": "awsui_push-9_14yj0_1ecf3_204",
  "pull-9": "awsui_pull-9_14yj0_1ecf3_207",
  "colspan-10": "awsui_colspan-10_14yj0_1ecf3_210",
  "push-10": "awsui_push-10_14yj0_1ecf3_214",
  "pull-10": "awsui_pull-10_14yj0_1ecf3_217",
  "colspan-11": "awsui_colspan-11_14yj0_1ecf3_220",
  "push-11": "awsui_push-11_14yj0_1ecf3_224",
  "pull-11": "awsui_pull-11_14yj0_1ecf3_227",
  "colspan-12": "awsui_colspan-12_14yj0_1ecf3_230",
  "push-12": "awsui_push-12_14yj0_1ecf3_234",
  "pull-12": "awsui_pull-12_14yj0_1ecf3_237",
  "push-0": "awsui_push-0_14yj0_1ecf3_240",
  "pull-0": "awsui_pull-0_14yj0_1ecf3_243",
  "offset-1": "awsui_offset-1_14yj0_1ecf3_246",
  "offset-2": "awsui_offset-2_14yj0_1ecf3_249",
  "offset-3": "awsui_offset-3_14yj0_1ecf3_252",
  "offset-4": "awsui_offset-4_14yj0_1ecf3_255",
  "offset-5": "awsui_offset-5_14yj0_1ecf3_258",
  "offset-6": "awsui_offset-6_14yj0_1ecf3_261",
  "offset-7": "awsui_offset-7_14yj0_1ecf3_264",
  "offset-8": "awsui_offset-8_14yj0_1ecf3_267",
  "offset-9": "awsui_offset-9_14yj0_1ecf3_270",
  "offset-10": "awsui_offset-10_14yj0_1ecf3_273",
  "offset-11": "awsui_offset-11_14yj0_1ecf3_276",
  "restore-pointer-events": "awsui_restore-pointer-events_14yj0_1ecf3_280"
});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/grid/internal.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0










var InternalGrid = react.forwardRef(function (_a, ref) {
    var _b;
    var __breakpoint = _a.__breakpoint, _c = _a.gridDefinition, gridDefinition = _c === void 0 ? [] : _c, _d = _a.disableGutters, disableGutters = _d === void 0 ? false : _d, children = _a.children, __responsiveClassName = _a.__responsiveClassName, _e = _a.__internalRootRef, __internalRootRef = _e === void 0 ? null : _e, restProps = __rest(_a, ["__breakpoint", "gridDefinition", "disableGutters", "children", "__responsiveClassName", "__internalRootRef"]);
    var _f = useContainerBreakpoints(undefined), defaultBreakpoint = _f[0], defaultRef = _f[1];
    if (__breakpoint !== undefined) {
        defaultBreakpoint = __breakpoint;
        defaultRef = ref;
    }
    var baseProps = getBaseProps(restProps);
    /*
   Flattening the children allows us to "see through" React Fragments and nested arrays.
   */
    var flattenedChildren = (0,react_keyed_flatten_children/* default */.Z)(children);
    if (isDevelopment) {
        var columnCount = gridDefinition.length;
        var childCount = flattenedChildren.length;
        if (columnCount !== childCount) {
            logging_warnOnce('Grid', "The number of children (".concat(childCount, ") does not match the number of columns defined (").concat(columnCount, ")."));
        }
    }
    var mergedRef = useMergeRefs(defaultRef, __internalRootRef);
    return (react.createElement("div", tslib_es6_assign({}, baseProps, { className: clsx_m(grid_styles_css.grid, baseProps.className, (_b = {}, _b[grid_styles_css["no-gutters"]] = disableGutters, _b), __responsiveClassName ? __responsiveClassName(defaultBreakpoint) : null), ref: mergedRef }), flattenedChildren.map(function (child, i) {
        var _a, _b, _c, _d;
        // If this react child is a primitive value, the key will be undefined
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        var key = child.key;
        return (react.createElement("div", { key: key, className: clsx_m(grid_styles_css["grid-column"], getColumnClassNames('colspan', (_a = gridDefinition[i]) === null || _a === void 0 ? void 0 : _a.colspan, defaultBreakpoint), getColumnClassNames('offset', (_b = gridDefinition[i]) === null || _b === void 0 ? void 0 : _b.offset, defaultBreakpoint), getColumnClassNames('pull', (_c = gridDefinition[i]) === null || _c === void 0 ? void 0 : _c.pull, defaultBreakpoint), getColumnClassNames('push', (_d = gridDefinition[i]) === null || _d === void 0 ? void 0 : _d.push, defaultBreakpoint)) },
            react.createElement("div", { className: grid_styles_css["restore-pointer-events"] }, child)));
    })));
});
function getColumnClassNames(prop, mapping, breakpoint) {
    if (typeof mapping === 'number') {
        return grid_styles_css["".concat(prop, "-").concat(mapping)];
    }
    if (breakpoint === null || mapping === undefined) {
        return null;
    }
    return grid_styles_css["".concat(prop, "-").concat(matchBreakpointMapping(mapping, breakpoint))];
}
/* harmony default export */ const grid_internal = (InternalGrid);
//# sourceMappingURL=internal.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/form-field/util.js
function makeSlotId(prop, formFieldId, propName) {
    if (!prop) {
        return undefined;
    }
    return "".concat(formFieldId, "-").concat(propName);
}
function getSlotIds(formFieldId, label, description, constraintText, errorText) {
    var ids = {
        label: makeSlotId(label, formFieldId, 'label'),
        description: makeSlotId(description, formFieldId, 'description'),
        constraint: makeSlotId(constraintText, formFieldId, 'constraint'),
        error: makeSlotId(errorText, formFieldId, 'error')
    };
    return ids;
}
function getAriaDescribedBy(_a) {
    var error = _a.error, description = _a.description, constraint = _a.constraint;
    var describedByAttributes = [error, description, constraint].filter(function (e) { return !!e; });
    var describedBy = describedByAttributes.length ? describedByAttributes.join(' ') : undefined;
    return describedBy;
}
function getGridDefinition(stretch, secondaryControlPresent, isRefresh) {
    var columns;
    if (stretch) {
        columns = [{ colspan: 12 }, { colspan: 12 }];
    }
    else if (isRefresh) {
        columns = [{ colspan: { "default": 12, xs: 8 } }, { colspan: { "default": 12, xs: 4 } }];
    }
    else {
        columns = [{ colspan: { "default": 12, xs: 9 } }, { colspan: { "default": 12, xs: 3 } }];
    }
    if (!secondaryControlPresent) {
        return [columns[0]];
    }
    return columns;
}
//# sourceMappingURL=util.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/form-field/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/form-field/styles.css.js


    /* harmony default export */ const form_field_styles_css = ({
  "error-icon-shake-wrapper": "awsui_error-icon-shake-wrapper_14mhv_yshzd_97",
  "awsui-motion-shake-horizontally": "awsui_awsui-motion-shake-horizontally_14mhv_yshzd_1",
  "error-icon-scale-wrapper": "awsui_error-icon-scale-wrapper_14mhv_yshzd_124",
  "awsui-motion-scale-popup": "awsui_awsui-motion-scale-popup_14mhv_yshzd_1",
  "error": "awsui_error_14mhv_yshzd_97",
  "awsui-motion-fade-in-0": "awsui_awsui-motion-fade-in-0_14mhv_yshzd_1",
  "root": "awsui_root_14mhv_yshzd_168",
  "label": "awsui_label_14mhv_yshzd_180",
  "info": "awsui_info_14mhv_yshzd_193",
  "description": "awsui_description_14mhv_yshzd_198",
  "constraint": "awsui_constraint_14mhv_yshzd_199",
  "hints": "awsui_hints_14mhv_yshzd_206",
  "constraint-has-error": "awsui_constraint-has-error_14mhv_yshzd_207",
  "secondary-control": "awsui_secondary-control_14mhv_yshzd_211",
  "controls": "awsui_controls_14mhv_yshzd_215",
  "label-hidden": "awsui_label-hidden_14mhv_yshzd_215",
  "control": "awsui_control_14mhv_yshzd_215",
  "error__message": "awsui_error__message_14mhv_yshzd_234",
  "visually-hidden": "awsui_visually-hidden_14mhv_yshzd_238"
});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/form-field/internal.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0











var FormFieldError = function (_a) {
    var id = _a.id, children = _a.children, errorIconAriaLabel = _a.errorIconAriaLabel;
    return (react.createElement("div", { id: id, className: form_field_styles_css.error },
        react.createElement("div", { className: form_field_styles_css["error-icon-shake-wrapper"] },
            react.createElement("div", { role: "img", "aria-label": errorIconAriaLabel, className: form_field_styles_css["error-icon-scale-wrapper"] },
                react.createElement(internal, { name: "status-warning", size: "small" }))),
        react.createElement("span", { className: form_field_styles_css.error__message }, children)));
};
function InternalFormField(_a) {
    var controlId = _a.controlId, _b = _a.stretch, stretch = _b === void 0 ? false : _b, label = _a.label, info = _a.info, i18nStrings = _a.i18nStrings, children = _a.children, secondaryControl = _a.secondaryControl, description = _a.description, constraintText = _a.constraintText, errorText = _a.errorText, __hideLabel = _a.__hideLabel, _c = _a.__internalRootRef, __internalRootRef = _c === void 0 ? null : _c, _d = _a.__disableGutters, __disableGutters = _d === void 0 ? false : _d, _e = _a.__useReactAutofocus, __useReactAutofocus = _e === void 0 ? false : _e, rest = __rest(_a, ["controlId", "stretch", "label", "info", "i18nStrings", "children", "secondaryControl", "description", "constraintText", "errorText", "__hideLabel", "__internalRootRef", "__disableGutters", "__useReactAutofocus"]);
    var baseProps = getBaseProps(rest);
    var isRefresh = useVisualRefresh();
    var instanceUniqueId = useUniqueId('formField');
    var generatedControlId = controlId || instanceUniqueId;
    var formFieldId = controlId || generatedControlId;
    var slotIds = getSlotIds(formFieldId, label, description, constraintText, errorText);
    var ariaDescribedBy = getAriaDescribedBy(slotIds);
    var gridDefinition = getGridDefinition(stretch, !!secondaryControl, isRefresh);
    var _f = useFormFieldContext({}), parentAriaLabelledby = _f.ariaLabelledby, parentAriaDescribedby = _f.ariaDescribedby, parentInvalid = _f.invalid;
    var contextValuesWithoutControlId = {
        ariaLabelledby: joinStrings(parentAriaLabelledby, slotIds.label) || undefined,
        ariaDescribedby: joinStrings(parentAriaDescribedby, ariaDescribedBy) || undefined,
        invalid: !!errorText || !!parentInvalid,
        __useReactAutofocus: __useReactAutofocus
    };
    return (react.createElement("div", tslib_es6_assign({}, baseProps, { className: clsx_m(baseProps.className, form_field_styles_css.root), ref: __internalRootRef }),
        react.createElement("div", { className: clsx_m(__hideLabel && form_field_styles_css["visually-hidden"]) },
            label && (react.createElement("label", { className: form_field_styles_css.label, id: slotIds.label, htmlFor: generatedControlId }, label)),
            !__hideLabel && info && react.createElement("span", { className: form_field_styles_css.info }, info)),
        description && (react.createElement("div", { className: form_field_styles_css.description, id: slotIds.description }, description)),
        react.createElement("div", { className: clsx_m(form_field_styles_css.controls, __hideLabel && form_field_styles_css["label-hidden"]) },
            react.createElement(grid_internal, { gridDefinition: gridDefinition, disableGutters: __disableGutters },
                react.createElement(FormFieldContext.Provider, { value: tslib_es6_assign({ controlId: generatedControlId }, contextValuesWithoutControlId) }, children && react.createElement("div", { className: form_field_styles_css.control }, children)),
                secondaryControl && (react.createElement(FormFieldContext.Provider, { value: contextValuesWithoutControlId },
                    react.createElement("div", { className: form_field_styles_css["secondary-control"] }, secondaryControl))))),
        (constraintText || errorText) && (react.createElement("div", { className: form_field_styles_css.hints },
            errorText && (react.createElement(FormFieldError, { id: slotIds.error, errorIconAriaLabel: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.errorIconAriaLabel }, errorText)),
            constraintText && (react.createElement("div", { className: clsx_m(form_field_styles_css.constraint, errorText && form_field_styles_css["constraint-has-error"]), id: slotIds.constraint }, constraintText))))));
}
//# sourceMappingURL=internal.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/table/body-cell/click-away.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0



function useClickAway(onClick) {
    var awayRef = (0,react.useRef)(null);
    var onClickStable = use_stable_event_handler_useStableEventHandler(onClick);
    (0,react.useEffect)(function () {
        function handleClick(event) {
            if (!dom_containsOrEqual(awayRef.current, event.target)) {
                onClickStable();
            }
        }
        // contains returns wrong result if the next render would remove the element
        // but capture phase happens before the render, so returns correct result
        // Ref: https://github.com/facebook/react/issues/20325
        document.addEventListener('click', handleClick, { capture: true });
        return function () { return document.removeEventListener('click', handleClick, { capture: true }); };
    }, [onClickStable]);
    return awayRef;
}
function ClickAway(_a) {
    var onClick = _a.onClick, children = _a.children;
    var onClickStable = useStableEventHandler(onClick);
    var ref = useRef(null);
    useEffect(function () {
        function handleClick(event) {
            if (!containsOrEqual(ref.current, event.target)) {
                onClickStable();
            }
        }
        document.addEventListener('click', handleClick, true);
        return function () { return document.removeEventListener('click', handleClick, true); };
    }, [onClickStable]);
    return React.createElement("span", { ref: ref }, children);
}
//# sourceMappingURL=click-away.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/table/body-cell/inline-editor.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0






// A function that does nothing
var inline_editor_noop = function () { return undefined; };
function InlineEditor(_a) {
    var _b, _c;
    var ariaLabels = _a.ariaLabels, item = _a.item, column = _a.column, onEditEnd = _a.onEditEnd, submitEdit = _a.submitEdit, __onRender = _a.__onRender;
    var _d = (0,react.useState)(false), currentEditLoading = _d[0], setCurrentEditLoading = _d[1];
    var _e = (0,react.useState)(), currentEditValue = _e[0], setCurrentEditValue = _e[1];
    var cellContext = {
        currentValue: currentEditValue,
        setValue: setCurrentEditValue
    };
    function finishEdit(cancel) {
        if (cancel === void 0) { cancel = false; }
        if (!cancel) {
            setCurrentEditValue(undefined);
        }
        onEditEnd();
    }
    function onSubmitClick(evt) {
        return __awaiter(this, void 0, void 0, function () {
            var e_1;
            return tslib_es6_generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        evt.preventDefault();
                        if (currentEditValue === undefined) {
                            finishEdit();
                            return [2 /*return*/];
                        }
                        setCurrentEditLoading(true);
                        _a.label = 1;
                    case 1:
                        _a.trys.push([1, 3, , 4]);
                        return [4 /*yield*/, submitEdit(item, column, currentEditValue)];
                    case 2:
                        _a.sent();
                        setCurrentEditLoading(false);
                        finishEdit();
                        return [3 /*break*/, 4];
                    case 3:
                        e_1 = _a.sent();
                        setCurrentEditLoading(false);
                        return [3 /*break*/, 4];
                    case 4: return [2 /*return*/];
                }
            });
        });
    }
    function onCancel() {
        if (currentEditLoading) {
            return;
        }
        finishEdit(true);
    }
    function handleEscape(event) {
        if (event.key === 'Escape') {
            onCancel();
        }
    }
    var clickAwayRef = useClickAway(onCancel);
    (0,react.useEffect)(function () {
        if (__onRender) {
            var timer_1 = setTimeout(__onRender, 1);
            return function () { return clearTimeout(timer_1); };
        }
    }, [__onRender]);
    // asserting non-undefined editConfig here because this component is unreachable otherwise
    var _f = column.editConfig, _g = _f.ariaLabel, ariaLabel = _g === void 0 ? undefined : _g, _h = _f.validation, validation = _h === void 0 ? inline_editor_noop : _h, errorIconAriaLabel = _f.errorIconAriaLabel, editingCell = _f.editingCell;
    return (react.createElement("form", { ref: clickAwayRef, onSubmit: onSubmitClick, onKeyDown: handleEscape, className: body_cell_styles_css["body-cell-editor-form"] },
        react.createElement(InternalFormField, { stretch: true, label: ariaLabel, __hideLabel: true, __disableGutters: true, __useReactAutofocus: true, i18nStrings: { errorIconAriaLabel: errorIconAriaLabel }, errorText: validation(item, currentEditValue) },
            react.createElement("div", { className: body_cell_styles_css["body-cell-editor-row"] },
                editingCell(item, cellContext),
                react.createElement("span", { className: body_cell_styles_css["body-cell-editor-controls"] },
                    react.createElement(InternalSpaceBetween, { direction: "horizontal", size: "xxs" },
                        !currentEditLoading ? (react.createElement(button_internal, { ariaLabel: (_b = ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.cancelEditLabel) === null || _b === void 0 ? void 0 : _b.call(ariaLabels, column), formAction: "none", iconName: "close", variant: "inline-icon", onClick: onCancel })) : null,
                        react.createElement(button_internal, { ariaLabel: (_c = ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.submitEditLabel) === null || _c === void 0 ? void 0 : _c.call(ariaLabels, column), formAction: "submit", iconName: "check", variant: "inline-icon", loading: currentEditLoading })))))));
}
//# sourceMappingURL=inline-editor.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/table/body-cell/use-stable-scroll-position.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

function isScrollable(ele) {
    var overflowXStyle = window.getComputedStyle(ele).overflowX;
    var isOverflowHidden = overflowXStyle.indexOf('hidden') !== -1;
    return ele.scrollWidth > ele.clientWidth && !isOverflowHidden;
}
function getScrollableParent(ele) {
    return !ele || ele === document.body
        ? document.body
        : isScrollable(ele)
            ? ele
            : getScrollableParent(ele.parentElement);
}
var shouldScroll = function (_a, _b) {
    var cx = _a[0], cy = _a[1];
    var px = _b[0], py = _b[1];
    return cx - px > 5 || cy - py > 5;
};
/**
 * This hook stores the scroll position of the nearest scrollable parent of the
 * `activeElementRef` when `storeScrollPosition` is called, and restores it when
 * `restoreScrollPosition` is called.
 * @param activeElementRef Ref to an active element in the table. This is used to find the nearest scrollable parent.
 */
function useStableScrollPosition(activeElementRef) {
    var scrollRef = (0,react.useRef)();
    var storeScrollPosition = (0,react.useCallback)(function () {
        var _a;
        var scrollableParent = getScrollableParent((_a = activeElementRef.current) !== null && _a !== void 0 ? _a : document.body);
        if (scrollableParent) {
            scrollRef.current = [scrollableParent.scrollLeft, scrollableParent.scrollTop];
        }
    }, [activeElementRef]);
    var restoreScrollPosition = (0,react.useCallback)(function () {
        var _a;
        var _b;
        var scrollableParent = getScrollableParent((_b = activeElementRef.current) !== null && _b !== void 0 ? _b : document.body);
        if (scrollRef.current &&
            scrollRef.current.toString() !== '0,0' &&
            shouldScroll(scrollRef.current, [scrollableParent.scrollLeft, scrollableParent.scrollTop])) {
            _a = scrollRef.current, scrollableParent.scrollLeft = _a[0], scrollableParent.scrollTop = _a[1];
        }
    }, [activeElementRef]);
    return { storeScrollPosition: storeScrollPosition, restoreScrollPosition: restoreScrollPosition };
}
//# sourceMappingURL=use-stable-scroll-position.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/table/body-cell/index.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0









var submitHandlerFallback = function () {
    throw new Error('The function `handleSubmit` is required for editable columns');
};
function TableCellEditable(_a) {
    var _b;
    var className = _a.className, item = _a.item, column = _a.column, isEditing = _a.isEditing, onEditStart = _a.onEditStart, onEditEnd = _a.onEditEnd, submitEdit = _a.submitEdit, ariaLabels = _a.ariaLabels, isVisualRefresh = _a.isVisualRefresh, rest = __rest(_a, ["className", "item", "column", "isEditing", "onEditStart", "onEditEnd", "submitEdit", "ariaLabels", "isVisualRefresh"]);
    var editActivateRef = (0,react.useRef)(null);
    var cellRef = (0,react.useRef)(null);
    var focusVisible = useFocusVisible();
    var _c = useStableScrollPosition(cellRef), storeScrollPosition = _c.storeScrollPosition, restoreScrollPosition = _c.restoreScrollPosition;
    var handleEditStart = function () {
        storeScrollPosition();
        if (!isEditing) {
            onEditStart();
        }
    };
    var scheduleRestoreScrollPosition = (0,react.useCallback)(function () { return setTimeout(restoreScrollPosition, 0); }, [restoreScrollPosition]);
    var tdNativeAttributes = tslib_es6_assign(tslib_es6_assign({}, focusVisible), { onFocus: scheduleRestoreScrollPosition, 'data-inline-editing-active': isEditing.toString() });
    useEffectOnUpdate(function () {
        if (!isEditing && editActivateRef.current) {
            editActivateRef.current.focus({ preventScroll: true });
        }
        var timer = scheduleRestoreScrollPosition();
        return function () { return clearTimeout(timer); };
    }, [isEditing, scheduleRestoreScrollPosition]);
    return (react.createElement(TableTdElement, tslib_es6_assign({}, rest, { nativeAttributes: tdNativeAttributes, className: clsx_m(className, body_cell_styles_css["body-cell-editable"], isEditing && body_cell_styles_css["body-cell-edit-active"], isVisualRefresh && body_cell_styles_css["is-visual-refresh"]), onClick: handleEditStart, ref: cellRef }), isEditing ? (react.createElement(InlineEditor, { ariaLabels: ariaLabels, column: column, item: item, onEditEnd: onEditEnd, submitEdit: submitEdit !== null && submitEdit !== void 0 ? submitEdit : submitHandlerFallback, __onRender: restoreScrollPosition })) : (react.createElement(react.Fragment, null,
        column.cell(item),
        react.createElement("span", { className: body_cell_styles_css["body-cell-editor"] },
            react.createElement(button_internal, { __hideFocusOutline: true, __internalRootRef: editActivateRef, ariaLabel: (_b = ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.activateEditLabel) === null || _b === void 0 ? void 0 : _b.call(ariaLabels, column), formAction: "none", iconName: "edit", variant: "inline-icon" }))))));
}
function TableBodyCell(_a) {
    var isEditable = _a.isEditable, rest = __rest(_a, ["isEditable"]);
    if (isEditable || rest.isEditing) {
        return react.createElement(TableCellEditable, tslib_es6_assign({}, rest));
    }
    var column = rest.column, item = rest.item;
    return react.createElement(TableTdElement, tslib_es6_assign({}, rest), column.cell(item));
}
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/table/use-row-events.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0



function useRowEvents(_a) {
    var onRowClick = _a.onRowClick, onRowContextMenu = _a.onRowContextMenu;
    var onRowClickHandler = function (rowIndex, item, event) {
        var tableCell = findUpUntil(event.target, function (element) { return element.tagName.toLowerCase() === 'td'; });
        if (!tableCell || !tableCell.classList.contains(table_styles_css["selection-control"])) {
            var details = { rowIndex: rowIndex, item: item };
            fireNonCancelableEvent(onRowClick, details);
        }
    };
    var onRowContextMenuHandler = function (rowIndex, item, event) {
        var details = {
            rowIndex: rowIndex,
            item: item,
            clientX: event.clientX,
            clientY: event.clientY
        };
        fireCancelableEvent(onRowContextMenu, details, event);
    };
    return {
        onRowClickHandler: onRowClick && onRowClickHandler,
        onRowContextMenuHandler: onRowContextMenu && onRowContextMenuHandler
    };
}
//# sourceMappingURL=use-row-events.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/hooks/use-scroll-sync/index.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

/**
 * useScrollSync returns scroll event handler to be attached to synchronised scroll elements.
 *
 * For example
 *    const handleScroll = useScrollSync([ref1, ref2]);
 *    <div ref={ref1} onScroll={handleScroll}/>
 *    <div ref={ref2} onScroll={handleScroll}/>
 */
function useScrollSync(refs, disabled) {
    if (disabled === void 0) { disabled = false; }
    var activeElement = (0,react.useRef)(null);
    var onScroll = function (event) {
        var targetElement = event.target;
        // remembers the first element that fires onscroll to align with other elements against it
        if (targetElement && (activeElement.current === null || activeElement.current === targetElement)) {
            requestAnimationFrame(function () {
                activeElement.current = targetElement;
                refs.forEach(function (ref) {
                    var element = ref.current;
                    if (element && element !== targetElement) {
                        element.scrollLeft = targetElement.scrollLeft;
                    }
                });
                // unblock the ability to scroll the synced elements
                requestAnimationFrame(function () {
                    activeElement.current = null;
                });
            });
        }
    };
    return !disabled ? onScroll : undefined;
}
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/table/use-sticky-header.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0




function syncSizes(from, to) {
    var fromCells = Array.prototype.slice.apply(from.children);
    var toCells = Array.prototype.slice.apply(to.children);
    for (var i = 0; i < fromCells.length; i++) {
        var width = fromCells[i].style.width;
        // use auto if it is set by resizable columns or real size otherwise
        if (width !== 'auto') {
            width = "".concat(fromCells[i].offsetWidth, "px");
        }
        toCells[i].style.width = width;
    }
}
var use_sticky_header_useStickyHeader = function (tableRef, theadRef, secondaryTheadRef, secondaryTableRef, tableWrapperRef) {
    var isMobile = useMobile();
    // Sync the sizes of the column header copies in the sticky header with the originals
    var syncColumnHeaderWidths = (0,react.useCallback)(function () {
        if (tableRef.current &&
            theadRef.current &&
            secondaryTheadRef.current &&
            secondaryTableRef.current &&
            tableWrapperRef.current) {
            syncSizes(theadRef.current, secondaryTheadRef.current);
            // Using the tableRef offsetWidth instead of the theadRef because in VR
            // the tableRef adds extra padding to the table and by default the theadRef will have a width
            // without the padding and will make the sticky header width incorrect.
            secondaryTableRef.current.style.width = "".concat(tableRef.current.offsetWidth, "px");
            tableWrapperRef.current.style.marginTop = "-".concat(theadRef.current.offsetHeight, "px");
        }
    }, [theadRef, secondaryTheadRef, secondaryTableRef, tableWrapperRef, tableRef]);
    (0,react.useLayoutEffect)(function () {
        syncColumnHeaderWidths();
    });
    useResizeObserver(theadRef, syncColumnHeaderWidths);
    var scrollToTop = function () {
        if (!isMobile && theadRef.current && secondaryTheadRef.current && tableWrapperRef.current) {
            var scrollDist = calculateScrollingOffset(theadRef.current, secondaryTheadRef.current);
            if (scrollDist > 0) {
                scrollUpBy(scrollDist, tableWrapperRef.current);
            }
        }
    };
    var scrollToItem = stickyScrolling(tableWrapperRef, secondaryTheadRef).scrollToItem;
    var scrollToRow = function (itemNode) {
        if (!isMobile) {
            scrollToItem(itemNode);
        }
    };
    return { scrollToRow: scrollToRow, scrollToTop: scrollToTop };
};
//# sourceMappingURL=use-sticky-header.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/table/sticky-header.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0






/* harmony default export */ const sticky_header = ((0,react.forwardRef)(StickyHeader));
function StickyHeader(_a, ref) {
    var _b;
    var variant = _a.variant, theadProps = _a.theadProps, wrapperRef = _a.wrapperRef, theadRef = _a.theadRef, secondaryWrapperRef = _a.secondaryWrapperRef, onScroll = _a.onScroll, tableRef = _a.tableRef, tableHasHeader = _a.tableHasHeader;
    var secondaryTheadRef = (0,react.useRef)(null);
    var secondaryTableRef = (0,react.useRef)(null);
    var isStuck = (0,react.useContext)(StickyHeaderContext).isStuck;
    var _c = (0,react.useState)(null), focusedColumn = _c[0], setFocusedColumn = _c[1];
    var _d = use_sticky_header_useStickyHeader(tableRef, theadRef, secondaryTheadRef, secondaryTableRef, wrapperRef), scrollToRow = _d.scrollToRow, scrollToTop = _d.scrollToTop;
    (0,react.useImperativeHandle)(ref, function () { return ({ scrollToTop: scrollToTop, scrollToRow: scrollToRow, setFocusedColumn: setFocusedColumn }); });
    return (react.createElement("div", { className: clsx_m(table_styles_css["header-secondary"], table_styles_css["variant-".concat(variant)], (_b = {},
            _b[table_styles_css.stuck] = isStuck,
            _b[table_styles_css["table-has-header"]] = tableHasHeader,
            _b)), "aria-hidden": true,
        // Prevents receiving focus in Firefox. Focus on the overflowing table is sufficient
        // to scroll the table horizontally
        tabIndex: -1, ref: secondaryWrapperRef, onScroll: onScroll },
        react.createElement("table", { className: clsx_m(table_styles_css.table, table_styles_css["table-layout-fixed"]), role: "table", ref: secondaryTableRef },
            react.createElement(thead, tslib_es6_assign({ ref: secondaryTheadRef, sticky: true, stuck: isStuck, showFocusRing: focusedColumn }, theadProps)))));
}
//# sourceMappingURL=sticky-header.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/utils/browser-scrollbar-size.js
/*
 * ** Detect scrollbar width (blog post); version N/A -- https://davidwalsh.name/detect-scrollbar-width
 *
 * MIT License
 *
 * Copyright (c) 2007-2021 David Walsh
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
/* eslint-disable header/header */

var browserScrollbarSize = calculateOnce(function () {
    if (typeof document === 'undefined') {
        return { width: 0, height: 0 };
    }
    var scrollDiv = document.createElement('div');
    scrollDiv.style.overflow = 'scroll';
    scrollDiv.style.height = '100px';
    scrollDiv.style.width = '100px';
    scrollDiv.style.position = 'absolute';
    scrollDiv.style.top = '-9999px';
    scrollDiv.style.left = '-9999px';
    document.body.appendChild(scrollDiv);
    var width = scrollDiv.offsetWidth - scrollDiv.clientWidth;
    var height = scrollDiv.offsetHeight - scrollDiv.clientHeight;
    document.body.removeChild(scrollDiv);
    return { width: width, height: height };
});
//# sourceMappingURL=browser-scrollbar-size.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/table/use-sticky-scrollbar.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0






var updatePosition = function (tableEl, wrapperEl, scrollbarEl, scrollbarContentEl, hasContainingBlock, consideredFooterHeight) {
    if (!tableEl || !scrollbarEl || !wrapperEl) {
        return;
    }
    // parent is either some container or document itself
    var parent = getOverflowParentDimensions(wrapperEl)[0];
    var parentBottom = parent.top + parent.height;
    // table bottom is visible when
    // 1. table bottom reached end of the window
    // 2. table bottom is not overlapped by footer
    var _a = tableEl.getBoundingClientRect(), tableTop = _a.top, tableBottom = _a.bottom, tableWidth = _a.width;
    var wrapperWidth = wrapperEl.getBoundingClientRect().width;
    //scrollbar correction is needed for
    // #1 when scrollbars are constantly visible,
    // we want no visible break when switching between fake and real scrollbars
    // #2 when scrollbars are visible only on scrolling and half transparent (on mac)
    // we want to avoid any overlap between fake and real scrollbar
    // using 15 px as a height of transparent scrollbar on mac
    var scrollbarHeight = browserScrollbarSize().height;
    var scrollBarCorrection = scrollbarHeight > 0 ? scrollbarHeight : -15 / 2;
    var tableBottomIsVisible = parentBottom - consideredFooterHeight >= tableBottom + scrollBarCorrection;
    var tableTopIsHidden = tableTop >= parentBottom - consideredFooterHeight - scrollBarCorrection;
    var areaIsScrollable = tableWidth > wrapperWidth;
    if (tableBottomIsVisible || tableTopIsHidden || !areaIsScrollable) {
        scrollbarEl.classList.remove(table_styles_css["sticky-scrollbar-visible"]);
    }
    else {
        // when scrollbar is not displayed scrollLeft property cannot be set by useScrollSync
        // that's why syncing it separately
        if (!scrollbarEl.classList.contains(table_styles_css["sticky-scrollbar-visible"])) {
            requestAnimationFrame(function () {
                scrollbarEl.scrollLeft = wrapperEl.scrollLeft;
            });
        }
        scrollbarEl.classList.add(table_styles_css["sticky-scrollbar-visible"]);
    }
    if (scrollbarHeight && scrollbarEl && scrollbarContentEl) {
        scrollbarEl.style.height = "".concat(scrollbarHeight, "px");
        scrollbarContentEl.style.height = "".concat(scrollbarHeight, "px");
    }
    if (tableEl && wrapperEl && scrollbarContentEl && scrollbarEl) {
        var parent_1 = getOverflowParentDimensions(wrapperEl)[0];
        var wrapperElRect = wrapperEl.getBoundingClientRect();
        var tableElRect = tableEl.getBoundingClientRect();
        scrollbarEl.style.width = "".concat(wrapperElRect.width, "px");
        scrollbarContentEl.style.width = "".concat(tableElRect.width, "px");
        // when using sticky scrollbars in containers
        // we agreed to ignore dynamic bottom calculations for footer overlap
        scrollbarEl.style.left = hasContainingBlock ? '0px' : "".concat(wrapperElRect.left, "px");
        scrollbarEl.style.top = hasContainingBlock
            ? '0px'
            : "".concat(Math.min(parent_1.top + parent_1.height, window.innerHeight - consideredFooterHeight), "px");
    }
};
function useStickyScrollbar(scrollbarRef, scrollbarContentRef, tableRef, wrapperRef, footerHeight) {
    // We don't take into account containing-block calculations because that would
    // unnecessarily overcomplicate the position logic. For now, we assume that a
    // containing block, if present, is below the app layout and above the overflow
    // parent, which is a pretty safe assumption.
    var _a = (0,react.useState)(false), hasContainingBlock = _a[0], setHasContainingBlock = _a[1];
    // We don't take into account footer height when the overflow parent is child of document body.
    // Because in this case, we think the footer is outside the overflow parent.
    var _b = (0,react.useState)(false), hasOverflowParent = _b[0], setHasOverflowParent = _b[1];
    var consideredFooterHeight = hasContainingBlock || hasOverflowParent ? 0 : footerHeight;
    (0,react.useEffect)(function () {
        if (supportsStickyPosition()) {
            var scrollHandler_1 = function () {
                updatePosition(tableRef.current, wrapperRef.current, scrollbarRef.current, scrollbarContentRef.current, hasContainingBlock, consideredFooterHeight);
            };
            scrollHandler_1();
            window.addEventListener('scroll', scrollHandler_1, true);
            return function () {
                window.removeEventListener('scroll', scrollHandler_1, true);
            };
        }
    }, [scrollbarRef, tableRef, wrapperRef, consideredFooterHeight, scrollbarContentRef, hasContainingBlock]);
    var wrapperEl = wrapperRef.current;
    (0,react.useEffect)(function () {
        if (wrapperEl && supportsStickyPosition()) {
            setHasContainingBlock(!!getContainingBlock(wrapperEl));
            setHasOverflowParent(!!getOverflowParents(wrapperEl)[0]);
        }
    }, [wrapperEl]);
    (0,react.useEffect)(function () {
        if (supportsStickyPosition() && tableRef.current) {
            var observer_1 = new ResizeObserver(function (entries) {
                if (scrollbarContentRef.current) {
                    scrollbarContentRef.current.style.width = "".concat(entries[0].borderBoxSize[0].inlineSize, "px");
                    updatePosition(tableRef.current, wrapperRef.current, scrollbarRef.current, scrollbarContentRef.current, hasContainingBlock, consideredFooterHeight);
                }
            });
            observer_1.observe(tableRef.current);
            return function () {
                observer_1.disconnect();
            };
        }
    }, [scrollbarContentRef, scrollbarRef, tableRef, wrapperRef, consideredFooterHeight, hasContainingBlock]);
    (0,react.useEffect)(function () {
        if (supportsStickyPosition()) {
            var resizeHandler_1 = function () {
                updatePosition(tableRef.current, wrapperRef.current, scrollbarRef.current, scrollbarContentRef.current, hasContainingBlock, consideredFooterHeight);
            };
            window.addEventListener('resize', resizeHandler_1);
            return function () {
                window.removeEventListener('resize', resizeHandler_1);
            };
        }
    }, [tableRef, wrapperRef, scrollbarRef, scrollbarContentRef, hasContainingBlock, consideredFooterHeight]);
}
//# sourceMappingURL=use-sticky-scrollbar.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/table/sticky-scrollbar.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0





/* harmony default export */ const sticky_scrollbar = ((0,react.forwardRef)(StickyScrollbar));
function StickyScrollbar(_a, ref) {
    var wrapperRef = _a.wrapperRef, tableRef = _a.tableRef, onScroll = _a.onScroll;
    var scrollbarRef = react.useRef(null);
    var scrollbarContentRef = react.useRef(null);
    var mergedRef = useMergeRefs(ref, scrollbarRef);
    /**
     * Use the appropriate AppLayout context (Classic or Visual Refresh) to determine
     * the offsetBottom value to be used in the useStickyScrollbar hook.
     */
    var stickyOffsetBottom = useAppLayoutContext().stickyOffsetBottom;
    useStickyScrollbar(scrollbarRef, scrollbarContentRef, tableRef, wrapperRef, stickyOffsetBottom);
    return (react.createElement("div", { ref: mergedRef, className: table_styles_css["sticky-scrollbar"], onScroll: onScroll },
        react.createElement("div", { ref: scrollbarContentRef, className: table_styles_css["sticky-scrollbar-content"] })));
}
//# sourceMappingURL=sticky-scrollbar.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/table/use-table-focus-navigation.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

function iterateTableCells(table, func) {
    table.querySelectorAll('tr').forEach(function (row, rowIndex) {
        row.querySelectorAll('td').forEach(function (cell, cellIndex) {
            func(cell, rowIndex, cellIndex);
        });
    });
}
/**
 * This hook is used to navigate between table cells using the keyboard arrow keys.
 * All the functionality is implemented in the hook, so the table component does not
 * need to implement any keyboard event handlers.
 * @param enable - Toggle functionality of the hook
 * @param tableRoot - A ref to a table container. Ideally the root element of the table (<table>); tbody is also acceptable.
 * @param columnDefinitions - The column definitions for the table.
 * @param numRows - The number of rows in the table.
 */
function useTableFocusNavigation(selectionType, tableRoot, columnDefinitions, numRows) {
    if (selectionType === void 0) { selectionType = 'none'; }
    var currentFocusCell = (0,react.useRef)(null);
    var focusableColumns = (0,react.useMemo)(function () {
        var cols = columnDefinitions.map(function (column) { return !!column.editConfig; });
        if (selectionType !== 'none') {
            cols.unshift(false);
        }
        return cols;
    }, [columnDefinitions, selectionType]);
    var maxColumnIndex = (0,react.useMemo)(function () { return focusableColumns.length - 1; }, [focusableColumns]);
    var minColumnIndex = (0,react.useMemo)(function () { return (selectionType !== 'none' ? 1 : 0); }, [selectionType]);
    var focusCell = (0,react.useCallback)(function (rowIndex, columnIndex) {
        if (tableRoot === null || tableRoot === void 0 ? void 0 : tableRoot.current) {
            iterateTableCells(tableRoot.current, function (cell, rIndex, cIndex) {
                var _a;
                if (rIndex === rowIndex && cIndex === columnIndex) {
                    var editButton = cell.querySelector('button:last-child');
                    (_a = editButton === null || editButton === void 0 ? void 0 : editButton.focus) === null || _a === void 0 ? void 0 : _a.call(editButton, { preventScroll: true });
                }
            });
        }
    }, [tableRoot]);
    var shiftFocus = (0,react.useCallback)(function (vertical, horizontal) {
        // istanbul ignore if next
        if (!currentFocusCell.current) {
            return;
        }
        var _a = currentFocusCell.current.slice(), rowIndex = _a[0], columnIndex = _a[1];
        var newRowIndex = rowIndex;
        var newColumnIndex = columnIndex;
        if (vertical !== 0) {
            newRowIndex = Math.min(numRows, Math.max(rowIndex + vertical, 0));
        }
        if (horizontal !== 0) {
            while (newColumnIndex <= maxColumnIndex && newColumnIndex >= minColumnIndex) {
                newColumnIndex += horizontal;
                if (focusableColumns[newColumnIndex]) {
                    break;
                }
            }
        }
        if ((rowIndex !== newRowIndex || columnIndex !== newColumnIndex) &&
            currentFocusCell.current &&
            tableRoot.current) {
            focusCell(newRowIndex, newColumnIndex);
        }
    }, [focusCell, focusableColumns, maxColumnIndex, minColumnIndex, numRows, tableRoot]);
    var handleArrowKeyEvents = (0,react.useCallback)(function (event) {
        var _a, _b;
        var abort = !!((_a = tableRoot.current) === null || _a === void 0 ? void 0 : _a.querySelector('[data-inline-editing-active = "true"]')) ||
            !((_b = document.activeElement) === null || _b === void 0 ? void 0 : _b.closest('[data-inline-editing-active]'));
        if (abort) {
            return;
        }
        switch (event.key) {
            case 'ArrowUp':
                event.preventDefault();
                shiftFocus(-1, 0);
                break;
            case 'ArrowDown':
                event.preventDefault();
                shiftFocus(1, 0);
                break;
            case 'ArrowLeft':
                event.preventDefault();
                shiftFocus(0, -1);
                break;
            case 'ArrowRight':
                event.preventDefault();
                shiftFocus(0, 1);
                break;
            // istanbul ignore next (default case = do nothing, not testable)
            default:
                return;
        }
    }, [shiftFocus, tableRoot]);
    (0,react.useEffect)(function () {
        var eventListeners = new Map();
        // istanbul ignore if
        if (!tableRoot.current) {
            return;
        }
        var tableElement = tableRoot.current;
        // istanbul ignore next (tested in use-focus-navigation.test.tsx#L210)
        function cleanUpListeners() {
            iterateTableCells(tableElement, function (cell, rowIndex, columnIndex) {
                var listeners = eventListeners.get([rowIndex, columnIndex]);
                if (listeners === null || listeners === void 0 ? void 0 : listeners.focusin) {
                    cell.removeEventListener('focusin', listeners.focusin);
                }
            });
            tableElement.removeEventListener('keydown', handleArrowKeyEvents);
        }
        iterateTableCells(tableElement, function (cell, rowIndex, cellIndex) {
            if (!focusableColumns[cellIndex]) {
                return;
            }
            var listenerFns = {
                focusin: function () {
                    currentFocusCell.current = [rowIndex, cellIndex];
                }
            };
            eventListeners.set([rowIndex, cellIndex], listenerFns);
            cell.addEventListener('focusin', listenerFns.focusin, { passive: true });
        });
        tableElement.addEventListener('keydown', handleArrowKeyEvents);
        return function () { return tableElement && cleanUpListeners(); };
    }, [focusableColumns, handleArrowKeyEvents, tableRoot]);
}
/* harmony default export */ const use_table_focus_navigation = (useTableFocusNavigation);
//# sourceMappingURL=use-table-focus-navigation.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/table/internal.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0






























var InternalTable = react.forwardRef(function (_a, ref) {
    var _b;
    var header = _a.header, footer = _a.footer, empty = _a.empty, filter = _a.filter, pagination = _a.pagination, preferences = _a.preferences, items = _a.items, columnDefinitions = _a.columnDefinitions, trackBy = _a.trackBy, loading = _a.loading, loadingText = _a.loadingText, selectionType = _a.selectionType, selectedItems = _a.selectedItems, isItemDisabled = _a.isItemDisabled, ariaLabels = _a.ariaLabels, onSelectionChange = _a.onSelectionChange, onSortingChange = _a.onSortingChange, sortingColumn = _a.sortingColumn, sortingDescending = _a.sortingDescending, sortingDisabled = _a.sortingDisabled, visibleColumns = _a.visibleColumns, stickyHeader = _a.stickyHeader, stickyHeaderVerticalOffset = _a.stickyHeaderVerticalOffset, onRowClick = _a.onRowClick, onRowContextMenu = _a.onRowContextMenu, wrapLines = _a.wrapLines, stripedRows = _a.stripedRows, submitEdit = _a.submitEdit, onEditCancel = _a.onEditCancel, resizableColumns = _a.resizableColumns, onColumnWidthsChange = _a.onColumnWidthsChange, variant = _a.variant, __internalRootRef = _a.__internalRootRef, totalItemsCount = _a.totalItemsCount, firstIndex = _a.firstIndex, renderAriaLive = _a.renderAriaLive, rest = __rest(_a, ["header", "footer", "empty", "filter", "pagination", "preferences", "items", "columnDefinitions", "trackBy", "loading", "loadingText", "selectionType", "selectedItems", "isItemDisabled", "ariaLabels", "onSelectionChange", "onSortingChange", "sortingColumn", "sortingDescending", "sortingDisabled", "visibleColumns", "stickyHeader", "stickyHeaderVerticalOffset", "onRowClick", "onRowContextMenu", "wrapLines", "stripedRows", "submitEdit", "onEditCancel", "resizableColumns", "onColumnWidthsChange", "variant", "__internalRootRef", "totalItemsCount", "firstIndex", "renderAriaLive"]);
    var baseProps = getBaseProps(rest);
    stickyHeader = stickyHeader && supportsStickyPosition();
    var _c = useContainerQuery(function (_a) {
        var width = _a.width;
        return width;
    }), containerWidth = _c[0], wrapperMeasureRef = _c[1];
    var wrapperRefObject = (0,react.useRef)(null);
    var wrapperRef = useMergeRefs(wrapperMeasureRef, wrapperRefObject);
    var _d = useContainerQuery(function (_a) {
        var width = _a.width;
        return width;
    }), tableWidth = _d[0], tableMeasureRef = _d[1];
    var tableRefObject = (0,react.useRef)(null);
    var tableRef = useMergeRefs(tableMeasureRef, tableRefObject);
    var secondaryWrapperRef = react.useRef(null);
    var theadRef = (0,react.useRef)(null);
    var stickyHeaderRef = react.useRef(null);
    var scrollbarRef = react.useRef(null);
    var _e = (0,react.useState)(null), currentEditCell = _e[0], setCurrentEditCell = _e[1];
    var _f = (0,react.useState)(false), currentEditLoading = _f[0], setCurrentEditLoading = _f[1];
    (0,react.useImperativeHandle)(ref, function () {
        var _a;
        return ({
            scrollToTop: ((_a = stickyHeaderRef.current) === null || _a === void 0 ? void 0 : _a.scrollToTop) || (function () { return undefined; }),
            cancelEdit: function () { return setCurrentEditCell(null); }
        });
    }, []);
    var handleScroll = useScrollSync([wrapperRefObject, scrollbarRef, secondaryWrapperRef], !supportsStickyPosition());
    var _g = useFocusMove(selectionType, items.length), moveFocusDown = _g.moveFocusDown, moveFocusUp = _g.moveFocusUp, moveFocus = _g.moveFocus;
    var _h = useRowEvents({ onRowClick: onRowClick, onRowContextMenu: onRowContextMenu }), onRowClickHandler = _h.onRowClickHandler, onRowContextMenuHandler = _h.onRowContextMenuHandler;
    var visibleColumnDefinitions = visibleColumns
        ? columnDefinitions.filter(function (column) { return column.id && visibleColumns.indexOf(column.id) !== -1; })
        : columnDefinitions;
    var _j = useSelection({
        items: items,
        trackBy: trackBy,
        selectedItems: selectedItems,
        selectionType: selectionType,
        isItemDisabled: isItemDisabled,
        onSelectionChange: onSelectionChange,
        ariaLabels: ariaLabels
    }), isItemSelected = _j.isItemSelected, selectAllProps = _j.selectAllProps, getItemSelectionProps = _j.getItemSelectionProps, updateShiftToggle = _j.updateShiftToggle;
    if (loading) {
        selectAllProps.disabled = true;
    }
    if (isDevelopment) {
        if (resizableColumns) {
            checkColumnWidths(columnDefinitions);
        }
        if (sortingColumn === null || sortingColumn === void 0 ? void 0 : sortingColumn.sortingComparator) {
            checkSortingState(columnDefinitions, sortingColumn.sortingComparator);
        }
    }
    var isVisualRefresh = useVisualRefresh();
    var computedVariant = isVisualRefresh
        ? variant
        : ['embedded', 'full-page'].indexOf(variant) > -1
            ? 'container'
            : variant;
    var hasHeader = !!(header || filter || pagination || preferences);
    var hasSelection = !!selectionType;
    var hasFooter = !!footer;
    var theadProps = {
        containerWidth: containerWidth,
        selectionType: selectionType,
        selectAllProps: selectAllProps,
        columnDefinitions: visibleColumnDefinitions,
        variant: computedVariant,
        wrapLines: wrapLines,
        resizableColumns: resizableColumns,
        sortingColumn: sortingColumn,
        sortingDisabled: sortingDisabled,
        sortingDescending: sortingDescending,
        onSortingChange: onSortingChange,
        onFocusMove: moveFocus,
        onResizeFinish: function (newWidth) {
            var widthsDetail = columnDefinitions.map(function (column, index) { return newWidth[getColumnKey(column, index)] || column.width || DEFAULT_WIDTH; });
            var widthsChanged = widthsDetail.some(function (width, index) { return columnDefinitions[index].width !== width; });
            if (widthsChanged) {
                fireNonCancelableEvent(onColumnWidthsChange, { widths: widthsDetail });
            }
        },
        singleSelectionHeaderAriaLabel: ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.selectionGroupLabel,
        stripedRows: stripedRows
    };
    // Allows keyboard users to scroll horizontally with arrow keys by making the wrapper part of the tab sequence
    var isWrapperScrollable = tableWidth && containerWidth && tableWidth > containerWidth;
    var wrapperProps = isWrapperScrollable
        ? { role: 'region', tabIndex: 0, 'aria-label': ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.tableLabel }
        : {};
    var focusVisibleProps = useFocusVisible();
    var getMouseDownTarget = useMouseDownTarget();
    var wrapWithInlineLoadingState = function (submitEdit) {
        if (!submitEdit) {
            return undefined;
        }
        return function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            return __awaiter(void 0, void 0, void 0, function () {
                return tslib_es6_generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            setCurrentEditLoading(true);
                            _a.label = 1;
                        case 1:
                            _a.trys.push([1, , 3, 4]);
                            return [4 /*yield*/, submitEdit.apply(void 0, args)];
                        case 2:
                            _a.sent();
                            return [3 /*break*/, 4];
                        case 3:
                            setCurrentEditLoading(false);
                            return [7 /*endfinally*/];
                        case 4: return [2 /*return*/];
                    }
                });
            });
        };
    };
    var hasDynamicHeight = computedVariant === 'full-page';
    var overlapElement = useDynamicOverlap({ disabled: !hasDynamicHeight });
    use_table_focus_navigation(selectionType, tableRefObject, visibleColumnDefinitions, items === null || items === void 0 ? void 0 : items.length);
    return (react.createElement(ColumnWidthsProvider, { tableRef: tableRefObject, visibleColumnDefinitions: visibleColumnDefinitions, resizableColumns: resizableColumns, hasSelection: hasSelection },
        react.createElement(InternalContainer, tslib_es6_assign({}, baseProps, { __internalRootRef: __internalRootRef, className: clsx_m(baseProps.className, table_styles_css.root), header: react.createElement(react.Fragment, null,
                hasHeader && (react.createElement("div", { ref: overlapElement, className: clsx_m(hasDynamicHeight && [table_styles_css["dark-header"], 'awsui-context-content-header']) },
                    react.createElement("div", { className: clsx_m(table_styles_css["header-controls"], table_styles_css["variant-".concat(computedVariant)]) },
                        react.createElement(ToolsHeader, { header: header, filter: filter, pagination: pagination, preferences: preferences })))),
                stickyHeader && (react.createElement(sticky_header, { ref: stickyHeaderRef, variant: computedVariant, theadProps: theadProps, wrapperRef: wrapperRefObject, theadRef: theadRef, secondaryWrapperRef: secondaryWrapperRef, tableRef: tableRefObject, onScroll: handleScroll, tableHasHeader: hasHeader }))), disableHeaderPaddings: true, disableContentPaddings: true, variant: toContainerVariant(computedVariant), __disableFooterPaddings: true, __disableFooterDivider: true, footer: footer && (react.createElement("div", { className: clsx_m(table_styles_css["footer-wrapper"], table_styles_css["variant-".concat(computedVariant)]) },
                react.createElement("div", { className: table_styles_css.footer }, footer))), __stickyHeader: stickyHeader, __stickyOffset: stickyHeaderVerticalOffset }, focusMarkers.root),
            react.createElement("div", tslib_es6_assign({ ref: wrapperRef, className: clsx_m(table_styles_css.wrapper, table_styles_css["variant-".concat(computedVariant)], (_b = {},
                    _b[table_styles_css["has-footer"]] = hasFooter,
                    _b[table_styles_css["has-header"]] = hasHeader,
                    _b)), onScroll: handleScroll }, wrapperProps, focusVisibleProps),
                !!renderAriaLive && !!firstIndex && (react.createElement(live_region, null,
                    react.createElement("span", null, renderAriaLive({ totalItemsCount: totalItemsCount, firstIndex: firstIndex, lastIndex: firstIndex + items.length })))),
                react.createElement("table", { ref: tableRef, className: clsx_m(table_styles_css.table, resizableColumns && table_styles_css["table-layout-fixed"]),
                    // Browsers have weird mechanism to guess whether it's a data table or a layout table.
                    // If we state explicitly, they get it always correctly even with low number of rows.
                    role: "table", "aria-label": ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.tableLabel, "aria-rowcount": totalItemsCount ? totalItemsCount + 1 : -1 },
                    react.createElement(thead, tslib_es6_assign({ ref: theadRef, hidden: stickyHeader, onCellFocus: function (colIndex) { var _a; return (_a = stickyHeaderRef.current) === null || _a === void 0 ? void 0 : _a.setFocusedColumn(colIndex); }, onCellBlur: function () { var _a; return (_a = stickyHeaderRef.current) === null || _a === void 0 ? void 0 : _a.setFocusedColumn(null); } }, theadProps)),
                    react.createElement("tbody", null, loading || items.length === 0 ? (react.createElement("tr", null,
                        react.createElement("td", { colSpan: selectionType ? visibleColumnDefinitions.length + 1 : visibleColumnDefinitions.length, className: clsx_m(table_styles_css["cell-merged"], hasFooter && table_styles_css["has-footer"]) },
                            react.createElement("div", { className: table_styles_css["cell-merged-content"], style: {
                                    width: (supportsStickyPosition() && containerWidth && Math.floor(containerWidth)) || undefined
                                } }, loading ? (react.createElement(StatusIndicator, { type: "loading", className: table_styles_css.loading, wrapText: true },
                                react.createElement(live_region, { visible: true }, loadingText))) : (react.createElement("div", { className: table_styles_css.empty }, empty)))))) : (items.map(function (item, rowIndex) {
                        var firstVisible = rowIndex === 0;
                        var lastVisible = rowIndex === items.length - 1;
                        var isEven = rowIndex % 2 === 0;
                        var isSelected = !!selectionType && isItemSelected(item);
                        var isPrevSelected = !!selectionType && !firstVisible && isItemSelected(items[rowIndex - 1]);
                        var isNextSelected = !!selectionType && !lastVisible && isItemSelected(items[rowIndex + 1]);
                        return (react.createElement("tr", tslib_es6_assign({ key: getItemKey(trackBy, item, rowIndex), className: clsx_m(table_styles_css.row, isSelected && table_styles_css["row-selected"]), onFocus: function (_a) {
                                var _b;
                                var currentTarget = _a.currentTarget;
                                // When an element inside table row receives focus we want to adjust the scroll.
                                // However, that behaviour is unwanted when the focus is received as result of a click
                                // as it causes the click to never reach the target element.
                                if (!currentTarget.contains(getMouseDownTarget())) {
                                    (_b = stickyHeaderRef.current) === null || _b === void 0 ? void 0 : _b.scrollToRow(currentTarget);
                                }
                            } }, focusMarkers.item, { onClick: onRowClickHandler && onRowClickHandler.bind(null, rowIndex, item), onContextMenu: onRowContextMenuHandler && onRowContextMenuHandler.bind(null, rowIndex, item), "aria-rowindex": firstIndex ? firstIndex + rowIndex + 1 : undefined }),
                            selectionType !== undefined && (react.createElement(TableTdElement, { className: clsx_m(table_styles_css["selection-control"]), isVisualRefresh: isVisualRefresh, isFirstRow: firstVisible, isLastRow: lastVisible, isSelected: isSelected, isNextSelected: isNextSelected, isPrevSelected: isPrevSelected, wrapLines: false, isEvenRow: isEven, stripedRows: stripedRows, hasSelection: hasSelection, hasFooter: hasFooter },
                                react.createElement(SelectionControl, tslib_es6_assign({ onFocusDown: moveFocusDown, onFocusUp: moveFocusUp, onShiftToggle: updateShiftToggle }, getItemSelectionProps(item))))),
                            visibleColumnDefinitions.map(function (column, colIndex) {
                                var isEditing = !!currentEditCell && currentEditCell[0] === rowIndex && currentEditCell[1] === colIndex;
                                var isEditable = !!column.editConfig && !currentEditLoading;
                                return (react.createElement(TableBodyCell, { key: getColumnKey(column, colIndex), style: resizableColumns
                                        ? {}
                                        : {
                                            width: column.width,
                                            minWidth: column.minWidth,
                                            maxWidth: column.maxWidth
                                        }, ariaLabels: ariaLabels, column: column, item: item, wrapLines: wrapLines, isEditable: isEditable, isEditing: isEditing, isFirstRow: firstVisible, isLastRow: lastVisible, isSelected: isSelected, isNextSelected: isNextSelected, isPrevSelected: isPrevSelected, onEditStart: function () { return setCurrentEditCell([rowIndex, colIndex]); }, onEditEnd: function () {
                                        var wasCancelled = fireCancelableEvent(onEditCancel, {});
                                        if (!wasCancelled) {
                                            setCurrentEditCell(null);
                                        }
                                    }, submitEdit: wrapWithInlineLoadingState(submitEdit), hasFooter: hasFooter, stripedRows: stripedRows, isEvenRow: isEven, isVisualRefresh: isVisualRefresh }));
                            })));
                    })))),
                resizableColumns && react.createElement(ResizeTracker, null)),
            react.createElement(sticky_scrollbar, { ref: scrollbarRef, wrapperRef: wrapperRefObject, tableRef: tableRefObject, onScroll: handleScroll }))));
});
/* harmony default export */ const table_internal = (InternalTable);
//# sourceMappingURL=internal.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/table/index.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0




var Table = react.forwardRef(function (_a, ref) {
    var _b = _a.items, items = _b === void 0 ? [] : _b, _c = _a.selectedItems, selectedItems = _c === void 0 ? [] : _c, _d = _a.variant, variant = _d === void 0 ? 'container' : _d, props = __rest(_a, ["items", "selectedItems", "variant"]);
    var baseComponentProps = useBaseComponent('Table');
    return (react.createElement(table_internal, tslib_es6_assign({ items: items, selectedItems: selectedItems, variant: variant }, props, baseComponentProps, { ref: ref })));
});
applyDisplayName(Table, 'Table');
/* harmony default export */ const table = (Table);
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/content-layout/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/content-layout/styles.css.js


    /* harmony default export */ const content_layout_styles_css = ({
  "layout": "awsui_layout_5gtk3_1onm4_99",
  "is-visual-refresh": "awsui_is-visual-refresh_5gtk3_1onm4_99",
  "background": "awsui_background_5gtk3_1onm4_102",
  "header": "awsui_header_5gtk3_1onm4_105",
  "is-overlap-disabled": "awsui_is-overlap-disabled_5gtk3_1onm4_115",
  "has-breadcrumbs": "awsui_has-breadcrumbs_5gtk3_1onm4_132",
  "content": "awsui_content_5gtk3_1onm4_141"
});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/content-layout/index.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0










function ContentLayout(_a) {
    var _b, _c, _d;
    var children = _a.children, disableOverlap = _a.disableOverlap, header = _a.header, rest = __rest(_a, ["children", "disableOverlap", "header"]);
    var baseProps = getBaseProps(rest);
    var hasBreadcrumbs = useAppLayoutContext().hasBreadcrumbs;
    var rootElement = (0,react.useRef)(null);
    var __internalRootRef = useBaseComponent('ContentLayout').__internalRootRef;
    var mergedRef = useMergeRefs(rootElement, __internalRootRef);
    var overlapElement = useDynamicOverlap();
    var isVisualRefresh = useVisualRefresh();
    /**
     * Disable the overlap if the component is missing either a header or child
     * content. If the component is not using visual refresh then the overlap
     * will not be displayed at all. This is handled in the CSS not the JavaScript.
     */
    var isOverlapDisabled = !children || !header || disableOverlap;
    return (react.createElement("div", tslib_es6_assign({}, baseProps, { className: clsx_m(baseProps.className, content_layout_styles_css.layout, (_b = {},
            _b[content_layout_styles_css["is-overlap-disabled"]] = isOverlapDisabled,
            _b[content_layout_styles_css["is-visual-refresh"]] = isVisualRefresh,
            _b)), ref: mergedRef }),
        react.createElement("div", { className: clsx_m(content_layout_styles_css.background, (_c = {}, _c[content_layout_styles_css["is-overlap-disabled"]] = isOverlapDisabled, _c), 'awsui-context-content-header'), ref: overlapElement }),
        header && (react.createElement("div", { className: clsx_m(content_layout_styles_css.header, (_d = {}, _d[content_layout_styles_css["has-breadcrumbs"]] = isVisualRefresh && hasBreadcrumbs, _d), 'awsui-context-content-header') }, header)),
        react.createElement("div", { className: content_layout_styles_css.content }, children)));
}
applyDisplayName(ContentLayout, 'ContentLayout');
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/column-layout/util.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
function repeat(value, times) {
    var array = [];
    for (var i = 0; i < times; i++) {
        array[i] = value;
    }
    return array;
}
//# sourceMappingURL=util.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/column-layout/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/column-layout/styles.css.js


    /* harmony default export */ const column_layout_styles_css = ({
  "column-layout": "awsui_column-layout_vvxn7_1qidu_93",
  "grid": "awsui_grid_vvxn7_1qidu_104",
  "grid-no-gutters": "awsui_grid-no-gutters_vvxn7_1qidu_109",
  "grid-variant-text-grid": "awsui_grid-variant-text-grid_vvxn7_1qidu_112",
  "grid-breakpoint-default": "awsui_grid-breakpoint-default_vvxn7_1qidu_119",
  "grid-columns-1": "awsui_grid-columns-1_vvxn7_1qidu_122",
  "grid-breakpoint-xxs": "awsui_grid-breakpoint-xxs_vvxn7_1qidu_122",
  "grid-breakpoint-xs": "awsui_grid-breakpoint-xs_vvxn7_1qidu_125",
  "grid-columns-2": "awsui_grid-columns-2_vvxn7_1qidu_128",
  "grid-columns-3": "awsui_grid-columns-3_vvxn7_1qidu_134",
  "grid-columns-4": "awsui_grid-columns-4_vvxn7_1qidu_140",
  "grid-vertical-borders": "awsui_grid-vertical-borders_vvxn7_1qidu_153",
  "grid-horizontal-borders": "awsui_grid-horizontal-borders_vvxn7_1qidu_186"
});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/column-layout/internal.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0







var COLUMN_TRIGGERS = ['default', 'xxs', 'xs'];
var COLUMN_DEFS = {
    1: { colspan: { "default": 12, xxs: 12, xs: 12 } },
    2: { colspan: { "default": 12, xxs: 6, xs: 6 } },
    3: { colspan: { "default": 12, xxs: 6, xs: 4 } },
    4: { colspan: { "default": 12, xxs: 6, xs: 3 } }
};
/**
 * A responsive grid layout.
 */
/* harmony default export */ const column_layout_internal = (react.forwardRef(function ColumnLayout(_a, ref) {
    var _b;
    var _c;
    var _d = _a.columns, columns = _d === void 0 ? 1 : _d, _e = _a.variant, variant = _e === void 0 ? 'default' : _e, _f = _a.borders, borders = _f === void 0 ? 'none' : _f, _g = _a.disableGutters, disableGutters = _g === void 0 ? false : _g, children = _a.children, __breakpoint = _a.__breakpoint, __internalRootRef = _a.__internalRootRef, restProps = __rest(_a, ["columns", "variant", "borders", "disableGutters", "children", "__breakpoint", "__internalRootRef"]);
    var baseProps = getBaseProps(restProps);
    var isTextGridVariant = variant === 'text-grid';
    var shouldDisableGutters = !isTextGridVariant && disableGutters;
    var shouldHaveHorizontalBorders = !isTextGridVariant && (borders === 'horizontal' || borders === 'all');
    var shouldHaveVerticalBorders = !isTextGridVariant && (borders === 'vertical' || borders === 'all');
    /*
     Flattening the children allows us to "see through" React Fragments and nested arrays.
     */
    var flattenedChildren = (0,react_keyed_flatten_children/* default */.Z)(children);
    return (react.createElement("div", tslib_es6_assign({}, baseProps, { className: clsx_m(baseProps.className, column_layout_styles_css["column-layout"]), ref: __internalRootRef }),
        react.createElement(grid_internal, { ref: ref, disableGutters: true, gridDefinition: repeat((_c = COLUMN_DEFS[columns]) !== null && _c !== void 0 ? _c : {}, flattenedChildren.length), className: clsx_m(column_layout_styles_css.grid, column_layout_styles_css["grid-columns-".concat(columns)], column_layout_styles_css["grid-variant-".concat(variant)], (_b = {},
                _b[column_layout_styles_css["grid-horizontal-borders"]] = shouldHaveHorizontalBorders,
                _b[column_layout_styles_css["grid-vertical-borders"]] = shouldHaveVerticalBorders,
                _b[column_layout_styles_css["grid-no-gutters"]] = shouldDisableGutters,
                _b)), __breakpoint: __breakpoint, __responsiveClassName: function (breakpoint) { return breakpoint && column_layout_styles_css["grid-breakpoint-".concat(breakpoint)]; } }, children)));
}));
//# sourceMappingURL=internal.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/column-layout/index.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0






function ColumnLayout(_a) {
    var _b = _a.columns, columns = _b === void 0 ? 1 : _b, _c = _a.variant, variant = _c === void 0 ? 'default' : _c, _d = _a.borders, borders = _d === void 0 ? 'none' : _d, _e = _a.disableGutters, disableGutters = _e === void 0 ? false : _e, props = __rest(_a, ["columns", "variant", "borders", "disableGutters"]);
    var baseComponentProps = useBaseComponent('ColumnLayout');
    var _f = useContainerBreakpoints(COLUMN_TRIGGERS), breakpoint = _f[0], ref = _f[1];
    var externalProps = getExternalProps(props);
    return (react.createElement(column_layout_internal, tslib_es6_assign({ columns: columns, variant: variant, borders: borders, disableGutters: disableGutters }, externalProps, baseComponentProps, { __breakpoint: breakpoint, ref: ref })));
}
applyDisplayName(ColumnLayout, 'ColumnLayout');
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/breadcrumb-group/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/breadcrumb-group/styles.css.js


    /* harmony default export */ const breadcrumb_group_styles_css = ({
  "breadcrumb-group": "awsui_breadcrumb-group_d19fg_zzbk1_93",
  "item": "awsui_item_d19fg_zzbk1_105",
  "breadcrumb-group-list": "awsui_breadcrumb-group-list_d19fg_zzbk1_116",
  "ellipsis": "awsui_ellipsis_d19fg_zzbk1_126",
  "icon": "awsui_icon_d19fg_zzbk1_134",
  "mobile": "awsui_mobile_d19fg_zzbk1_138"
});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/breadcrumb-group/item/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/breadcrumb-group/item/styles.css.js


    /* harmony default export */ const item_styles_css = ({
  "link": "awsui_link_1kosq_zkw11_93",
  "breadcrumb": "awsui_breadcrumb_1kosq_zkw11_97",
  "icon": "awsui_icon_1kosq_zkw11_100",
  "anchor": "awsui_anchor_1kosq_zkw11_104",
  "last": "awsui_last_1kosq_zkw11_147",
  "compressed": "awsui_compressed_1kosq_zkw11_157",
  "text": "awsui_text_1kosq_zkw11_161",
  "virtual-item": "awsui_virtual-item_1kosq_zkw11_168",
  "item-popover": "awsui_item-popover_1kosq_zkw11_175"
});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/breadcrumb-group/item/item.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0












var BreadcrumbItemWithPopover = function (_a) {
    var item = _a.item, anchorAttributes = __rest(_a, ["item"]);
    var focusVisible = useFocusVisible();
    var _b = (0,react.useState)(false), showPopover = _b[0], setShowPopover = _b[1];
    var textRef = (0,react.useRef)(null);
    var virtualTextRef = (0,react.useRef)(null);
    var isTruncated = function (textRef, virtualTextRef) {
        if (!textRef || !virtualTextRef || !textRef.current || !virtualTextRef.current) {
            return false;
        }
        var virtualTextWidth = virtualTextRef.current.getBoundingClientRect().width;
        var textWidth = textRef.current.getBoundingClientRect().width;
        if (virtualTextWidth > textWidth) {
            return true;
        }
        return false;
    };
    var popoverContent = (react.createElement(Portal, null,
        react.createElement("div", { className: item_styles_css["item-popover"] },
            react.createElement(transition_Transition, { "in": true }, function () { return (react.createElement(PopoverContainer, { trackRef: textRef, size: "small", fixedWidth: false, position: "bottom", arrow: function (position) { return (react.createElement("div", { className: clsx_m(popover_styles_css.arrow, popover_styles_css["arrow-position-".concat(position)]) },
                    react.createElement("div", { className: popover_styles_css["arrow-outer"] }),
                    react.createElement("div", { className: popover_styles_css["arrow-inner"] }))); } },
                react.createElement(PopoverBody, { dismissButton: false, dismissAriaLabel: undefined, onDismiss: function () { }, header: undefined }, item.text))); }))));
    (0,react.useEffect)(function () {
        var onKeyDown = function (event) {
            if (event.key === 'Escape') {
                setShowPopover(false);
            }
        };
        if (showPopover) {
            document.addEventListener('keydown', onKeyDown);
        }
        return function () {
            document.removeEventListener('keydown', onKeyDown);
        };
    }, [showPopover]);
    return (react.createElement(react.Fragment, null,
        react.createElement("a", tslib_es6_assign({}, focusVisible, anchorAttributes, { onFocus: function () {
                isTruncated(textRef, virtualTextRef) && setShowPopover(true);
            }, onBlur: function () { return setShowPopover(false); }, onMouseEnter: function () {
                isTruncated(textRef, virtualTextRef) && setShowPopover(true);
            }, onMouseLeave: function () { return setShowPopover(false); } }),
            react.createElement("span", { className: item_styles_css.text, ref: textRef }, item.text),
            react.createElement("span", { className: item_styles_css["virtual-item"], ref: virtualTextRef }, item.text)),
        showPopover && popoverContent));
};
function BreadcrumbItem(_a) {
    var _b;
    var item = _a.item, onClick = _a.onClick, onFollow = _a.onFollow, isDisplayed = _a.isDisplayed, _c = _a.isLast, isLast = _c === void 0 ? false : _c, _d = _a.isCompressed, isCompressed = _d === void 0 ? false : _d;
    var focusVisible = useFocusVisible();
    var preventDefault = function (event) { return event.preventDefault(); };
    var onClickHandler = function (event) {
        if (isPlainLeftClick(event)) {
            fireCancelableEvent(onFollow, getEventDetail(item), event);
        }
        fireCancelableEvent(onClick, getEventDetail(item), event);
    };
    var anchorAttributes = {
        href: isLast ? undefined : item.href || '#',
        className: clsx_m(item_styles_css.anchor, (_b = {}, _b[item_styles_css.compressed] = isCompressed, _b)),
        'aria-current': isLast ? 'page' : undefined,
        'aria-disabled': isLast && 'true',
        onClick: isLast ? preventDefault : onClickHandler,
        tabIndex: isLast ? 0 : undefined
    };
    return (react.createElement(react.Fragment, null,
        react.createElement("div", { className: clsx_m(item_styles_css.breadcrumb, isLast && item_styles_css.last) },
            isDisplayed && isCompressed ? (react.createElement(BreadcrumbItemWithPopover, tslib_es6_assign({ item: item }, anchorAttributes))) : (react.createElement("a", tslib_es6_assign({}, focusVisible, anchorAttributes),
                react.createElement("span", { className: item_styles_css.text }, item.text))),
            !isLast ? (react.createElement("span", { className: item_styles_css.icon },
                react.createElement(internal, { name: "angle-right" }))) : null)));
}
//# sourceMappingURL=item.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/breadcrumb-group/internal.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0











var DropdownTrigger = function (clickHandler, ref, isDisabled, isExpanded, ariaLabel) {
    return (react.createElement(InternalButton, { disabled: isDisabled, onClick: function (event) {
            event.preventDefault();
            clickHandler();
        }, ref: ref, ariaExpanded: isExpanded, "aria-haspopup": true, ariaLabel: ariaLabel, variant: "breadcrumb-group", formAction: "none" }, "..."));
};
var EllipsisDropdown = function (_a) {
    var ariaLabel = _a.ariaLabel, dropdownItems = _a.dropdownItems, onDropdownItemClick = _a.onDropdownItemClick, onDropdownItemFollow = _a.onDropdownItemFollow;
    return (react.createElement("li", { className: breadcrumb_group_styles_css.ellipsis },
        react.createElement(button_dropdown_internal, { ariaLabel: ariaLabel, items: dropdownItems, onItemClick: onDropdownItemClick, onItemFollow: onDropdownItemFollow, customTriggerBuilder: DropdownTrigger }),
        react.createElement("span", { className: breadcrumb_group_styles_css.icon },
            react.createElement(internal, { name: "angle-right" }))));
};
var getEventDetail = function (item) { return ({
    item: item,
    text: item.text,
    href: item.href
}); };
function InternalBreadcrumbGroup(_a) {
    var _b = _a.items, items = _b === void 0 ? [] : _b, ariaLabel = _a.ariaLabel, expandAriaLabel = _a.expandAriaLabel, onClick = _a.onClick, onFollow = _a.onFollow, __internalRootRef = _a.__internalRootRef, props = __rest(_a, ["items", "ariaLabel", "expandAriaLabel", "onClick", "onFollow", "__internalRootRef"]);
    for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {
        var item = items_1[_i];
        checkSafeUrl('BreadcrumbGroup', item.href);
    }
    var baseProps = getBaseProps(props);
    var isMobile = useMobile();
    var breadcrumbItems = items.map(function (item, index) {
        return (react.createElement("li", { className: breadcrumb_group_styles_css.item, key: index },
            react.createElement(BreadcrumbItem, { item: item, onClick: onClick, onFollow: onFollow, isCompressed: isMobile, isLast: index === items.length - 1, isDisplayed: !isMobile || index === items.length - 1 || index === 0 })));
    });
    var getEventItem = function (e) {
        var id = e.detail.id;
        return items[parseInt(id)];
    };
    // Add ellipsis
    if (breadcrumbItems.length >= 3) {
        var dropdownItems = items
            .slice(1, items.length - 1)
            .map(function (item, index) { return ({
            id: (index + 1).toString(),
            text: item.text,
            href: item.href || '#'
        }); });
        breadcrumbItems = tslib_es6_spreadArray([
            breadcrumbItems[0],
            react.createElement(EllipsisDropdown, { key: 'ellipsis', ariaLabel: expandAriaLabel, dropdownItems: dropdownItems, onDropdownItemClick: function (e) { return fireCancelableEvent(onClick, getEventDetail(getEventItem(e)), e); }, onDropdownItemFollow: function (e) { return fireCancelableEvent(onFollow, getEventDetail(getEventItem(e)), e); } })
        ], breadcrumbItems.slice(1), true);
    }
    return (react.createElement("nav", tslib_es6_assign({}, baseProps, { className: clsx_m(breadcrumb_group_styles_css["breadcrumb-group"], isMobile && breadcrumb_group_styles_css.mobile, baseProps.className), "aria-label": ariaLabel || undefined, ref: __internalRootRef }),
        react.createElement("ol", { className: breadcrumb_group_styles_css["breadcrumb-group-list"] }, breadcrumbItems)));
}
//# sourceMappingURL=internal.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/breadcrumb-group/index.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0




function BreadcrumbGroup(_a) {
    var _b = _a.items, items = _b === void 0 ? [] : _b, _c = _a.expandAriaLabel, expandAriaLabel = _c === void 0 ? 'Show path' : _c, props = __rest(_a, ["items", "expandAriaLabel"]);
    var baseComponentProps = useBaseComponent('BreadcrumbGroup');
    return react.createElement(InternalBreadcrumbGroup, tslib_es6_assign({ items: items, expandAriaLabel: expandAriaLabel }, props, baseComponentProps));
}
applyDisplayName(BreadcrumbGroup, 'BreadcrumbGroup');
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/alert/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/alert/styles.css.js


    /* harmony default export */ const alert_styles_css = ({
  "alert": "awsui_alert_mx3cw_wdted_93",
  "awsui-motion-fade-in": "awsui_awsui-motion-fade-in_mx3cw_wdted_1",
  "root": "awsui_root_mx3cw_wdted_119",
  "hidden": "awsui_hidden_mx3cw_wdted_133",
  "body": "awsui_body_mx3cw_wdted_156",
  "header": "awsui_header_mx3cw_wdted_162",
  "action": "awsui_action_mx3cw_wdted_166",
  "action-button": "awsui_action-button_mx3cw_wdted_171",
  "text": "awsui_text_mx3cw_wdted_175",
  "icon": "awsui_icon_mx3cw_wdted_179",
  "message": "awsui_message_mx3cw_wdted_182",
  "breakpoint-default": "awsui_breakpoint-default_mx3cw_wdted_190",
  "content": "awsui_content_mx3cw_wdted_204",
  "dismiss": "awsui_dismiss_mx3cw_wdted_208",
  "dismiss-button": "awsui_dismiss-button_mx3cw_wdted_214",
  "type-error": "awsui_type-error_mx3cw_wdted_222",
  "type-warning": "awsui_type-warning_mx3cw_wdted_230",
  "type-success": "awsui_type-success_mx3cw_wdted_238",
  "type-info": "awsui_type-info_mx3cw_wdted_246"
});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/alert/internal.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0











var internal_typeToIcon = {
    error: 'status-negative',
    warning: 'status-warning',
    success: 'status-positive',
    info: 'status-info'
};
function InternalAlert(_a) {
    var _b;
    var type = _a.type, statusIconAriaLabel = _a.statusIconAriaLabel, _c = _a.visible, visible = _c === void 0 ? true : _c, dismissible = _a.dismissible, dismissAriaLabel = _a.dismissAriaLabel, children = _a.children, header = _a.header, buttonText = _a.buttonText, action = _a.action, onDismiss = _a.onDismiss, onButtonClick = _a.onButtonClick, _d = _a.__internalRootRef, __internalRootRef = _d === void 0 ? null : _d, rest = __rest(_a, ["type", "statusIconAriaLabel", "visible", "dismissible", "dismissAriaLabel", "children", "header", "buttonText", "action", "onDismiss", "onButtonClick", "__internalRootRef"]);
    var baseProps = getBaseProps(rest);
    var _e = useContainerBreakpoints(['xs']), breakpoint = _e[0], breakpointRef = _e[1];
    var mergedRef = useMergeRefs(breakpointRef, __internalRootRef);
    var isRefresh = useVisualRefresh();
    var size = isRefresh ? 'normal' : header && children ? 'big' : 'normal';
    var actionButton = action || (react.createElement(InternalButton, { className: alert_styles_css["action-button"], onClick: function () { return fireNonCancelableEvent(onButtonClick); }, formAction: "none" }, buttonText));
    var hasAction = Boolean(action || buttonText);
    return (react.createElement("div", tslib_es6_assign({}, baseProps, { "aria-hidden": !visible, className: clsx_m(alert_styles_css.root, (_b = {}, _b[alert_styles_css.hidden] = !visible, _b), baseProps.className, alert_styles_css["breakpoint-".concat(breakpoint)]), ref: mergedRef }),
        react.createElement(VisualContext, { contextName: "alert" },
            react.createElement("div", { className: clsx_m(alert_styles_css.alert, alert_styles_css["type-".concat(type)]) },
                react.createElement("div", { className: clsx_m(alert_styles_css.icon, alert_styles_css.text), role: "img", "aria-label": statusIconAriaLabel },
                    react.createElement(internal, { name: internal_typeToIcon[type], size: size })),
                react.createElement("div", { className: alert_styles_css.body },
                    react.createElement("div", { className: clsx_m(alert_styles_css.message, alert_styles_css.text) },
                        header && react.createElement("div", { className: alert_styles_css.header }, header),
                        react.createElement("div", { className: alert_styles_css.content }, children)),
                    hasAction && react.createElement("div", { className: alert_styles_css.action }, actionButton)),
                dismissible && (react.createElement("div", { className: alert_styles_css.dismiss },
                    react.createElement(InternalButton, { className: alert_styles_css["dismiss-button"], variant: "icon", iconName: "close", formAction: "none", ariaLabel: dismissAriaLabel, onClick: function () { return fireNonCancelableEvent(onDismiss); } })))))));
}
//# sourceMappingURL=internal.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/form/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/form/styles.css.js


    /* harmony default export */ const form_styles_css = ({
  "root": "awsui_root_1i0s3_ntsvl_93",
  "header": "awsui_header_1i0s3_ntsvl_104",
  "content": "awsui_content_1i0s3_ntsvl_108",
  "error": "awsui_error_1i0s3_ntsvl_112",
  "footer": "awsui_footer_1i0s3_ntsvl_116",
  "actions-section": "awsui_actions-section_1i0s3_ntsvl_120",
  "secondary-actions": "awsui_secondary-actions_1i0s3_ntsvl_129",
  "actions": "awsui_actions_1i0s3_ntsvl_120"
});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/form/internal.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0







function InternalForm(_a) {
    var children = _a.children, header = _a.header, errorText = _a.errorText, errorIconAriaLabel = _a.errorIconAriaLabel, actions = _a.actions, secondaryActions = _a.secondaryActions, __internalRootRef = _a.__internalRootRef, props = __rest(_a, ["children", "header", "errorText", "errorIconAriaLabel", "actions", "secondaryActions", "__internalRootRef"]);
    var baseProps = getBaseProps(props);
    return (react.createElement("div", tslib_es6_assign({}, baseProps, { ref: __internalRootRef, className: clsx_m(form_styles_css.root, baseProps.className) }),
        header && react.createElement("div", { className: form_styles_css.header }, header),
        children && react.createElement("div", { className: form_styles_css.content }, children),
        errorText && (react.createElement(InternalBox, { margin: { top: 'l' } },
            react.createElement(InternalAlert, { type: "error", statusIconAriaLabel: errorIconAriaLabel },
                react.createElement("div", { className: form_styles_css.error }, errorText)))),
        (actions || secondaryActions) && (react.createElement("div", { className: form_styles_css.footer },
            react.createElement("div", { className: form_styles_css["actions-section"] },
                actions && react.createElement("div", { className: form_styles_css.actions }, actions),
                secondaryActions && react.createElement("div", { className: form_styles_css["secondary-actions"] }, secondaryActions)))),
        errorText && (react.createElement(live_region, { assertive: true },
            errorIconAriaLabel,
            ", ",
            errorText))));
}
//# sourceMappingURL=internal.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/form/index.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0




function form_Form(props) {
    var baseComponentProps = useBaseComponent('Form');
    return react.createElement(InternalForm, tslib_es6_assign({}, props, baseComponentProps));
}
applyDisplayName(form_Form, 'Form');
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/form-field/index.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0




function FormField(_a) {
    var _b = _a.stretch, stretch = _b === void 0 ? false : _b, props = __rest(_a, ["stretch"]);
    var baseComponentProps = useBaseComponent('FormField');
    return react.createElement(InternalFormField, tslib_es6_assign({ stretch: stretch }, props, { __hideLabel: false }, baseComponentProps));
}
applyDisplayName(FormField, 'FormField');
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/status-indicator/index.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0




function status_indicator_StatusIndicator(_a) {
    var _b = _a.type, type = _b === void 0 ? 'success' : _b, _c = _a.wrapText, wrapText = _c === void 0 ? true : _c, props = __rest(_a, ["type", "wrapText"]);
    var baseComponentProps = useBaseComponent('StatusIndicator');
    return react.createElement(StatusIndicator, tslib_es6_assign({ type: type, wrapText: wrapText }, props, baseComponentProps));
}
applyDisplayName(status_indicator_StatusIndicator, 'StatusIndicator');
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/popover/internal.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0













/* harmony default export */ const popover_internal = (react.forwardRef(InternalPopover));
function InternalPopover(_a, ref) {
    var _b = _a.position, position = _b === void 0 ? 'right' : _b, _c = _a.size, size = _c === void 0 ? 'medium' : _c, _d = _a.fixedWidth, fixedWidth = _d === void 0 ? false : _d, _e = _a.triggerType, triggerType = _e === void 0 ? 'text' : _e, _f = _a.dismissButton, dismissButton = _f === void 0 ? true : _f, dismissAriaLabel = _a.dismissAriaLabel, children = _a.children, header = _a.header, content = _a.content, _g = _a.renderWithPortal, renderWithPortal = _g === void 0 ? false : _g, __onOpen = _a.__onOpen, _h = _a.__internalRootRef, __internalRootRef = _h === void 0 ? null : _h, restProps = __rest(_a, ["position", "size", "fixedWidth", "triggerType", "dismissButton", "dismissAriaLabel", "children", "header", "content", "renderWithPortal", "__onOpen", "__internalRootRef"]);
    var baseProps = getBaseProps(restProps);
    var focusVisible = useFocusVisible();
    var triggerRef = (0,react.useRef)(null);
    var popoverRef = (0,react.useRef)(null);
    var clickFrameId = (0,react.useRef)(null);
    var _j = (0,react.useState)(false), visible = _j[0], setVisible = _j[1];
    var focusTrigger = (0,react.useCallback)(function () {
        var _a;
        (_a = triggerRef.current) === null || _a === void 0 ? void 0 : _a.focus();
    }, []);
    var onTriggerClick = (0,react.useCallback)(function () {
        fireNonCancelableEvent(__onOpen);
        setVisible(true);
    }, [__onOpen]);
    var onDismiss = (0,react.useCallback)(function () {
        setVisible(false);
        focusTrigger();
    }, [focusTrigger]);
    var onTriggerKeyDown = (0,react.useCallback)(function (event) {
        if (event.keyCode === KeyCode.tab || event.keyCode === KeyCode.escape) {
            setVisible(false);
        }
    }, []);
    (0,react.useImperativeHandle)(ref, function () { return ({
        dismissPopover: onDismiss
    }); });
    (0,react.useEffect)(function () {
        if (!triggerRef.current) {
            return;
        }
        var document = triggerRef.current.ownerDocument;
        var onDocumentClick = function () {
            // Dismiss popover unless there was a click inside within the last animation frame.
            if (clickFrameId.current === null) {
                setVisible(false);
            }
        };
        // useCapture=false makes sure this listener is called after the one attached to the element.
        // the options.capture notation is unsupported by IE.
        document.addEventListener('mousedown', onDocumentClick, false);
        return function () {
            document.removeEventListener('mousedown', onDocumentClick, false);
        };
    }, []);
    var popoverClasses = usePortalModeClasses(triggerRef);
    var triggerProps = {
        // https://github.com/microsoft/TypeScript/issues/36659
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        ref: triggerRef,
        onClick: onTriggerClick,
        onKeyDown: onTriggerKeyDown,
        className: clsx_m(popover_styles_css.trigger, popover_styles_css["trigger-type-".concat(triggerType)])
    };
    var popoverContent = (react.createElement("div", { "aria-live": dismissButton ? undefined : 'polite', "aria-atomic": dismissButton ? undefined : true, className: clsx_m(popoverClasses, popover_styles_css["popover-content"]) }, visible && (react.createElement(PopoverContainer, { size: size, fixedWidth: fixedWidth, position: position, trackRef: triggerRef, arrow: function (position) { return react.createElement(arrow, { position: position }); }, renderWithPortal: renderWithPortal, zIndex: renderWithPortal ? 7000 : undefined },
        react.createElement(PopoverBody, { dismissButton: dismissButton, dismissAriaLabel: dismissAriaLabel, header: header, onDismiss: onDismiss, overflowVisible: "both" }, content)))));
    var mergedRef = useMergeRefs(popoverRef, __internalRootRef);
    return (react.createElement("div", tslib_es6_assign({}, baseProps, { className: clsx_m(popover_styles_css.root, baseProps.className), ref: mergedRef, onMouseDown: function () {
            // Indicate there was a click inside popover recently, including nested portals.
            clickFrameId.current = requestAnimationFrame(function () {
                clickFrameId.current = null;
            });
        } }),
        triggerType === 'text' ? (react.createElement("button", tslib_es6_assign({}, triggerProps, { type: "button", "aria-haspopup": "dialog" }, focusVisible),
            react.createElement("span", { className: popover_styles_css["trigger-inner-text"] }, children))) : (react.createElement("span", tslib_es6_assign({}, triggerProps), children)),
        renderWithPortal ? react.createElement(Portal, null, popoverContent) : popoverContent));
}
//# sourceMappingURL=internal.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/popover/index.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0





function Popover(_a) {
    var _b = _a.position, position = _b === void 0 ? 'right' : _b, _c = _a.size, size = _c === void 0 ? 'medium' : _c, _d = _a.fixedWidth, fixedWidth = _d === void 0 ? false : _d, _e = _a.triggerType, triggerType = _e === void 0 ? 'text' : _e, _f = _a.dismissButton, dismissButton = _f === void 0 ? true : _f, _g = _a.renderWithPortal, renderWithPortal = _g === void 0 ? false : _g, rest = __rest(_a, ["position", "size", "fixedWidth", "triggerType", "dismissButton", "renderWithPortal"]);
    var baseComponentProps = useBaseComponent('Popover');
    var externalProps = getExternalProps(rest);
    return (react.createElement(popover_internal, tslib_es6_assign({ position: position, size: size, fixedWidth: fixedWidth, triggerType: triggerType, dismissButton: dismissButton, renderWithPortal: renderWithPortal }, externalProps, baseComponentProps)));
}
applyDisplayName(Popover, 'Popover');
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/autosuggest/utils/utils.js
var isGroup = function (option) { return 'type' in option && option.type === 'parent'; };
var popLastGroup = function (options) {
    if (options.length) {
        var lastOption = options[options.length - 1];
        if (isGroup(lastOption)) {
            options.pop();
        }
    }
};
var filterOptions = function (options, text) {
    var filteredOptions = options.reduce(function (filteredIn, option) {
        if (isGroup(option)) {
            popLastGroup(filteredIn);
            filteredIn.push(option);
        }
        else if (matchSingleOption(option, text)) {
            filteredIn.push(option);
        }
        return filteredIn;
    }, []);
    popLastGroup(filteredOptions);
    return filteredOptions;
};
var matchSingleOption = function (option, text) {
    var searchableFields = ['value', 'label', 'description', 'labelTag'];
    var searchableTagFields = ['tags', 'filteringTags'];
    var searchText = text.toLowerCase();
    var searchStrFieldsFn = function (attr) { return matchString(option[attr], searchText); };
    var searchTagsFieldsFn = function (attr) { var _a; return (_a = option[attr]) === null || _a === void 0 ? void 0 : _a.some(function (value) { return matchString(value, searchText); }); };
    return searchableFields.some(searchStrFieldsFn) || searchableTagFields.some(searchTagsFieldsFn);
};
var matchString = function (value, searchText) {
    return value && value.toLowerCase().indexOf(searchText) !== -1;
};
//# sourceMappingURL=utils.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/components/options-list/utils/test-indexes.js
var testIndexMap = new WeakMap();
//retrieves the test indexes of the option for the findOption and findOptionInGroup test-utils
var getTestOptionIndexes = function (item) { return testIndexMap.get(item); };
var generateTestIndexes = function (filteredItems, getParentGroup) {
    var throughIndex = 1;
    var groupIndex = 0;
    var inGroupIndex = 1;
    var currentGroup = null;
    filteredItems.forEach(function (item) {
        if (!('type' in item)) {
            testIndexMap.set(item, { throughIndex: throughIndex++ });
        }
        else if (item.type === 'child') {
            var parentGroup = getParentGroup(item);
            if (parentGroup && parentGroup !== currentGroup) {
                currentGroup = parentGroup;
                inGroupIndex = 1;
                testIndexMap.set(item, {
                    throughIndex: throughIndex++,
                    groupIndex: ++groupIndex,
                    inGroupIndex: inGroupIndex++
                });
            }
            else {
                testIndexMap.set(item, { throughIndex: throughIndex++, groupIndex: groupIndex, inGroupIndex: inGroupIndex++ });
            }
        }
    });
};
//# sourceMappingURL=test-indexes.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/components/options-list/utils/use-highlight-option.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

function useHighlightedOption(_a) {
    var options = _a.options, isHighlightable = _a.isHighlightable;
    var _b = (0,react.useState)(-1), highlightedIndex = _b[0], setHighlightedIndexState = _b[1];
    var _c = (0,react.useState)('keyboard'), highlightType = _c[0], setHighlightType = _c[1];
    var setHighlightedIndex = (0,react.useCallback)(function (index, highlightType) {
        setHighlightedIndexState(index);
        setHighlightType(highlightType);
    }, []);
    var highlightedOption = options[highlightedIndex] && isHighlightable(options[highlightedIndex]) ? options[highlightedIndex] : undefined;
    var moveHighlightFrom = function (direction, startIndex, highlightType) {
        if (startIndex === void 0) { startIndex = highlightedIndex; }
        var newIndex = startIndex;
        do {
            newIndex += direction;
        } while (options[newIndex] && !isHighlightable(options[newIndex]));
        if (options[newIndex]) {
            setHighlightedIndex(newIndex, highlightType);
        }
    };
    var moveHighlight = function (direction, highlightType) {
        return moveHighlightFrom(direction, highlightedIndex, highlightType);
    };
    var highlightOption = (0,react.useCallback)(function (option, highlightType) {
        var index = options.indexOf(option);
        setHighlightedIndex(index, highlightType);
    }, [options, setHighlightedIndex]);
    return [
        { highlightType: highlightType, highlightedIndex: highlightedIndex, highlightedOption: highlightedOption },
        {
            setHighlightedIndexWithMouse: function (index) { return setHighlightedIndex(index, 'mouse'); },
            moveHighlightWithKeyboard: function (direction) { return moveHighlight(direction, 'keyboard'); },
            highlightOptionWithKeyboard: function (option) { return highlightOption(option, 'keyboard'); },
            resetHighlightWithKeyboard: function () { return setHighlightedIndex(-1, 'keyboard'); },
            goHomeWithKeyboard: function () { return moveHighlightFrom(1, -1, 'keyboard'); },
            goEndWithKeyboard: function () { return moveHighlightFrom(-1, options.length, 'keyboard'); }
        },
    ];
}
//# sourceMappingURL=use-highlight-option.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/autosuggest/options-controller.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0





var isHighlightable = function (option) {
    return !!option && option.type !== 'parent';
};
var parentMap = new WeakMap();
var getParentGroup = function (item) { return parentMap.get(item); };
var isInteractive = function (option) { return !!option && !option.disabled && option.type !== 'parent'; };
var useAutosuggestItems = function (_a) {
    var options = _a.options, filterValue = _a.filterValue, filterText = _a.filterText, filteringType = _a.filteringType, hideEnteredTextLabel = _a.hideEnteredTextLabel, onSelectItem = _a.onSelectItem;
    var _b = (0,react.useState)(false), showAll = _b[0], setShowAll = _b[1];
    var items = (0,react.useMemo)(function () { return createItems(options); }, [options]);
    var filteredItems = (0,react.useMemo)(function () {
        var filteredItems = filteringType === 'auto' && !showAll ? filterOptions(items, filterText) : tslib_es6_spreadArray([], items, true);
        if (filterValue && !hideEnteredTextLabel) {
            filteredItems.unshift({ value: filterValue, type: 'use-entered', option: { value: filterValue } });
        }
        generateTestIndexes(filteredItems, getParentGroup);
        return filteredItems;
    }, [items, filterValue, filterText, filteringType, showAll, hideEnteredTextLabel]);
    var _c = useHighlightedOption({
        options: filteredItems,
        isHighlightable: isHighlightable
    }), highlightedOptionState = _c[0], highlightedOptionHandlers = _c[1];
    var selectHighlightedOptionWithKeyboard = function () {
        if (highlightedOptionState.highlightedOption && isInteractive(highlightedOptionState.highlightedOption)) {
            onSelectItem(highlightedOptionState.highlightedOption);
            return true;
        }
        return false;
    };
    var highlightVisibleOptionWithMouse = function (index) {
        if (filteredItems[index] && isHighlightable(filteredItems[index])) {
            highlightedOptionHandlers.setHighlightedIndexWithMouse(index);
        }
    };
    var selectVisibleOptionWithMouse = function (index) {
        if (filteredItems[index] && isInteractive(filteredItems[index])) {
            onSelectItem(filteredItems[index]);
        }
    };
    return [
        tslib_es6_assign(tslib_es6_assign({}, highlightedOptionState), { items: filteredItems, showAll: showAll }),
        tslib_es6_assign(tslib_es6_assign({}, highlightedOptionHandlers), { setShowAll: setShowAll, selectHighlightedOptionWithKeyboard: selectHighlightedOptionWithKeyboard, highlightVisibleOptionWithMouse: highlightVisibleOptionWithMouse, selectVisibleOptionWithMouse: selectVisibleOptionWithMouse }),
    ];
};
function createItems(options) {
    var items = [];
    for (var _i = 0, options_1 = options; _i < options_1.length; _i++) {
        var option = options_1[_i];
        if (options_controller_isGroup(option)) {
            for (var _a = 0, _b = flattenGroup(option); _a < _b.length; _a++) {
                var item = _b[_a];
                items.push(item);
            }
        }
        else {
            items.push(tslib_es6_assign(tslib_es6_assign({}, option), { option: option }));
        }
    }
    return items;
}
function options_controller_isGroup(optionOrGroup) {
    return 'options' in optionOrGroup;
}
function flattenGroup(group) {
    var options = group.options, rest = __rest(group, ["options"]);
    var hasOnlyDisabledChildren = true;
    var items = [tslib_es6_assign(tslib_es6_assign({}, rest), { type: 'parent', option: group })];
    for (var _i = 0, options_2 = options; _i < options_2.length; _i++) {
        var option = options_2[_i];
        if (!option.disabled) {
            hasOnlyDisabledChildren = false;
        }
        var childOption = tslib_es6_assign(tslib_es6_assign({}, option), { type: 'child', disabled: option.disabled || rest.disabled, option: option });
        items.push(childOption);
        // TODO: Refactor parentMap and remove this side effect
        parentMap.set(childOption, tslib_es6_assign(tslib_es6_assign({}, group), { option: group }));
    }
    items[0].disabled = items[0].disabled || hasOnlyDisabledChildren;
    return items;
}
//# sourceMappingURL=options-controller.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/hooks/use-previous/index.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

/**
 * This hook gives the value of any variable from the previous render invocation
 */
var use_previous_usePrevious = function (value) {
    var ref = (0,react.useRef)();
    (0,react.useEffect)(function () {
        ref.current = value;
    });
    return ref.current;
};
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/components/dropdown-status/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/components/dropdown-status/styles.css.js


    /* harmony default export */ const dropdown_status_styles_css = ({
  "root": "awsui_root_vrgzu_1obpu_93",
  "recovery": "awsui_recovery_vrgzu_1obpu_105"
});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/components/dropdown-status/index.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0






function DropdownStatus(_a) {
    var children = _a.children;
    return react.createElement("div", { className: dropdown_status_styles_css.root }, children);
}
var useDropdownStatus = function (_a) {
    var statusType = _a.statusType, empty = _a.empty, loadingText = _a.loadingText, finishedText = _a.finishedText, errorText = _a.errorText, recoveryText = _a.recoveryText, isEmpty = _a.isEmpty, isNoMatch = _a.isNoMatch, noMatch = _a.noMatch, onRecoveryClick = _a.onRecoveryClick, errorIconAriaLabel = _a.errorIconAriaLabel;
    var previousStatusType = use_previous_usePrevious(statusType);
    var statusResult = { isSticky: true, content: null };
    if (statusType === 'loading') {
        statusResult.content = react.createElement(StatusIndicator, { type: 'loading' }, loadingText);
    }
    else if (statusType === 'error') {
        statusResult.content = (react.createElement("span", null,
            react.createElement(StatusIndicator, { type: "error", __animate: previousStatusType !== 'error', iconAriaLabel: errorIconAriaLabel }, errorText),
            ' ',
            recoveryText && (react.createElement(link_internal, { onFollow: function () { return fireNonCancelableEvent(onRecoveryClick); }, variant: "recovery", className: dropdown_status_styles_css.recovery }, recoveryText))));
    }
    else if (isEmpty && empty) {
        statusResult.content = empty;
    }
    else if (isNoMatch && noMatch) {
        statusResult.content = noMatch;
    }
    else if (statusType === 'finished' && finishedText) {
        statusResult.content = finishedText;
        statusResult.isSticky = false;
    }
    return statusResult;
};
/* harmony default export */ const dropdown_status = (DropdownStatus);
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/components/dropdown-footer/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/components/dropdown-footer/styles.css.js


    /* harmony default export */ const dropdown_footer_styles_css = ({
  "root": "awsui_root_1afi9_19bf4_93",
  "hidden": "awsui_hidden_1afi9_19bf4_103",
  "no-items": "awsui_no-items_1afi9_19bf4_106"
});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/components/dropdown-footer/index.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0





var DropdownFooter = function (_a) {
    var _b;
    var content = _a.content, _c = _a.hasItems, hasItems = _c === void 0 ? true : _c;
    return (react.createElement("div", { className: clsx_m(dropdown_footer_styles_css.root, (_b = {}, _b[dropdown_footer_styles_css.hidden] = content === null, _b[dropdown_footer_styles_css["no-items"]] = !hasItems, _b)) },
        react.createElement(live_region, { visible: true, tagName: "div" }, content && react.createElement(dropdown_status, null, content))));
};
/* harmony default export */ const dropdown_footer = (DropdownFooter);
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/autosuggest/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/autosuggest/styles.css.js


    /* harmony default export */ const autosuggest_styles_css = ({
  "root": "awsui_root_12hwc_12ujv_5",
  "layout-strut": "awsui_layout-strut_12hwc_12ujv_9",
  "list-bottom": "awsui_list-bottom_12hwc_12ujv_15"
});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/select/utils/check-option-value-field.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0


function checkOptionValueField(componentName, propertyName, propertyValue) {
    if (isDevelopment) {
        if (!propertyValue) {
            return;
        }
        var valuePropertyMissing = !propertyValue.every(function (element) {
            return 'options' in element || 'value' in element;
        });
        if (valuePropertyMissing) {
            logging_warnOnce(componentName, "You provided an `".concat(propertyName, "` prop where at least one non-group array element is missing the `value` field. This field is required for all options without sub-items."));
        }
    }
}
//# sourceMappingURL=check-option-value-field.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/hooks/check-controlled/index.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0


function checkControlled(componentName, propertyName, propertyValue, handlerName, handlerValue) {
    if (propertyValue !== undefined && handlerValue === undefined && isDevelopment) {
        logging_warnOnce(componentName, "You provided `".concat(propertyName, "` prop without an `").concat(handlerName, "` handler. This will render a read-only component. If the component should be mutable, set an `").concat(handlerName, "` handler."));
    }
}
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/node_modules/react-virtual/dist/react-virtual.mjs


function react_virtual_extends() {
  react_virtual_extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return react_virtual_extends.apply(this, arguments);
}

function react_virtual_objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

var props = ['bottom', 'height', 'left', 'right', 'top', 'width'];

var rectChanged = function rectChanged(a, b) {
  if (a === void 0) {
    a = {};
  }

  if (b === void 0) {
    b = {};
  }

  return props.some(function (prop) {
    return a[prop] !== b[prop];
  });
};

var observedNodes = /*#__PURE__*/new Map();
var rafId;

var run = function run() {
  var changedStates = [];
  observedNodes.forEach(function (state, node) {
    var newRect = node.getBoundingClientRect();

    if (rectChanged(newRect, state.rect)) {
      state.rect = newRect;
      changedStates.push(state);
    }
  });
  changedStates.forEach(function (state) {
    state.callbacks.forEach(function (cb) {
      return cb(state.rect);
    });
  });
  rafId = window.requestAnimationFrame(run);
};

function observeRect(node, cb) {
  return {
    observe: function observe() {
      var wasEmpty = observedNodes.size === 0;

      if (observedNodes.has(node)) {
        observedNodes.get(node).callbacks.push(cb);
      } else {
        observedNodes.set(node, {
          rect: undefined,
          hasRectChanged: false,
          callbacks: [cb]
        });
      }

      if (wasEmpty) run();
    },
    unobserve: function unobserve() {
      var state = observedNodes.get(node);

      if (state) {
        // Remove the callback
        var index = state.callbacks.indexOf(cb);
        if (index >= 0) state.callbacks.splice(index, 1); // Remove the node reference

        if (!state.callbacks.length) observedNodes["delete"](node); // Stop the loop

        if (!observedNodes.size) cancelAnimationFrame(rafId);
      }
    }
  };
}

var react_virtual_useIsomorphicLayoutEffect = typeof window !== 'undefined' ? react.useLayoutEffect : react.useEffect;

function useRect(nodeRef, initialRect) {
  if (initialRect === void 0) {
    initialRect = {
      width: 0,
      height: 0
    };
  }

  var _React$useState = react.useState(nodeRef.current),
      element = _React$useState[0],
      setElement = _React$useState[1];

  var _React$useReducer = react.useReducer(rectReducer, initialRect),
      rect = _React$useReducer[0],
      dispatch = _React$useReducer[1];

  var initialRectSet = react.useRef(false);
  react_virtual_useIsomorphicLayoutEffect(function () {
    if (nodeRef.current !== element) {
      setElement(nodeRef.current);
    }
  });
  react_virtual_useIsomorphicLayoutEffect(function () {
    if (element && !initialRectSet.current) {
      initialRectSet.current = true;

      var _rect = element.getBoundingClientRect();

      dispatch({
        rect: _rect
      });
    }
  }, [element]);
  react.useEffect(function () {
    if (!element) {
      return;
    }

    var observer = observeRect(element, function (rect) {
      dispatch({
        rect: rect
      });
    });
    observer.observe();
    return function () {
      observer.unobserve();
    };
  }, [element]);
  return rect;
}

function rectReducer(state, action) {
  var rect = action.rect;

  if (state.height !== rect.height || state.width !== rect.width) {
    return rect;
  }

  return state;
}

var defaultEstimateSize = function defaultEstimateSize() {
  return 50;
};

var defaultKeyExtractor = function defaultKeyExtractor(index) {
  return index;
};

var defaultMeasureSize = function defaultMeasureSize(el, horizontal) {
  var key = horizontal ? 'offsetWidth' : 'offsetHeight';
  return el[key];
};

var defaultRangeExtractor = function defaultRangeExtractor(range) {
  var start = Math.max(range.start - range.overscan, 0);
  var end = Math.min(range.end + range.overscan, range.size - 1);
  var arr = [];

  for (var i = start; i <= end; i++) {
    arr.push(i);
  }

  return arr;
};
function useVirtual(_ref) {
  var _measurements;

  var _ref$size = _ref.size,
      size = _ref$size === void 0 ? 0 : _ref$size,
      _ref$estimateSize = _ref.estimateSize,
      estimateSize = _ref$estimateSize === void 0 ? defaultEstimateSize : _ref$estimateSize,
      _ref$overscan = _ref.overscan,
      overscan = _ref$overscan === void 0 ? 1 : _ref$overscan,
      _ref$paddingStart = _ref.paddingStart,
      paddingStart = _ref$paddingStart === void 0 ? 0 : _ref$paddingStart,
      _ref$paddingEnd = _ref.paddingEnd,
      paddingEnd = _ref$paddingEnd === void 0 ? 0 : _ref$paddingEnd,
      parentRef = _ref.parentRef,
      horizontal = _ref.horizontal,
      scrollToFn = _ref.scrollToFn,
      useObserver = _ref.useObserver,
      initialRect = _ref.initialRect,
      onScrollElement = _ref.onScrollElement,
      scrollOffsetFn = _ref.scrollOffsetFn,
      _ref$keyExtractor = _ref.keyExtractor,
      keyExtractor = _ref$keyExtractor === void 0 ? defaultKeyExtractor : _ref$keyExtractor,
      _ref$measureSize = _ref.measureSize,
      measureSize = _ref$measureSize === void 0 ? defaultMeasureSize : _ref$measureSize,
      _ref$rangeExtractor = _ref.rangeExtractor,
      rangeExtractor = _ref$rangeExtractor === void 0 ? defaultRangeExtractor : _ref$rangeExtractor;
  var sizeKey = horizontal ? 'width' : 'height';
  var scrollKey = horizontal ? 'scrollLeft' : 'scrollTop';
  var latestRef = react.useRef({
    scrollOffset: 0,
    measurements: []
  });

  var _React$useState = react.useState(0),
      scrollOffset = _React$useState[0],
      setScrollOffset = _React$useState[1];

  latestRef.current.scrollOffset = scrollOffset;
  var useMeasureParent = useObserver || useRect;

  var _useMeasureParent = useMeasureParent(parentRef, initialRect),
      outerSize = _useMeasureParent[sizeKey];

  latestRef.current.outerSize = outerSize;
  var defaultScrollToFn = react.useCallback(function (offset) {
    if (parentRef.current) {
      parentRef.current[scrollKey] = offset;
    }
  }, [parentRef, scrollKey]);
  var resolvedScrollToFn = scrollToFn || defaultScrollToFn;
  scrollToFn = react.useCallback(function (offset) {
    resolvedScrollToFn(offset, defaultScrollToFn);
  }, [defaultScrollToFn, resolvedScrollToFn]);

  var _React$useState2 = react.useState({}),
      measuredCache = _React$useState2[0],
      setMeasuredCache = _React$useState2[1];

  var measure = react.useCallback(function () {
    return setMeasuredCache({});
  }, []);
  var pendingMeasuredCacheIndexesRef = react.useRef([]);
  var measurements = react.useMemo(function () {
    var min = pendingMeasuredCacheIndexesRef.current.length > 0 ? Math.min.apply(Math, pendingMeasuredCacheIndexesRef.current) : 0;
    pendingMeasuredCacheIndexesRef.current = [];
    var measurements = latestRef.current.measurements.slice(0, min);

    for (var i = min; i < size; i++) {
      var key = keyExtractor(i);
      var measuredSize = measuredCache[key];

      var _start = measurements[i - 1] ? measurements[i - 1].end : paddingStart;

      var _size = typeof measuredSize === 'number' ? measuredSize : estimateSize(i);

      var _end = _start + _size;

      measurements[i] = {
        index: i,
        start: _start,
        size: _size,
        end: _end,
        key: key
      };
    }

    return measurements;
  }, [estimateSize, measuredCache, paddingStart, size, keyExtractor]);
  var totalSize = (((_measurements = measurements[size - 1]) == null ? void 0 : _measurements.end) || paddingStart) + paddingEnd;
  latestRef.current.measurements = measurements;
  latestRef.current.totalSize = totalSize;
  var element = onScrollElement ? onScrollElement.current : parentRef.current;
  var scrollOffsetFnRef = react.useRef(scrollOffsetFn);
  scrollOffsetFnRef.current = scrollOffsetFn;
  react_virtual_useIsomorphicLayoutEffect(function () {
    if (!element) {
      setScrollOffset(0);
      return;
    }

    var onScroll = function onScroll(event) {
      var offset = scrollOffsetFnRef.current ? scrollOffsetFnRef.current(event) : element[scrollKey];
      setScrollOffset(offset);
    };

    onScroll();
    element.addEventListener('scroll', onScroll, {
      capture: false,
      passive: true
    });
    return function () {
      element.removeEventListener('scroll', onScroll);
    };
  }, [element, scrollKey]);

  var _calculateRange = calculateRange(latestRef.current),
      start = _calculateRange.start,
      end = _calculateRange.end;

  var indexes = react.useMemo(function () {
    return rangeExtractor({
      start: start,
      end: end,
      overscan: overscan,
      size: measurements.length
    });
  }, [start, end, overscan, measurements.length, rangeExtractor]);
  var measureSizeRef = react.useRef(measureSize);
  measureSizeRef.current = measureSize;
  var virtualItems = react.useMemo(function () {
    var virtualItems = [];

    var _loop = function _loop(k, len) {
      var i = indexes[k];
      var measurement = measurements[i];

      var item = react_virtual_extends(react_virtual_extends({}, measurement), {}, {
        measureRef: function measureRef(el) {
          if (el) {
            var measuredSize = measureSizeRef.current(el, horizontal);

            if (measuredSize !== item.size) {
              var _scrollOffset = latestRef.current.scrollOffset;

              if (item.start < _scrollOffset) {
                defaultScrollToFn(_scrollOffset + (measuredSize - item.size));
              }

              pendingMeasuredCacheIndexesRef.current.push(i);
              setMeasuredCache(function (old) {
                var _extends2;

                return react_virtual_extends(react_virtual_extends({}, old), {}, (_extends2 = {}, _extends2[item.key] = measuredSize, _extends2));
              });
            }
          }
        }
      });

      virtualItems.push(item);
    };

    for (var k = 0, len = indexes.length; k < len; k++) {
      _loop(k);
    }

    return virtualItems;
  }, [indexes, defaultScrollToFn, horizontal, measurements]);
  var mountedRef = react.useRef(false);
  react_virtual_useIsomorphicLayoutEffect(function () {
    if (mountedRef.current) {
      setMeasuredCache({});
    }

    mountedRef.current = true;
  }, [estimateSize]);
  var scrollToOffset = react.useCallback(function (toOffset, _temp) {
    var _ref2 = _temp === void 0 ? {} : _temp,
        _ref2$align = _ref2.align,
        align = _ref2$align === void 0 ? 'start' : _ref2$align;

    var _latestRef$current = latestRef.current,
        scrollOffset = _latestRef$current.scrollOffset,
        outerSize = _latestRef$current.outerSize;

    if (align === 'auto') {
      if (toOffset <= scrollOffset) {
        align = 'start';
      } else if (toOffset >= scrollOffset + outerSize) {
        align = 'end';
      } else {
        align = 'start';
      }
    }

    if (align === 'start') {
      scrollToFn(toOffset);
    } else if (align === 'end') {
      scrollToFn(toOffset - outerSize);
    } else if (align === 'center') {
      scrollToFn(toOffset - outerSize / 2);
    }
  }, [scrollToFn]);
  var tryScrollToIndex = react.useCallback(function (index, _temp2) {
    var _ref3 = _temp2 === void 0 ? {} : _temp2,
        _ref3$align = _ref3.align,
        align = _ref3$align === void 0 ? 'auto' : _ref3$align,
        rest = react_virtual_objectWithoutPropertiesLoose(_ref3, ["align"]);

    var _latestRef$current2 = latestRef.current,
        measurements = _latestRef$current2.measurements,
        scrollOffset = _latestRef$current2.scrollOffset,
        outerSize = _latestRef$current2.outerSize;
    var measurement = measurements[Math.max(0, Math.min(index, size - 1))];

    if (!measurement) {
      return;
    }

    if (align === 'auto') {
      if (measurement.end >= scrollOffset + outerSize) {
        align = 'end';
      } else if (measurement.start <= scrollOffset) {
        align = 'start';
      } else {
        return;
      }
    }

    var toOffset = align === 'center' ? measurement.start + measurement.size / 2 : align === 'end' ? measurement.end : measurement.start;
    scrollToOffset(toOffset, react_virtual_extends({
      align: align
    }, rest));
  }, [scrollToOffset, size]);
  var scrollToIndex = react.useCallback(function () {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    // We do a double request here because of
    // dynamic sizes which can cause offset shift
    // and end up in the wrong spot. Unfortunately,
    // we can't know about those dynamic sizes until
    // we try and render them. So double down!
    tryScrollToIndex.apply(void 0, args);
    requestAnimationFrame(function () {
      tryScrollToIndex.apply(void 0, args);
    });
  }, [tryScrollToIndex]);
  return {
    virtualItems: virtualItems,
    totalSize: totalSize,
    scrollToOffset: scrollToOffset,
    scrollToIndex: scrollToIndex,
    measure: measure
  };
}

var findNearestBinarySearch = function findNearestBinarySearch(low, high, getCurrentValue, value) {
  while (low <= high) {
    var middle = (low + high) / 2 | 0;
    var currentValue = getCurrentValue(middle);

    if (currentValue < value) {
      low = middle + 1;
    } else if (currentValue > value) {
      high = middle - 1;
    } else {
      return middle;
    }
  }

  if (low > 0) {
    return low - 1;
  } else {
    return 0;
  }
};

function calculateRange(_ref4) {
  var measurements = _ref4.measurements,
      outerSize = _ref4.outerSize,
      scrollOffset = _ref4.scrollOffset;
  var size = measurements.length - 1;

  var getOffset = function getOffset(index) {
    return measurements[index].start;
  };

  var start = findNearestBinarySearch(0, size, getOffset, scrollOffset);
  var end = start;

  while (end < size && measurements[end].end < scrollOffset + outerSize) {
    end++;
  }

  return {
    start: start,
    end: end
  };
}


//# sourceMappingURL=react-virtual.mjs.map

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/components/option/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/components/option/styles.css.js


    /* harmony default export */ const option_styles_css = ({
  "option": "awsui_option_1p2cx_1tubf_97",
  "disabled": "awsui_disabled_1p2cx_1tubf_113",
  "parent": "awsui_parent_1p2cx_1tubf_116",
  "content": "awsui_content_1p2cx_1tubf_123",
  "label-content": "awsui_label-content_1p2cx_1tubf_130",
  "label": "awsui_label_1p2cx_1tubf_130",
  "tag": "awsui_tag_1p2cx_1tubf_137",
  "label-tag": "awsui_label-tag_1p2cx_1tubf_138",
  "label-prefix": "awsui_label-prefix_1p2cx_1tubf_149",
  "tags": "awsui_tags_1p2cx_1tubf_162",
  "description": "awsui_description_1p2cx_1tubf_163",
  "icon": "awsui_icon_1p2cx_1tubf_180",
  "icon-size-big": "awsui_icon-size-big_1p2cx_1tubf_187",
  "filtering-match-highlight": "awsui_filtering-match-highlight_1p2cx_1tubf_191",
  "trigger-variant": "awsui_trigger-variant_1p2cx_1tubf_206"
});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/components/option/highlight-match.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0



var splitOnFiltering = function (str, highlightText) {
    // Filtering needs to be case insensitive
    var filteringPattern = highlightText.replace(/[-[\]/{}()*+?.\\^$|]/g, '\\$&');
    var regexp = new RegExp(filteringPattern, 'gi');
    var noMatches = str.split(regexp);
    var matches = str.match(regexp);
    return { noMatches: noMatches, matches: matches };
};
var Highlight = function (_a) {
    var str = _a.str;
    return str ? react.createElement("span", { className: clsx_m(option_styles_css["filtering-match-highlight"]) }, str) : null;
};
function HighlightMatch(_a) {
    var str = _a.str, highlightText = _a.highlightText;
    if (!str || !highlightText) {
        return react.createElement(react.Fragment, null, str);
    }
    if (str === highlightText) {
        return react.createElement(Highlight, { str: str });
    }
    var _b = splitOnFiltering(str, highlightText), noMatches = _b.noMatches, matches = _b.matches;
    var highlighted = [];
    noMatches.forEach(function (noMatch, idx) {
        highlighted.push(noMatch);
        if (matches && idx < matches.length) {
            highlighted.push(react.createElement(Highlight, { key: idx, str: matches[idx] }));
        }
    });
    return react.createElement("span", null, highlighted);
}
//# sourceMappingURL=highlight-match.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/components/option/option-parts.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0





var Label = function (_a) {
    var label = _a.label, prefix = _a.prefix, highlightText = _a.highlightText, triggerVariant = _a.triggerVariant;
    return (react.createElement("span", { className: clsx_m(option_styles_css.label, triggerVariant && option_styles_css["trigger-variant"]) },
        prefix && (react.createElement("span", { className: clsx_m(option_styles_css["label-prefix"], triggerVariant && option_styles_css["trigger-variant"]) },
            prefix,
            " ")),
        react.createElement(HighlightMatch, { str: label, highlightText: highlightText })));
};
var LabelTag = function (_a) {
    var labelTag = _a.labelTag, highlightText = _a.highlightText, triggerVariant = _a.triggerVariant;
    return labelTag ? (react.createElement("span", { className: clsx_m(option_styles_css["label-tag"], triggerVariant && option_styles_css["trigger-variant"]) },
        react.createElement(HighlightMatch, { str: labelTag, highlightText: highlightText }))) : null;
};
var Description = function (_a) {
    var description = _a.description, highlightText = _a.highlightText, triggerVariant = _a.triggerVariant;
    return description ? (
    // We do not reach AA compliance in Dark mode for highlighted state
    // TODO: Remove aria-disabled={true} when we fix AWSUI-10333
    react.createElement("span", { className: clsx_m(option_styles_css.description, triggerVariant && option_styles_css["trigger-variant"]), "aria-disabled": true },
        react.createElement(HighlightMatch, { str: description, highlightText: highlightText }))) : null;
};
var Tags = function (_a) {
    var tags = _a.tags, highlightText = _a.highlightText, triggerVariant = _a.triggerVariant;
    return tags ? (react.createElement("span", { className: clsx_m(option_styles_css.tags) }, tags.map(function (tag, idx) { return (
    // We do not reach AA compliance in Dark mode for highlighted state
    // TODO: Remove aria-disabled={true} when we fix AWSUI-10333
    react.createElement("span", { key: idx, className: clsx_m(option_styles_css.tag, triggerVariant && option_styles_css["trigger-variant"]), "aria-disabled": true },
        react.createElement(HighlightMatch, { str: tag, highlightText: highlightText }))); }))) : null;
};
var FilteringTags = function (_a) {
    var filteringTags = _a.filteringTags, highlightText = _a.highlightText, triggerVariant = _a.triggerVariant;
    if (!highlightText || !filteringTags) {
        return null;
    }
    var searchElement = highlightText.toLowerCase();
    return (react.createElement("span", { className: clsx_m(option_styles_css.tags) }, filteringTags.map(function (filteringTag, key) {
        var match = filteringTag.toLowerCase().indexOf(searchElement) !== -1;
        if (match) {
            return (
            // We do not reach AA compliance in Dark mode for highlighted state
            // TODO: Remove aria-disabled={true} when we fix AWSUI-10333
            react.createElement("span", { className: clsx_m(option_styles_css.tag, triggerVariant && option_styles_css["trigger-variant"]), key: key, "aria-disabled": true },
                react.createElement(HighlightMatch, { str: filteringTag, highlightText: highlightText })));
        }
        return null;
    })));
};
var OptionIcon = function (props) {
    if (!props.name && !props.url && !props.svg) {
        return null;
    }
    return (react.createElement("span", { className: clsx_m(option_styles_css.icon, props.size === 'big' && [option_styles_css["icon-size-big"]]) },
        react.createElement(internal, tslib_es6_assign({}, props))));
};
//# sourceMappingURL=option-parts.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/components/option/index.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0







function validateStringValue(value, propertyName) {
    if (typeof value !== 'undefined' && typeof value !== 'string') {
        logging_warnOnce('DropdownOption', "This component only supports string values, but \"option.".concat(propertyName, "\" has ").concat(typeof value, " type. The component may work incorrectly."));
    }
}
var Option = function (_a) {
    var _b, _c, _d, _e;
    var option = _a.option, highlightText = _a.highlightText, _f = _a.triggerVariant, triggerVariant = _f === void 0 ? false : _f, _g = _a.isGroupOption, isGroupOption = _g === void 0 ? false : _g, restProps = __rest(_a, ["option", "highlightText", "triggerVariant", "isGroupOption"]);
    if (!option) {
        return null;
    }
    var disabled = option.disabled;
    var baseProps = getBaseProps(restProps);
    if (isDevelopment) {
        validateStringValue(option.label, 'label');
        validateStringValue(option.description, 'description');
        validateStringValue(option.labelTag, 'labelTag');
        (_b = option.tags) === null || _b === void 0 ? void 0 : _b.forEach(function (tag, index) {
            validateStringValue(tag, "tags[".concat(index, "]"));
        });
        (_c = option.filteringTags) === null || _c === void 0 ? void 0 : _c.forEach(function (tag, index) {
            validateStringValue(tag, "filteringTags[".concat(index, "]"));
        });
    }
    var className = clsx_m(option_styles_css.option, disabled && option_styles_css.disabled, isGroupOption && option_styles_css.parent);
    var icon = option.__customIcon || (react.createElement(OptionIcon, { name: option.iconName, url: option.iconUrl, svg: option.iconSvg, alt: option.iconAlt, size: option.description || option.tags ? 'big' : 'normal' }));
    return (react.createElement("span", tslib_es6_assign({ title: (_d = option.label) !== null && _d !== void 0 ? _d : option.value, "data-value": option.value, className: className, "aria-disabled": disabled }, baseProps),
        icon,
        react.createElement("span", { className: clsx_m(option_styles_css.content) },
            react.createElement("span", { className: clsx_m(option_styles_css["label-content"]) },
                react.createElement(Label, { label: (_e = option.label) !== null && _e !== void 0 ? _e : option.value, prefix: option.__labelPrefix, highlightText: highlightText, triggerVariant: triggerVariant }),
                react.createElement(LabelTag, { labelTag: option.labelTag, highlightText: highlightText, triggerVariant: triggerVariant })),
            react.createElement(Description, { description: option.description, highlightText: highlightText, triggerVariant: triggerVariant }),
            react.createElement(Tags, { tags: option.tags, highlightText: highlightText, triggerVariant: triggerVariant }),
            react.createElement(FilteringTags, { filteringTags: option.filteringTags, highlightText: highlightText, triggerVariant: triggerVariant }))));
};
/* harmony default export */ const components_option = (Option);
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/components/selectable-item/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/components/selectable-item/styles.css.js


    /* harmony default export */ const selectable_item_styles_css = ({
  "selectable-item": "awsui_selectable-item_15o6u_1g6vu_93",
  "pad-bottom": "awsui_pad-bottom_15o6u_1g6vu_113",
  "has-background": "awsui_has-background_15o6u_1g6vu_122",
  "highlighted": "awsui_highlighted_15o6u_1g6vu_125",
  "selected": "awsui_selected_15o6u_1g6vu_125",
  "disabled": "awsui_disabled_15o6u_1g6vu_139",
  "next-item-selected": "awsui_next-item-selected_15o6u_1g6vu_147",
  "is-keyboard": "awsui_is-keyboard_15o6u_1g6vu_155",
  "parent": "awsui_parent_15o6u_1g6vu_159",
  "interactiveGroups": "awsui_interactiveGroups_15o6u_1g6vu_163",
  "child": "awsui_child_15o6u_1g6vu_175",
  "virtual": "awsui_virtual_15o6u_1g6vu_190",
  "measure-strut": "awsui_measure-strut_15o6u_1g6vu_201",
  "measure-strut-first": "awsui_measure-strut-first_15o6u_1g6vu_210",
  "screenreader-content": "awsui_screenreader-content_15o6u_1g6vu_214",
  "option-content": "awsui_option-content_15o6u_1g6vu_220"
});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/components/selectable-item/index.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0




var SelectableItem = function (_a, ref) {
    var _b;
    var content = _a.children, ariaSelected = _a.ariaSelected, ariaChecked = _a.ariaChecked, selected = _a.selected, highlighted = _a.highlighted, disabled = _a.disabled, hasBackground = _a.hasBackground, isParent = _a.isParent, isChild = _a.isChild, virtualPosition = _a.virtualPosition, padBottom = _a.padBottom, isNextSelected = _a.isNextSelected, useInteractiveGroups = _a.useInteractiveGroups, screenReaderContent = _a.screenReaderContent, ariaPosinset = _a.ariaPosinset, ariaSetsize = _a.ariaSetsize, highlightType = _a.highlightType, restProps = __rest(_a, ["children", "ariaSelected", "ariaChecked", "selected", "highlighted", "disabled", "hasBackground", "isParent", "isChild", "virtualPosition", "padBottom", "isNextSelected", "useInteractiveGroups", "screenReaderContent", "ariaPosinset", "ariaSetsize", "highlightType"]);
    var _c = getBaseProps(restProps), className = _c.className, rest = __rest(_c, ["className"]);
    var classNames = clsx_m(className, selectable_item_styles_css["selectable-item"], (_b = {},
        _b[selectable_item_styles_css.selected] = selected,
        _b[selectable_item_styles_css.highlighted] = highlighted,
        _b[selectable_item_styles_css["has-background"]] = hasBackground,
        _b[selectable_item_styles_css.parent] = isParent,
        _b[selectable_item_styles_css.child] = isChild,
        _b[selectable_item_styles_css["is-keyboard"]] = highlightType === 'keyboard',
        _b[selectable_item_styles_css.disabled] = disabled,
        _b[selectable_item_styles_css.virtual] = virtualPosition !== undefined,
        _b[selectable_item_styles_css["pad-bottom"]] = padBottom,
        _b[selectable_item_styles_css["next-item-selected"]] = isNextSelected,
        _b[selectable_item_styles_css.interactiveGroups] = useInteractiveGroups,
        _b));
    var contentRef = (0,react.useRef)(null);
    var screenReaderContentRef = (0,react.useRef)(null);
    (0,react.useLayoutEffect)(function () {
        // the state of aria-hidden and announcement is not set back because NVDA+Firefox would announce
        // the item which lost highlight
        // set aria-hidden true when there is announcement content, so that screen reader still announce
        // meaningful content when navigate with screen reader cursor
        // imperatively update to avoid announcement made multiple times when content updates
        if (highlighted && screenReaderContent) {
            if (contentRef.current) {
                contentRef.current.setAttribute('aria-hidden', 'true');
            }
            if (screenReaderContentRef.current) {
                screenReaderContentRef.current.textContent = screenReaderContent;
            }
        }
    }, [highlighted, screenReaderContent, contentRef, screenReaderContentRef]);
    var style = virtualPosition !== undefined
        ? {
            transform: "translateY(".concat(virtualPosition, "px)")
        }
        : undefined;
    var a11yProperties = {
        'aria-disabled': disabled
    };
    if (isParent && !useInteractiveGroups) {
        a11yProperties['aria-hidden'] = true;
    }
    if (ariaSelected !== undefined) {
        a11yProperties['aria-selected'] = ariaSelected;
    }
    // Safari+VO needs aria-checked for multi-selection. Otherwise it only announces selected option even though another option is highlighted.
    if (ariaChecked !== undefined) {
        a11yProperties['aria-checked'] = ariaChecked;
    }
    if (ariaPosinset && ariaSetsize) {
        a11yProperties['aria-posinset'] = ariaPosinset;
        a11yProperties['aria-setsize'] = ariaSetsize;
    }
    return (react.createElement("li", tslib_es6_assign({ role: "option", className: classNames, style: style }, a11yProperties, rest),
        react.createElement("div", { className: selectable_item_styles_css["option-content"], ref: contentRef }, content),
        react.createElement("div", { className: selectable_item_styles_css["measure-strut"], ref: ref }),
        react.createElement("div", { className: selectable_item_styles_css["screenreader-content"], ref: screenReaderContentRef })));
};
/* harmony default export */ const selectable_item = (react.forwardRef(SelectableItem));
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/autosuggest/autosuggest-option.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0






var AutosuggestOption = function (_a, ref) {
    var _b = _a.nativeAttributes, nativeAttributes = _b === void 0 ? {} : _b, highlightText = _a.highlightText, option = _a.option, highlighted = _a.highlighted, highlightType = _a.highlightType, enteredTextLabel = _a.enteredTextLabel, virtualPosition = _a.virtualPosition, padBottom = _a.padBottom, screenReaderContent = _a.screenReaderContent, ariaSetsize = _a.ariaSetsize, ariaPosinset = _a.ariaPosinset, rest = __rest(_a, ["nativeAttributes", "highlightText", "option", "highlighted", "highlightType", "enteredTextLabel", "virtualPosition", "padBottom", "screenReaderContent", "ariaSetsize", "ariaPosinset"]);
    var baseProps = getBaseProps(rest);
    var useEntered = 'type' in option && option.type === 'use-entered';
    var isParent = 'type' in option && option.type === 'parent';
    var isChild = 'type' in option && option.type === 'child';
    var _c = getTestOptionIndexes(option) || {}, throughIndex = _c.throughIndex, inGroupIndex = _c.inGroupIndex, groupIndex = _c.groupIndex;
    var optionContent;
    if (useEntered) {
        optionContent = enteredTextLabel(option.value || '');
    }
    else if (isParent) {
        optionContent = option.label;
    }
    else {
        var a11yProperties = {};
        if (nativeAttributes['aria-label']) {
            a11yProperties['aria-label'] = nativeAttributes['aria-label'];
        }
        optionContent = (react.createElement("div", tslib_es6_assign({}, a11yProperties),
            react.createElement(components_option, { option: option, highlightText: highlightText })));
    }
    return (react.createElement(selectable_item, tslib_es6_assign({}, baseProps, { className: autosuggest_styles_css.option, ariaSelected: highlighted, highlighted: highlighted, disabled: option.disabled, hasBackground: useEntered, isParent: isParent, isChild: isChild, virtualPosition: virtualPosition, "data-test-index": throughIndex, "data-in-group-index": inGroupIndex, "data-group-index": groupIndex, ref: ref, padBottom: padBottom, screenReaderContent: screenReaderContent, ariaSetsize: ariaSetsize, ariaPosinset: ariaPosinset, highlightType: highlightType }), optionContent));
};
/* harmony default export */ const autosuggest_option = (react.memo(react.forwardRef(AutosuggestOption)));
//# sourceMappingURL=autosuggest-option.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/autosuggest/plain-list.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0






var getOptionProps = function (index, item, filteredItems, highlightedA11yProps, highlightedOption, hasDropdownStatus) {
    var nativeAttributes = item === highlightedOption ? highlightedA11yProps : {};
    var baseOptionProps = getBaseProps(nativeAttributes);
    var isLastItem = index === filteredItems.length - 1;
    var isNotEnteredTextItem = filteredItems.length > 1;
    var padBottom = !hasDropdownStatus && isNotEnteredTextItem && isLastItem;
    return tslib_es6_assign({ nativeAttributes: nativeAttributes, padBottom: padBottom }, baseOptionProps);
};
var PlainList = function (_a) {
    var autosuggestItemsState = _a.autosuggestItemsState, handleLoadMore = _a.handleLoadMore, menuProps = _a.menuProps, enteredTextLabel = _a.enteredTextLabel, highlightedA11yProps = _a.highlightedA11yProps, hasDropdownStatus = _a.hasDropdownStatus, highlightText = _a.highlightText, listBottom = _a.listBottom, screenReaderContent = _a.screenReaderContent;
    var listRef = (0,react.useRef)(null);
    (0,react.useEffect)(function () {
        var _a;
        var item = (_a = listRef.current) === null || _a === void 0 ? void 0 : _a.querySelector("[data-mouse-target=\"".concat(autosuggestItemsState.highlightedIndex, "\"]"));
        if (autosuggestItemsState.highlightType === 'keyboard' && item) {
            scrollElementIntoView(item);
        }
    }, [autosuggestItemsState.highlightType, autosuggestItemsState.highlightedIndex]);
    return (react.createElement(options_list, tslib_es6_assign({}, menuProps, { onLoadMore: handleLoadMore, open: true, ref: listRef,
        // to prevent closing the list when clicking the scrollbar on IE11
        nativeAttributes: { unselectable: 'on' } }),
        autosuggestItemsState.items.map(function (item, index) {
            var optionProps = getOptionProps(index, item, autosuggestItemsState.items, highlightedA11yProps, autosuggestItemsState.highlightedOption, hasDropdownStatus);
            return (react.createElement(autosuggest_option, tslib_es6_assign({ highlightText: highlightText, option: item, highlighted: item === autosuggestItemsState.highlightedOption, key: index, "data-mouse-target": index, enteredTextLabel: enteredTextLabel, screenReaderContent: screenReaderContent, highlightType: autosuggestItemsState.highlightType }, optionProps)));
        }),
        listBottom ? (react.createElement("li", { role: "option", className: autosuggest_styles_css["list-bottom"] }, listBottom)) : null));
};
/* harmony default export */ const plain_list = (PlainList);
//# sourceMappingURL=plain-list.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/autosuggest/virtual-list.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0







var VirtualList = function (_a) {
    var autosuggestItemsState = _a.autosuggestItemsState, handleLoadMore = _a.handleLoadMore, menuProps = _a.menuProps, enteredTextLabel = _a.enteredTextLabel, highlightedA11yProps = _a.highlightedA11yProps, hasDropdownStatus = _a.hasDropdownStatus, highlightText = _a.highlightText, listBottom = _a.listBottom, screenReaderContent = _a.screenReaderContent;
    var scrollRef = (0,react.useRef)(null);
    // update component, when it gets wider or narrower to reposition items
    var _b = useContainerQuery(function (rect) { return rect.width; }, []), width = _b[0], strutRef = _b[1];
    (0,react.useImperativeHandle)(strutRef, function () { return scrollRef.current; });
    var rowVirtualizer = useVirtual({
        size: autosuggestItemsState.items.length,
        parentRef: scrollRef,
        // estimateSize is a dependency of measurements memo. We update it to force full recalculation
        // when the height of any option could have changed:
        // 1: because the component got resized (width property got updated)
        // 2: becasue the option changed its content (highlightText property controls the highlight and the visibility of hidden tags)
        // eslint-disable-next-line react-hooks/exhaustive-deps
        estimateSize: (0,react.useCallback)(function () { return 31; }, [width, highlightText]),
        overscan: 5
    });
    (0,react.useEffect)(function () {
        if (autosuggestItemsState.highlightType === 'keyboard') {
            rowVirtualizer.scrollToIndex(autosuggestItemsState.highlightedIndex);
        }
    }, [autosuggestItemsState.highlightType, autosuggestItemsState.highlightedIndex, rowVirtualizer]);
    return (react.createElement(options_list, tslib_es6_assign({}, menuProps, { onLoadMore: handleLoadMore, ref: scrollRef, open: true,
        // to prevent closing the list when clicking the scrollbar on IE11
        nativeAttributes: { unselectable: 'on' } }),
        react.createElement("div", { "aria-hidden": "true", key: "total-size", className: autosuggest_styles_css["layout-strut"], style: { height: rowVirtualizer.totalSize + (autosuggestItemsState.items.length === 1 ? 1 : 0) } }),
        rowVirtualizer.virtualItems.map(function (virtualRow) {
            var index = virtualRow.index, start = virtualRow.start, measureRef = virtualRow.measureRef;
            var item = autosuggestItemsState.items[index];
            var optionProps = getOptionProps(index, item, autosuggestItemsState.items, highlightedA11yProps, autosuggestItemsState.highlightedOption, hasDropdownStatus);
            return (react.createElement(autosuggest_option, tslib_es6_assign({ key: index, ref: measureRef, highlightText: highlightText, option: item, highlighted: item === autosuggestItemsState.highlightedOption, "data-mouse-target": index, enteredTextLabel: enteredTextLabel, virtualPosition: start + (index === 0 ? 1 : 0), screenReaderContent: screenReaderContent, ariaSetsize: autosuggestItemsState.items.length, ariaPosinset: index + 1, highlightType: autosuggestItemsState.highlightType }, optionProps)));
        }),
        listBottom ? (react.createElement("li", { role: "option", className: autosuggest_styles_css["list-bottom"] }, listBottom)) : null));
};
/* harmony default export */ const virtual_list = (VirtualList);
//# sourceMappingURL=virtual-list.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/components/option/option-announcer.js
function defaultOptionDescription(option, parentGroup) {
    return [
        parentGroup && parentGroup.label,
        option.__labelPrefix,
        option.label || option.value,
        option.description,
        option.labelTag,
    ]
        .concat(option.tags)
        .filter(function (el) { return !!el; })
        .join(' ');
}
/* harmony default export */ const option_announcer = (defaultOptionDescription);
//# sourceMappingURL=option-announcer.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/select/utils/use-announcement.js


/**
 * The hook produces the live region string to be announced when an option is highlighted.
 * This is a workaround to account for the issues with assistive technologies.
 *
 * If the testing reveals no issues with the native announcements the live-region can be removed.
 */
function useAnnouncement(_a) {
    var announceSelected = _a.announceSelected, highlightedOption = _a.highlightedOption, getParent = _a.getParent, selectedAriaLabel = _a.selectedAriaLabel, renderHighlightedAriaLive = _a.renderHighlightedAriaLive;
    var prevAnnouncedGroup = (0,react.useRef)(undefined);
    // Record previously announced group with a delay to account for possible re-renders of the hook.
    (0,react.useEffect)(function () {
        if (highlightedOption) {
            var frameId_1 = requestAnimationFrame(function () {
                prevAnnouncedGroup.current = getParent(highlightedOption);
            });
            return function () { return cancelAnimationFrame(frameId_1); };
        }
    });
    if (!highlightedOption) {
        return '';
    }
    var option = highlightedOption.option;
    var parent = getParent(highlightedOption);
    // Only announce parent group if it wasn't announced with previous option.
    var group = parent && parent !== prevAnnouncedGroup.current ? parent : undefined;
    // Use custom renderer if provided.
    if (renderHighlightedAriaLive) {
        return renderHighlightedAriaLive(option, group);
    }
    // Use default renderer with selected ARIA label if defined and relevant.
    var selectedAnnouncement = announceSelected && selectedAriaLabel ? selectedAriaLabel : '';
    var defaultDescription = option_announcer(option, group);
    return [selectedAnnouncement, defaultDescription].filter(Boolean).join(' ');
}
//# sourceMappingURL=use-announcement.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/autosuggest/options-list.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0





var createMouseEventHandler = function (handler) { return function (itemIndex) {
    // prevent mouse events to avoid losing focus from the input
    if (itemIndex > -1) {
        handler(itemIndex);
    }
}; };
function AutosuggestOptionsList(_a) {
    var autosuggestItemsState = _a.autosuggestItemsState, autosuggestItemsHandlers = _a.autosuggestItemsHandlers, highlightedOptionId = _a.highlightedOptionId, highlightText = _a.highlightText, listId = _a.listId, controlId = _a.controlId, enteredTextLabel = _a.enteredTextLabel, handleLoadMore = _a.handleLoadMore, hasDropdownStatus = _a.hasDropdownStatus, virtualScroll = _a.virtualScroll, selectedAriaLabel = _a.selectedAriaLabel, renderHighlightedAriaLive = _a.renderHighlightedAriaLive, listBottom = _a.listBottom;
    var handleMouseUp = createMouseEventHandler(autosuggestItemsHandlers.selectVisibleOptionWithMouse);
    var handleMouseMove = createMouseEventHandler(autosuggestItemsHandlers.highlightVisibleOptionWithMouse);
    var ListComponent = virtualScroll ? virtual_list : plain_list;
    var announcement = useAnnouncement({
        announceSelected: true,
        highlightedOption: autosuggestItemsState.highlightedOption,
        getParent: function (option) { var _a; return (_a = getParentGroup(option)) === null || _a === void 0 ? void 0 : _a.option; },
        selectedAriaLabel: selectedAriaLabel,
        renderHighlightedAriaLive: renderHighlightedAriaLive
    });
    return (react.createElement(ListComponent, { listBottom: listBottom, handleLoadMore: handleLoadMore, autosuggestItemsState: autosuggestItemsState, highlightText: highlightText, enteredTextLabel: enteredTextLabel, highlightedA11yProps: highlightedOptionId ? { id: highlightedOptionId } : {}, hasDropdownStatus: hasDropdownStatus, menuProps: { id: listId, ariaLabelledby: controlId, onMouseUp: handleMouseUp, onMouseMove: handleMouseMove }, screenReaderContent: announcement }));
}
//# sourceMappingURL=options-list.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/autosuggest/load-more-controller.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

var useAutosuggestLoadMore = function (_a) {
    var _b = _a.options, options = _b === void 0 ? [] : _b, statusType = _a.statusType, onLoadItems = _a.onLoadItems;
    var lastFilteringText = (0,react.useRef)(null);
    var fireLoadMore = function (_a) {
        var _b;
        var firstPage = _a.firstPage, samePage = _a.samePage, filteringText = _a.filteringText;
        if (filteringText === undefined || lastFilteringText.current !== filteringText) {
            if (filteringText !== undefined) {
                lastFilteringText.current = filteringText;
            }
            onLoadItems({ filteringText: (_b = lastFilteringText.current) !== null && _b !== void 0 ? _b : '', firstPage: firstPage, samePage: samePage });
        }
    };
    var fireLoadMoreOnScroll = function () {
        options.length > 0 && statusType === 'pending' && fireLoadMore({ firstPage: false, samePage: false });
    };
    var fireLoadMoreOnRecoveryClick = function () { return fireLoadMore({ firstPage: false, samePage: true }); };
    var fireLoadMoreOnInputFocus = function () { return fireLoadMore({ firstPage: true, samePage: false, filteringText: '' }); };
    var fireLoadMoreOnInputChange = function (filteringText) {
        return fireLoadMore({ firstPage: true, samePage: false, filteringText: filteringText });
    };
    return { fireLoadMoreOnScroll: fireLoadMoreOnScroll, fireLoadMoreOnRecoveryClick: fireLoadMoreOnRecoveryClick, fireLoadMoreOnInputFocus: fireLoadMoreOnInputFocus, fireLoadMoreOnInputChange: fireLoadMoreOnInputChange };
};
//# sourceMappingURL=load-more-controller.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/components/autosuggest-input/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/components/autosuggest-input/styles.css.js


    /* harmony default export */ const autosuggest_input_styles_css = ({
  "dropdown-footer": "awsui_dropdown-footer_vm8qf_jxdvh_5",
  "dropdown-content": "awsui_dropdown-content_vm8qf_jxdvh_10"
});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/components/autosuggest-input/index.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0










var AutosuggestInput = react.forwardRef(function (_a, ref) {
    var value = _a.value, onChange = _a.onChange, onBlur = _a.onBlur, onFocus = _a.onFocus, onKeyUp = _a.onKeyUp, onKeyDown = _a.onKeyDown, name = _a.name, placeholder = _a.placeholder, disabled = _a.disabled, readOnly = _a.readOnly, autoFocus = _a.autoFocus, ariaLabel = _a.ariaLabel, ariaRequired = _a.ariaRequired, _b = _a.disableBrowserAutocorrect, disableBrowserAutocorrect = _b === void 0 ? false : _b, expandToViewport = _a.expandToViewport, ariaControls = _a.ariaControls, ariaActivedescendant = _a.ariaActivedescendant, _c = _a.dropdownExpanded, dropdownExpanded = _c === void 0 ? true : _c, dropdownContentKey = _a.dropdownContentKey, _d = _a.dropdownContentFocusable, dropdownContentFocusable = _d === void 0 ? false : _d, _e = _a.dropdownContent, dropdownContent = _e === void 0 ? null : _e, _f = _a.dropdownFooter, dropdownFooter = _f === void 0 ? null : _f, dropdownWidth = _a.dropdownWidth, loopFocus = _a.loopFocus, onCloseDropdown = _a.onCloseDropdown, onDelayedInput = _a.onDelayedInput, onPressArrowDown = _a.onPressArrowDown, onPressArrowUp = _a.onPressArrowUp, onPressEnter = _a.onPressEnter, __internalRootRef = _a.__internalRootRef, restProps = __rest(_a, ["value", "onChange", "onBlur", "onFocus", "onKeyUp", "onKeyDown", "name", "placeholder", "disabled", "readOnly", "autoFocus", "ariaLabel", "ariaRequired", "disableBrowserAutocorrect", "expandToViewport", "ariaControls", "ariaActivedescendant", "dropdownExpanded", "dropdownContentKey", "dropdownContentFocusable", "dropdownContent", "dropdownFooter", "dropdownWidth", "loopFocus", "onCloseDropdown", "onDelayedInput", "onPressArrowDown", "onPressArrowUp", "onPressEnter", "__internalRootRef"]);
    var baseProps = getBaseProps(restProps);
    var formFieldContext = useFormFieldContext(restProps);
    var inputRef = (0,react.useRef)(null);
    var dropdownContentRef = (0,react.useRef)(null);
    var dropdownFooterRef = (0,react.useRef)(null);
    var preventOpenOnFocusRef = (0,react.useRef)(false);
    var preventCloseOnBlurRef = (0,react.useRef)(false);
    var _g = (0,react.useState)(false), open = _g[0], setOpen = _g[1];
    var openDropdown = function () { return !readOnly && setOpen(true); };
    var closeDropdown = function () {
        setOpen(false);
        fireNonCancelableEvent(onCloseDropdown, null);
    };
    (0,react.useImperativeHandle)(ref, function () { return ({
        focus: function (options) {
            var _a;
            if (options === null || options === void 0 ? void 0 : options.preventDropdown) {
                preventOpenOnFocusRef.current = true;
            }
            (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.focus();
        },
        select: function () {
            var _a;
            (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.select();
        },
        open: openDropdown,
        close: closeDropdown
    }); });
    var handleBlur = function () {
        if (!preventCloseOnBlurRef.current) {
            closeDropdown();
            fireNonCancelableEvent(onBlur, null);
        }
    };
    var handleFocus = function () {
        if (!preventOpenOnFocusRef.current) {
            openDropdown();
            fireNonCancelableEvent(onFocus, null);
        }
        preventOpenOnFocusRef.current = false;
    };
    var handleKeyDown = function (e) {
        switch (e.detail.keyCode) {
            case KeyCode.down: {
                onPressArrowDown === null || onPressArrowDown === void 0 ? void 0 : onPressArrowDown();
                openDropdown();
                e.preventDefault();
                break;
            }
            case KeyCode.up: {
                onPressArrowUp === null || onPressArrowUp === void 0 ? void 0 : onPressArrowUp();
                openDropdown();
                e.preventDefault();
                break;
            }
            case KeyCode.enter: {
                if (open) {
                    if (!(onPressEnter === null || onPressEnter === void 0 ? void 0 : onPressEnter())) {
                        closeDropdown();
                    }
                    e.preventDefault();
                }
                fireCancelableEvent(onKeyDown, e.detail);
                break;
            }
            case KeyCode.escape: {
                if (open) {
                    closeDropdown();
                }
                else if (value) {
                    fireNonCancelableEvent(onChange, { value: '' });
                }
                e.preventDefault();
                fireCancelableEvent(onKeyDown, e.detail);
                break;
            }
            default: {
                fireCancelableEvent(onKeyDown, e.detail);
            }
        }
    };
    var handleChange = function (value) {
        openDropdown();
        fireNonCancelableEvent(onChange, { value: value });
    };
    var handleDelayedInput = function (value) {
        fireNonCancelableEvent(onDelayedInput, { value: value });
    };
    var handleDropdownMouseDown = function (event) {
        // Prevent currently focused element from losing focus.
        if (!dropdownContentFocusable) {
            event.preventDefault();
        }
        // Prevent closing dropdown on click inside.
        else {
            preventCloseOnBlurRef.current = true;
            requestAnimationFrame(function () {
                preventCloseOnBlurRef.current = false;
            });
        }
    };
    var expanded = open && dropdownExpanded;
    var nativeAttributes = {
        name: name,
        placeholder: placeholder,
        autoFocus: autoFocus,
        onClick: openDropdown,
        role: 'combobox',
        'aria-autocomplete': 'list',
        'aria-expanded': expanded,
        'aria-controls': open ? ariaControls : undefined,
        // 'aria-owns' needed for safari+vo to announce activedescendant content
        'aria-owns': open ? ariaControls : undefined,
        'aria-label': ariaLabel,
        'aria-activedescendant': ariaActivedescendant
    };
    // Closes dropdown when outside click is detected.
    // Similar to the internal dropdown implementation but includes the target as well.
    (0,react.useEffect)(function () {
        if (!open) {
            return;
        }
        var clickListener = function (event) {
            var _a, _b, _c;
            if (!((_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.contains(event.target)) &&
                !((_b = dropdownContentRef.current) === null || _b === void 0 ? void 0 : _b.contains(event.target)) &&
                !((_c = dropdownFooterRef.current) === null || _c === void 0 ? void 0 : _c.contains(event.target))) {
                closeDropdown();
            }
        };
        window.addEventListener('mousedown', clickListener);
        return function () {
            window.removeEventListener('mousedown', clickListener);
        };
        // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [open]);
    return (react.createElement("div", tslib_es6_assign({}, baseProps, { className: clsx_m(baseProps.className, autosuggest_input_styles_css.root), ref: __internalRootRef }),
        react.createElement(dropdown, { minWidth: dropdownWidth, stretchWidth: !dropdownWidth, contentKey: dropdownContentKey, onFocus: handleFocus, onBlur: handleBlur, trigger: react.createElement(input_internal, tslib_es6_assign({ type: "visualSearch", value: value, onChange: function (event) { return handleChange(event.detail.value); }, __onDelayedInput: function (event) { return handleDelayedInput(event.detail.value); }, onKeyDown: handleKeyDown, onKeyUp: onKeyUp, disabled: disabled, disableBrowserAutocorrect: disableBrowserAutocorrect, readOnly: readOnly, ariaRequired: ariaRequired, ref: inputRef, autoComplete: false, __nativeAttributes: nativeAttributes }, formFieldContext)), onMouseDown: handleDropdownMouseDown, open: open, footer: dropdownFooterRef && (react.createElement("div", { ref: dropdownFooterRef, className: autosuggest_input_styles_css["dropdown-footer"] }, dropdownFooter)), expandToViewport: expandToViewport, loopFocus: loopFocus }, open && dropdownContent ? (react.createElement("div", { ref: dropdownContentRef, className: autosuggest_input_styles_css["dropdown-content"] }, dropdownContent)) : null)));
});
/* harmony default export */ const autosuggest_input = (AutosuggestInput);
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/autosuggest/internal.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0















var InternalAutosuggest = react.forwardRef(function (props, ref) {
    var _a;
    var value = props.value, onChange = props.onChange, onBlur = props.onBlur, onFocus = props.onFocus, onKeyUp = props.onKeyUp, onLoadItems = props.onLoadItems, options = props.options, _b = props.filteringType, filteringType = _b === void 0 ? 'auto' : _b, _c = props.statusType, statusType = _c === void 0 ? 'finished' : _c, recoveryText = props.recoveryText, placeholder = props.placeholder, name = props.name, disabled = props.disabled, _d = props.disableBrowserAutocorrect, disableBrowserAutocorrect = _d === void 0 ? false : _d, autoFocus = props.autoFocus, readOnly = props.readOnly, ariaLabel = props.ariaLabel, ariaRequired = props.ariaRequired, enteredTextLabel = props.enteredTextLabel, onKeyDown = props.onKeyDown, virtualScroll = props.virtualScroll, expandToViewport = props.expandToViewport, onSelect = props.onSelect, selectedAriaLabel = props.selectedAriaLabel, renderHighlightedAriaLive = props.renderHighlightedAriaLive, __internalRootRef = props.__internalRootRef, restProps = __rest(props, ["value", "onChange", "onBlur", "onFocus", "onKeyUp", "onLoadItems", "options", "filteringType", "statusType", "recoveryText", "placeholder", "name", "disabled", "disableBrowserAutocorrect", "autoFocus", "readOnly", "ariaLabel", "ariaRequired", "enteredTextLabel", "onKeyDown", "virtualScroll", "expandToViewport", "onSelect", "selectedAriaLabel", "renderHighlightedAriaLive", "__internalRootRef"]);
    checkControlled('Autosuggest', 'value', value, 'onChange', onChange);
    checkOptionValueField('Autosuggest', 'options', options);
    var autosuggestInputRef = (0,react.useRef)(null);
    (0,react.useImperativeHandle)(ref, function () { return ({
        focus: function () { var _a; return (_a = autosuggestInputRef.current) === null || _a === void 0 ? void 0 : _a.focus(); },
        select: function () { var _a; return (_a = autosuggestInputRef.current) === null || _a === void 0 ? void 0 : _a.select(); }
    }); }, []);
    var _e = useAutosuggestItems({
        options: options || [],
        filterValue: value,
        filterText: value,
        filteringType: filteringType,
        hideEnteredTextLabel: false,
        onSelectItem: function (option) {
            var _a;
            var value = option.value || '';
            fireNonCancelableEvent(onChange, { value: value });
            fireNonCancelableEvent(onSelect, { value: value });
            (_a = autosuggestInputRef.current) === null || _a === void 0 ? void 0 : _a.close();
        }
    }), autosuggestItemsState = _e[0], autosuggestItemsHandlers = _e[1];
    var autosuggestLoadMoreHandlers = useAutosuggestLoadMore({
        options: options,
        statusType: statusType,
        onLoadItems: function (detail) { return fireNonCancelableEvent(onLoadItems, detail); }
    });
    var handleChange = function (event) {
        autosuggestItemsHandlers.setShowAll(false);
        autosuggestItemsHandlers.resetHighlightWithKeyboard();
        fireNonCancelableEvent(onChange, event.detail);
    };
    var handleDelayedInput = function (event) {
        autosuggestLoadMoreHandlers.fireLoadMoreOnInputChange(event.detail.value);
    };
    var handleBlur = function () {
        fireNonCancelableEvent(onBlur, null);
    };
    var handleFocus = function () {
        autosuggestItemsHandlers.setShowAll(true);
        autosuggestLoadMoreHandlers.fireLoadMoreOnInputFocus();
        fireNonCancelableEvent(onFocus, null);
    };
    var handleKeyUp = function (e) {
        fireCancelableEvent(onKeyUp, e.detail);
    };
    var handleKeyDown = function (e) {
        fireCancelableEvent(onKeyDown, e.detail);
    };
    var handlePressArrowDown = function () {
        autosuggestItemsHandlers.moveHighlightWithKeyboard(1);
    };
    var handlePressArrowUp = function () {
        autosuggestItemsHandlers.moveHighlightWithKeyboard(-1);
    };
    var handlePressEnter = function () {
        return autosuggestItemsHandlers.selectHighlightedOptionWithKeyboard();
    };
    var handleCloseDropdown = function () {
        autosuggestItemsHandlers.resetHighlightWithKeyboard();
    };
    var handleRecoveryClick = function () {
        var _a;
        autosuggestLoadMoreHandlers.fireLoadMoreOnRecoveryClick();
        (_a = autosuggestInputRef.current) === null || _a === void 0 ? void 0 : _a.focus();
    };
    var formFieldContext = useFormFieldContext(restProps);
    var selfControlId = useUniqueId('input');
    var controlId = (_a = formFieldContext.controlId) !== null && _a !== void 0 ? _a : selfControlId;
    var listId = useUniqueId('list');
    var highlightedOptionId = autosuggestItemsState.highlightedOption ? generateUniqueId() : undefined;
    var isEmpty = !value && !autosuggestItemsState.items.length;
    var dropdownStatus = useDropdownStatus(tslib_es6_assign(tslib_es6_assign({}, props), { isEmpty: isEmpty, recoveryText: recoveryText, onRecoveryClick: handleRecoveryClick }));
    return (react.createElement(autosuggest_input, tslib_es6_assign({}, restProps, { className: clsx_m(autosuggest_styles_css.root, restProps.className), ref: autosuggestInputRef, __internalRootRef: __internalRootRef, value: value, onChange: handleChange, onBlur: handleBlur, onFocus: handleFocus, onKeyUp: handleKeyUp, onKeyDown: handleKeyDown, name: name, controlId: controlId, placeholder: placeholder, disabled: disabled, readOnly: readOnly, autoFocus: autoFocus, ariaLabel: ariaLabel, ariaRequired: ariaRequired, disableBrowserAutocorrect: disableBrowserAutocorrect, expandToViewport: expandToViewport, ariaControls: listId, ariaActivedescendant: highlightedOptionId, dropdownExpanded: autosuggestItemsState.items.length > 1 || dropdownStatus.content !== null, dropdownContent: react.createElement(AutosuggestOptionsList, { autosuggestItemsState: autosuggestItemsState, autosuggestItemsHandlers: autosuggestItemsHandlers, highlightedOptionId: highlightedOptionId, highlightText: value, listId: listId, controlId: controlId, enteredTextLabel: enteredTextLabel, handleLoadMore: autosuggestLoadMoreHandlers.fireLoadMoreOnScroll, hasDropdownStatus: dropdownStatus.content !== null, virtualScroll: virtualScroll, selectedAriaLabel: selectedAriaLabel, renderHighlightedAriaLive: renderHighlightedAriaLive, listBottom: !dropdownStatus.isSticky ? react.createElement(dropdown_footer, { content: dropdownStatus.content }) : null }), dropdownFooter: dropdownStatus.isSticky ? (react.createElement(dropdown_footer, { content: dropdownStatus.content, hasItems: autosuggestItemsState.items.length >= 1 })) : null, loopFocus: statusType === 'error' && !!recoveryText, onCloseDropdown: handleCloseDropdown, onDelayedInput: handleDelayedInput, onPressArrowDown: handlePressArrowDown, onPressArrowUp: handlePressArrowUp, onPressEnter: handlePressEnter })));
});
/* harmony default export */ const autosuggest_internal = (InternalAutosuggest);
//# sourceMappingURL=internal.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/autosuggest/index.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0





var Autosuggest = react.forwardRef(function (_a, ref) {
    var _b = _a.filteringType, filteringType = _b === void 0 ? 'auto' : _b, _c = _a.statusType, statusType = _c === void 0 ? 'finished' : _c, _d = _a.disableBrowserAutocorrect, disableBrowserAutocorrect = _d === void 0 ? false : _d, props = __rest(_a, ["filteringType", "statusType", "disableBrowserAutocorrect"]);
    var baseComponentProps = useBaseComponent('Autosuggest');
    var externalProps = getExternalProps(props);
    return (react.createElement(autosuggest_internal, tslib_es6_assign({ filteringType: filteringType, statusType: statusType, disableBrowserAutocorrect: disableBrowserAutocorrect }, externalProps, baseComponentProps, { ref: ref })));
});
applyDisplayName(Autosuggest, 'Autosuggest');
/* harmony default export */ const autosuggest = (Autosuggest);
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js

function objectWithoutProperties_objectWithoutProperties(source, excluded) {
  if (source == null) return {};
  var target = objectWithoutPropertiesLoose_objectWithoutPropertiesLoose(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }
  return target;
}
;// CONCATENATED MODULE: ./src/components/NavigateLink/index.tsx
var NavigateLink_excluded=["onFollow"];var NavigateLink=function(_ref){var onFollow=_ref.onFollow,props=objectWithoutProperties_objectWithoutProperties(_ref,NavigateLink_excluded),navigate=dist_useNavigate();return/*#__PURE__*/react.createElement(components_link,extends_extends({},props,{onFollow:function onFollowHandler(event){event.preventDefault(),onFollow&&onFollow(event),event.detail.href&&navigate(event.detail.href)}}))};
;// CONCATENATED MODULE: ./src/components/ListEmptyMessage/index.tsx
var ListEmptyMessage=function(_ref){var title=_ref.title,message=_ref.message,children=_ref.children;return/*#__PURE__*/react.createElement(Box,{textAlign:"center",color:"inherit"},title&&/*#__PURE__*/react.createElement("b",null,title),/*#__PURE__*/react.createElement(Box,{padding:{bottom:"s"},variant:"p",color:"inherit"},message),children)};
;// CONCATENATED MODULE: ./src/components/DetailsHeader/index.tsx
var DetailsHeader=function(_ref){var title=_ref.title,editAction=_ref.editAction,deleteAction=_ref.deleteAction,editDisabled=_ref.editDisabled,deleteDisabled=_ref.deleteDisabled,_useTranslation=useTranslation_useTranslation(),t=_useTranslation.t;return/*#__PURE__*/react.createElement(components_header_Header,{variant:"awsui-h1-sticky",actions:/*#__PURE__*/react.createElement(SpaceBetween,{direction:"horizontal",size:"xs"},editAction&&/*#__PURE__*/react.createElement(components_button,{onClick:editAction,disabled:editDisabled},t("common.edit")),deleteAction&&/*#__PURE__*/react.createElement(components_button,{onClick:deleteAction,disabled:deleteDisabled},t("common.delete")))},title)};
;// CONCATENATED MODULE: ./src/components/Loader/styles.module.scss
// extracted by mini-css-extract-plugin
/* harmony default export */ const styles_module = ({"loader":"wX4kg"});
;// CONCATENATED MODULE: ./src/components/Loader/index.tsx
var Loader=function(){return/*#__PURE__*/react.createElement("div",{className:styles_module.loader},/*#__PURE__*/react.createElement(Box,{padding:{vertical:"xxxl"},textAlign:"center",color:"inherit"},/*#__PURE__*/react.createElement(SpaceBetween,{size:"m",direction:"horizontal"},/*#__PURE__*/react.createElement(Spinner,null),/*#__PURE__*/react.createElement(Box,{color:"inherit"},"Loading"))))};
;// CONCATENATED MODULE: ./node_modules/react-hook-form/dist/index.esm.mjs


var isCheckBoxInput = (element) => element.type === 'checkbox';

var isDateObject = (value) => value instanceof Date;

var isNullOrUndefined = (value) => value == null;

const isObjectType = (value) => typeof value === 'object';
var isObject = (value) => !isNullOrUndefined(value) &&
    !Array.isArray(value) &&
    isObjectType(value) &&
    !isDateObject(value);

var getEventValue = (event) => isObject(event) && event.target
    ? isCheckBoxInput(event.target)
        ? event.target.checked
        : event.target.value
    : event;

var getNodeParentName = (name) => name.substring(0, name.search(/\.\d+(\.|$)/)) || name;

var isNameInFieldArray = (names, name) => names.has(getNodeParentName(name));

var compact = (value) => Array.isArray(value) ? value.filter(Boolean) : [];

var isUndefined = (val) => val === undefined;

var index_esm_get = (obj, path, defaultValue) => {
    if (!path || !isObject(obj)) {
        return defaultValue;
    }
    const result = compact(path.split(/[,[\].]+?/)).reduce((result, key) => isNullOrUndefined(result) ? result : result[key], obj);
    return isUndefined(result) || result === obj
        ? isUndefined(obj[path])
            ? defaultValue
            : obj[path]
        : result;
};

const EVENTS = {
    BLUR: 'blur',
    FOCUS_OUT: 'focusout',
    CHANGE: 'change',
};
const VALIDATION_MODE = {
    onBlur: 'onBlur',
    onChange: 'onChange',
    onSubmit: 'onSubmit',
    onTouched: 'onTouched',
    all: 'all',
};
const INPUT_VALIDATION_RULES = {
    max: 'max',
    min: 'min',
    maxLength: 'maxLength',
    minLength: 'minLength',
    pattern: 'pattern',
    required: 'required',
    validate: 'validate',
};

const HookFormContext = react.createContext(null);
/**
 * This custom hook allows you to access the form context. useFormContext is intended to be used in deeply nested structures, where it would become inconvenient to pass the context as a prop. To be used with {@link FormProvider}.
 *
 * @remarks
 * [API](https://react-hook-form.com/api/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)
 *
 * @returns return all useForm methods
 *
 * @example
 * ```tsx
 * function App() {
 *   const methods = useForm();
 *   const onSubmit = data => console.log(data);
 *
 *   return (
 *     <FormProvider {...methods} >
 *       <form onSubmit={methods.handleSubmit(onSubmit)}>
 *         <NestedInput />
 *         <input type="submit" />
 *       </form>
 *     </FormProvider>
 *   );
 * }
 *
 *  function NestedInput() {
 *   const { register } = useFormContext(); // retrieve all hook methods
 *   return <input {...register("test")} />;
 * }
 * ```
 */
const useFormContext = () => react.useContext(HookFormContext);
/**
 * A provider component that propagates the `useForm` methods to all children components via [React Context](https://reactjs.org/docs/context.html) API. To be used with {@link useFormContext}.
 *
 * @remarks
 * [API](https://react-hook-form.com/api/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)
 *
 * @param props - all useFrom methods
 *
 * @example
 * ```tsx
 * function App() {
 *   const methods = useForm();
 *   const onSubmit = data => console.log(data);
 *
 *   return (
 *     <FormProvider {...methods} >
 *       <form onSubmit={methods.handleSubmit(onSubmit)}>
 *         <NestedInput />
 *         <input type="submit" />
 *       </form>
 *     </FormProvider>
 *   );
 * }
 *
 *  function NestedInput() {
 *   const { register } = useFormContext(); // retrieve all hook methods
 *   return <input {...register("test")} />;
 * }
 * ```
 */
const FormProvider = (props) => {
    const { children, ...data } = props;
    return (react.createElement(HookFormContext.Provider, { value: data }, children));
};

var getProxyFormState = (formState, control, localProxyFormState, isRoot = true) => {
    const result = {
        defaultValues: control._defaultValues,
    };
    for (const key in formState) {
        Object.defineProperty(result, key, {
            get: () => {
                const _key = key;
                if (control._proxyFormState[_key] !== VALIDATION_MODE.all) {
                    control._proxyFormState[_key] = !isRoot || VALIDATION_MODE.all;
                }
                localProxyFormState && (localProxyFormState[_key] = true);
                return formState[_key];
            },
        });
    }
    return result;
};

var isEmptyObject = (value) => isObject(value) && !Object.keys(value).length;

var shouldRenderFormState = (formStateData, _proxyFormState, isRoot) => {
    const { name, ...formState } = formStateData;
    return (isEmptyObject(formState) ||
        Object.keys(formState).length >= Object.keys(_proxyFormState).length ||
        Object.keys(formState).find((key) => _proxyFormState[key] ===
            (!isRoot || VALIDATION_MODE.all)));
};

var convertToArrayPayload = (value) => (Array.isArray(value) ? value : [value]);

var shouldSubscribeByName = (name, signalName, exact) => exact && signalName
    ? name === signalName
    : !name ||
        !signalName ||
        name === signalName ||
        convertToArrayPayload(name).some((currentName) => currentName &&
            (currentName.startsWith(signalName) ||
                signalName.startsWith(currentName)));

function useSubscribe(props) {
    const _props = react.useRef(props);
    _props.current = props;
    react.useEffect(() => {
        const subscription = !props.disabled &&
            _props.current.subject.subscribe({
                next: _props.current.next,
            });
        return () => {
            subscription && subscription.unsubscribe();
        };
    }, [props.disabled]);
}

/**
 * This custom hook allows you to subscribe to each form state, and isolate the re-render at the custom hook level. It has its scope in terms of form state subscription, so it would not affect other useFormState and useForm. Using this hook can reduce the re-render impact on large and complex form application.
 *
 * @remarks
 * [API](https://react-hook-form.com/api/useformstate) • [Demo](https://codesandbox.io/s/useformstate-75xly)
 *
 * @param props - include options on specify fields to subscribe. {@link UseFormStateReturn}
 *
 * @example
 * ```tsx
 * function App() {
 *   const { register, handleSubmit, control } = useForm({
 *     defaultValues: {
 *     firstName: "firstName"
 *   }});
 *   const { dirtyFields } = useFormState({
 *     control
 *   });
 *   const onSubmit = (data) => console.log(data);
 *
 *   return (
 *     <form onSubmit={handleSubmit(onSubmit)}>
 *       <input {...register("firstName")} placeholder="First Name" />
 *       {dirtyFields.firstName && <p>Field is dirty.</p>}
 *       <input type="submit" />
 *     </form>
 *   );
 * }
 * ```
 */
function useFormState(props) {
    const methods = useFormContext();
    const { control = methods.control, disabled, name, exact } = props || {};
    const [formState, updateFormState] = react.useState(control._formState);
    const _mounted = react.useRef(true);
    const _localProxyFormState = react.useRef({
        isDirty: false,
        isLoading: false,
        dirtyFields: false,
        touchedFields: false,
        isValidating: false,
        isValid: false,
        errors: false,
    });
    const _name = react.useRef(name);
    _name.current = name;
    useSubscribe({
        disabled,
        next: (value) => _mounted.current &&
            shouldSubscribeByName(_name.current, value.name, exact) &&
            shouldRenderFormState(value, _localProxyFormState.current) &&
            updateFormState({
                ...control._formState,
                ...value,
            }),
        subject: control._subjects.state,
    });
    react.useEffect(() => {
        _mounted.current = true;
        const isDirty = control._proxyFormState.isDirty && control._getDirty();
        if (isDirty !== control._formState.isDirty) {
            control._subjects.state.next({
                isDirty,
            });
        }
        control._updateValid();
        return () => {
            _mounted.current = false;
        };
    }, [control]);
    return getProxyFormState(formState, control, _localProxyFormState.current, false);
}

var isString = (value) => typeof value === 'string';

var generateWatchOutput = (names, _names, formValues, isGlobal, defaultValue) => {
    if (isString(names)) {
        isGlobal && _names.watch.add(names);
        return index_esm_get(formValues, names, defaultValue);
    }
    if (Array.isArray(names)) {
        return names.map((fieldName) => (isGlobal && _names.watch.add(fieldName), index_esm_get(formValues, fieldName)));
    }
    isGlobal && (_names.watchAll = true);
    return formValues;
};

var index_esm_isPlainObject = (tempObject) => {
    const prototypeCopy = tempObject.constructor && tempObject.constructor.prototype;
    return (isObject(prototypeCopy) && prototypeCopy.hasOwnProperty('isPrototypeOf'));
};

var isWeb = typeof window !== 'undefined' &&
    typeof window.HTMLElement !== 'undefined' &&
    typeof document !== 'undefined';

function cloneObject(data) {
    let copy;
    const isArray = Array.isArray(data);
    if (data instanceof Date) {
        copy = new Date(data);
    }
    else if (data instanceof Set) {
        copy = new Set(data);
    }
    else if (!(isWeb && (data instanceof Blob || data instanceof FileList)) &&
        (isArray || isObject(data))) {
        copy = isArray ? [] : {};
        if (!Array.isArray(data) && !index_esm_isPlainObject(data)) {
            copy = data;
        }
        else {
            for (const key in data) {
                copy[key] = cloneObject(data[key]);
            }
        }
    }
    else {
        return data;
    }
    return copy;
}

/**
 * Custom hook to subscribe to field change and isolate re-rendering at the component level.
 *
 * @remarks
 *
 * [API](https://react-hook-form.com/api/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)
 *
 * @example
 * ```tsx
 * const { watch } = useForm();
 * const values = useWatch({
 *   name: "fieldName"
 *   control,
 * })
 * ```
 */
function useWatch(props) {
    const methods = useFormContext();
    const { control = methods.control, name, defaultValue, disabled, exact, } = props || {};
    const _name = react.useRef(name);
    _name.current = name;
    useSubscribe({
        disabled,
        subject: control._subjects.watch,
        next: (formState) => {
            if (shouldSubscribeByName(_name.current, formState.name, exact)) {
                updateValue(cloneObject(generateWatchOutput(_name.current, control._names, formState.values || control._formValues, false, defaultValue)));
            }
        },
    });
    const [value, updateValue] = react.useState(control._getWatch(name, defaultValue));
    react.useEffect(() => control._removeUnmounted());
    return value;
}

/**
 * Custom hook to work with controlled component, this function provide you with both form and field level state. Re-render is isolated at the hook level.
 *
 * @remarks
 * [API](https://react-hook-form.com/api/usecontroller) • [Demo](https://codesandbox.io/s/usecontroller-0o8px)
 *
 * @param props - the path name to the form field value, and validation rules.
 *
 * @returns field properties, field and form state. {@link UseControllerReturn}
 *
 * @example
 * ```tsx
 * function Input(props) {
 *   const { field, fieldState, formState } = useController(props);
 *   return (
 *     <div>
 *       <input {...field} placeholder={props.name} />
 *       <p>{fieldState.isTouched && "Touched"}</p>
 *       <p>{formState.isSubmitted ? "submitted" : ""}</p>
 *     </div>
 *   );
 * }
 * ```
 */
function useController(props) {
    const methods = useFormContext();
    const { name, control = methods.control, shouldUnregister } = props;
    const isArrayField = isNameInFieldArray(control._names.array, name);
    const value = useWatch({
        control,
        name,
        defaultValue: index_esm_get(control._formValues, name, index_esm_get(control._defaultValues, name, props.defaultValue)),
        exact: true,
    });
    const formState = useFormState({
        control,
        name,
    });
    const _registerProps = react.useRef(control.register(name, {
        ...props.rules,
        value,
    }));
    react.useEffect(() => {
        const updateMounted = (name, value) => {
            const field = index_esm_get(control._fields, name);
            if (field) {
                field._f.mount = value;
            }
        };
        updateMounted(name, true);
        return () => {
            const _shouldUnregisterField = control._options.shouldUnregister || shouldUnregister;
            (isArrayField
                ? _shouldUnregisterField && !control._stateFlags.action
                : _shouldUnregisterField)
                ? control.unregister(name)
                : updateMounted(name, false);
        };
    }, [name, control, isArrayField, shouldUnregister]);
    return {
        field: {
            name,
            value,
            onChange: react.useCallback((event) => _registerProps.current.onChange({
                target: {
                    value: getEventValue(event),
                    name: name,
                },
                type: EVENTS.CHANGE,
            }), [name]),
            onBlur: react.useCallback(() => _registerProps.current.onBlur({
                target: {
                    value: index_esm_get(control._formValues, name),
                    name: name,
                },
                type: EVENTS.BLUR,
            }), [name, control]),
            ref: (elm) => {
                const field = index_esm_get(control._fields, name);
                if (field && elm) {
                    field._f.ref = {
                        focus: () => elm.focus(),
                        select: () => elm.select(),
                        setCustomValidity: (message) => elm.setCustomValidity(message),
                        reportValidity: () => elm.reportValidity(),
                    };
                }
            },
        },
        formState,
        fieldState: Object.defineProperties({}, {
            invalid: {
                enumerable: true,
                get: () => !!index_esm_get(formState.errors, name),
            },
            isDirty: {
                enumerable: true,
                get: () => !!index_esm_get(formState.dirtyFields, name),
            },
            isTouched: {
                enumerable: true,
                get: () => !!index_esm_get(formState.touchedFields, name),
            },
            error: {
                enumerable: true,
                get: () => index_esm_get(formState.errors, name),
            },
        }),
    };
}

/**
 * Component based on `useController` hook to work with controlled component.
 *
 * @remarks
 * [API](https://react-hook-form.com/api/usecontroller/controller) • [Demo](https://codesandbox.io/s/react-hook-form-v6-controller-ts-jwyzw) • [Video](https://www.youtube.com/watch?v=N2UNk_UCVyA)
 *
 * @param props - the path name to the form field value, and validation rules.
 *
 * @returns provide field handler functions, field and form state.
 *
 * @example
 * ```tsx
 * function App() {
 *   const { control } = useForm<FormValues>({
 *     defaultValues: {
 *       test: ""
 *     }
 *   });
 *
 *   return (
 *     <form>
 *       <Controller
 *         control={control}
 *         name="test"
 *         render={({ field: { onChange, onBlur, value, ref }, formState, fieldState }) => (
 *           <>
 *             <input
 *               onChange={onChange} // send value to hook form
 *               onBlur={onBlur} // notify when input is touched
 *               value={value} // return updated value
 *               ref={ref} // set ref for focus management
 *             />
 *             <p>{formState.isSubmitted ? "submitted" : ""}</p>
 *             <p>{fieldState.isTouched ? "touched" : ""}</p>
 *           </>
 *         )}
 *       />
 *     </form>
 *   );
 * }
 * ```
 */
const Controller = (props) => props.render(useController(props));

var appendErrors = (name, validateAllFieldCriteria, errors, type, message) => validateAllFieldCriteria
    ? {
        ...errors[name],
        types: {
            ...(errors[name] && errors[name].types ? errors[name].types : {}),
            [type]: message || true,
        },
    }
    : {};

var isKey = (value) => /^\w*$/.test(value);

var stringToPath = (input) => compact(input.replace(/["|']|\]/g, '').split(/\.|\[/));

function set(object, path, value) {
    let index = -1;
    const tempPath = isKey(path) ? [path] : stringToPath(path);
    const length = tempPath.length;
    const lastIndex = length - 1;
    while (++index < length) {
        const key = tempPath[index];
        let newValue = value;
        if (index !== lastIndex) {
            const objValue = object[key];
            newValue =
                isObject(objValue) || Array.isArray(objValue)
                    ? objValue
                    : !isNaN(+tempPath[index + 1])
                        ? []
                        : {};
        }
        object[key] = newValue;
        object = object[key];
    }
    return object;
}

const focusFieldBy = (fields, callback, fieldsNames) => {
    for (const key of fieldsNames || Object.keys(fields)) {
        const field = index_esm_get(fields, key);
        if (field) {
            const { _f, ...currentField } = field;
            if (_f && callback(_f.name)) {
                if (_f.ref.focus) {
                    _f.ref.focus();
                    break;
                }
                else if (_f.refs && _f.refs[0].focus) {
                    _f.refs[0].focus();
                    break;
                }
            }
            else if (isObject(currentField)) {
                focusFieldBy(currentField, callback);
            }
        }
    }
};

var generateId = () => {
    const d = typeof performance === 'undefined' ? Date.now() : performance.now() * 1000;
    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {
        const r = (Math.random() * 16 + d) % 16 | 0;
        return (c == 'x' ? r : (r & 0x3) | 0x8).toString(16);
    });
};

var getFocusFieldName = (name, index, options = {}) => options.shouldFocus || isUndefined(options.shouldFocus)
    ? options.focusName ||
        `${name}.${isUndefined(options.focusIndex) ? index : options.focusIndex}.`
    : '';

var getValidationModes = (mode) => ({
    isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,
    isOnBlur: mode === VALIDATION_MODE.onBlur,
    isOnChange: mode === VALIDATION_MODE.onChange,
    isOnAll: mode === VALIDATION_MODE.all,
    isOnTouch: mode === VALIDATION_MODE.onTouched,
});

var isWatched = (name, _names, isBlurEvent) => !isBlurEvent &&
    (_names.watchAll ||
        _names.watch.has(name) ||
        [..._names.watch].some((watchName) => name.startsWith(watchName) &&
            /^\.\w+/.test(name.slice(watchName.length))));

var updateFieldArrayRootError = (errors, error, name) => {
    const fieldArrayErrors = compact(index_esm_get(errors, name));
    set(fieldArrayErrors, 'root', error[name]);
    set(errors, name, fieldArrayErrors);
    return errors;
};

var index_esm_isBoolean = (value) => typeof value === 'boolean';

var isFileInput = (element) => element.type === 'file';

var index_esm_isFunction = (value) => typeof value === 'function';

var isHTMLElement = (value) => {
    if (!isWeb) {
        return false;
    }
    const owner = value ? value.ownerDocument : 0;
    return (value instanceof
        (owner && owner.defaultView ? owner.defaultView.HTMLElement : HTMLElement));
};

var isMessage = (value) => isString(value) || react.isValidElement(value);

var isRadioInput = (element) => element.type === 'radio';

var isRegex = (value) => value instanceof RegExp;

const defaultResult = {
    value: false,
    isValid: false,
};
const validResult = { value: true, isValid: true };
var getCheckboxValue = (options) => {
    if (Array.isArray(options)) {
        if (options.length > 1) {
            const values = options
                .filter((option) => option && option.checked && !option.disabled)
                .map((option) => option.value);
            return { value: values, isValid: !!values.length };
        }
        return options[0].checked && !options[0].disabled
            ? // @ts-expect-error expected to work in the browser
                options[0].attributes && !isUndefined(options[0].attributes.value)
                    ? isUndefined(options[0].value) || options[0].value === ''
                        ? validResult
                        : { value: options[0].value, isValid: true }
                    : validResult
            : defaultResult;
    }
    return defaultResult;
};

const defaultReturn = {
    isValid: false,
    value: null,
};
var getRadioValue = (options) => Array.isArray(options)
    ? options.reduce((previous, option) => option && option.checked && !option.disabled
        ? {
            isValid: true,
            value: option.value,
        }
        : previous, defaultReturn)
    : defaultReturn;

function getValidateError(result, ref, type = 'validate') {
    if (isMessage(result) ||
        (Array.isArray(result) && result.every(isMessage)) ||
        (index_esm_isBoolean(result) && !result)) {
        return {
            type,
            message: isMessage(result) ? result : '',
            ref,
        };
    }
}

var getValueAndMessage = (validationData) => isObject(validationData) && !isRegex(validationData)
    ? validationData
    : {
        value: validationData,
        message: '',
    };

var validateField = async (field, formValues, validateAllFieldCriteria, shouldUseNativeValidation, isFieldArray) => {
    const { ref, refs, required, maxLength, minLength, min, max, pattern, validate, name, valueAsNumber, mount, disabled, } = field._f;
    const inputValue = index_esm_get(formValues, name);
    if (!mount || disabled) {
        return {};
    }
    const inputRef = refs ? refs[0] : ref;
    const setCustomValidity = (message) => {
        if (shouldUseNativeValidation && inputRef.reportValidity) {
            inputRef.setCustomValidity(index_esm_isBoolean(message) ? '' : message || '');
            inputRef.reportValidity();
        }
    };
    const error = {};
    const isRadio = isRadioInput(ref);
    const isCheckBox = isCheckBoxInput(ref);
    const isRadioOrCheckbox = isRadio || isCheckBox;
    const isEmpty = ((valueAsNumber || isFileInput(ref)) &&
        isUndefined(ref.value) &&
        isUndefined(inputValue)) ||
        (isHTMLElement(ref) && ref.value === '') ||
        inputValue === '' ||
        (Array.isArray(inputValue) && !inputValue.length);
    const appendErrorsCurry = appendErrors.bind(null, name, validateAllFieldCriteria, error);
    const getMinMaxMessage = (exceedMax, maxLengthMessage, minLengthMessage, maxType = INPUT_VALIDATION_RULES.maxLength, minType = INPUT_VALIDATION_RULES.minLength) => {
        const message = exceedMax ? maxLengthMessage : minLengthMessage;
        error[name] = {
            type: exceedMax ? maxType : minType,
            message,
            ref,
            ...appendErrorsCurry(exceedMax ? maxType : minType, message),
        };
    };
    if (isFieldArray
        ? !Array.isArray(inputValue) || !inputValue.length
        : required &&
            ((!isRadioOrCheckbox && (isEmpty || isNullOrUndefined(inputValue))) ||
                (index_esm_isBoolean(inputValue) && !inputValue) ||
                (isCheckBox && !getCheckboxValue(refs).isValid) ||
                (isRadio && !getRadioValue(refs).isValid))) {
        const { value, message } = isMessage(required)
            ? { value: !!required, message: required }
            : getValueAndMessage(required);
        if (value) {
            error[name] = {
                type: INPUT_VALIDATION_RULES.required,
                message,
                ref: inputRef,
                ...appendErrorsCurry(INPUT_VALIDATION_RULES.required, message),
            };
            if (!validateAllFieldCriteria) {
                setCustomValidity(message);
                return error;
            }
        }
    }
    if (!isEmpty && (!isNullOrUndefined(min) || !isNullOrUndefined(max))) {
        let exceedMax;
        let exceedMin;
        const maxOutput = getValueAndMessage(max);
        const minOutput = getValueAndMessage(min);
        if (!isNullOrUndefined(inputValue) && !isNaN(inputValue)) {
            const valueNumber = ref.valueAsNumber ||
                (inputValue ? +inputValue : inputValue);
            if (!isNullOrUndefined(maxOutput.value)) {
                exceedMax = valueNumber > maxOutput.value;
            }
            if (!isNullOrUndefined(minOutput.value)) {
                exceedMin = valueNumber < minOutput.value;
            }
        }
        else {
            const valueDate = ref.valueAsDate || new Date(inputValue);
            const convertTimeToDate = (time) => new Date(new Date().toDateString() + ' ' + time);
            const isTime = ref.type == 'time';
            const isWeek = ref.type == 'week';
            if (isString(maxOutput.value) && inputValue) {
                exceedMax = isTime
                    ? convertTimeToDate(inputValue) > convertTimeToDate(maxOutput.value)
                    : isWeek
                        ? inputValue > maxOutput.value
                        : valueDate > new Date(maxOutput.value);
            }
            if (isString(minOutput.value) && inputValue) {
                exceedMin = isTime
                    ? convertTimeToDate(inputValue) < convertTimeToDate(minOutput.value)
                    : isWeek
                        ? inputValue < minOutput.value
                        : valueDate < new Date(minOutput.value);
            }
        }
        if (exceedMax || exceedMin) {
            getMinMaxMessage(!!exceedMax, maxOutput.message, minOutput.message, INPUT_VALIDATION_RULES.max, INPUT_VALIDATION_RULES.min);
            if (!validateAllFieldCriteria) {
                setCustomValidity(error[name].message);
                return error;
            }
        }
    }
    if ((maxLength || minLength) &&
        !isEmpty &&
        (isString(inputValue) || (isFieldArray && Array.isArray(inputValue)))) {
        const maxLengthOutput = getValueAndMessage(maxLength);
        const minLengthOutput = getValueAndMessage(minLength);
        const exceedMax = !isNullOrUndefined(maxLengthOutput.value) &&
            inputValue.length > maxLengthOutput.value;
        const exceedMin = !isNullOrUndefined(minLengthOutput.value) &&
            inputValue.length < minLengthOutput.value;
        if (exceedMax || exceedMin) {
            getMinMaxMessage(exceedMax, maxLengthOutput.message, minLengthOutput.message);
            if (!validateAllFieldCriteria) {
                setCustomValidity(error[name].message);
                return error;
            }
        }
    }
    if (pattern && !isEmpty && isString(inputValue)) {
        const { value: patternValue, message } = getValueAndMessage(pattern);
        if (isRegex(patternValue) && !inputValue.match(patternValue)) {
            error[name] = {
                type: INPUT_VALIDATION_RULES.pattern,
                message,
                ref,
                ...appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, message),
            };
            if (!validateAllFieldCriteria) {
                setCustomValidity(message);
                return error;
            }
        }
    }
    if (validate) {
        if (index_esm_isFunction(validate)) {
            const result = await validate(inputValue, formValues);
            const validateError = getValidateError(result, inputRef);
            if (validateError) {
                error[name] = {
                    ...validateError,
                    ...appendErrorsCurry(INPUT_VALIDATION_RULES.validate, validateError.message),
                };
                if (!validateAllFieldCriteria) {
                    setCustomValidity(validateError.message);
                    return error;
                }
            }
        }
        else if (isObject(validate)) {
            let validationResult = {};
            for (const key in validate) {
                if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {
                    break;
                }
                const validateError = getValidateError(await validate[key](inputValue, formValues), inputRef, key);
                if (validateError) {
                    validationResult = {
                        ...validateError,
                        ...appendErrorsCurry(key, validateError.message),
                    };
                    setCustomValidity(validateError.message);
                    if (validateAllFieldCriteria) {
                        error[name] = validationResult;
                    }
                }
            }
            if (!isEmptyObject(validationResult)) {
                error[name] = {
                    ref: inputRef,
                    ...validationResult,
                };
                if (!validateAllFieldCriteria) {
                    return error;
                }
            }
        }
    }
    setCustomValidity(true);
    return error;
};

function append(data, value) {
    return [...data, ...convertToArrayPayload(value)];
}

var fillEmptyArray = (value) => Array.isArray(value) ? value.map(() => undefined) : undefined;

function insert(data, index, value) {
    return [
        ...data.slice(0, index),
        ...convertToArrayPayload(value),
        ...data.slice(index),
    ];
}

var moveArrayAt = (data, from, to) => {
    if (!Array.isArray(data)) {
        return [];
    }
    if (isUndefined(data[to])) {
        data[to] = undefined;
    }
    data.splice(to, 0, data.splice(from, 1)[0]);
    return data;
};

function prepend(data, value) {
    return [...convertToArrayPayload(value), ...convertToArrayPayload(data)];
}

function removeAtIndexes(data, indexes) {
    let i = 0;
    const temp = [...data];
    for (const index of indexes) {
        temp.splice(index - i, 1);
        i++;
    }
    return compact(temp).length ? temp : [];
}
var removeArrayAt = (data, index) => isUndefined(index)
    ? []
    : removeAtIndexes(data, convertToArrayPayload(index).sort((a, b) => a - b));

var swapArrayAt = (data, indexA, indexB) => {
    data[indexA] = [data[indexB], (data[indexB] = data[indexA])][0];
};

function baseGet(object, updatePath) {
    const length = updatePath.slice(0, -1).length;
    let index = 0;
    while (index < length) {
        object = isUndefined(object) ? index++ : object[updatePath[index++]];
    }
    return object;
}
function isEmptyArray(obj) {
    for (const key in obj) {
        if (!isUndefined(obj[key])) {
            return false;
        }
    }
    return true;
}
function unset(object, path) {
    const paths = Array.isArray(path)
        ? path
        : isKey(path)
            ? [path]
            : stringToPath(path);
    const childObject = paths.length === 1 ? object : baseGet(object, paths);
    const index = paths.length - 1;
    const key = paths[index];
    if (childObject) {
        delete childObject[key];
    }
    if (index !== 0 &&
        ((isObject(childObject) && isEmptyObject(childObject)) ||
            (Array.isArray(childObject) && isEmptyArray(childObject)))) {
        unset(object, paths.slice(0, -1));
    }
    return object;
}

var updateAt = (fieldValues, index, value) => {
    fieldValues[index] = value;
    return fieldValues;
};

/**
 * A custom hook that exposes convenient methods to perform operations with a list of dynamic inputs that need to be appended, updated, removed etc. • [Demo](https://codesandbox.io/s/react-hook-form-usefieldarray-ssugn) • [Video](https://youtu.be/4MrbfGSFY2A)
 *
 * @remarks
 * [API](https://react-hook-form.com/api/usefieldarray) • [Demo](https://codesandbox.io/s/react-hook-form-usefieldarray-ssugn)
 *
 * @param props - useFieldArray props
 *
 * @returns methods - functions to manipulate with the Field Arrays (dynamic inputs) {@link UseFieldArrayReturn}
 *
 * @example
 * ```tsx
 * function App() {
 *   const { register, control, handleSubmit, reset, trigger, setError } = useForm({
 *     defaultValues: {
 *       test: []
 *     }
 *   });
 *   const { fields, append } = useFieldArray({
 *     control,
 *     name: "test"
 *   });
 *
 *   return (
 *     <form onSubmit={handleSubmit(data => console.log(data))}>
 *       {fields.map((item, index) => (
 *          <input key={item.id} {...register(`test.${index}.firstName`)}  />
 *       ))}
 *       <button type="button" onClick={() => append({ firstName: "bill" })}>
 *         append
 *       </button>
 *       <input type="submit" />
 *     </form>
 *   );
 * }
 * ```
 */
function useFieldArray(props) {
    const methods = useFormContext();
    const { control = methods.control, name, keyName = 'id', shouldUnregister, } = props;
    const [fields, setFields] = react.useState(control._getFieldArray(name));
    const ids = react.useRef(control._getFieldArray(name).map(generateId));
    const _fieldIds = react.useRef(fields);
    const _name = react.useRef(name);
    const _actioned = react.useRef(false);
    _name.current = name;
    _fieldIds.current = fields;
    control._names.array.add(name);
    props.rules &&
        control.register(name, props.rules);
    useSubscribe({
        next: ({ values, name: fieldArrayName, }) => {
            if (fieldArrayName === _name.current || !fieldArrayName) {
                const fieldValues = index_esm_get(values, _name.current);
                if (Array.isArray(fieldValues)) {
                    setFields(fieldValues);
                    ids.current = fieldValues.map(generateId);
                }
            }
        },
        subject: control._subjects.array,
    });
    const updateValues = react.useCallback((updatedFieldArrayValues) => {
        _actioned.current = true;
        control._updateFieldArray(name, updatedFieldArrayValues);
    }, [control, name]);
    const append$1 = (value, options) => {
        const appendValue = convertToArrayPayload(cloneObject(value));
        const updatedFieldArrayValues = append(control._getFieldArray(name), appendValue);
        control._names.focus = getFocusFieldName(name, updatedFieldArrayValues.length - 1, options);
        ids.current = append(ids.current, appendValue.map(generateId));
        updateValues(updatedFieldArrayValues);
        setFields(updatedFieldArrayValues);
        control._updateFieldArray(name, updatedFieldArrayValues, append, {
            argA: fillEmptyArray(value),
        });
    };
    const prepend$1 = (value, options) => {
        const prependValue = convertToArrayPayload(cloneObject(value));
        const updatedFieldArrayValues = prepend(control._getFieldArray(name), prependValue);
        control._names.focus = getFocusFieldName(name, 0, options);
        ids.current = prepend(ids.current, prependValue.map(generateId));
        updateValues(updatedFieldArrayValues);
        setFields(updatedFieldArrayValues);
        control._updateFieldArray(name, updatedFieldArrayValues, prepend, {
            argA: fillEmptyArray(value),
        });
    };
    const remove = (index) => {
        const updatedFieldArrayValues = removeArrayAt(control._getFieldArray(name), index);
        ids.current = removeArrayAt(ids.current, index);
        updateValues(updatedFieldArrayValues);
        setFields(updatedFieldArrayValues);
        control._updateFieldArray(name, updatedFieldArrayValues, removeArrayAt, {
            argA: index,
        });
    };
    const insert$1 = (index, value, options) => {
        const insertValue = convertToArrayPayload(cloneObject(value));
        const updatedFieldArrayValues = insert(control._getFieldArray(name), index, insertValue);
        control._names.focus = getFocusFieldName(name, index, options);
        ids.current = insert(ids.current, index, insertValue.map(generateId));
        updateValues(updatedFieldArrayValues);
        setFields(updatedFieldArrayValues);
        control._updateFieldArray(name, updatedFieldArrayValues, insert, {
            argA: index,
            argB: fillEmptyArray(value),
        });
    };
    const swap = (indexA, indexB) => {
        const updatedFieldArrayValues = control._getFieldArray(name);
        swapArrayAt(updatedFieldArrayValues, indexA, indexB);
        swapArrayAt(ids.current, indexA, indexB);
        updateValues(updatedFieldArrayValues);
        setFields(updatedFieldArrayValues);
        control._updateFieldArray(name, updatedFieldArrayValues, swapArrayAt, {
            argA: indexA,
            argB: indexB,
        }, false);
    };
    const move = (from, to) => {
        const updatedFieldArrayValues = control._getFieldArray(name);
        moveArrayAt(updatedFieldArrayValues, from, to);
        moveArrayAt(ids.current, from, to);
        updateValues(updatedFieldArrayValues);
        setFields(updatedFieldArrayValues);
        control._updateFieldArray(name, updatedFieldArrayValues, moveArrayAt, {
            argA: from,
            argB: to,
        }, false);
    };
    const update = (index, value) => {
        const updateValue = cloneObject(value);
        const updatedFieldArrayValues = updateAt(control._getFieldArray(name), index, updateValue);
        ids.current = [...updatedFieldArrayValues].map((item, i) => !item || i === index ? generateId() : ids.current[i]);
        updateValues(updatedFieldArrayValues);
        setFields([...updatedFieldArrayValues]);
        control._updateFieldArray(name, updatedFieldArrayValues, updateAt, {
            argA: index,
            argB: updateValue,
        }, true, false);
    };
    const replace = (value) => {
        const updatedFieldArrayValues = convertToArrayPayload(cloneObject(value));
        ids.current = updatedFieldArrayValues.map(generateId);
        updateValues([...updatedFieldArrayValues]);
        setFields([...updatedFieldArrayValues]);
        control._updateFieldArray(name, [...updatedFieldArrayValues], (data) => data, {}, true, false);
    };
    react.useEffect(() => {
        control._stateFlags.action = false;
        isWatched(name, control._names) && control._subjects.state.next({});
        if (_actioned.current &&
            (!getValidationModes(control._options.mode).isOnSubmit ||
                control._formState.isSubmitted)) {
            if (control._options.resolver) {
                control._executeSchema([name]).then((result) => {
                    const error = index_esm_get(result.errors, name);
                    const existingError = index_esm_get(control._formState.errors, name);
                    if (existingError ? !error && existingError.type : error && error.type) {
                        error
                            ? set(control._formState.errors, name, error)
                            : unset(control._formState.errors, name);
                        control._subjects.state.next({
                            errors: control._formState.errors,
                        });
                    }
                });
            }
            else {
                const field = index_esm_get(control._fields, name);
                if (field && field._f) {
                    validateField(field, control._formValues, control._options.criteriaMode === VALIDATION_MODE.all, control._options.shouldUseNativeValidation, true).then((error) => !isEmptyObject(error) &&
                        control._subjects.state.next({
                            errors: updateFieldArrayRootError(control._formState.errors, error, name),
                        }));
                }
            }
        }
        control._subjects.watch.next({
            name,
            values: control._formValues,
        });
        control._names.focus &&
            focusFieldBy(control._fields, (key) => !!key && key.startsWith(control._names.focus || ''));
        control._names.focus = '';
        control._proxyFormState.isValid && control._updateValid();
    }, [fields, name, control]);
    react.useEffect(() => {
        !index_esm_get(control._formValues, name) && control._updateFieldArray(name);
        return () => {
            (control._options.shouldUnregister || shouldUnregister) &&
                control.unregister(name);
        };
    }, [name, control, keyName, shouldUnregister]);
    return {
        swap: react.useCallback(swap, [updateValues, name, control]),
        move: react.useCallback(move, [updateValues, name, control]),
        prepend: react.useCallback(prepend$1, [updateValues, name, control]),
        append: react.useCallback(append$1, [updateValues, name, control]),
        remove: react.useCallback(remove, [updateValues, name, control]),
        insert: react.useCallback(insert$1, [updateValues, name, control]),
        update: react.useCallback(update, [updateValues, name, control]),
        replace: react.useCallback(replace, [updateValues, name, control]),
        fields: react.useMemo(() => fields.map((field, index) => ({
            ...field,
            [keyName]: ids.current[index] || generateId(),
        })), [fields, keyName]),
    };
}

function createSubject() {
    let _observers = [];
    const next = (value) => {
        for (const observer of _observers) {
            observer.next(value);
        }
    };
    const subscribe = (observer) => {
        _observers.push(observer);
        return {
            unsubscribe: () => {
                _observers = _observers.filter((o) => o !== observer);
            },
        };
    };
    const unsubscribe = () => {
        _observers = [];
    };
    return {
        get observers() {
            return _observers;
        },
        next,
        subscribe,
        unsubscribe,
    };
}

var isPrimitive = (value) => isNullOrUndefined(value) || !isObjectType(value);

function deepEqual(object1, object2) {
    if (isPrimitive(object1) || isPrimitive(object2)) {
        return object1 === object2;
    }
    if (isDateObject(object1) && isDateObject(object2)) {
        return object1.getTime() === object2.getTime();
    }
    const keys1 = Object.keys(object1);
    const keys2 = Object.keys(object2);
    if (keys1.length !== keys2.length) {
        return false;
    }
    for (const key of keys1) {
        const val1 = object1[key];
        if (!keys2.includes(key)) {
            return false;
        }
        if (key !== 'ref') {
            const val2 = object2[key];
            if ((isDateObject(val1) && isDateObject(val2)) ||
                (isObject(val1) && isObject(val2)) ||
                (Array.isArray(val1) && Array.isArray(val2))
                ? !deepEqual(val1, val2)
                : val1 !== val2) {
                return false;
            }
        }
    }
    return true;
}

var isMultipleSelect = (element) => element.type === `select-multiple`;

var isRadioOrCheckbox = (ref) => isRadioInput(ref) || isCheckBoxInput(ref);

var live = (ref) => isHTMLElement(ref) && ref.isConnected;

var objectHasFunction = (data) => {
    for (const key in data) {
        if (index_esm_isFunction(data[key])) {
            return true;
        }
    }
    return false;
};

function markFieldsDirty(data, fields = {}) {
    const isParentNodeArray = Array.isArray(data);
    if (isObject(data) || isParentNodeArray) {
        for (const key in data) {
            if (Array.isArray(data[key]) ||
                (isObject(data[key]) && !objectHasFunction(data[key]))) {
                fields[key] = Array.isArray(data[key]) ? [] : {};
                markFieldsDirty(data[key], fields[key]);
            }
            else if (!isNullOrUndefined(data[key])) {
                fields[key] = true;
            }
        }
    }
    return fields;
}
function getDirtyFieldsFromDefaultValues(data, formValues, dirtyFieldsFromValues) {
    const isParentNodeArray = Array.isArray(data);
    if (isObject(data) || isParentNodeArray) {
        for (const key in data) {
            if (Array.isArray(data[key]) ||
                (isObject(data[key]) && !objectHasFunction(data[key]))) {
                if (isUndefined(formValues) ||
                    isPrimitive(dirtyFieldsFromValues[key])) {
                    dirtyFieldsFromValues[key] = Array.isArray(data[key])
                        ? markFieldsDirty(data[key], [])
                        : { ...markFieldsDirty(data[key]) };
                }
                else {
                    getDirtyFieldsFromDefaultValues(data[key], isNullOrUndefined(formValues) ? {} : formValues[key], dirtyFieldsFromValues[key]);
                }
            }
            else {
                deepEqual(data[key], formValues[key])
                    ? delete dirtyFieldsFromValues[key]
                    : (dirtyFieldsFromValues[key] = true);
            }
        }
    }
    return dirtyFieldsFromValues;
}
var getDirtyFields = (defaultValues, formValues) => getDirtyFieldsFromDefaultValues(defaultValues, formValues, markFieldsDirty(formValues));

var getFieldValueAs = (value, { valueAsNumber, valueAsDate, setValueAs }) => isUndefined(value)
    ? value
    : valueAsNumber
        ? value === ''
            ? NaN
            : value
                ? +value
                : value
        : valueAsDate && isString(value)
            ? new Date(value)
            : setValueAs
                ? setValueAs(value)
                : value;

function getFieldValue(_f) {
    const ref = _f.ref;
    if (_f.refs ? _f.refs.every((ref) => ref.disabled) : ref.disabled) {
        return;
    }
    if (isFileInput(ref)) {
        return ref.files;
    }
    if (isRadioInput(ref)) {
        return getRadioValue(_f.refs).value;
    }
    if (isMultipleSelect(ref)) {
        return [...ref.selectedOptions].map(({ value }) => value);
    }
    if (isCheckBoxInput(ref)) {
        return getCheckboxValue(_f.refs).value;
    }
    return getFieldValueAs(isUndefined(ref.value) ? _f.ref.value : ref.value, _f);
}

var getResolverOptions = (fieldsNames, _fields, criteriaMode, shouldUseNativeValidation) => {
    const fields = {};
    for (const name of fieldsNames) {
        const field = index_esm_get(_fields, name);
        field && set(fields, name, field._f);
    }
    return {
        criteriaMode,
        names: [...fieldsNames],
        fields,
        shouldUseNativeValidation,
    };
};

var getRuleValue = (rule) => isUndefined(rule)
    ? rule
    : isRegex(rule)
        ? rule.source
        : isObject(rule)
            ? isRegex(rule.value)
                ? rule.value.source
                : rule.value
            : rule;

var hasValidation = (options) => options.mount &&
    (options.required ||
        options.min ||
        options.max ||
        options.maxLength ||
        options.minLength ||
        options.pattern ||
        options.validate);

function schemaErrorLookup(errors, _fields, name) {
    const error = index_esm_get(errors, name);
    if (error || isKey(name)) {
        return {
            error,
            name,
        };
    }
    const names = name.split('.');
    while (names.length) {
        const fieldName = names.join('.');
        const field = index_esm_get(_fields, fieldName);
        const foundError = index_esm_get(errors, fieldName);
        if (field && !Array.isArray(field) && name !== fieldName) {
            return { name };
        }
        if (foundError && foundError.type) {
            return {
                name: fieldName,
                error: foundError,
            };
        }
        names.pop();
    }
    return {
        name,
    };
}

var skipValidation = (isBlurEvent, isTouched, isSubmitted, reValidateMode, mode) => {
    if (mode.isOnAll) {
        return false;
    }
    else if (!isSubmitted && mode.isOnTouch) {
        return !(isTouched || isBlurEvent);
    }
    else if (isSubmitted ? reValidateMode.isOnBlur : mode.isOnBlur) {
        return !isBlurEvent;
    }
    else if (isSubmitted ? reValidateMode.isOnChange : mode.isOnChange) {
        return isBlurEvent;
    }
    return true;
};

var unsetEmptyArray = (ref, name) => !compact(index_esm_get(ref, name)).length && unset(ref, name);

const index_esm_defaultOptions = {
    mode: VALIDATION_MODE.onSubmit,
    reValidateMode: VALIDATION_MODE.onChange,
    shouldFocusError: true,
};
function createFormControl(props = {}, flushRootRender) {
    let _options = {
        ...index_esm_defaultOptions,
        ...props,
    };
    const shouldCaptureDirtyFields = props.resetOptions && props.resetOptions.keepDirtyValues;
    let _formState = {
        submitCount: 0,
        isDirty: false,
        isLoading: true,
        isValidating: false,
        isSubmitted: false,
        isSubmitting: false,
        isSubmitSuccessful: false,
        isValid: false,
        touchedFields: {},
        dirtyFields: {},
        errors: {},
    };
    let _fields = {};
    let _defaultValues = isObject(_options.defaultValues)
        ? cloneObject(_options.defaultValues) || {}
        : {};
    let _formValues = _options.shouldUnregister
        ? {}
        : cloneObject(_defaultValues);
    let _stateFlags = {
        action: false,
        mount: false,
        watch: false,
    };
    let _names = {
        mount: new Set(),
        unMount: new Set(),
        array: new Set(),
        watch: new Set(),
    };
    let delayErrorCallback;
    let timer = 0;
    const _proxyFormState = {
        isDirty: false,
        dirtyFields: false,
        touchedFields: false,
        isValidating: false,
        isValid: false,
        errors: false,
    };
    const _subjects = {
        watch: createSubject(),
        array: createSubject(),
        state: createSubject(),
    };
    const validationModeBeforeSubmit = getValidationModes(_options.mode);
    const validationModeAfterSubmit = getValidationModes(_options.reValidateMode);
    const shouldDisplayAllAssociatedErrors = _options.criteriaMode === VALIDATION_MODE.all;
    const debounce = (callback) => (wait) => {
        clearTimeout(timer);
        timer = window.setTimeout(callback, wait);
    };
    const _updateValid = async () => {
        if (_proxyFormState.isValid) {
            const isValid = _options.resolver
                ? isEmptyObject((await _executeSchema()).errors)
                : await executeBuiltInValidation(_fields, true);
            if (isValid !== _formState.isValid) {
                _formState.isValid = isValid;
                _subjects.state.next({
                    isValid,
                });
            }
        }
    };
    const _updateIsValidating = (value) => _proxyFormState.isValidating &&
        _subjects.state.next({
            isValidating: value,
        });
    const _updateFieldArray = (name, values = [], method, args, shouldSetValues = true, shouldUpdateFieldsAndState = true) => {
        if (args && method) {
            _stateFlags.action = true;
            if (shouldUpdateFieldsAndState && Array.isArray(index_esm_get(_fields, name))) {
                const fieldValues = method(index_esm_get(_fields, name), args.argA, args.argB);
                shouldSetValues && set(_fields, name, fieldValues);
            }
            if (shouldUpdateFieldsAndState &&
                Array.isArray(index_esm_get(_formState.errors, name))) {
                const errors = method(index_esm_get(_formState.errors, name), args.argA, args.argB);
                shouldSetValues && set(_formState.errors, name, errors);
                unsetEmptyArray(_formState.errors, name);
            }
            if (_proxyFormState.touchedFields &&
                shouldUpdateFieldsAndState &&
                Array.isArray(index_esm_get(_formState.touchedFields, name))) {
                const touchedFields = method(index_esm_get(_formState.touchedFields, name), args.argA, args.argB);
                shouldSetValues && set(_formState.touchedFields, name, touchedFields);
            }
            if (_proxyFormState.dirtyFields) {
                _formState.dirtyFields = getDirtyFields(_defaultValues, _formValues);
            }
            _subjects.state.next({
                name,
                isDirty: _getDirty(name, values),
                dirtyFields: _formState.dirtyFields,
                errors: _formState.errors,
                isValid: _formState.isValid,
            });
        }
        else {
            set(_formValues, name, values);
        }
    };
    const updateErrors = (name, error) => {
        set(_formState.errors, name, error);
        _subjects.state.next({
            errors: _formState.errors,
        });
    };
    const updateValidAndValue = (name, shouldSkipSetValueAs, value, ref) => {
        const field = index_esm_get(_fields, name);
        if (field) {
            const defaultValue = index_esm_get(_formValues, name, isUndefined(value) ? index_esm_get(_defaultValues, name) : value);
            isUndefined(defaultValue) ||
                (ref && ref.defaultChecked) ||
                shouldSkipSetValueAs
                ? set(_formValues, name, shouldSkipSetValueAs ? defaultValue : getFieldValue(field._f))
                : setFieldValue(name, defaultValue);
            _stateFlags.mount && _updateValid();
        }
    };
    const updateTouchAndDirty = (name, fieldValue, isBlurEvent, shouldDirty, shouldRender) => {
        let shouldUpdateField = false;
        let isPreviousDirty = false;
        const output = {
            name,
        };
        if (!isBlurEvent || shouldDirty) {
            if (_proxyFormState.isDirty) {
                isPreviousDirty = _formState.isDirty;
                _formState.isDirty = output.isDirty = _getDirty();
                shouldUpdateField = isPreviousDirty !== output.isDirty;
            }
            const isCurrentFieldPristine = deepEqual(index_esm_get(_defaultValues, name), fieldValue);
            isPreviousDirty = index_esm_get(_formState.dirtyFields, name);
            isCurrentFieldPristine
                ? unset(_formState.dirtyFields, name)
                : set(_formState.dirtyFields, name, true);
            output.dirtyFields = _formState.dirtyFields;
            shouldUpdateField =
                shouldUpdateField ||
                    (_proxyFormState.dirtyFields &&
                        isPreviousDirty !== !isCurrentFieldPristine);
        }
        if (isBlurEvent) {
            const isPreviousFieldTouched = index_esm_get(_formState.touchedFields, name);
            if (!isPreviousFieldTouched) {
                set(_formState.touchedFields, name, isBlurEvent);
                output.touchedFields = _formState.touchedFields;
                shouldUpdateField =
                    shouldUpdateField ||
                        (_proxyFormState.touchedFields &&
                            isPreviousFieldTouched !== isBlurEvent);
            }
        }
        shouldUpdateField && shouldRender && _subjects.state.next(output);
        return shouldUpdateField ? output : {};
    };
    const shouldRenderByError = (name, isValid, error, fieldState) => {
        const previousFieldError = index_esm_get(_formState.errors, name);
        const shouldUpdateValid = _proxyFormState.isValid &&
            index_esm_isBoolean(isValid) &&
            _formState.isValid !== isValid;
        if (props.delayError && error) {
            delayErrorCallback = debounce(() => updateErrors(name, error));
            delayErrorCallback(props.delayError);
        }
        else {
            clearTimeout(timer);
            delayErrorCallback = null;
            error
                ? set(_formState.errors, name, error)
                : unset(_formState.errors, name);
        }
        if ((error ? !deepEqual(previousFieldError, error) : previousFieldError) ||
            !isEmptyObject(fieldState) ||
            shouldUpdateValid) {
            const updatedFormState = {
                ...fieldState,
                ...(shouldUpdateValid && index_esm_isBoolean(isValid) ? { isValid } : {}),
                errors: _formState.errors,
                name,
            };
            _formState = {
                ..._formState,
                ...updatedFormState,
            };
            _subjects.state.next(updatedFormState);
        }
        _updateIsValidating(false);
    };
    const _executeSchema = async (name) => await _options.resolver(_formValues, _options.context, getResolverOptions(name || _names.mount, _fields, _options.criteriaMode, _options.shouldUseNativeValidation));
    const executeSchemaAndUpdateState = async (names) => {
        const { errors } = await _executeSchema();
        if (names) {
            for (const name of names) {
                const error = index_esm_get(errors, name);
                error
                    ? set(_formState.errors, name, error)
                    : unset(_formState.errors, name);
            }
        }
        else {
            _formState.errors = errors;
        }
        return errors;
    };
    const executeBuiltInValidation = async (fields, shouldOnlyCheckValid, context = {
        valid: true,
    }) => {
        for (const name in fields) {
            const field = fields[name];
            if (field) {
                const { _f, ...fieldValue } = field;
                if (_f) {
                    const isFieldArrayRoot = _names.array.has(_f.name);
                    const fieldError = await validateField(field, _formValues, shouldDisplayAllAssociatedErrors, _options.shouldUseNativeValidation, isFieldArrayRoot);
                    if (fieldError[_f.name]) {
                        context.valid = false;
                        if (shouldOnlyCheckValid) {
                            break;
                        }
                    }
                    !shouldOnlyCheckValid &&
                        (index_esm_get(fieldError, _f.name)
                            ? isFieldArrayRoot
                                ? updateFieldArrayRootError(_formState.errors, fieldError, _f.name)
                                : set(_formState.errors, _f.name, fieldError[_f.name])
                            : unset(_formState.errors, _f.name));
                }
                fieldValue &&
                    (await executeBuiltInValidation(fieldValue, shouldOnlyCheckValid, context));
            }
        }
        return context.valid;
    };
    const _removeUnmounted = () => {
        for (const name of _names.unMount) {
            const field = index_esm_get(_fields, name);
            field &&
                (field._f.refs
                    ? field._f.refs.every((ref) => !live(ref))
                    : !live(field._f.ref)) &&
                unregister(name);
        }
        _names.unMount = new Set();
    };
    const _getDirty = (name, data) => (name && data && set(_formValues, name, data),
        !deepEqual(getValues(), _defaultValues));
    const _getWatch = (names, defaultValue, isGlobal) => generateWatchOutput(names, _names, {
        ...(_stateFlags.mount
            ? _formValues
            : isUndefined(defaultValue)
                ? _defaultValues
                : isString(names)
                    ? { [names]: defaultValue }
                    : defaultValue),
    }, isGlobal, defaultValue);
    const _getFieldArray = (name) => compact(index_esm_get(_stateFlags.mount ? _formValues : _defaultValues, name, props.shouldUnregister ? index_esm_get(_defaultValues, name, []) : []));
    const setFieldValue = (name, value, options = {}) => {
        const field = index_esm_get(_fields, name);
        let fieldValue = value;
        if (field) {
            const fieldReference = field._f;
            if (fieldReference) {
                !fieldReference.disabled &&
                    set(_formValues, name, getFieldValueAs(value, fieldReference));
                fieldValue =
                    isHTMLElement(fieldReference.ref) && isNullOrUndefined(value)
                        ? ''
                        : value;
                if (isMultipleSelect(fieldReference.ref)) {
                    [...fieldReference.ref.options].forEach((optionRef) => (optionRef.selected = fieldValue.includes(optionRef.value)));
                }
                else if (fieldReference.refs) {
                    if (isCheckBoxInput(fieldReference.ref)) {
                        fieldReference.refs.length > 1
                            ? fieldReference.refs.forEach((checkboxRef) => (!checkboxRef.defaultChecked || !checkboxRef.disabled) &&
                                (checkboxRef.checked = Array.isArray(fieldValue)
                                    ? !!fieldValue.find((data) => data === checkboxRef.value)
                                    : fieldValue === checkboxRef.value))
                            : fieldReference.refs[0] &&
                                (fieldReference.refs[0].checked = !!fieldValue);
                    }
                    else {
                        fieldReference.refs.forEach((radioRef) => (radioRef.checked = radioRef.value === fieldValue));
                    }
                }
                else if (isFileInput(fieldReference.ref)) {
                    fieldReference.ref.value = '';
                }
                else {
                    fieldReference.ref.value = fieldValue;
                    if (!fieldReference.ref.type) {
                        _subjects.watch.next({
                            name,
                        });
                    }
                }
            }
        }
        (options.shouldDirty || options.shouldTouch) &&
            updateTouchAndDirty(name, fieldValue, options.shouldTouch, options.shouldDirty, true);
        options.shouldValidate && trigger(name);
    };
    const setValues = (name, value, options) => {
        for (const fieldKey in value) {
            const fieldValue = value[fieldKey];
            const fieldName = `${name}.${fieldKey}`;
            const field = index_esm_get(_fields, fieldName);
            (_names.array.has(name) ||
                !isPrimitive(fieldValue) ||
                (field && !field._f)) &&
                !isDateObject(fieldValue)
                ? setValues(fieldName, fieldValue, options)
                : setFieldValue(fieldName, fieldValue, options);
        }
    };
    const setValue = (name, value, options = {}) => {
        const field = index_esm_get(_fields, name);
        const isFieldArray = _names.array.has(name);
        const cloneValue = cloneObject(value);
        set(_formValues, name, cloneValue);
        if (isFieldArray) {
            _subjects.array.next({
                name,
                values: _formValues,
            });
            if ((_proxyFormState.isDirty || _proxyFormState.dirtyFields) &&
                options.shouldDirty) {
                _formState.dirtyFields = getDirtyFields(_defaultValues, _formValues);
                _subjects.state.next({
                    name,
                    dirtyFields: _formState.dirtyFields,
                    isDirty: _getDirty(name, cloneValue),
                });
            }
        }
        else {
            field && !field._f && !isNullOrUndefined(cloneValue)
                ? setValues(name, cloneValue, options)
                : setFieldValue(name, cloneValue, options);
        }
        isWatched(name, _names) && _subjects.state.next({});
        _subjects.watch.next({
            name,
        });
        !_stateFlags.mount && flushRootRender();
    };
    const onChange = async (event) => {
        const target = event.target;
        let name = target.name;
        const field = index_esm_get(_fields, name);
        const getCurrentFieldValue = () => target.type ? getFieldValue(field._f) : getEventValue(event);
        if (field) {
            let error;
            let isValid;
            const fieldValue = getCurrentFieldValue();
            const isBlurEvent = event.type === EVENTS.BLUR || event.type === EVENTS.FOCUS_OUT;
            const shouldSkipValidation = (!hasValidation(field._f) &&
                !_options.resolver &&
                !index_esm_get(_formState.errors, name) &&
                !field._f.deps) ||
                skipValidation(isBlurEvent, index_esm_get(_formState.touchedFields, name), _formState.isSubmitted, validationModeAfterSubmit, validationModeBeforeSubmit);
            const watched = isWatched(name, _names, isBlurEvent);
            set(_formValues, name, fieldValue);
            if (isBlurEvent) {
                field._f.onBlur && field._f.onBlur(event);
                delayErrorCallback && delayErrorCallback(0);
            }
            else if (field._f.onChange) {
                field._f.onChange(event);
            }
            const fieldState = updateTouchAndDirty(name, fieldValue, isBlurEvent, false);
            const shouldRender = !isEmptyObject(fieldState) || watched;
            !isBlurEvent &&
                _subjects.watch.next({
                    name,
                    type: event.type,
                });
            if (shouldSkipValidation) {
                _proxyFormState.isValid && _updateValid();
                return (shouldRender &&
                    _subjects.state.next({ name, ...(watched ? {} : fieldState) }));
            }
            !isBlurEvent && watched && _subjects.state.next({});
            _updateIsValidating(true);
            if (_options.resolver) {
                const { errors } = await _executeSchema([name]);
                const previousErrorLookupResult = schemaErrorLookup(_formState.errors, _fields, name);
                const errorLookupResult = schemaErrorLookup(errors, _fields, previousErrorLookupResult.name || name);
                error = errorLookupResult.error;
                name = errorLookupResult.name;
                isValid = isEmptyObject(errors);
            }
            else {
                error = (await validateField(field, _formValues, shouldDisplayAllAssociatedErrors, _options.shouldUseNativeValidation))[name];
                if (error) {
                    isValid = false;
                }
                else if (_proxyFormState.isValid) {
                    isValid = await executeBuiltInValidation(_fields, true);
                }
            }
            field._f.deps &&
                trigger(field._f.deps);
            shouldRenderByError(name, isValid, error, fieldState);
        }
    };
    const trigger = async (name, options = {}) => {
        let isValid;
        let validationResult;
        const fieldNames = convertToArrayPayload(name);
        _updateIsValidating(true);
        if (_options.resolver) {
            const errors = await executeSchemaAndUpdateState(isUndefined(name) ? name : fieldNames);
            isValid = isEmptyObject(errors);
            validationResult = name
                ? !fieldNames.some((name) => index_esm_get(errors, name))
                : isValid;
        }
        else if (name) {
            validationResult = (await Promise.all(fieldNames.map(async (fieldName) => {
                const field = index_esm_get(_fields, fieldName);
                return await executeBuiltInValidation(field && field._f ? { [fieldName]: field } : field);
            }))).every(Boolean);
            !(!validationResult && !_formState.isValid) && _updateValid();
        }
        else {
            validationResult = isValid = await executeBuiltInValidation(_fields);
        }
        _subjects.state.next({
            ...(!isString(name) ||
                (_proxyFormState.isValid && isValid !== _formState.isValid)
                ? {}
                : { name }),
            ...(_options.resolver || !name ? { isValid } : {}),
            errors: _formState.errors,
            isValidating: false,
        });
        options.shouldFocus &&
            !validationResult &&
            focusFieldBy(_fields, (key) => key && index_esm_get(_formState.errors, key), name ? fieldNames : _names.mount);
        return validationResult;
    };
    const getValues = (fieldNames) => {
        const values = {
            ..._defaultValues,
            ...(_stateFlags.mount ? _formValues : {}),
        };
        return isUndefined(fieldNames)
            ? values
            : isString(fieldNames)
                ? index_esm_get(values, fieldNames)
                : fieldNames.map((name) => index_esm_get(values, name));
    };
    const getFieldState = (name, formState) => ({
        invalid: !!index_esm_get((formState || _formState).errors, name),
        isDirty: !!index_esm_get((formState || _formState).dirtyFields, name),
        isTouched: !!index_esm_get((formState || _formState).touchedFields, name),
        error: index_esm_get((formState || _formState).errors, name),
    });
    const clearErrors = (name) => {
        name
            ? convertToArrayPayload(name).forEach((inputName) => unset(_formState.errors, inputName))
            : (_formState.errors = {});
        _subjects.state.next({
            errors: _formState.errors,
        });
    };
    const setError = (name, error, options) => {
        const ref = (index_esm_get(_fields, name, { _f: {} })._f || {}).ref;
        set(_formState.errors, name, {
            ...error,
            ref,
        });
        _subjects.state.next({
            name,
            errors: _formState.errors,
            isValid: false,
        });
        options && options.shouldFocus && ref && ref.focus && ref.focus();
    };
    const watch = (name, defaultValue) => index_esm_isFunction(name)
        ? _subjects.watch.subscribe({
            next: (payload) => name(_getWatch(undefined, defaultValue), payload),
        })
        : _getWatch(name, defaultValue, true);
    const unregister = (name, options = {}) => {
        for (const fieldName of name ? convertToArrayPayload(name) : _names.mount) {
            _names.mount.delete(fieldName);
            _names.array.delete(fieldName);
            if (index_esm_get(_fields, fieldName)) {
                if (!options.keepValue) {
                    unset(_fields, fieldName);
                    unset(_formValues, fieldName);
                }
                !options.keepError && unset(_formState.errors, fieldName);
                !options.keepDirty && unset(_formState.dirtyFields, fieldName);
                !options.keepTouched && unset(_formState.touchedFields, fieldName);
                !_options.shouldUnregister &&
                    !options.keepDefaultValue &&
                    unset(_defaultValues, fieldName);
            }
        }
        _subjects.watch.next({});
        _subjects.state.next({
            ..._formState,
            ...(!options.keepDirty ? {} : { isDirty: _getDirty() }),
        });
        !options.keepIsValid && _updateValid();
    };
    const register = (name, options = {}) => {
        let field = index_esm_get(_fields, name);
        const disabledIsDefined = index_esm_isBoolean(options.disabled);
        set(_fields, name, {
            ...(field || {}),
            _f: {
                ...(field && field._f ? field._f : { ref: { name } }),
                name,
                mount: true,
                ...options,
            },
        });
        _names.mount.add(name);
        field
            ? disabledIsDefined &&
                set(_formValues, name, options.disabled
                    ? undefined
                    : index_esm_get(_formValues, name, getFieldValue(field._f)))
            : updateValidAndValue(name, true, options.value);
        return {
            ...(disabledIsDefined ? { disabled: options.disabled } : {}),
            ...(_options.shouldUseNativeValidation
                ? {
                    required: !!options.required,
                    min: getRuleValue(options.min),
                    max: getRuleValue(options.max),
                    minLength: getRuleValue(options.minLength),
                    maxLength: getRuleValue(options.maxLength),
                    pattern: getRuleValue(options.pattern),
                }
                : {}),
            name,
            onChange,
            onBlur: onChange,
            ref: (ref) => {
                if (ref) {
                    register(name, options);
                    field = index_esm_get(_fields, name);
                    const fieldRef = isUndefined(ref.value)
                        ? ref.querySelectorAll
                            ? ref.querySelectorAll('input,select,textarea')[0] || ref
                            : ref
                        : ref;
                    const radioOrCheckbox = isRadioOrCheckbox(fieldRef);
                    const refs = field._f.refs || [];
                    if (radioOrCheckbox
                        ? refs.find((option) => option === fieldRef)
                        : fieldRef === field._f.ref) {
                        return;
                    }
                    set(_fields, name, {
                        _f: {
                            ...field._f,
                            ...(radioOrCheckbox
                                ? {
                                    refs: [
                                        ...refs.filter(live),
                                        fieldRef,
                                        ...(Array.isArray(index_esm_get(_defaultValues, name)) ? [{}] : []),
                                    ],
                                    ref: { type: fieldRef.type, name },
                                }
                                : { ref: fieldRef }),
                        },
                    });
                    updateValidAndValue(name, false, undefined, fieldRef);
                }
                else {
                    field = index_esm_get(_fields, name, {});
                    if (field._f) {
                        field._f.mount = false;
                    }
                    (_options.shouldUnregister || options.shouldUnregister) &&
                        !(isNameInFieldArray(_names.array, name) && _stateFlags.action) &&
                        _names.unMount.add(name);
                }
            },
        };
    };
    const _focusError = () => _options.shouldFocusError &&
        focusFieldBy(_fields, (key) => key && index_esm_get(_formState.errors, key), _names.mount);
    const handleSubmit = (onValid, onInvalid) => async (e) => {
        if (e) {
            e.preventDefault && e.preventDefault();
            e.persist && e.persist();
        }
        let fieldValues = cloneObject(_formValues);
        _subjects.state.next({
            isSubmitting: true,
        });
        if (_options.resolver) {
            const { errors, values } = await _executeSchema();
            _formState.errors = errors;
            fieldValues = values;
        }
        else {
            await executeBuiltInValidation(_fields);
        }
        if (isEmptyObject(_formState.errors)) {
            _subjects.state.next({
                errors: {},
            });
            await onValid(fieldValues, e);
        }
        else {
            if (onInvalid) {
                await onInvalid({ ..._formState.errors }, e);
            }
            _focusError();
        }
        _subjects.state.next({
            isSubmitted: true,
            isSubmitting: false,
            isSubmitSuccessful: isEmptyObject(_formState.errors),
            submitCount: _formState.submitCount + 1,
            errors: _formState.errors,
        });
    };
    const resetField = (name, options = {}) => {
        if (index_esm_get(_fields, name)) {
            if (isUndefined(options.defaultValue)) {
                setValue(name, index_esm_get(_defaultValues, name));
            }
            else {
                setValue(name, options.defaultValue);
                set(_defaultValues, name, options.defaultValue);
            }
            if (!options.keepTouched) {
                unset(_formState.touchedFields, name);
            }
            if (!options.keepDirty) {
                unset(_formState.dirtyFields, name);
                _formState.isDirty = options.defaultValue
                    ? _getDirty(name, index_esm_get(_defaultValues, name))
                    : _getDirty();
            }
            if (!options.keepError) {
                unset(_formState.errors, name);
                _proxyFormState.isValid && _updateValid();
            }
            _subjects.state.next({ ..._formState });
        }
    };
    const _reset = (formValues, keepStateOptions = {}) => {
        const updatedValues = formValues || _defaultValues;
        const cloneUpdatedValues = cloneObject(updatedValues);
        const values = formValues && !isEmptyObject(formValues)
            ? cloneUpdatedValues
            : _defaultValues;
        if (!keepStateOptions.keepDefaultValues) {
            _defaultValues = updatedValues;
        }
        if (!keepStateOptions.keepValues) {
            if (keepStateOptions.keepDirtyValues || shouldCaptureDirtyFields) {
                for (const fieldName of _names.mount) {
                    index_esm_get(_formState.dirtyFields, fieldName)
                        ? set(values, fieldName, index_esm_get(_formValues, fieldName))
                        : setValue(fieldName, index_esm_get(values, fieldName));
                }
            }
            else {
                if (isWeb && isUndefined(formValues)) {
                    for (const name of _names.mount) {
                        const field = index_esm_get(_fields, name);
                        if (field && field._f) {
                            const fieldReference = Array.isArray(field._f.refs)
                                ? field._f.refs[0]
                                : field._f.ref;
                            if (isHTMLElement(fieldReference)) {
                                const form = fieldReference.closest('form');
                                if (form) {
                                    form.reset();
                                    break;
                                }
                            }
                        }
                    }
                }
                _fields = {};
            }
            _formValues = props.shouldUnregister
                ? keepStateOptions.keepDefaultValues
                    ? cloneObject(_defaultValues)
                    : {}
                : cloneUpdatedValues;
            _subjects.array.next({
                values,
            });
            _subjects.watch.next({
                values,
            });
        }
        _names = {
            mount: new Set(),
            unMount: new Set(),
            array: new Set(),
            watch: new Set(),
            watchAll: false,
            focus: '',
        };
        !_stateFlags.mount && flushRootRender();
        _stateFlags.mount =
            !_proxyFormState.isValid || !!keepStateOptions.keepIsValid;
        _stateFlags.watch = !!props.shouldUnregister;
        _subjects.state.next({
            submitCount: keepStateOptions.keepSubmitCount
                ? _formState.submitCount
                : 0,
            isDirty: keepStateOptions.keepDirty || keepStateOptions.keepDirtyValues
                ? _formState.isDirty
                : !!(keepStateOptions.keepDefaultValues &&
                    !deepEqual(formValues, _defaultValues)),
            isSubmitted: keepStateOptions.keepIsSubmitted
                ? _formState.isSubmitted
                : false,
            dirtyFields: keepStateOptions.keepDirty || keepStateOptions.keepDirtyValues
                ? _formState.dirtyFields
                : keepStateOptions.keepDefaultValues && formValues
                    ? getDirtyFields(_defaultValues, formValues)
                    : {},
            touchedFields: keepStateOptions.keepTouched
                ? _formState.touchedFields
                : {},
            errors: keepStateOptions.keepErrors ? _formState.errors : {},
            isSubmitting: false,
            isSubmitSuccessful: false,
        });
    };
    const reset = (formValues, keepStateOptions) => _reset(index_esm_isFunction(formValues)
        ? formValues(_formValues)
        : formValues, keepStateOptions);
    const setFocus = (name, options = {}) => {
        const field = index_esm_get(_fields, name);
        const fieldReference = field && field._f;
        if (fieldReference) {
            const fieldRef = fieldReference.refs
                ? fieldReference.refs[0]
                : fieldReference.ref;
            if (fieldRef.focus) {
                fieldRef.focus();
                options.shouldSelect && fieldRef.select();
            }
        }
    };
    if (index_esm_isFunction(_options.defaultValues)) {
        _options.defaultValues().then((values) => {
            reset(values, _options.resetOptions);
            _subjects.state.next({
                isLoading: false,
            });
        });
    }
    return {
        control: {
            register,
            unregister,
            getFieldState,
            _executeSchema,
            _focusError,
            _getWatch,
            _getDirty,
            _updateValid,
            _removeUnmounted,
            _updateFieldArray,
            _getFieldArray,
            _reset,
            _subjects,
            _proxyFormState,
            get _fields() {
                return _fields;
            },
            get _formValues() {
                return _formValues;
            },
            get _stateFlags() {
                return _stateFlags;
            },
            set _stateFlags(value) {
                _stateFlags = value;
            },
            get _defaultValues() {
                return _defaultValues;
            },
            get _names() {
                return _names;
            },
            set _names(value) {
                _names = value;
            },
            get _formState() {
                return _formState;
            },
            set _formState(value) {
                _formState = value;
            },
            get _options() {
                return _options;
            },
            set _options(value) {
                _options = {
                    ..._options,
                    ...value,
                };
            },
        },
        trigger,
        register,
        handleSubmit,
        watch,
        setValue,
        getValues,
        reset,
        resetField,
        clearErrors,
        unregister,
        setError,
        setFocus,
        getFieldState,
    };
}

/**
 * Custom hook to manage the entire form.
 *
 * @remarks
 * [API](https://react-hook-form.com/api/useform) • [Demo](https://codesandbox.io/s/react-hook-form-get-started-ts-5ksmm) • [Video](https://www.youtube.com/watch?v=RkXv4AXXC_4)
 *
 * @param props - form configuration and validation parameters.
 *
 * @returns methods - individual functions to manage the form state. {@link UseFormReturn}
 *
 * @example
 * ```tsx
 * function App() {
 *   const { register, handleSubmit, watch, formState: { errors } } = useForm();
 *   const onSubmit = data => console.log(data);
 *
 *   console.log(watch("example"));
 *
 *   return (
 *     <form onSubmit={handleSubmit(onSubmit)}>
 *       <input defaultValue="test" {...register("example")} />
 *       <input {...register("exampleRequired", { required: true })} />
 *       {errors.exampleRequired && <span>This field is required</span>}
 *       <input type="submit" />
 *     </form>
 *   );
 * }
 * ```
 */
function useForm(props = {}) {
    const _formControl = react.useRef();
    const [formState, updateFormState] = react.useState({
        isDirty: false,
        isValidating: false,
        isLoading: true,
        isSubmitted: false,
        isSubmitting: false,
        isSubmitSuccessful: false,
        isValid: false,
        submitCount: 0,
        dirtyFields: {},
        touchedFields: {},
        errors: {},
        defaultValues: index_esm_isFunction(props.defaultValues)
            ? undefined
            : props.defaultValues,
    });
    if (!_formControl.current) {
        _formControl.current = {
            ...createFormControl(props, () => updateFormState((formState) => ({ ...formState }))),
            formState,
        };
    }
    const control = _formControl.current.control;
    control._options = props;
    useSubscribe({
        subject: control._subjects.state,
        next: (value) => {
            if (shouldRenderFormState(value, control._proxyFormState, true)) {
                control._formState = {
                    ...control._formState,
                    ...value,
                };
                updateFormState({ ...control._formState });
            }
        },
    });
    react.useEffect(() => {
        if (!control._stateFlags.mount) {
            control._proxyFormState.isValid && control._updateValid();
            control._stateFlags.mount = true;
        }
        if (control._stateFlags.watch) {
            control._stateFlags.watch = false;
            control._subjects.state.next({});
        }
        control._removeUnmounted();
    });
    react.useEffect(() => {
        if (props.values && !deepEqual(props.values, control._defaultValues)) {
            control._reset(props.values, control._options.resetOptions);
        }
    }, [props.values, control]);
    react.useEffect(() => {
        formState.submitCount && control._focusError();
    }, [control, formState.submitCount]);
    _formControl.current.formState = getProxyFormState(formState, control);
    return _formControl.current;
}


//# sourceMappingURL=index.esm.mjs.map

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/input/index.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0







var Input = react.forwardRef(function (_a, ref) {
    var value = _a.value, _b = _a.type, type = _b === void 0 ? 'text' : _b, step = _a.step, inputMode = _a.inputMode, _c = _a.autoComplete, autoComplete = _c === void 0 ? true : _c, spellcheck = _a.spellcheck, disabled = _a.disabled, readOnly = _a.readOnly, disableBrowserAutocorrect = _a.disableBrowserAutocorrect, onKeyDown = _a.onKeyDown, onKeyUp = _a.onKeyUp, onChange = _a.onChange, onBlur = _a.onBlur, onFocus = _a.onFocus, ariaRequired = _a.ariaRequired, name = _a.name, placeholder = _a.placeholder, autoFocus = _a.autoFocus, ariaLabel = _a.ariaLabel, ariaLabelledby = _a.ariaLabelledby, ariaDescribedby = _a.ariaDescribedby, invalid = _a.invalid, controlId = _a.controlId, rest = __rest(_a, ["value", "type", "step", "inputMode", "autoComplete", "spellcheck", "disabled", "readOnly", "disableBrowserAutocorrect", "onKeyDown", "onKeyUp", "onChange", "onBlur", "onFocus", "ariaRequired", "name", "placeholder", "autoFocus", "ariaLabel", "ariaLabelledby", "ariaDescribedby", "invalid", "controlId"]);
    var baseComponentProps = useBaseComponent('Input');
    var baseProps = getBaseProps(rest);
    var inputRef = (0,react.useRef)(null);
    (0,react.useImperativeHandle)(ref, function () { return ({
        focus: function () {
            var _a;
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.focus.apply(_a, args);
        },
        select: function () {
            var _a;
            (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.select();
        }
    }); }, [inputRef]);
    return (react.createElement(input_internal, tslib_es6_assign({ ref: inputRef }, tslib_es6_assign(tslib_es6_assign(tslib_es6_assign({}, baseProps), baseComponentProps), { autoComplete: autoComplete, ariaLabel: ariaLabel, ariaRequired: ariaRequired, autoFocus: autoFocus, disabled: disabled, disableBrowserAutocorrect: disableBrowserAutocorrect, name: name, onKeyDown: onKeyDown, onKeyUp: onKeyUp, onChange: onChange, onBlur: onBlur, onFocus: onFocus, placeholder: placeholder, readOnly: readOnly, type: type, step: step, inputMode: inputMode, spellcheck: spellcheck, value: value, ariaDescribedby: ariaDescribedby, ariaLabelledby: ariaLabelledby, invalid: invalid, controlId: controlId }), { className: clsx_m(input_styles_css.root, baseProps.className), __inheritFormFieldProps: true })));
});
applyDisplayName(Input, 'Input');
/* harmony default export */ const input = (Input);
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./src/components/form/Input/index.tsx
var Input_excluded=["name","control","label","info","constraintText","description","secondaryControl","stretch","leftContent","onChange"],Input_excluded2=["onChange"];var FormInput=function(_ref){var name=_ref.name,control=_ref.control,label=_ref.label,info=_ref.info,constraintText=_ref.constraintText,description=_ref.description,secondaryControl=_ref.secondaryControl,stretch=_ref.stretch,leftContent=_ref.leftContent,onChangeProp=_ref.onChange,props=objectWithoutProperties_objectWithoutProperties(_ref,Input_excluded);return/*#__PURE__*/react.createElement(Controller,{name:name,control:control,render:function render(_ref2){var _ref2$field=_ref2.field,_onChange=_ref2$field.onChange,fieldRest=objectWithoutProperties_objectWithoutProperties(_ref2$field,Input_excluded2),error=_ref2.fieldState.error;return/*#__PURE__*/react.createElement(FormField,{description:description,label:label,info:info,stretch:stretch,constraintText:constraintText,secondaryControl:secondaryControl},leftContent,/*#__PURE__*/react.createElement(input,extends_extends({},fieldRest,props,{invalid:!!error,onChange:function onChange(event){_onChange(event.detail.value),onChangeProp&&onChangeProp(event)}})))}})};
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/select/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/select/styles.css.js


    /* harmony default export */ const select_styles_css = ({
  "root": "awsui_root_r2vco_1bz5w_93"
});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/select/parts/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/select/parts/styles.css.js


    /* harmony default export */ const parts_styles_css = ({
  "placeholder": "awsui_placeholder_dwuol_1dl3j_93",
  "item": "awsui_item_dwuol_1dl3j_98",
  "checkbox": "awsui_checkbox_dwuol_1dl3j_102",
  "filter": "awsui_filter_dwuol_1dl3j_111",
  "trigger": "awsui_trigger_dwuol_1dl3j_116",
  "layout-strut": "awsui_layout-strut_dwuol_1dl3j_140",
  "list-bottom": "awsui_list-bottom_dwuol_1dl3j_146",
  "selected-icon": "awsui_selected-icon_dwuol_1dl3j_150",
  "show-label-tag": "awsui_show-label-tag_dwuol_1dl3j_154"
});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/select/parts/filter.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0



var Filter = react.forwardRef(function (_a, ref) {
    var filteringType = _a.filteringType, filterProps = __rest(_a, ["filteringType"]);
    if (filteringType === 'none') {
        return null;
    }
    return (react.createElement(input_internal, tslib_es6_assign({ ref: ref, type: "visualSearch", className: parts_styles_css.filter, autoComplete: false, disableBrowserAutocorrect: true, invalid: false, __noBorderRadius: true }, filterProps, { __nativeAttributes: tslib_es6_assign({ 'aria-expanded': true, 'aria-haspopup': true, role: 'combobox', autoCorrect: 'off', autoCapitalize: 'off' }, filterProps.__nativeAttributes) })));
});
/* harmony default export */ const parts_filter = (Filter);
//# sourceMappingURL=filter.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/components/button-trigger/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/components/button-trigger/styles.css.js


    /* harmony default export */ const button_trigger_styles_css = ({
  "button-trigger": "awsui_button-trigger_18eso_1nqbt_97",
  "arrow": "awsui_arrow_18eso_1nqbt_97",
  "has-caret": "awsui_has-caret_18eso_1nqbt_135",
  "placeholder": "awsui_placeholder_18eso_1nqbt_138",
  "pressed": "awsui_pressed_18eso_1nqbt_151",
  "disabled": "awsui_disabled_18eso_1nqbt_154",
  "in-filtering-token": "awsui_in-filtering-token_18eso_1nqbt_163",
  "read-only": "awsui_read-only_18eso_1nqbt_169",
  "invalid": "awsui_invalid_18eso_1nqbt_186"
});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/components/button-trigger/index.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0







var button_trigger_ButtonTrigger = function (_a, ref) {
    var children = _a.children, _b = _a.pressed, pressed = _b === void 0 ? false : _b, _c = _a.hideCaret, hideCaret = _c === void 0 ? false : _c, _d = _a.disabled, disabled = _d === void 0 ? false : _d, _e = _a.readOnly, readOnly = _e === void 0 ? false : _e, _f = _a.invalid, invalid = _f === void 0 ? false : _f, inFilteringToken = _a.inFilteringToken, ariaHasPopup = _a.ariaHasPopup, ariaLabel = _a.ariaLabel, ariaLabelledby = _a.ariaLabelledby, ariaDescribedby = _a.ariaDescribedby, onKeyDown = _a.onKeyDown, onKeyUp = _a.onKeyUp, onMouseDown = _a.onMouseDown, onClick = _a.onClick, onFocus = _a.onFocus, onBlur = _a.onBlur, autoFocus = _a.autoFocus, restProps = __rest(_a, ["children", "pressed", "hideCaret", "disabled", "readOnly", "invalid", "inFilteringToken", "ariaHasPopup", "ariaLabel", "ariaLabelledby", "ariaDescribedby", "onKeyDown", "onKeyUp", "onMouseDown", "onClick", "onFocus", "onBlur", "autoFocus"]);
    var baseProps = getBaseProps(restProps);
    var focusVisible = useFocusVisible();
    var attributes = tslib_es6_assign(tslib_es6_assign(tslib_es6_assign({}, focusVisible), baseProps), { type: 'button', className: clsx_m(button_trigger_styles_css["button-trigger"], baseProps.className, pressed && button_trigger_styles_css.pressed, disabled && button_trigger_styles_css.disabled, invalid && button_trigger_styles_css.invalid, !hideCaret && button_trigger_styles_css["has-caret"], readOnly && button_trigger_styles_css["read-only"], inFilteringToken && button_trigger_styles_css["in-filtering-token"]), disabled: disabled || readOnly, 'aria-expanded': pressed, 'aria-label': ariaLabel, 'aria-labelledby': ariaLabelledby, 'aria-describedby': ariaDescribedby, 'aria-haspopup': ariaHasPopup !== null && ariaHasPopup !== void 0 ? ariaHasPopup : 'listbox', onKeyDown: onKeyDown && (function (event) { return fireKeyboardEvent(onKeyDown, event); }), onKeyUp: onKeyUp && (function (event) { return fireKeyboardEvent(onKeyUp, event); }), onMouseDown: onMouseDown && (function (event) { return fireCancelableEvent(onMouseDown, {}, event); }), onClick: onClick && (function (event) { return fireCancelableEvent(onClick, {}, event); }), onFocus: onFocus && (function (event) { return fireCancelableEvent(onFocus, {}, event); }), onBlur: onBlur && (function (event) { return fireCancelableEvent(onBlur, { relatedTarget: event.relatedTarget }, event); }), autoFocus: autoFocus });
    if (invalid) {
        attributes['aria-invalid'] = invalid;
    }
    return (react.createElement("button", tslib_es6_assign({ ref: ref }, attributes),
        children,
        !hideCaret && (react.createElement("span", { className: button_trigger_styles_css.arrow },
            react.createElement(internal, { name: "caret-down-filled", variant: disabled ? 'disabled' : 'normal' })))));
};
/* harmony default export */ const button_trigger = (react.forwardRef(button_trigger_ButtonTrigger));
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/select/parts/trigger.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0








var Trigger = react.forwardRef(function (_a, ref) {
    var ariaLabelledby = _a.ariaLabelledby, ariaDescribedby = _a.ariaDescribedby, controlId = _a.controlId, invalid = _a.invalid, triggerProps = _a.triggerProps, selectedOption = _a.selectedOption, triggerVariant = _a.triggerVariant, inFilteringToken = _a.inFilteringToken, isOpen = _a.isOpen, placeholder = _a.placeholder, disabled = _a.disabled;
    var id = (0,react.useMemo)(function () { return controlId !== null && controlId !== void 0 ? controlId : generateUniqueId(); }, [controlId]);
    var triggerContentId = generateUniqueId('trigger-content-');
    var triggerContent = null;
    if (!selectedOption) {
        triggerContent = (react.createElement("span", { "aria-disabled": "true", className: clsx_m(parts_styles_css.placeholder, parts_styles_css.trigger), id: triggerContentId }, placeholder));
    }
    else if (triggerVariant === 'option') {
        triggerContent = react.createElement(components_option, { id: triggerContentId, option: tslib_es6_assign(tslib_es6_assign({}, selectedOption), { disabled: disabled }), triggerVariant: true });
    }
    else {
        triggerContent = (react.createElement("span", { id: triggerContentId, className: parts_styles_css.trigger }, selectedOption.label || selectedOption.value));
    }
    var mergedRef = useMergeRefs(triggerProps.ref, ref);
    return (react.createElement(button_trigger, tslib_es6_assign({}, triggerProps, { id: id, ref: mergedRef, pressed: isOpen, disabled: disabled, invalid: invalid, inFilteringToken: inFilteringToken, ariaDescribedby: ariaDescribedby, ariaLabelledby: joinStrings(ariaLabelledby, triggerContentId) }), triggerContent));
});
/* harmony default export */ const parts_trigger = (Trigger);
//# sourceMappingURL=trigger.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/components/option/utils/flatten-options.js

var flattenOptions = function (options) {
    var parentMap = new Map();
    var flatOptions = options.reduce(function (acc, option) {
        if ('options' in option) {
            var options_1 = option.options, rest_1 = __rest(option, ["options"]);
            var parentDropdownOption_1 = { type: 'parent', option: option };
            var allOptionsDisabled = options_1.every(function (option) { return option.disabled; });
            if (option.disabled || allOptionsDisabled) {
                parentDropdownOption_1.disabled = true;
            }
            acc.push(parentDropdownOption_1);
            options_1.forEach(function (child) {
                var childDropdownOption = { type: 'child', option: child };
                if (rest_1.disabled || child.disabled) {
                    childDropdownOption.disabled = true;
                }
                acc.push(childDropdownOption);
                parentMap.set(childDropdownOption, parentDropdownOption_1);
            });
        }
        else {
            var dropdownOption = { option: option };
            if (option.disabled) {
                dropdownOption.disabled = true;
            }
            acc.push(dropdownOption);
        }
        return acc;
    }, []);
    return {
        flatOptions: flatOptions,
        parentMap: parentMap
    };
};
//# sourceMappingURL=flatten-options.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/components/option/utils/filter-options.js
var searchableFields = ['value', 'label', 'description', 'labelTag'];
var matchesString = function (value, searchText, strictMatching) {
    if (!value) {
        return false;
    }
    var index = value.toLowerCase().indexOf(searchText);
    return strictMatching ? index === 0 : index > -1;
};
var matchesSingleOption = function (dropdownOption, text, strictMatching) {
    var searchText = text.toLowerCase();
    var option = dropdownOption.option;
    var searchStrFields = function (attr) { return matchesString(option[attr], searchText, strictMatching); };
    var searchTagsFields = function (attr) { var _a; return (_a = option[attr]) === null || _a === void 0 ? void 0 : _a.some(function (value) { return matchesString(value, searchText, strictMatching); }); };
    var searchableTagFields = ['tags'];
    if (!strictMatching) {
        searchableTagFields.push('filteringTags');
    }
    return searchableFields.some(searchStrFields) || searchableTagFields.some(searchTagsFields);
};
var filter_options_filterOptions = function (options, searchText, strictMatching) {
    if (strictMatching === void 0) { strictMatching = false; }
    if (searchText === '') {
        return options;
    }
    var currentGroup = null;
    var parentMatched = false;
    return options.reduce(function (acc, option) {
        if (option.type === 'parent') {
            parentMatched = false;
            currentGroup = option;
            if (matchesSingleOption(option, searchText, strictMatching)) {
                parentMatched = true;
                acc.push(currentGroup);
            }
            return acc;
        }
        if (option.type !== 'child') {
            currentGroup = null;
            parentMatched = false;
        }
        if (parentMatched) {
            acc.push(option);
        }
        else if (matchesSingleOption(option, searchText, strictMatching)) {
            if (currentGroup) {
                acc.push(currentGroup);
                currentGroup = null;
            }
            acc.push(option);
        }
        return acc;
    }, []);
};
var filter_options_isInteractive = function (option) { return !!option && !option.disabled && option.type !== 'parent'; };
var isGroupInteractive = function (option) { return !!option && !option.disabled; };
var filter_options_isGroup = function (option) {
    return !!option && 'options' in option;
};
//# sourceMappingURL=filter-options.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/components/option/utils/prepare-options.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0



function prepareOptions(options, filteringType, filteringText) {
    var _a = flattenOptions(options), flatOptions = _a.flatOptions, parentMap = _a.parentMap;
    var filteredOptions = filteringType !== 'auto' ? flatOptions : filter_options_filterOptions(flatOptions, filteringText);
    generateTestIndexes(filteredOptions, parentMap.get.bind(parentMap));
    return { filteredOptions: filteredOptions, parentMap: parentMap };
}
//# sourceMappingURL=prepare-options.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/components/options-list/utils/use-keyboard.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0


var HOME = 36;
var END = 35;
var useMenuKeyboard = function (_a) {
    var moveHighlight = _a.moveHighlight, selectOption = _a.selectOption, goHome = _a.goHome, goEnd = _a.goEnd, closeDropdown = _a.closeDropdown, isSelectingUsingSpace = _a.isSelectingUsingSpace, _b = _a.preventNativeSpace, preventNativeSpace = _b === void 0 ? false : _b;
    return (0,react.useCallback)(function (e) {
        switch (e.detail.keyCode) {
            case KeyCode.up:
                e.preventDefault();
                moveHighlight(-1);
                break;
            case KeyCode.down:
                e.preventDefault();
                moveHighlight(1);
                break;
            case HOME:
                goHome();
                break;
            case END:
                goEnd();
                break;
            case KeyCode.escape:
                closeDropdown();
                break;
            case KeyCode.enter:
                e.preventDefault();
                selectOption();
                break;
            case KeyCode.space:
                if (preventNativeSpace) {
                    e.preventDefault();
                    selectOption();
                    isSelectingUsingSpace.current = true;
                }
        }
    }, [moveHighlight, selectOption, goHome, goEnd, closeDropdown, isSelectingUsingSpace, preventNativeSpace]);
};
var useTriggerKeyboard = function (_a) {
    var openDropdown = _a.openDropdown, goHome = _a.goHome;
    return (0,react.useCallback)(function (e) {
        switch (e.detail.keyCode) {
            case KeyCode.up:
            case KeyCode.down:
                e.preventDefault();
                goHome();
                openDropdown();
                break;
            case KeyCode.space:
                e.preventDefault();
                openDropdown();
                break;
        }
    }, [openDropdown, goHome]);
};
//# sourceMappingURL=use-keyboard.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/components/options-list/utils/use-ids.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
var getOptionId = function (menuId, index) {
    if (index < 0) {
        return undefined;
    }
    return "".concat(menuId, "-option-").concat(index);
};
//# sourceMappingURL=use-ids.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/select/utils/connect-options.js
var connectOptionsByValue = function (options, selectedOptions) {
    return (selectedOptions || []).map(function (selectedOption) {
        for (var _i = 0, options_1 = options; _i < options_1.length; _i++) {
            var dropdownOption = options_1[_i];
            if (dropdownOption.type !== 'parent' &&
                dropdownOption.option.value === selectedOption.value) {
                return dropdownOption;
            }
        }
        return { option: selectedOption };
    });
};
var findOptionIndex = function (options, option) {
    for (var index = 0; index < options.length; index++) {
        var __option = options[index];
        if (__option === option || __option.value === option.value) {
            return index;
        }
    }
    return -1;
};
//# sourceMappingURL=connect-options.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/select/utils/use-select.js











function useSelect(_a) {
    var selectedOptions = _a.selectedOptions, updateSelectedOption = _a.updateSelectedOption, options = _a.options, filteringType = _a.filteringType, onBlur = _a.onBlur, onFocus = _a.onFocus, externalRef = _a.externalRef, keepOpen = _a.keepOpen, fireLoadItems = _a.fireLoadItems, setFilteringValue = _a.setFilteringValue, _b = _a.useInteractiveGroups, useInteractiveGroups = _b === void 0 ? false : _b;
    var interactivityCheck = useInteractiveGroups ? isGroupInteractive : filter_options_isInteractive;
    var isHighlightable = function (option) { return !!option && (useInteractiveGroups || option.type !== 'parent'); };
    var filterRef = (0,react.useRef)(null);
    var triggerRef = (0,react.useRef)(null);
    var menuRef = (0,react.useRef)(null);
    var hasFilter = filteringType !== 'none';
    var activeRef = hasFilter ? filterRef : menuRef;
    var isSelectingUsingSpace = (0,react.useRef)(false);
    var __selectedOptions = connectOptionsByValue(options, selectedOptions);
    var __selectedValuesSet = selectedOptions.reduce(function (selectedValuesSet, item) {
        if (item.value) {
            selectedValuesSet.add(item.value);
        }
        return selectedValuesSet;
    }, new Set());
    var _c = useHighlightedOption({ options: options, isHighlightable: isHighlightable }), _d = _c[0], highlightType = _d.highlightType, highlightedOption = _d.highlightedOption, highlightedIndex = _d.highlightedIndex, _e = _c[1], moveHighlightWithKeyboard = _e.moveHighlightWithKeyboard, resetHighlightWithKeyboard = _e.resetHighlightWithKeyboard, setHighlightedIndexWithMouse = _e.setHighlightedIndexWithMouse, highlightOptionWithKeyboard = _e.highlightOptionWithKeyboard, goHomeWithKeyboard = _e.goHomeWithKeyboard, goEndWithKeyboard = _e.goEndWithKeyboard;
    var _f = useOpenState({
        onOpen: function () { return fireLoadItems(''); },
        onClose: function () {
            resetHighlightWithKeyboard();
            setFilteringValue('');
        }
    }), isOpen = _f.isOpen, openDropdown = _f.openDropdown, closeDropdown = _f.closeDropdown, toggleDropdown = _f.toggleDropdown;
    var handleFocus = function () {
        fireNonCancelableEvent(onFocus, {});
    };
    var handleBlur = function () {
        fireNonCancelableEvent(onBlur, {});
        closeDropdown();
    };
    var hasSelectedOption = __selectedOptions.length > 0;
    var menuId = useUniqueId('option-list');
    var highlightedOptionId = getOptionId(menuId, highlightedIndex);
    var selectOption = function (option) {
        var _a;
        isSelectingUsingSpace.current = false;
        var optionToSelect = option || highlightedOption;
        if (!optionToSelect || !interactivityCheck(optionToSelect)) {
            return;
        }
        updateSelectedOption(optionToSelect.option);
        if (!keepOpen) {
            (_a = triggerRef.current) === null || _a === void 0 ? void 0 : _a.focus();
            closeDropdown();
        }
    };
    var activeKeyDownHandler = useMenuKeyboard({
        moveHighlight: moveHighlightWithKeyboard,
        selectOption: selectOption,
        goHome: goHomeWithKeyboard,
        goEnd: goEndWithKeyboard,
        closeDropdown: function () {
            var _a;
            (_a = triggerRef.current) === null || _a === void 0 ? void 0 : _a.focus();
            closeDropdown();
        },
        isSelectingUsingSpace: isSelectingUsingSpace,
        preventNativeSpace: !hasFilter
    });
    var triggerKeyDownHandler = useTriggerKeyboard({ openDropdown: openDropdown, goHome: goHomeWithKeyboard });
    var getDropdownProps = function () { return ({
        onFocus: handleFocus,
        onBlur: handleBlur
    }); };
    var getTriggerProps = function (disabled, autoFocus) {
        if (disabled === void 0) { disabled = false; }
        if (autoFocus === void 0) { autoFocus = false; }
        var triggerProps = {
            ref: triggerRef,
            onFocus: function () { return closeDropdown(); },
            autoFocus: autoFocus
        };
        if (!disabled) {
            triggerProps.onMouseDown = function (event) {
                var _a;
                event.preventDefault(); // prevent current focus from blurring as it immediately closes the dropdown
                if (isOpen) {
                    (_a = triggerRef.current) === null || _a === void 0 ? void 0 : _a.focus();
                }
                toggleDropdown();
            };
            triggerProps.onKeyDown = triggerKeyDownHandler;
        }
        return triggerProps;
    };
    var getFilterProps = function () {
        var _a;
        if (!hasFilter) {
            return {};
        }
        return {
            ref: filterRef,
            onKeyDown: activeKeyDownHandler,
            onChange: function (event) {
                setFilteringValue(event.detail.value);
                resetHighlightWithKeyboard();
            },
            __onDelayedInput: function (event) {
                fireLoadItems(event.detail.value);
            },
            __nativeAttributes: (_a = {
                    'aria-activedescendant': highlightedOptionId
                },
                _a['aria-owns'] = menuId,
                _a['aria-controls'] = menuId,
                _a)
        };
    };
    var getMenuProps = function () {
        var menuProps = {
            id: menuId,
            ref: menuRef,
            open: isOpen,
            onMouseUp: function (itemIndex) {
                if (itemIndex > -1) {
                    selectOption(options[itemIndex]);
                }
            },
            onMouseMove: function (itemIndex) {
                if (itemIndex > -1) {
                    setHighlightedIndexWithMouse(itemIndex);
                }
            }
        };
        if (!hasFilter) {
            menuProps.onKeyDown = activeKeyDownHandler;
            menuProps.nativeAttributes = {
                'aria-activedescendant': highlightedOptionId
            };
        }
        return menuProps;
    };
    var getGroupState = function (option) {
        var totalSelected = option.options.filter(function (item) { return !!item.value && __selectedValuesSet.has(item.value); }).length;
        var hasSelected = totalSelected > 0;
        var allSelected = totalSelected === option.options.length;
        return {
            selected: hasSelected && allSelected,
            indeterminate: hasSelected && !allSelected
        };
    };
    var getOptionProps = function (option, index) {
        var _a;
        var _b;
        var highlighted = option === highlightedOption;
        var groupState = filter_options_isGroup(option.option) ? getGroupState(option.option) : undefined;
        var selected = __selectedOptions.indexOf(option) > -1 || !!(groupState === null || groupState === void 0 ? void 0 : groupState.selected);
        var nextOption = (_b = options[index + 1]) === null || _b === void 0 ? void 0 : _b.option;
        var isNextSelected = !!nextOption && filter_options_isGroup(nextOption)
            ? getGroupState(nextOption).selected
            : __selectedOptions.indexOf(options[index + 1]) > -1;
        var optionProps = (_a = {
                key: index,
                option: option,
                highlighted: highlighted,
                selected: selected,
                isNextSelected: isNextSelected,
                indeterminate: !!(groupState === null || groupState === void 0 ? void 0 : groupState.indeterminate)
            },
            _a['data-mouse-target'] = isHighlightable(option) ? index : -1,
            _a.id = getOptionId(menuId, index),
            _a);
        return optionProps;
    };
    var prevOpen = use_previous_usePrevious(isOpen);
    (0,react.useEffect)(function () {
        // highlight the first selected option, when opening the Select component without filter input
        // keep the focus in the filter input when opening, so that screenreader can recognize the combobox
        if (isOpen && !prevOpen && hasSelectedOption && !hasFilter) {
            setHighlightedIndexWithMouse(options.indexOf(__selectedOptions[0]));
        }
    }, [isOpen, __selectedOptions, hasSelectedOption, setHighlightedIndexWithMouse, options, prevOpen, hasFilter]);
    (0,react.useEffect)(function () {
        var _a;
        if (isOpen) {
            // dropdown-fit calculations ensure that the dropdown will fit inside the current
            // viewport, so prevent the browser from trying to scroll it into view (e.g. if
            // scroll-padding-top is set on a parent)
            (_a = activeRef.current) === null || _a === void 0 ? void 0 : _a.focus({ preventScroll: true });
        }
    }, [isOpen, activeRef]);
    useForwardFocus(externalRef, triggerRef);
    var highlightedGroupSelected = !!highlightedOption && filter_options_isGroup(highlightedOption.option) && getGroupState(highlightedOption.option).selected;
    var announceSelected = !!highlightedOption && (__selectedOptions.indexOf(highlightedOption) > -1 || highlightedGroupSelected);
    return {
        isOpen: isOpen,
        highlightedOption: highlightedOption,
        highlightedIndex: highlightedIndex,
        highlightType: highlightType,
        getTriggerProps: getTriggerProps,
        getDropdownProps: getDropdownProps,
        getMenuProps: getMenuProps,
        getFilterProps: getFilterProps,
        getOptionProps: getOptionProps,
        highlightOption: highlightOptionWithKeyboard,
        selectOption: selectOption,
        announceSelected: announceSelected
    };
}
//# sourceMappingURL=use-select.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/select/utils/use-native-search.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0




var isChar = function (keyCode) {
    return [0, KeyCode.enter, KeyCode.space, KeyCode.tab].indexOf(keyCode) === -1;
};
var isRepeatedChar = function (str) { return str.split('').every(function (c) { return c === str[0]; }); };
function findMatchingOption(options, searchText, currentHighlight, useInteractiveGroups) {
    var interactivityCheck = useInteractiveGroups ? isGroupInteractive : filter_options_isInteractive;
    var filter = function (searchText) {
        return filter_options_filterOptions(options, searchText, true).filter(function (option) { return interactivityCheck(option); });
    };
    var matchingOptions = filter(searchText);
    if (matchingOptions.length === 1) {
        return matchingOptions[0];
    }
    // Hit the same char over and over, we assume they want to cycle through
    if (currentHighlight && searchText.length > 1 && isRepeatedChar(searchText)) {
        var matchingOptions_1 = filter(searchText[0]);
        if (matchingOptions_1.length > 0) {
            //handling OptionGroups when useInteractiveGroups is set
            var active = filter_options_isGroup(currentHighlight)
                ? matchingOptions_1.map(function (_a) {
                    var option = _a.option;
                    return option;
                }).indexOf(currentHighlight)
                : matchingOptions_1
                    .map(function (_a) {
                    var option = _a.option;
                    return option.value;
                })
                    .indexOf(currentHighlight.value);
            // Pick the next thing (if something with this prefix wasn't selected
            // we'll end up with the first option)
            active += 1;
            active = active % matchingOptions_1.length;
            return matchingOptions_1[active];
        }
    }
    // We have multiple things that start with this prefix.  Based on the
    // behavior of native select, this is considered after the repeated case
    if (matchingOptions.length > 0) {
        return matchingOptions[0];
    }
    return null;
}
function useNativeSearch(_a) {
    var isEnabled = _a.isEnabled, options = _a.options, highlightOption = _a.highlightOption, highlightedOption = _a.highlightedOption, useInteractiveGroups = _a.useInteractiveGroups;
    var value = (0,react.useRef)('');
    var delayedResetValue = useDebounceCallback(function () { return (value.current = ''); }, 500);
    return function (event) {
        if (!isEnabled) {
            return;
        }
        var charCode = event.charCode;
        if (!isChar(charCode)) {
            return;
        }
        delayedResetValue();
        var newValue = value.current + String.fromCharCode(charCode);
        value.current = newValue;
        var nextHighlight = findMatchingOption(options, newValue, highlightedOption, useInteractiveGroups);
        if (nextHighlight) {
            highlightOption(nextHighlight);
        }
    };
}
//# sourceMappingURL=use-native-search.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/select/utils/use-load-items.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0


var useLoadItems = function (_a) {
    var onLoadItems = _a.onLoadItems, options = _a.options, statusType = _a.statusType;
    var prevFilteringText = (0,react.useRef)(undefined);
    var fireLoadItems = function (filteringText) {
        if (prevFilteringText.current === filteringText) {
            return;
        }
        prevFilteringText.current = filteringText;
        fireNonCancelableEvent(onLoadItems, { filteringText: filteringText, firstPage: true, samePage: false });
    };
    var handleLoadMore = function () {
        var firstPage = options.length === 0;
        statusType === 'pending' &&
            fireNonCancelableEvent(onLoadItems, {
                firstPage: firstPage,
                samePage: false,
                filteringText: prevFilteringText.current || ''
            });
    };
    var handleRecoveryClick = function () {
        return fireNonCancelableEvent(onLoadItems, {
            firstPage: false,
            samePage: true,
            filteringText: prevFilteringText.current || ''
        });
    };
    return {
        fireLoadItems: fireLoadItems,
        handleLoadMore: handleLoadMore,
        handleRecoveryClick: handleRecoveryClick
    };
};
//# sourceMappingURL=use-load-items.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/select/parts/item.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0








var Item = function (_a, ref) {
    var option = _a.option, highlighted = _a.highlighted, selected = _a.selected, filteringValue = _a.filteringValue, hasCheckbox = _a.hasCheckbox, virtualPosition = _a.virtualPosition, padBottom = _a.padBottom, isNextSelected = _a.isNextSelected, screenReaderContent = _a.screenReaderContent, ariaPosinset = _a.ariaPosinset, ariaSetsize = _a.ariaSetsize, highlightType = _a.highlightType, restProps = __rest(_a, ["option", "highlighted", "selected", "filteringValue", "hasCheckbox", "virtualPosition", "padBottom", "isNextSelected", "screenReaderContent", "ariaPosinset", "ariaSetsize", "highlightType"]);
    var baseProps = getBaseProps(restProps);
    var isParent = option.type === 'parent';
    var isChild = option.type === 'child';
    var wrappedOption = option.option;
    var disabled = option.disabled || wrappedOption.disabled;
    return (react.createElement(selectable_item, tslib_es6_assign({ ariaSelected: Boolean(selected), selected: selected, isNextSelected: isNextSelected, highlighted: highlighted, disabled: option.disabled, isParent: isParent, isChild: isChild, ref: ref, virtualPosition: virtualPosition, padBottom: padBottom, screenReaderContent: screenReaderContent, ariaPosinset: ariaPosinset, ariaSetsize: ariaSetsize, highlightType: highlightType }, baseProps),
        react.createElement("div", { className: clsx_m(parts_styles_css.item, !isParent && wrappedOption.labelTag && parts_styles_css["show-label-tag"]) },
            hasCheckbox && !isParent && (react.createElement("div", { className: parts_styles_css.checkbox },
                react.createElement(checkbox_icon, { checked: selected || false, disabled: option.disabled }))),
            isParent ? (wrappedOption.label || wrappedOption.value) : (react.createElement(components_option, { option: tslib_es6_assign(tslib_es6_assign({}, wrappedOption), { disabled: disabled }), highlightText: filteringValue })),
            !hasCheckbox && !isParent && selected && (react.createElement("div", { className: parts_styles_css["selected-icon"] },
                react.createElement(internal, { name: "check" }))))));
};
/* harmony default export */ const item = (react.memo(react.forwardRef(Item)));
//# sourceMappingURL=item.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/select/parts/multiselect-item.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0







var MultiSelectItem = function (_a, ref) {
    var _b;
    var option = _a.option, highlighted = _a.highlighted, selected = _a.selected, filteringValue = _a.filteringValue, hasCheckbox = _a.hasCheckbox, virtualPosition = _a.virtualPosition, padBottom = _a.padBottom, isNextSelected = _a.isNextSelected, indeterminate = _a.indeterminate, screenReaderContent = _a.screenReaderContent, ariaPosinset = _a.ariaPosinset, ariaSetsize = _a.ariaSetsize, highlightType = _a.highlightType, restProps = __rest(_a, ["option", "highlighted", "selected", "filteringValue", "hasCheckbox", "virtualPosition", "padBottom", "isNextSelected", "indeterminate", "screenReaderContent", "ariaPosinset", "ariaSetsize", "highlightType"]);
    var baseProps = getBaseProps(restProps);
    var isParent = option.type === 'parent';
    var isChild = option.type === 'child';
    var wrappedOption = option.option;
    var disabled = option.disabled || wrappedOption.disabled;
    var className = clsx_m(parts_styles_css.item, (_b = {},
        _b[parts_styles_css.disabled] = disabled,
        _b));
    return (react.createElement(selectable_item, tslib_es6_assign({ ariaChecked: isParent && indeterminate ? 'mixed' : Boolean(selected), selected: selected, isNextSelected: isNextSelected, highlighted: highlighted, disabled: disabled, isParent: isParent, isChild: isChild, highlightType: highlightType, ref: ref, virtualPosition: virtualPosition, padBottom: padBottom, useInteractiveGroups: true, screenReaderContent: screenReaderContent, ariaPosinset: ariaPosinset, ariaSetsize: ariaSetsize }, baseProps),
        react.createElement("div", { className: className },
            hasCheckbox && (react.createElement("div", { className: parts_styles_css.checkbox },
                react.createElement(checkbox_icon, { checked: selected, indeterminate: isParent && indeterminate, disabled: option.disabled }))),
            react.createElement(components_option, { option: tslib_es6_assign(tslib_es6_assign({}, wrappedOption), { disabled: disabled }), highlightText: filteringValue, isGroupOption: isParent }))));
};
/* harmony default export */ const multiselect_item = (react.memo(react.forwardRef(MultiSelectItem)));
//# sourceMappingURL=multiselect-item.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/select/utils/get-item-props.js


var getItemProps = function (_a) {
    var _b;
    var option = _a.option, index = _a.index, getOptionProps = _a.getOptionProps, filteringValue = _a.filteringValue, _c = _a.checkboxes, checkboxes = _c === void 0 ? false : _c;
    var optionProps = getOptionProps(option, index);
    optionProps.filteringValue = filteringValue;
    var _d = getTestOptionIndexes(option) || {}, inGroupIndex = _d.inGroupIndex, groupIndex = _d.groupIndex, throughIndex = _d.throughIndex;
    return tslib_es6_assign(tslib_es6_assign({}, optionProps), (_b = { hasCheckbox: checkboxes }, _b['data-group-index'] = groupIndex, _b['data-child-index'] = inGroupIndex, _b['data-test-index'] = throughIndex, _b));
};
//# sourceMappingURL=get-item-props.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/select/utils/render-options.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0




var renderOptions = function (_a) {
    var options = _a.options, getOptionProps = _a.getOptionProps, filteringValue = _a.filteringValue, highlightType = _a.highlightType, _b = _a.checkboxes, checkboxes = _b === void 0 ? false : _b, hasDropdownStatus = _a.hasDropdownStatus, virtualItems = _a.virtualItems, useInteractiveGroups = _a.useInteractiveGroups, screenReaderContent = _a.screenReaderContent, ariaSetsize = _a.ariaSetsize;
    return options.map(function (option, index) {
        var virtualItem = virtualItems && virtualItems[index];
        var globalIndex = virtualItem ? virtualItem.index : index;
        var props = getItemProps({
            option: option,
            index: globalIndex,
            getOptionProps: getOptionProps,
            filteringValue: filteringValue,
            checkboxes: checkboxes
        });
        var isLastItem = index === options.length - 1;
        var padBottom = !hasDropdownStatus && isLastItem;
        var ListItem = useInteractiveGroups ? multiselect_item : item;
        return (react.createElement(ListItem, tslib_es6_assign({ key: globalIndex }, props, { virtualPosition: virtualItem && virtualItem.start, ref: virtualItem && virtualItem.measureRef, padBottom: padBottom, screenReaderContent: screenReaderContent, ariaPosinset: globalIndex + 1, ariaSetsize: ariaSetsize, highlightType: highlightType })));
    });
};
//# sourceMappingURL=render-options.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/select/parts/plain-list.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0





var plain_list_PlainList = function (_a, ref) {
    var menuProps = _a.menuProps, getOptionProps = _a.getOptionProps, filteredOptions = _a.filteredOptions, filteringValue = _a.filteringValue, highlightType = _a.highlightType, checkboxes = _a.checkboxes, hasDropdownStatus = _a.hasDropdownStatus, listBottom = _a.listBottom, useInteractiveGroups = _a.useInteractiveGroups, screenReaderContent = _a.screenReaderContent;
    var menuRef = menuProps.ref;
    (0,react.useImperativeHandle)(ref, function () { return function (index) {
        var _a;
        var item = (_a = menuRef.current) === null || _a === void 0 ? void 0 : _a.querySelector("[data-mouse-target=\"".concat(index, "\"]"));
        if (highlightType === 'keyboard' && item) {
            scrollElementIntoView(item);
        }
    }; }, [highlightType, menuRef]);
    return (react.createElement(options_list, tslib_es6_assign({}, menuProps),
        renderOptions({
            options: filteredOptions,
            getOptionProps: getOptionProps,
            filteringValue: filteringValue,
            highlightType: highlightType,
            checkboxes: checkboxes,
            hasDropdownStatus: hasDropdownStatus,
            useInteractiveGroups: useInteractiveGroups,
            screenReaderContent: screenReaderContent
        }),
        listBottom ? (react.createElement("li", { role: "option", className: parts_styles_css["list-bottom"] }, listBottom)) : null));
};
/* harmony default export */ const parts_plain_list = ((0,react.forwardRef)(plain_list_PlainList));
//# sourceMappingURL=plain-list.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/select/parts/virtual-list.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0







var virtual_list_VirtualList = function (props, ref) {
    return props.menuProps.open ? react.createElement(VirtualListOpen, tslib_es6_assign({}, props, { ref: ref })) : react.createElement(VirtualListClosed, tslib_es6_assign({}, props, { ref: ref }));
};
var VirtualListOpen = (0,react.forwardRef)(function (_a, ref) {
    var menuProps = _a.menuProps, getOptionProps = _a.getOptionProps, filteredOptions = _a.filteredOptions, filteringValue = _a.filteringValue, highlightType = _a.highlightType, checkboxes = _a.checkboxes, hasDropdownStatus = _a.hasDropdownStatus, listBottom = _a.listBottom, useInteractiveGroups = _a.useInteractiveGroups, screenReaderContent = _a.screenReaderContent;
    // update component, when it gets wider or narrower to reposition items
    var _b = useContainerQuery(function (rect) { return rect.width; }, []), width = _b[0], menuMeasureRef = _b[1];
    var menuRefObject = (0,react.useRef)(null);
    var menuRef = useMergeRefs(menuMeasureRef, menuRefObject, menuProps.ref);
    var _c = useVirtual({
        size: filteredOptions.length,
        parentRef: menuRefObject,
        // estimateSize is a dependency of measurements memo. We update it to force full recalculation
        // when the height of any option could have changed:
        // 1: because the component got resized (width property got updated)
        // 2: because the option changed its content (filteringValue property controls the highlight and the visibility of hidden tags)
        // eslint-disable-next-line react-hooks/exhaustive-deps
        estimateSize: (0,react.useCallback)(function () { return 31; }, [width, filteringValue]),
        overscan: 5
    }), virtualItems = _c.virtualItems, totalSize = _c.totalSize, scrollToIndex = _c.scrollToIndex;
    (0,react.useImperativeHandle)(ref, function () { return function (index) {
        if (highlightType === 'keyboard') {
            scrollToIndex(index);
        }
    }; }, [highlightType, scrollToIndex]);
    var finalOptions = renderOptions({
        options: virtualItems.map(function (_a) {
            var index = _a.index;
            return filteredOptions[index];
        }),
        getOptionProps: getOptionProps,
        filteringValue: filteringValue,
        highlightType: highlightType,
        checkboxes: checkboxes,
        hasDropdownStatus: hasDropdownStatus,
        virtualItems: virtualItems,
        useInteractiveGroups: useInteractiveGroups,
        screenReaderContent: screenReaderContent,
        ariaSetsize: filteredOptions.length
    });
    return (react.createElement(options_list, tslib_es6_assign({}, menuProps, { ref: menuRef }),
        react.createElement("div", { "aria-hidden": "true", key: "total-size", className: parts_styles_css["layout-strut"], style: { height: totalSize } }),
        finalOptions,
        listBottom ? (react.createElement("li", { role: "option", className: parts_styles_css["list-bottom"] }, listBottom)) : null));
});
var VirtualListClosed = (0,react.forwardRef)(function (_a, ref) {
    var menuProps = _a.menuProps, listBottom = _a.listBottom;
    (0,react.useImperativeHandle)(ref, function () { return function () { }; }, []);
    return (react.createElement(options_list, tslib_es6_assign({}, menuProps, { ref: menuProps.ref }), listBottom ? (react.createElement("li", { role: "option", className: parts_styles_css["list-bottom"] }, listBottom)) : null));
});
/* harmony default export */ const parts_virtual_list = ((0,react.forwardRef)(virtual_list_VirtualList));
//# sourceMappingURL=virtual-list.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/select/internal.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
























var InternalSelect = react.forwardRef(function (_a, externalRef) {
    var _b;
    var options = _a.options, _c = _a.filteringType, filteringType = _c === void 0 ? 'none' : _c, filteringPlaceholder = _a.filteringPlaceholder, filteringAriaLabel = _a.filteringAriaLabel, ariaRequired = _a.ariaRequired, placeholder = _a.placeholder, disabled = _a.disabled, ariaLabel = _a.ariaLabel, _d = _a.statusType, statusType = _d === void 0 ? 'finished' : _d, empty = _a.empty, loadingText = _a.loadingText, finishedText = _a.finishedText, errorText = _a.errorText, recoveryText = _a.recoveryText, noMatch = _a.noMatch, _e = _a.triggerVariant, triggerVariant = _e === void 0 ? 'label' : _e, selectedAriaLabel = _a.selectedAriaLabel, renderHighlightedAriaLive = _a.renderHighlightedAriaLive, selectedOption = _a.selectedOption, onBlur = _a.onBlur, onFocus = _a.onFocus, onLoadItems = _a.onLoadItems, onChange = _a.onChange, virtualScroll = _a.virtualScroll, expandToViewport = _a.expandToViewport, autoFocus = _a.autoFocus, __inFilteringToken = _a.__inFilteringToken, _f = _a.__internalRootRef, __internalRootRef = _f === void 0 ? null : _f, restProps = __rest(_a, ["options", "filteringType", "filteringPlaceholder", "filteringAriaLabel", "ariaRequired", "placeholder", "disabled", "ariaLabel", "statusType", "empty", "loadingText", "finishedText", "errorText", "recoveryText", "noMatch", "triggerVariant", "selectedAriaLabel", "renderHighlightedAriaLive", "selectedOption", "onBlur", "onFocus", "onLoadItems", "onChange", "virtualScroll", "expandToViewport", "autoFocus", "__inFilteringToken", "__internalRootRef"]);
    var baseProps = getBaseProps(restProps);
    var formFieldContext = useFormFieldContext(restProps);
    var _g = useLoadItems({
        onLoadItems: onLoadItems,
        options: options,
        statusType: statusType
    }), handleLoadMore = _g.handleLoadMore, handleRecoveryClick = _g.handleRecoveryClick, fireLoadItems = _g.fireLoadItems;
    checkControlled('Select', 'selectedOption', selectedOption, 'onChange', onChange);
    checkOptionValueField('Select', 'options', options);
    var _h = (0,react.useState)(''), filteringValue = _h[0], setFilteringValue = _h[1];
    var _j = prepareOptions(options, filteringType, filteringValue), filteredOptions = _j.filteredOptions, parentMap = _j.parentMap;
    var rootRef = (0,react.useRef)(null);
    var triggerRef = (0,react.useRef)(null);
    var selfControlId = useUniqueId('trigger');
    var controlId = (_b = formFieldContext.controlId) !== null && _b !== void 0 ? _b : selfControlId;
    var scrollToIndex = (0,react.useRef)(null);
    var _k = useSelect({
        selectedOptions: selectedOption ? [selectedOption] : [],
        updateSelectedOption: function (option) { return fireNonCancelableEvent(onChange, { selectedOption: option }); },
        options: filteredOptions,
        filteringType: filteringType,
        onBlur: onBlur,
        onFocus: onFocus,
        externalRef: externalRef,
        fireLoadItems: fireLoadItems,
        setFilteringValue: setFilteringValue
    }), isOpen = _k.isOpen, highlightType = _k.highlightType, highlightedOption = _k.highlightedOption, highlightedIndex = _k.highlightedIndex, getTriggerProps = _k.getTriggerProps, getDropdownProps = _k.getDropdownProps, getFilterProps = _k.getFilterProps, getMenuProps = _k.getMenuProps, getOptionProps = _k.getOptionProps, highlightOption = _k.highlightOption, selectOption = _k.selectOption, announceSelected = _k.announceSelected;
    var handleNativeSearch = useNativeSearch({
        isEnabled: filteringType === 'none',
        options: filteredOptions,
        highlightOption: !isOpen ? selectOption : highlightOption,
        highlightedOption: !isOpen ? selectedOption : highlightedOption === null || highlightedOption === void 0 ? void 0 : highlightedOption.option
    });
    var selectAriaLabelId = useUniqueId('select-arialabel-');
    (0,react.useEffect)(function () {
        var _a;
        (_a = scrollToIndex.current) === null || _a === void 0 ? void 0 : _a.call(scrollToIndex, highlightedIndex);
    }, [highlightedIndex]);
    var filter = (react.createElement(parts_filter, tslib_es6_assign({ filteringType: filteringType, placeholder: filteringPlaceholder, ariaLabel: filteringAriaLabel, ariaRequired: ariaRequired, value: filteringValue }, getFilterProps())));
    var trigger = (react.createElement(parts_trigger, tslib_es6_assign({ ref: triggerRef, placeholder: placeholder, disabled: disabled, triggerVariant: triggerVariant, triggerProps: getTriggerProps(disabled, autoFocus), selectedOption: selectedOption, isOpen: isOpen, inFilteringToken: __inFilteringToken }, formFieldContext, { controlId: controlId, ariaLabelledby: joinStrings(formFieldContext.ariaLabelledby, selectAriaLabelId) })));
    var menuProps = tslib_es6_assign(tslib_es6_assign({}, getMenuProps()), { onLoadMore: handleLoadMore, ariaLabelledby: joinStrings(selectAriaLabelId, controlId) });
    var isEmpty = !options || options.length === 0;
    var isNoMatch = filteredOptions && filteredOptions.length === 0;
    var dropdownStatus = useDropdownStatus({
        statusType: statusType,
        empty: empty,
        loadingText: loadingText,
        finishedText: finishedText,
        errorText: errorText,
        recoveryText: recoveryText,
        isEmpty: isEmpty,
        isNoMatch: isNoMatch,
        noMatch: noMatch,
        onRecoveryClick: handleRecoveryClick,
        errorIconAriaLabel: restProps.errorIconAriaLabel
    });
    var announcement = useAnnouncement({
        announceSelected: announceSelected,
        highlightedOption: highlightedOption,
        getParent: function (option) { var _a; return (_a = parentMap.get(option)) === null || _a === void 0 ? void 0 : _a.option; },
        selectedAriaLabel: selectedAriaLabel,
        renderHighlightedAriaLive: renderHighlightedAriaLive
    });
    var ListComponent = virtualScroll ? parts_virtual_list : parts_plain_list;
    var handleMouseDown = function (event) {
        var target = event.target;
        if (target !== document.activeElement) {
            // prevent currently focused element from losing it
            event.preventDefault();
        }
    };
    var mergedRef = useMergeRefs(rootRef, __internalRootRef);
    return (react.createElement("div", tslib_es6_assign({}, baseProps, { ref: mergedRef, className: clsx_m(select_styles_css.root, baseProps.className), onKeyPress: handleNativeSearch }),
        react.createElement(dropdown, tslib_es6_assign({}, getDropdownProps(), { open: isOpen, stretchTriggerHeight: __inFilteringToken, trigger: trigger, header: filter, onMouseDown: handleMouseDown, footer: dropdownStatus.isSticky ? react.createElement(dropdown_footer, { content: isOpen ? dropdownStatus.content : null }) : null, expandToViewport: expandToViewport }),
            react.createElement(ListComponent, { listBottom: !dropdownStatus.isSticky ? react.createElement(dropdown_footer, { content: isOpen ? dropdownStatus.content : null }) : null, menuProps: menuProps, getOptionProps: getOptionProps, filteredOptions: filteredOptions, filteringValue: filteringValue, ref: scrollToIndex, hasDropdownStatus: dropdownStatus.content !== null, screenReaderContent: announcement, highlightType: highlightType })),
        react.createElement(ScreenreaderOnly, { id: selectAriaLabelId }, ariaLabel)));
});
/* harmony default export */ const select_internal = (InternalSelect);
//# sourceMappingURL=internal.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/select/index.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0





var Select = react.forwardRef(function (_a, ref) {
    var _b = _a.options, options = _b === void 0 ? [] : _b, _c = _a.filteringType, filteringType = _c === void 0 ? 'none' : _c, _d = _a.statusType, statusType = _d === void 0 ? 'finished' : _d, _e = _a.triggerVariant, triggerVariant = _e === void 0 ? 'label' : _e, restProps = __rest(_a, ["options", "filteringType", "statusType", "triggerVariant"]);
    var baseComponentProps = useBaseComponent('Select');
    var externalProps = getExternalProps(restProps);
    return (react.createElement(select_internal, tslib_es6_assign({ options: options, filteringType: filteringType, statusType: statusType, triggerVariant: triggerVariant }, externalProps, baseComponentProps, { ref: ref })));
});
applyDisplayName(Select, 'Select');
/* harmony default export */ const components_select = (Select);
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./src/components/form/Select/index.tsx
var Select_excluded=["name","control","label","info","constraintText","description","secondaryControl","stretch","onChange"],Select_excluded2=["onChange"];var FormSelect=function(_ref){var name=_ref.name,control=_ref.control,label=_ref.label,info=_ref.info,constraintText=_ref.constraintText,description=_ref.description,secondaryControl=_ref.secondaryControl,stretch=_ref.stretch,onChangeProp=_ref.onChange,props=objectWithoutProperties_objectWithoutProperties(_ref,Select_excluded);return/*#__PURE__*/react.createElement(Controller,{name:name,control:control,render:function render(_ref2){var _props$options$find,_props$options,_ref2$field=_ref2.field,onChange=_ref2$field.onChange,fieldRest=objectWithoutProperties_objectWithoutProperties(_ref2$field,Select_excluded2),error=_ref2.fieldState.error,selectedOption=null!==(_props$options$find=null===(_props$options=props.options)||void 0===_props$options?void 0:_props$options.find(function(i){return i.value===fieldRest.value}))&&void 0!==_props$options$find?_props$options$find:null;return/*#__PURE__*/react.createElement(FormField,{description:description,label:label,info:info,stretch:stretch,constraintText:constraintText,secondaryControl:secondaryControl},/*#__PURE__*/react.createElement(components_select,extends_extends({selectedOption:selectedOption,onChange:function onChangeSelect(event){onChange(event.detail.selectedOption.value),onChangeProp&&onChangeProp(event)}},fieldRest,props,{invalid:!!error})))}})};
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/utils/promises.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
var PromiseCancelledSignal = /** @class */ (function () {
    function PromiseCancelledSignal() {
    }
    return PromiseCancelledSignal;
}());

/**
 * Wrap and provide a handle for a promise to provide cancellation information inside
 * callbacks. Takes a similar approach to how an AbortController works in modern fetch.
 *
 * @see https://reactjs.org/blog/2015/12/16/ismounted-antipattern.html
 */
function makeCancellable(promise) {
    var cancelled = false;
    var wrapped = promise.then(function (value) {
        if (cancelled) {
            throw new PromiseCancelledSignal();
        }
        return value;
    }, function (err) {
        if (cancelled) {
            throw new PromiseCancelledSignal();
        }
        throw err;
    });
    return {
        promise: wrapped,
        cancel: function () {
            cancelled = true;
        },
        isCancelled: function () { return cancelled; }
    };
}
//# sourceMappingURL=promises.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/s3-resource-selector/s3-in-context/validation.js
// https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html
var SCHEME = 's3://';
var BUCKET_FIRST_CHAR = /^[a-z0-9]{1}/;
var CAPITAL_LETTER = /[A-Z]/;
var DNS_NAME = /^(([a-z0-9]|[a-z0-9][a-z0-9-]*[a-z0-9])\.)*([a-z0-9]|[a-z0-9][a-z0-9-]*[a-z0-9])$/;
function checkBucketNameLength(bucketName) {
    return 3 <= bucketName.length && bucketName.length <= 63;
}
function extractBucketName(uri) {
    var _a = uri.replace(SCHEME, '').split('/'), bucketName = _a[0], rest = _a.slice(1);
    return [bucketName, rest.join('/')];
}
function validate(uri) {
    if (uri === '') {
        return undefined;
    }
    if (uri.slice(0, SCHEME.length) !== SCHEME) {
        return 'validationPathMustBegin';
    }
    var bucketName = extractBucketName(uri)[0];
    if (!BUCKET_FIRST_CHAR.test(bucketName)) {
        return 'validationBucketLowerCase';
    }
    if (CAPITAL_LETTER.test(bucketName)) {
        return 'validationBucketMustNotContain';
    }
    if (!checkBucketNameLength(bucketName)) {
        return 'validationBucketLength';
    }
    if (!DNS_NAME.test(bucketName)) {
        return 'validationBucketMustComplyDns';
    }
    return undefined;
}
function getErrorText(i18nStrings, errorCode) {
    return errorCode ? i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings[errorCode] : undefined;
}
//# sourceMappingURL=validation.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/s3-resource-selector/s3-in-context/use-versions-fetch.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0




function useVersionsFetch(fetchVersions) {
    var _a = (0,react.useState)(false), loading = _a[0], setLoading = _a[1];
    var _b = (0,react.useState)(''), lastFetchedValue = _b[0], setLastFetched = _b[1];
    var _c = (0,react.useState)([]), versions = _c[0], setVersions = _c[1];
    var loadVersions = function (uri) {
        if (uri === lastFetchedValue) {
            return;
        }
        setLastFetched(uri);
        var errorCode = validate(uri);
        var _a = extractBucketName(uri), bucketName = _a[0], prefix = _a[1];
        if (errorCode || !bucketName || !prefix || prefix.slice(-1) === '/') {
            return;
        }
        setLoading(true);
        var result = makeCancellable(fetchVersions(bucketName, prefix));
        result.promise.then(function (versions) {
            setLoading(false);
            setVersions(versions.map(function (version) { return ({
                value: version.VersionId,
                label: version.LastModified
            }); }));
        }, function (err) {
            if (!(err instanceof PromiseCancelledSignal)) {
                setLoading(false);
            }
        });
        return result;
    };
    return {
        loading: loading,
        versions: versions,
        resetVersions: function () { return setVersions([]); },
        // this function is a dependency of useEffect
        loadVersions: use_stable_event_handler_useStableEventHandler(loadVersions)
    };
}
//# sourceMappingURL=use-versions-fetch.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/s3-resource-selector/s3-in-context/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/s3-resource-selector/s3-in-context/styles.css.js


    /* harmony default export */ const s3_in_context_styles_css = ({
  "root": "awsui_root_1vtzr_7zub1_9",
  "view-button": "awsui_view-button_1vtzr_7zub1_13",
  "browse-button": "awsui_browse-button_1vtzr_7zub1_17",
  "layout": "awsui_layout_1vtzr_7zub1_21",
  "layout-uri": "awsui_layout-uri_1vtzr_7zub1_31",
  "layout-version": "awsui_layout-version_1vtzr_7zub1_35",
  "layout-divider": "awsui_layout-divider_1vtzr_7zub1_40"
});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/s3-resource-selector/s3-in-context/search-input.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0



var SearchInput = react.forwardRef(function (props, ref) {
    var formFieldContext = useFormFieldContext(props);
    return react.createElement(input_internal, tslib_es6_assign({ type: "search" }, props, formFieldContext, { ref: ref }));
});
//# sourceMappingURL=search-input.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/s3-resource-selector/s3-in-context/index.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0












var S3InContext = react.forwardRef(function (_a, ref) {
    var i18nStrings = _a.i18nStrings, resource = _a.resource, viewHref = _a.viewHref, invalid = _a.invalid, inputAriaDescribedby = _a.inputAriaDescribedby, selectableItemsTypes = _a.selectableItemsTypes, fetchVersions = _a.fetchVersions, onChange = _a.onChange, onBrowse = _a.onBrowse;
    var isInputBlurredRef = (0,react.useRef)(true);
    var _b = (0,react.useState)(false), isInputTouched = _b[0], setInputTouched = _b[1];
    var _c = useVersionsFetch(fetchVersions), versions = _c.versions, loading = _c.loading, loadVersions = _c.loadVersions, resetVersions = _c.resetVersions;
    var inputRef = (0,react.useRef)(null);
    useForwardFocus(ref, inputRef);
    var uri = resource.uri;
    var supportsVersions = selectableItemsTypes && selectableItemsTypes.indexOf('versions') > -1;
    var selectedVersion = versions.filter(function (version) { return version.value === resource.versionId; })[0] || null;
    function handleUriChange(event) {
        var uri = event.detail.value;
        var errorCode = isInputTouched ? validate(uri) : undefined;
        resetVersions();
        onChange({ uri: uri }, getErrorText(i18nStrings, errorCode));
    }
    function handleUriBlur() {
        isInputBlurredRef.current = true;
        setInputTouched(true);
        var errorCode = validate(resource.uri);
        onChange(resource, getErrorText(i18nStrings, errorCode));
        if (supportsVersions) {
            loadVersions(resource.uri);
        }
    }
    (0,react.useEffect)(function () {
        var _a;
        if (!isInputBlurredRef.current || !supportsVersions) {
            return;
        }
        var cancel = ((_a = loadVersions(uri)) !== null && _a !== void 0 ? _a : {}).cancel;
        return cancel;
    }, [uri, supportsVersions, loadVersions]);
    return (react.createElement("div", { className: s3_in_context_styles_css.root },
        react.createElement("div", { className: s3_in_context_styles_css.layout },
            react.createElement(InternalFormField, { className: s3_in_context_styles_css["layout-uri"], label: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.inContextUriLabel, stretch: true },
                react.createElement(SearchInput, { ref: inputRef, value: uri, ariaDescribedby: inputAriaDescribedby, placeholder: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.inContextInputPlaceholder, onChange: handleUriChange, invalid: invalid, onFocus: function () { return (isInputBlurredRef.current = false); }, onBlur: handleUriBlur })),
            supportsVersions && (react.createElement(InternalFormField, { className: s3_in_context_styles_css["layout-version"], label: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.inContextVersionSelectLabel, stretch: true },
                react.createElement(select_internal, { selectedOption: selectedVersion, placeholder: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.inContextSelectPlaceholder, disabled: versions.length === 0, options: versions, onChange: function (event) { return onChange(tslib_es6_assign(tslib_es6_assign({}, resource), { versionId: event.detail.selectedOption.value }), undefined); }, invalid: false }))),
            react.createElement("div", null,
                react.createElement(InternalButton, { className: s3_in_context_styles_css["view-button"], disabled: !viewHref, href: viewHref, target: "_blank", iconName: "external", iconAlign: "right", formAction: "none", ariaLabel: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.inContextViewButtonAriaLabel }, i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.inContextViewButton)),
            react.createElement("div", { className: s3_in_context_styles_css["layout-divider"] }),
            react.createElement("div", null,
                react.createElement(InternalButton, { className: s3_in_context_styles_css["browse-button"], disabled: loading, formAction: "none", onClick: onBrowse }, i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.inContextBrowseButton))),
        react.createElement("div", { role: "alert", "aria-live": "assertive", "aria-atomic": "true" }, loading && (react.createElement(InternalBox, { margin: { top: 's' } },
            react.createElement(StatusIndicator, { type: "loading" },
                react.createElement(live_region, { visible: true }, i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.inContextLoadingText)))))));
});
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/modal/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/modal/styles.css.js


    /* harmony default export */ const modal_styles_css = ({
  "dialog": "awsui_dialog_1d2i7_nzsqa_105",
  "modal-slide-up": "awsui_modal-slide-up_1d2i7_nzsqa_1",
  "awsui-motion-fade-in-0": "awsui_awsui-motion-fade-in-0_1d2i7_nzsqa_1",
  "refresh": "awsui_refresh_1d2i7_nzsqa_128",
  "awsui-motion-scale-popup": "awsui_awsui-motion-scale-popup_1d2i7_nzsqa_1",
  "root": "awsui_root_1d2i7_nzsqa_161",
  "awsui-motion-fade-in": "awsui_awsui-motion-fade-in_1d2i7_nzsqa_1",
  "hidden": "awsui_hidden_1d2i7_nzsqa_224",
  "focus-lock": "awsui_focus-lock_1d2i7_nzsqa_228",
  "small": "awsui_small_1d2i7_nzsqa_246",
  "medium": "awsui_medium_1d2i7_nzsqa_249",
  "large": "awsui_large_1d2i7_nzsqa_252",
  "max": "awsui_max_1d2i7_nzsqa_255",
  "breakpoint-xs": "awsui_breakpoint-xs_1d2i7_nzsqa_255",
  "container": "awsui_container_1d2i7_nzsqa_260",
  "content": "awsui_content_1d2i7_nzsqa_284",
  "no-paddings": "awsui_no-paddings_1d2i7_nzsqa_287",
  "header": "awsui_header_1d2i7_nzsqa_291",
  "header--text": "awsui_header--text_1d2i7_nzsqa_298",
  "footer": "awsui_footer_1d2i7_nzsqa_302",
  "dismiss-control": "awsui_dismiss-control_1d2i7_nzsqa_312",
  "modal-open": "awsui_modal-open_1d2i7_nzsqa_316"
});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/modal/body-scroll.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0


var initialBodyPaddingRightStyle = undefined;
function disableBodyScrolling() {
    setBodyScrollbarPadding();
    document.body.classList.add(modal_styles_css["modal-open"]);
}
function enableBodyScrolling() {
    document.body.classList.remove(modal_styles_css["modal-open"]);
    restoreBodyScrollbarPadding();
}
function setBodyScrollbarPadding() {
    if (bodyHasScrollbar()) {
        initialBodyPaddingRightStyle = document.body.style.paddingRight;
        var initialBodyPaddingRight = computedBodyPaddingRightPixels();
        var scrollbarWidth = browserScrollbarSize().width;
        var newBodyPaddingRight = initialBodyPaddingRight + scrollbarWidth;
        document.body.style.paddingRight = newBodyPaddingRight + 'px';
    }
}
function computedBodyPaddingRightPixels() {
    return parseInt(window.getComputedStyle(document.body).paddingRight, 10);
}
function restoreBodyScrollbarPadding() {
    if (initialBodyPaddingRightStyle) {
        document.body.style.setProperty('padding-right', initialBodyPaddingRightStyle);
    }
    else {
        document.body.style.removeProperty('padding-right');
    }
    initialBodyPaddingRightStyle = undefined;
}
function bodyHasScrollbar() {
    // Unfortunately this difference doesn't appear to match the scrollbar width during testing,
    // otherwise we could remove browserScrollbarSize().  Bootstrap also doesn't use this difference
    // directly.
    return document.body.clientWidth < window.innerWidth;
}
//# sourceMappingURL=body-scroll.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/modal/internal.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
















function InternalModal(_a) {
    var _b, _c;
    var size = _a.size, visible = _a.visible, closeAriaLabel = _a.closeAriaLabel, header = _a.header, children = _a.children, footer = _a.footer, disableContentPaddings = _a.disableContentPaddings, onDismiss = _a.onDismiss, modalRoot = _a.modalRoot, _d = _a.__internalRootRef, __internalRootRef = _d === void 0 ? null : _d, rest = __rest(_a, ["size", "visible", "closeAriaLabel", "header", "children", "footer", "disableContentPaddings", "onDismiss", "modalRoot", "__internalRootRef"]);
    var instanceUniqueId = useUniqueId();
    var headerId = "".concat(rest.id || instanceUniqueId, "-header");
    var focusLockRef = (0,react.useRef)(null);
    var lastMouseDownElementRef = (0,react.useRef)(null);
    var _e = useContainerBreakpoints(['xs']), breakpoint = _e[0], breakpointsRef = _e[1];
    var refObject = (0,react.useRef)(null);
    var mergedRef = useMergeRefs(breakpointsRef, refObject, __internalRootRef);
    var isRefresh = useVisualRefresh();
    var baseProps = getBaseProps(rest);
    // enable body scroll and restore focus if unmounting while visible
    (0,react.useEffect)(function () {
        return function () {
            enableBodyScrolling();
        };
    }, []);
    // enable / disable body scroll
    (0,react.useEffect)(function () {
        if (visible) {
            disableBodyScrolling();
        }
        else {
            enableBodyScrolling();
        }
    }, [visible]);
    // Because we hide the element with styles (and not actually detach it from DOM), we need to scroll to top
    (0,react.useEffect)(function () {
        if (visible && refObject.current) {
            refObject.current.scrollTop = 0;
        }
    }, [visible]);
    // Imitate autoFocus=true when the modal opens but not when a focused element inside modal gets removed.
    var onFocusActivation = function () {
        var _a;
        focusLockRef.current && ((_a = getFirstFocusable(focusLockRef.current)) === null || _a === void 0 ? void 0 : _a.focus());
    };
    var dismiss = function (reason) { return fireNonCancelableEvent(onDismiss, { reason: reason }); };
    var onOverlayMouseDown = function (event) {
        lastMouseDownElementRef.current = event.target;
    };
    var onOverlayClick = function (event) {
        var overlay = refObject.current;
        var lastClicked = lastMouseDownElementRef.current;
        if (event.target === overlay && lastClicked === overlay) {
            dismiss('overlay');
        }
    };
    var onCloseButtonClick = function () { return dismiss('closeButton'); };
    var escKeyHandler = function (event) {
        if (event.keyCode === KeyCode.escape) {
            dismiss('keyboard');
        }
    };
    return (react.createElement(Portal, { container: modalRoot },
        react.createElement("div", tslib_es6_assign({}, baseProps, { className: clsx_m(modal_styles_css.root, (_b = {}, _b[modal_styles_css.hidden] = !visible, _b), baseProps.className, isRefresh && modal_styles_css.refresh), role: "dialog", "aria-modal": true, "aria-labelledby": headerId, onMouseDown: onOverlayMouseDown, onClick: onOverlayClick, ref: mergedRef }),
            react.createElement(dist_es2015, { disabled: !visible, autoFocus: false, returnFocus: true, className: modal_styles_css["focus-lock"], ref: focusLockRef, onActivation: onFocusActivation },
                react.createElement("div", { className: clsx_m(modal_styles_css.dialog, modal_styles_css[size], modal_styles_css["breakpoint-".concat(breakpoint)], isRefresh && modal_styles_css.refresh), onKeyDown: escKeyHandler, tabIndex: -1 },
                    react.createElement("div", { className: modal_styles_css.container },
                        react.createElement("div", { className: modal_styles_css.header },
                            react.createElement(InternalHeader, { variant: "h2", __disableActionsWrapping: true, actions: react.createElement(InternalButton, { ariaLabel: closeAriaLabel, className: modal_styles_css["dismiss-control"], variant: "modal-dismiss", iconName: "close", formAction: "none", onClick: onCloseButtonClick }) },
                                react.createElement("span", { id: headerId, className: modal_styles_css["header--text"] }, header))),
                        react.createElement("div", { className: clsx_m(modal_styles_css.content, (_c = {}, _c[modal_styles_css["no-paddings"]] = disableContentPaddings, _c)) }, children),
                        footer && react.createElement("div", { className: modal_styles_css.footer }, footer)))))));
}
//# sourceMappingURL=internal.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/s3-resource-selector/s3-modal/table-utils.js
var defaultLabels = {
    labelNotSorted: function () { return ''; },
    labelSortedDescending: function () { return ''; },
    labelSortedAscending: function () { return ''; }
};
function includes(array, item) {
    return !!array && array.indexOf(item) > -1;
}
var table_utils_compareDates = function (itemA, itemB) {
    var timeA = itemA ? new Date(itemA).getTime() : 0;
    var timeB = itemB ? new Date(itemB).getTime() : 0;
    return timeA - timeB;
};
function getColumnAriaLabel(i18nStrings, columnName) {
    if (i18nStrings === void 0) { i18nStrings = defaultLabels; }
    if (columnName === void 0) { columnName = ''; }
    return function (_a) {
        var sorted = _a.sorted, descending = _a.descending;
        if (!sorted) {
            return i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelNotSorted(columnName);
        }
        if (descending) {
            return i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelSortedDescending(columnName);
        }
        return i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelSortedAscending(columnName);
    };
}
//# sourceMappingURL=table-utils.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/s3-resource-selector/s3-modal/column-formats.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
var BYTES_BASE = 1024;
var BYTES_DECIMALS = 2;
var BYTES_SIZES = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];
function formatDefault(value) {
    return value ? value : '-';
}
function formatSize(bytes) {
    if (bytes === undefined) {
        return '-';
    }
    if (bytes === 0) {
        return "0 ".concat(BYTES_SIZES[0]);
    }
    var i = Math.floor(Math.log(bytes) / Math.log(BYTES_BASE));
    return parseFloat((bytes / Math.pow(BYTES_BASE, i)).toFixed(BYTES_DECIMALS)) + ' ' + BYTES_SIZES[i];
}
//# sourceMappingURL=column-formats.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/s3-resource-selector/s3-modal/empty-state.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0


function EmptyState(_a) {
    var title = _a.title, subtitle = _a.subtitle, action = _a.action;
    return (react.createElement(InternalBox, { textAlign: "center", color: "inherit" },
        react.createElement(InternalBox, { variant: "strong", textAlign: "center", color: "inherit" }, title),
        react.createElement(InternalBox, { variant: "p", padding: { bottom: 's' }, color: "inherit" }, subtitle),
        action));
}
//# sourceMappingURL=empty-state.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/s3-resource-selector/s3-modal/basic-table.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0










function getSharedI18Strings(i18nStrings) {
    return {
        filteringCounterText: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.filteringCounterText,
        labelRefresh: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelRefresh,
        labelsPagination: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelsPagination,
        noMatchTitle: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.filteringNoMatches,
        noMatchSubtitle: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.filteringCantFindMatch,
        clearFilterButtonText: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.clearFilterButtonText
    };
}
function BasicS3Table(_a) {
    var _b;
    var forwardFocusRef = _a.forwardFocusRef, columnDefinitions = _a.columnDefinitions, fetchData = _a.fetchData, trackBy = _a.trackBy, _c = _a.i18nStrings, i18nStrings = _c === void 0 ? {} : _c, isVisualRefresh = _a.isVisualRefresh, visibleColumns = _a.visibleColumns, isItemDisabled = _a.isItemDisabled, onSelect = _a.onSelect;
    var _d = (0,react.useState)(false), loading = _d[0], setLoading = _d[1];
    var _e = (0,react.useState)([]), allItems = _e[0], setAllItems = _e[1];
    var textFilterRef = (0,react.useRef)(null);
    var onSelectLatest = use_stable_event_handler_useStableEventHandler(onSelect);
    function loadData() {
        setLoading(true);
        fetchData()
            .then(function (items) {
            setAllItems(items);
            setLoading(false);
        })["catch"](function () {
            // error handling should happen on the customer side, outside of this component
            setLoading(false);
        });
    }
    (0,react.useEffect)(function () {
        loadData();
        // Data loading is only happening on initial render, or via refresh button
        // eslint-disable-next-line react-hooks/exhaustive-deps
    }, []);
    useForwardFocus(forwardFocusRef, textFilterRef);
    var _f = useCollection(allItems, {
        selection: { trackBy: trackBy },
        filtering: {
            empty: i18nStrings.emptyText,
            noMatch: (react.createElement(EmptyState, { title: i18nStrings.noMatchTitle, subtitle: i18nStrings.noMatchSubtitle, action: react.createElement(InternalButton, { onClick: function () { return actions.setFiltering(''); } }, i18nStrings.clearFilterButtonText) }))
        },
        pagination: {},
        sorting: {}
    }), items = _f.items, filteredItemsCount = _f.filteredItemsCount, collectionProps = _f.collectionProps, filterProps = _f.filterProps, paginationProps = _f.paginationProps, actions = _f.actions;
    var selectedItem = (_b = collectionProps.selectedItems) === null || _b === void 0 ? void 0 : _b[0];
    // selectedItem can change internally inside the hook after pagination or filtering
    // useEffect will capture all possible changes
    (0,react.useEffect)(function () {
        onSelectLatest(selectedItem);
    }, [selectedItem, onSelectLatest]);
    return (react.createElement(table_internal, tslib_es6_assign({ variant: "embedded" }, collectionProps, { header: react.createElement(InternalHeader, { variant: isVisualRefresh ? 'h3' : 'h2', actions: react.createElement(InternalButton, { iconName: "refresh", ariaLabel: i18nStrings.labelRefresh, onClick: loadData }), counter: selectedItem ? "(1/".concat(allItems.length, ")") : "(".concat(allItems.length, ")") }, i18nStrings.header), trackBy: trackBy, filter: react.createElement(text_filter_internal, tslib_es6_assign({}, filterProps, { ref: textFilterRef, filteringAriaLabel: i18nStrings.filteringAriaLabel, filteringPlaceholder: i18nStrings.filteringPlaceholder, countText: i18nStrings.filteringCounterText ? i18nStrings.filteringCounterText(filteredItemsCount) : '' })), pagination: react.createElement(InternalPagination, tslib_es6_assign({}, paginationProps, { ariaLabels: i18nStrings.labelsPagination })), selectionType: "single", ariaLabels: i18nStrings.selectionLabels, loading: loading, loadingText: i18nStrings.loadingText, items: items, visibleColumns: visibleColumns, isItemDisabled: isItemDisabled, columnDefinitions: columnDefinitions })));
}
//# sourceMappingURL=basic-table.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/s3-resource-selector/s3-modal/buckets-table.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0





function BucketsTable(_a) {
    var forwardFocusRef = _a.forwardFocusRef, i18nStrings = _a.i18nStrings, isVisualRefresh = _a.isVisualRefresh, isItemDisabled = _a.isItemDisabled, selectableItemsTypes = _a.selectableItemsTypes, fetchData = _a.fetchData, visibleColumns = _a.visibleColumns, onDrilldown = _a.onDrilldown, onSelect = _a.onSelect;
    return (react.createElement(BasicS3Table, { forwardFocusRef: forwardFocusRef, trackBy: "Name", fetchData: fetchData, visibleColumns: visibleColumns, isItemDisabled: isItemDisabled || (function () { return !includes(selectableItemsTypes, 'buckets'); }), i18nStrings: tslib_es6_assign(tslib_es6_assign({}, getSharedI18Strings(i18nStrings)), { header: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionBuckets, loadingText: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionBucketsLoading, filteringAriaLabel: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelFiltering(i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionBuckets), filteringPlaceholder: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionBucketsSearchPlaceholder, emptyText: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionBucketsNoItems, selectionLabels: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelsBucketsSelection }), isVisualRefresh: isVisualRefresh, columnDefinitions: [
            {
                id: 'Name',
                header: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnBucketName,
                ariaLabel: getColumnAriaLabel(i18nStrings, i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnBucketName),
                sortingField: 'Name',
                cell: function (item) {
                    var isClickable = includes(selectableItemsTypes, 'objects') || includes(selectableItemsTypes, 'versions');
                    return isClickable ? (react.createElement(link_internal, { onFollow: function () { return item.Name && onDrilldown(item.Name); }, variant: "link" }, item.Name)) : (item.Name);
                },
                minWidth: '250px'
            },
            {
                id: 'CreationDate',
                header: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnBucketCreationDate,
                ariaLabel: getColumnAriaLabel(i18nStrings, i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnBucketCreationDate),
                sortingComparator: function (a, b) { return table_utils_compareDates(a.CreationDate, b.CreationDate); },
                cell: function (item) { return formatDefault(item.CreationDate); }
            },
            {
                id: 'Region',
                header: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnBucketRegion,
                ariaLabel: getColumnAriaLabel(i18nStrings, i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnBucketRegion),
                sortingField: 'Region',
                cell: function (item) { return formatDefault(item.Region); },
                minWidth: '150px'
            },
        ], onSelect: function (item) { var _a; return onSelect((_a = item === null || item === void 0 ? void 0 : item.Name) !== null && _a !== void 0 ? _a : ''); } }));
}
//# sourceMappingURL=buckets-table.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/s3-resource-selector/utils.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
function joinObjectPath(segments) {
    return segments.reduce(function (prev, next) {
        if (prev && prev[prev.length - 1] !== '/') {
            prev = prev + '/';
        }
        return prev + next;
    }, '');
}
//# sourceMappingURL=utils.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/s3-resource-selector/s3-modal/objects-table.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0







function ObjectsTable(_a) {
    var forwardFocusRef = _a.forwardFocusRef, pathSegments = _a.pathSegments, i18nStrings = _a.i18nStrings, isVisualRefresh = _a.isVisualRefresh, isItemDisabled = _a.isItemDisabled, selectableItemsTypes = _a.selectableItemsTypes, fetchData = _a.fetchData, visibleColumns = _a.visibleColumns, onDrilldown = _a.onDrilldown, onSelect = _a.onSelect;
    return (react.createElement(BasicS3Table, {
        // remount fresh component every we change the path to reset the inner state (e.g. selection/filtering)
        key: pathSegments.join('/'), forwardFocusRef: forwardFocusRef, trackBy: "Key", fetchData: function () {
            var bucketName = pathSegments[0], rest = pathSegments.slice(1);
            return fetchData(bucketName, joinObjectPath(rest));
        }, i18nStrings: tslib_es6_assign(tslib_es6_assign({}, getSharedI18Strings(i18nStrings)), { header: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionObjects, filteringAriaLabel: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelFiltering(i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionObjects), filteringPlaceholder: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionObjectsSearchPlaceholder, loadingText: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionObjectsLoading, emptyText: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionObjectsNoItems, selectionLabels: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelsObjectsSelection }), isVisualRefresh: isVisualRefresh, visibleColumns: visibleColumns, isItemDisabled: isItemDisabled || (function () { return !includes(selectableItemsTypes, 'objects'); }), columnDefinitions: [
            {
                id: 'Key',
                header: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnObjectKey,
                ariaLabel: getColumnAriaLabel(i18nStrings, i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnObjectKey),
                sortingField: 'Key',
                cell: function (item) {
                    var isClickable = item.IsFolder || includes(selectableItemsTypes, 'versions');
                    return (react.createElement(react.Fragment, null,
                        react.createElement(internal, { name: item.IsFolder ? 'folder' : 'file' }),
                        ' ',
                        isClickable ? (react.createElement(link_internal, { onFollow: function () { return item.Key && onDrilldown(item); }, variant: "link" }, item.Key)) : (item.Key)));
                },
                minWidth: '250px'
            },
            {
                id: 'LastModified',
                header: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnObjectLastModified,
                ariaLabel: getColumnAriaLabel(i18nStrings, i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnObjectLastModified),
                sortingComparator: function (a, b) { return table_utils_compareDates(a.LastModified, b.LastModified); },
                cell: function (item) { return formatDefault(item.LastModified); }
            },
            {
                id: 'Size',
                header: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnObjectSize,
                ariaLabel: getColumnAriaLabel(i18nStrings, i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnObjectSize),
                sortingField: 'Size',
                cell: function (item) { return formatSize(item.Size); }
            },
        ], onSelect: function (item) { var _a; return onSelect((_a = item === null || item === void 0 ? void 0 : item.Key) !== null && _a !== void 0 ? _a : ''); } }));
}
//# sourceMappingURL=objects-table.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/s3-resource-selector/s3-modal/versions-table.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0





function VersionsTable(_a) {
    var forwardFocusRef = _a.forwardFocusRef, pathSegments = _a.pathSegments, i18nStrings = _a.i18nStrings, isVisualRefresh = _a.isVisualRefresh, isItemDisabled = _a.isItemDisabled, fetchData = _a.fetchData, visibleColumns = _a.visibleColumns, onSelect = _a.onSelect;
    return (react.createElement(BasicS3Table, { forwardFocusRef: forwardFocusRef, trackBy: "VersionId", fetchData: function () {
            var bucketName = pathSegments[0], rest = pathSegments.slice(1);
            return fetchData(bucketName, joinObjectPath(rest));
        }, i18nStrings: tslib_es6_assign(tslib_es6_assign({}, getSharedI18Strings(i18nStrings)), { header: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionVersions, filteringAriaLabel: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelFiltering(i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionVersions), filteringPlaceholder: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionVersionsSearchPlaceholder, loadingText: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionVersionsLoading, emptyText: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionVersionsNoItems, selectionLabels: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelsVersionsSelection }), isVisualRefresh: isVisualRefresh, visibleColumns: visibleColumns, isItemDisabled: isItemDisabled, columnDefinitions: [
            {
                id: 'ID',
                header: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnVersionID,
                ariaLabel: getColumnAriaLabel(i18nStrings, i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnVersionID),
                sortingField: 'VersionId',
                cell: function (item) { return item.VersionId; },
                minWidth: '250px'
            },
            {
                id: 'LastModified',
                header: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnVersionLastModified,
                ariaLabel: getColumnAriaLabel(i18nStrings, i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnVersionLastModified),
                sortingComparator: function (a, b) { return table_utils_compareDates(a.LastModified, b.LastModified); },
                cell: function (item) { return formatDefault(item.LastModified); }
            },
            {
                id: 'Size',
                header: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnVersionSize,
                ariaLabel: getColumnAriaLabel(i18nStrings, i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnVersionSize),
                sortingField: 'Size',
                cell: function (item) { return formatSize(item.Size); }
            },
        ], onSelect: function (item) { var _a; return onSelect((_a = item === null || item === void 0 ? void 0 : item.VersionId) !== null && _a !== void 0 ? _a : ''); } }));
}
//# sourceMappingURL=versions-table.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/s3-resource-selector/s3-modal/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/s3-resource-selector/s3-modal/styles.css.js


    /* harmony default export */ const s3_modal_styles_css = ({
  "modal-actions": "awsui_modal-actions_12hyz_1p88p_5",
  "submit-button": "awsui_submit-button_12hyz_1p88p_9"
});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/s3-resource-selector/s3-modal/index.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0












// eslint-disable-next-line @typescript-eslint/no-unused-vars
function assertNever(_value) {
    return null;
}
var initialBrowseState = {
    selectedItem: null,
    currentView: 'buckets',
    breadcrumbs: []
};
function s3BrowseReducer(state, action) {
    switch (action.type) {
        case 'browse-buckets':
            return initialBrowseState;
        case 'browse-objects':
            return {
                selectedItem: null,
                currentView: 'objects',
                breadcrumbs: action.breadcrumbs
            };
        case 'browse-versions':
            return {
                selectedItem: null,
                currentView: 'versions',
                breadcrumbs: action.breadcrumbs
            };
        case 'select-item':
            return tslib_es6_assign(tslib_es6_assign({}, state), { selectedItem: action.item });
        default:
            assertNever(action);
    }
    return state;
}
function createResourceInfo(_a) {
    var currentView = _a.currentView, breadcrumbs = _a.breadcrumbs, selectedItem = _a.selectedItem;
    var prefix = 's3://';
    if (currentView === 'versions') {
        return { uri: prefix + joinObjectPath(breadcrumbs), versionId: selectedItem !== null && selectedItem !== void 0 ? selectedItem : undefined };
    }
    return { uri: prefix + joinObjectPath(tslib_es6_spreadArray(tslib_es6_spreadArray([], breadcrumbs, true), [selectedItem], false)) };
}
function S3Modal(_a) {
    var _b, _c;
    var i18nStrings = _a.i18nStrings, alert = _a.alert, selectableItemsTypes = _a.selectableItemsTypes, fetchBuckets = _a.fetchBuckets, bucketsVisibleColumns = _a.bucketsVisibleColumns, bucketsIsItemDisabled = _a.bucketsIsItemDisabled, fetchObjects = _a.fetchObjects, objectsVisibleColumns = _a.objectsVisibleColumns, objectsIsItemDisabled = _a.objectsIsItemDisabled, fetchVersions = _a.fetchVersions, versionsVisibleColumns = _a.versionsVisibleColumns, versionsIsItemDisabled = _a.versionsIsItemDisabled, onSubmit = _a.onSubmit, onDismiss = _a.onDismiss;
    var _d = (0,react.useReducer)(s3BrowseReducer, initialBrowseState), _e = _d[0], currentView = _e.currentView, breadcrumbs = _e.breadcrumbs, selectedItem = _e.selectedItem, dispatch = _d[1];
    var forwardFocusRef = (0,react.useRef)(null);
    var isVisualRefresh = useVisualRefresh();
    useEffectOnUpdate(function () {
        var _a;
        (_a = forwardFocusRef.current) === null || _a === void 0 ? void 0 : _a.focus();
    }, [breadcrumbs]);
    return (react.createElement("div", null,
        react.createElement(InternalModal, { visible: true, size: "max", closeAriaLabel: (_b = i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelModalDismiss) !== null && _b !== void 0 ? _b : '', onDismiss: onDismiss, header: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.modalTitle, footer: react.createElement(InternalSpaceBetween, { className: s3_modal_styles_css["modal-actions"], size: "xs", direction: "horizontal" },
                react.createElement(InternalButton, { variant: "link", formAction: "none", onClick: onDismiss }, i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.modalCancelButton),
                react.createElement(InternalButton, { variant: "primary", className: s3_modal_styles_css["submit-button"], disabled: !selectedItem, formAction: "none", onClick: function () { return onSubmit(createResourceInfo({ currentView: currentView, breadcrumbs: breadcrumbs, selectedItem: selectedItem })); } }, i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.modalSubmitButton)) },
            react.createElement(InternalSpaceBetween, { size: isVisualRefresh ? 'xxs' : 'xs' },
                react.createElement(InternalBreadcrumbGroup, { ariaLabel: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelBreadcrumbs, expandAriaLabel: "Show path", onFollow: function (event) {
                        event.preventDefault();
                        event.detail.item.meta.onClick();
                    }, items: tslib_es6_spreadArray([
                        {
                            text: (_c = i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.modalBreadcrumbRootItem) !== null && _c !== void 0 ? _c : '',
                            href: '',
                            meta: { onClick: function () { return dispatch({ type: 'browse-buckets' }); } }
                        }
                    ], breadcrumbs.map(function (segment, index) { return ({
                        text: segment,
                        href: '',
                        meta: {
                            onClick: function () {
                                return dispatch({
                                    type: 'browse-objects',
                                    breadcrumbs: breadcrumbs.slice(0, index + 1)
                                });
                            }
                        }
                    }); }), true) }),
                alert,
                currentView === 'buckets' ? (react.createElement(BucketsTable, { forwardFocusRef: forwardFocusRef, fetchData: fetchBuckets, visibleColumns: bucketsVisibleColumns, isItemDisabled: bucketsIsItemDisabled, selectableItemsTypes: selectableItemsTypes, i18nStrings: i18nStrings, isVisualRefresh: isVisualRefresh, onDrilldown: function (path) {
                        return dispatch({
                            type: 'browse-objects',
                            breadcrumbs: [path]
                        });
                    }, onSelect: function (item) { return dispatch({ type: 'select-item', item: item }); } })) : currentView === 'objects' ? (react.createElement(ObjectsTable, { forwardFocusRef: forwardFocusRef, pathSegments: breadcrumbs, fetchData: fetchObjects, visibleColumns: objectsVisibleColumns, isItemDisabled: objectsIsItemDisabled, selectableItemsTypes: selectableItemsTypes, i18nStrings: i18nStrings, isVisualRefresh: isVisualRefresh, onDrilldown: function (item) {
                        dispatch({
                            type: item.IsFolder ? 'browse-objects' : 'browse-versions',
                            breadcrumbs: tslib_es6_spreadArray(tslib_es6_spreadArray([], breadcrumbs, true), [item.Key], false)
                        });
                    }, onSelect: function (item) { return dispatch({ type: 'select-item', item: item }); } })) : currentView === 'versions' ? (react.createElement(VersionsTable, { forwardFocusRef: forwardFocusRef, pathSegments: breadcrumbs, fetchData: fetchVersions, visibleColumns: versionsVisibleColumns, isItemDisabled: versionsIsItemDisabled, i18nStrings: i18nStrings, isVisualRefresh: isVisualRefresh, onSelect: function (item) { return dispatch({ type: 'select-item', item: item }); } })) : (assertNever(currentView))))));
}
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/s3-resource-selector/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/s3-resource-selector/styles.css.js


    /* harmony default export */ const s3_resource_selector_styles_css = ({
  "root": "awsui_root_1u0yw_rfo7y_5",
  "alert": "awsui_alert_1u0yw_rfo7y_9"
});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/s3-resource-selector/index.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0













var S3ResourceSelector = react.forwardRef(function (_a, ref) {
    var i18nStrings = _a.i18nStrings, alert = _a.alert, resource = _a.resource, viewHref = _a.viewHref, invalid = _a.invalid, _b = _a.selectableItemsTypes, selectableItemsTypes = _b === void 0 ? [] : _b, inputAriaDescribedby = _a.inputAriaDescribedby, _c = _a.bucketsVisibleColumns, bucketsVisibleColumns = _c === void 0 ? ['Name', 'CreationDate'] : _c, bucketsIsItemDisabled = _a.bucketsIsItemDisabled, fetchBuckets = _a.fetchBuckets, fetchObjects = _a.fetchObjects, _d = _a.objectsVisibleColumns, objectsVisibleColumns = _d === void 0 ? ['Key', 'LastModified', 'Size'] : _d, objectsIsItemDisabled = _a.objectsIsItemDisabled, fetchVersions = _a.fetchVersions, _e = _a.versionsVisibleColumns, versionsVisibleColumns = _e === void 0 ? ['ID', 'LastModified', 'Size'] : _e, versionsIsItemDisabled = _a.versionsIsItemDisabled, onChange = _a.onChange, ariaLabel = _a.ariaLabel, rest = __rest(_a, ["i18nStrings", "alert", "resource", "viewHref", "invalid", "selectableItemsTypes", "inputAriaDescribedby", "bucketsVisibleColumns", "bucketsIsItemDisabled", "fetchBuckets", "fetchObjects", "objectsVisibleColumns", "objectsIsItemDisabled", "fetchVersions", "versionsVisibleColumns", "versionsIsItemDisabled", "onChange", "ariaLabel"]);
    checkSafeUrl('S3ResourceSelector', viewHref);
    var __internalRootRef = useBaseComponent('S3ResourceSelector').__internalRootRef;
    var _f = (0,react.useState)(false), modalOpen = _f[0], setModalOpen = _f[1];
    var inContextRef = (0,react.useRef)(null);
    var modalWasSubmitted = (0,react.useRef)(false);
    useForwardFocus(ref, inContextRef);
    var _g = useFormFieldContext(rest), ariaLabelledby = _g.ariaLabelledby, ariaDescribedby = _g.ariaDescribedby;
    (0,react.useEffect)(function () {
        var _a;
        // Focus uriInput only when modal was submitted.
        // When it was dismissed, the focus naturally goes to previously focused element (browse button)
        if (!modalOpen && modalWasSubmitted.current) {
            modalWasSubmitted.current = false;
            (_a = inContextRef.current) === null || _a === void 0 ? void 0 : _a.focus();
        }
    }, [modalOpen]);
    var baseProps = getBaseProps(rest);
    var modalProps = {
        alert: alert,
        i18nStrings: i18nStrings,
        fetchBuckets: fetchBuckets,
        selectableItemsTypes: selectableItemsTypes,
        bucketsVisibleColumns: bucketsVisibleColumns,
        bucketsIsItemDisabled: bucketsIsItemDisabled,
        fetchObjects: fetchObjects,
        objectsVisibleColumns: objectsVisibleColumns,
        objectsIsItemDisabled: objectsIsItemDisabled,
        fetchVersions: fetchVersions,
        versionsVisibleColumns: versionsVisibleColumns,
        versionsIsItemDisabled: versionsIsItemDisabled,
        onSubmit: function (resource) {
            fireNonCancelableEvent(onChange, { resource: resource });
            setModalOpen(false);
            modalWasSubmitted.current = true;
        },
        onDismiss: function () { return setModalOpen(false); }
    };
    return (react.createElement("div", tslib_es6_assign({}, baseProps, { className: clsx_m(s3_resource_selector_styles_css.root, baseProps.className), ref: __internalRootRef, role: "group", "aria-labelledby": ariaLabelledby, "aria-describedby": ariaDescribedby, "aria-label": ariaLabel }),
        react.createElement(S3InContext, { ref: inContextRef, selectableItemsTypes: selectableItemsTypes, i18nStrings: i18nStrings, resource: resource, viewHref: viewHref, invalid: invalid, inputAriaDescribedby: inputAriaDescribedby, fetchVersions: fetchVersions, onBrowse: function () { return setModalOpen(true); }, onChange: function (resource, errorText) { return fireNonCancelableEvent(onChange, { resource: resource, errorText: errorText }); } }),
        !modalOpen && alert && (react.createElement(InternalBox, { className: s3_resource_selector_styles_css.alert, margin: { top: 's' } }, alert)),
        modalOpen && react.createElement(S3Modal, tslib_es6_assign({}, modalProps))));
});
applyDisplayName(S3ResourceSelector, 'S3ResourceSelector');
/* harmony default export */ const s3_resource_selector = (S3ResourceSelector);
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./src/components/form/S3BucketSelector/utils.ts
function utils_ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function utils_objectSpread(target){for(var source,i=1;i<arguments.length;i++)source=null==arguments[i]?{}:arguments[i],i%2?utils_ownKeys(Object(source),!0).forEach(function(key){defineProperty_defineProperty(target,key,source[key])}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):utils_ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))});return target}var getResourceSelectorI18n=function(params){return utils_objectSpread({inContextInputPlaceholder:"bucket",inContextSelectPlaceholder:"",inContextBrowseButton:"Browse S3",inContextViewButton:"View",inContextViewButtonAriaLabel:"View (opens in a new tab)",inContextLoadingText:"",inContextUriLabel:"",inContextVersionSelectLabel:"",modalTitle:"Choose an archive in S3",modalCancelButton:"Cancel",modalSubmitButton:"Choose",modalBreadcrumbRootItem:"S3 buckets",selectionBuckets:"Buckets",selectionObjects:"",selectionVersions:"",selectionBucketsSearchPlaceholder:"Find bucket",selectionObjectsSearchPlaceholder:"Find object by prefix",selectionVersionsSearchPlaceholder:"Find version",selectionBucketsLoading:"Loading buckets",selectionBucketsNoItems:"No buckets",selectionObjectsLoading:"",selectionObjectsNoItems:"",selectionVersionsLoading:"",selectionVersionsNoItems:"",filteringCounterText:function filteringCounterText(count){return""+count+(1===count?" match":" matches")},filteringNoMatches:"No matches",filteringCantFindMatch:"We can't find a match.",clearFilterButtonText:"Clear filter",// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore
columnBucketID:"ID",columnBucketName:"Name",columnBucketCreationDate:"Creation date",columnBucketRegion:"Region",columnBucketAccess:"Access",// columnObjectID: 'ID',
// columnObjectKey: 'Key',
// columnObjectLastModified: 'Last modified',
// columnObjectSize: 'Size',
// columnVersionID: 'Version ID',
// columnVersionLastModified: 'Last modified',
// columnVersionSize: 'Size',
validationPathMustBegin:"The path must begin with s3://",validationBucketLowerCase:"The bucket name must start with a lowercase character or number.",validationBucketMustNotContain:"The bucket name must not contain uppercase characters.",validationBucketMustComplyDns:"The bucket name must comply with DNS naming conventions",validationBucketLength:"The bucket name must be from 3 to 63 characters.",labelSortedDescending:function labelSortedDescending(columnName){return columnName+", sorted descending"},labelSortedAscending:function labelSortedAscending(columnName){return columnName+", sorted ascending"},labelNotSorted:function labelNotSorted(columnName){return columnName+", not sorted"},labelsPagination:{nextPageLabel:"Next page",previousPageLabel:"Previous page",pageLabel:function pageLabel(pageNumber){return"Page "+pageNumber+" of all pages"}},labelsBucketsSelection:{itemSelectionLabel:function itemSelectionLabel(_,item){var _item$Name;return null!==(_item$Name=null===item||void 0===item?void 0:item.Name)&&void 0!==_item$Name?_item$Name:""},selectionGroupLabel:"Buckets"},labelsObjectsSelection:{itemSelectionLabel:function itemSelectionLabel(){return""},selectionGroupLabel:"Objects"},labelsVersionsSelection:{itemSelectionLabel:function itemSelectionLabel(){return""},selectionGroupLabel:"Versions"},labelFiltering:function labelFiltering(itemsType){return"Find "+itemsType},labelRefresh:"Refresh the data",labelAlertDismiss:"Dismiss the alert",labelModalDismiss:"Dismiss the modal",labelBreadcrumbs:"S3 navigation"},params)};
;// CONCATENATED MODULE: ./src/components/form/S3BucketSelector/index.tsx
var S3BucketSelector_excluded=["name","control","label","buckets","info","constraintText","description","secondaryControl","stretch","onChange"],S3BucketSelector_excluded2=["onChange","value"];var FormS3BucketSelector=function(_ref){var name=_ref.name,control=_ref.control,label=_ref.label,bucketsProp=_ref.buckets,info=_ref.info,constraintText=_ref.constraintText,description=_ref.description,secondaryControl=_ref.secondaryControl,stretch=_ref.stretch,onChangeProp=_ref.onChange,props=objectWithoutProperties_objectWithoutProperties(_ref,S3BucketSelector_excluded),fetch=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/regenerator_default().mark(function _callee(){return regenerator_default().wrap(function(_context){for(;;)switch(_context.prev=_context.next){case 0:return _context.abrupt("return",Promise.resolve([]));case 1:case"end":return _context.stop();}},_callee)}));return function(){return _ref2.apply(this,arguments)}}(),buckets=(0,react.useMemo)(function(){return bucketsProp.map(function(i){return{Name:i.name,CreationDate:i.created,Region:i.region}})},[bucketsProp]),customProps={bucketsVisibleColumns:["Name"],fetchBuckets:function fetchBuckets(){return Promise.resolve(buckets)},fetchObjects:fetch,fetchVersions:fetch,i18nStrings:getResourceSelectorI18n()};return/*#__PURE__*/react.createElement(Controller,{name:name,control:control,render:function render(_ref3){var _ref3$field=_ref3.field,onChange=_ref3$field.onChange,value=_ref3$field.value,fieldRest=objectWithoutProperties_objectWithoutProperties(_ref3$field,S3BucketSelector_excluded2),error=_ref3.fieldState.error;return/*#__PURE__*/react.createElement(FormField,{description:description,label:label,info:info,stretch:stretch,constraintText:constraintText,secondaryControl:secondaryControl},/*#__PURE__*/react.createElement(s3_resource_selector,extends_extends({resource:{uri:value},onChange:function onChangeSelect(event){onChange(event.detail.resource.uri),onChangeProp&&onChangeProp(event)}},fieldRest,props,customProps,{invalid:!!error})))}})};
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/tiles/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/tiles/styles.css.js


    /* harmony default export */ const tiles_styles_css = ({
  "column-layout": "awsui_column-layout_vj6p7_gvt2c_93",
  "grid": "awsui_grid_vj6p7_gvt2c_104",
  "grid-no-gutters": "awsui_grid-no-gutters_vj6p7_gvt2c_109",
  "grid-variant-text-grid": "awsui_grid-variant-text-grid_vj6p7_gvt2c_112",
  "grid-breakpoint-default": "awsui_grid-breakpoint-default_vj6p7_gvt2c_119",
  "grid-columns-1": "awsui_grid-columns-1_vj6p7_gvt2c_122",
  "grid-breakpoint-xxs": "awsui_grid-breakpoint-xxs_vj6p7_gvt2c_122",
  "grid-breakpoint-xs": "awsui_grid-breakpoint-xs_vj6p7_gvt2c_125",
  "grid-columns-2": "awsui_grid-columns-2_vj6p7_gvt2c_128",
  "grid-columns-3": "awsui_grid-columns-3_vj6p7_gvt2c_134",
  "grid-columns-4": "awsui_grid-columns-4_vj6p7_gvt2c_140",
  "grid-vertical-borders": "awsui_grid-vertical-borders_vj6p7_gvt2c_153",
  "grid-horizontal-borders": "awsui_grid-horizontal-borders_vj6p7_gvt2c_186",
  "root": "awsui_root_vj6p7_gvt2c_240",
  "tile-container": "awsui_tile-container_vj6p7_gvt2c_255",
  "has-metadata": "awsui_has-metadata_vj6p7_gvt2c_265",
  "selected": "awsui_selected_vj6p7_gvt2c_268",
  "disabled": "awsui_disabled_vj6p7_gvt2c_272",
  "columns": "awsui_columns_vj6p7_gvt2c_287",
  "column-1": "awsui_column-1_vj6p7_gvt2c_292",
  "breakpoint-xs": "awsui_breakpoint-xs_vj6p7_gvt2c_299",
  "breakpoint-xxs": "awsui_breakpoint-xxs_vj6p7_gvt2c_304",
  "column-2": "awsui_column-2_vj6p7_gvt2c_309",
  "column-3": "awsui_column-3_vj6p7_gvt2c_326",
  "column-4": "awsui_column-4_vj6p7_gvt2c_343",
  "control": "awsui_control_vj6p7_gvt2c_361",
  "no-image": "awsui_no-image_vj6p7_gvt2c_365",
  "image": "awsui_image_vj6p7_gvt2c_369"
});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/tiles/tile.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0






var Tile = react.forwardRef(function (_a, forwardedRef) {
    var _b, _c, _d, _e, _f;
    var item = _a.item, selected = _a.selected, name = _a.name, breakpoint = _a.breakpoint, onChange = _a.onChange;
    var internalRef = (0,react.useRef)(null);
    var controlId = item.controlId || "".concat(name, "-value-").concat(item.value);
    var mergedRef = useMergeRefs(internalRef, forwardedRef);
    return (react.createElement("div", { className: clsx_m(tiles_styles_css["tile-container"], (_b = {}, _b[tiles_styles_css["has-metadata"]] = item.description || item.image, _b), (_c = {}, _c[tiles_styles_css.selected] = selected, _c), (_d = {}, _d[tiles_styles_css.disabled] = !!item.disabled, _d), tiles_styles_css["breakpoint-".concat(breakpoint)]), "data-value": item.value, onClick: function () {
            var _a;
            if (item.disabled) {
                return;
            }
            (_a = internalRef.current) === null || _a === void 0 ? void 0 : _a.focus();
            if (!selected) {
                fireNonCancelableEvent(onChange, { value: item.value });
            }
        } },
        react.createElement("div", { className: clsx_m(tiles_styles_css.control, (_e = {}, _e[tiles_styles_css["no-image"]] = !item.image, _e)) },
            react.createElement(radio_button, { checked: selected, ref: mergedRef, name: name, value: item.value, label: item.label, description: item.description, disabled: item.disabled, controlId: controlId })),
        item.image && react.createElement("div", { className: clsx_m(tiles_styles_css.image, (_f = {}, _f[tiles_styles_css.disabled] = !!item.disabled, _f)) }, item.image)));
});
//# sourceMappingURL=tile.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/hooks/forward-focus/radio-group.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

/**
 * Focus forwarding helper for radio groups where only the first selected
 * child element should be focused.
 */
function useRadioGroupForwardFocus(forwardedRef, items, value) {
    var itemRef = (0,react.useRef)(null);
    var itemIndex = items && findIndex(items, function (item) { return item.value === value; });
    (0,react.useImperativeHandle)(forwardedRef, function () { return ({
        focus: function () {
            var _a;
            (_a = itemRef.current) === null || _a === void 0 ? void 0 : _a.focus();
        }
    }); });
    return [itemRef, itemIndex !== undefined && itemIndex !== -1 ? itemIndex : 0];
}
function findIndex(items, predicate) {
    for (var i = 0; i < items.length; i++) {
        if (predicate(items[i])) {
            return i;
        }
    }
    return -1;
}
//# sourceMappingURL=radio-group.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/tiles/internal.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0










var internal_COLUMN_TRIGGERS = ['default', 'xxs', 'xs'];
var InternalTiles = react.forwardRef(function (_a, ref) {
    var value = _a.value, items = _a.items, ariaLabel = _a.ariaLabel, ariaRequired = _a.ariaRequired, columns = _a.columns, onChange = _a.onChange, _b = _a.__internalRootRef, __internalRootRef = _b === void 0 ? null : _b, rest = __rest(_a, ["value", "items", "ariaLabel", "ariaRequired", "columns", "onChange", "__internalRootRef"]);
    var baseProps = getBaseProps(rest);
    var _c = useFormFieldContext(rest), ariaDescribedby = _c.ariaDescribedby, ariaLabelledby = _c.ariaLabelledby;
    var generatedName = useUniqueId('awsui-tiles-');
    var _d = useRadioGroupForwardFocus(ref, items, value), tileRef = _d[0], tileRefIndex = _d[1];
    var _e = useContainerBreakpoints(internal_COLUMN_TRIGGERS), breakpoint = _e[0], breakpointRef = _e[1];
    var mergedRef = useMergeRefs(breakpointRef, __internalRootRef);
    var columnCount = getColumnCount(items, columns);
    return (react.createElement("div", tslib_es6_assign({ role: "radiogroup", "aria-label": ariaLabel, "aria-labelledby": ariaLabelledby, "aria-describedby": ariaDescribedby, "aria-required": ariaRequired }, baseProps, { className: clsx_m(baseProps.className, tiles_styles_css.root), ref: mergedRef }),
        react.createElement("div", { className: clsx_m(tiles_styles_css.columns, tiles_styles_css["column-".concat(columnCount)]) }, items &&
            items.map(function (item, index) { return (react.createElement(Tile, { ref: index === tileRefIndex ? tileRef : undefined, key: item.value, item: item, selected: item.value === value, name: generatedName, breakpoint: breakpoint, onChange: onChange })); }))));
});
function getColumnCount(items, columns) {
    if (columns) {
        return columns;
    }
    var nItems = items ? items.length : 0;
    var columnsLookup = {
        0: 1,
        1: 1,
        2: 2,
        4: 2,
        8: 2
    };
    return columnsLookup[nItems] || 3;
}
/* harmony default export */ const tiles_internal = (InternalTiles);
//# sourceMappingURL=internal.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/tiles/index.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0




var Tiles = react.forwardRef(function (props, ref) {
    var baseComponentProps = useBaseComponent('Tiles');
    return react.createElement(tiles_internal, tslib_es6_assign({ ref: ref }, props, baseComponentProps));
});
applyDisplayName(Tiles, 'Tiles');
/* harmony default export */ const tiles = (Tiles);
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./src/components/form/Tiles/index.tsx
var Tiles_excluded=["name","control","onChange"],Tiles_excluded2=["onChange"];var FormTiles=function(_ref){var name=_ref.name,control=_ref.control,onChangeProp=_ref.onChange,props=objectWithoutProperties_objectWithoutProperties(_ref,Tiles_excluded);return/*#__PURE__*/react.createElement(Controller,{name:name,control:control,render:function render(_ref2){var _ref2$field=_ref2.field,onChange=_ref2$field.onChange,fieldRest=objectWithoutProperties_objectWithoutProperties(_ref2$field,Tiles_excluded2);return/*#__PURE__*/react.createElement(tiles,extends_extends({onChange:function onChangeSelect(event){onChange(event.detail.value),onChangeProp&&onChangeProp(event)}},fieldRest,props))}})};
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/flashbar/styles.scoped.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/flashbar/styles.css.js


    /* harmony default export */ const flashbar_styles_css = ({
  "flash-refresh": "awsui_flash-refresh_1q84n_19pij_93",
  "enter": "awsui_enter_1q84n_19pij_93",
  "flash-body": "awsui_flash-body_1q84n_19pij_108",
  "flash-message": "awsui_flash-message_1q84n_19pij_108",
  "flash-header": "awsui_flash-header_1q84n_19pij_108",
  "flash-content": "awsui_flash-content_1q84n_19pij_109",
  "action-button-wrapper": "awsui_action-button-wrapper_1q84n_19pij_110",
  "dismiss-button-wrapper": "awsui_dismiss-button-wrapper_1q84n_19pij_111",
  "flash-icon": "awsui_flash-icon_1q84n_19pij_134",
  "entering": "awsui_entering_1q84n_19pij_147",
  "entered": "awsui_entered_1q84n_19pij_168",
  "exiting": "awsui_exiting_1q84n_19pij_273",
  "flashbar": "awsui_flashbar_1q84n_19pij_295",
  "flash": "awsui_flash_1q84n_19pij_93",
  "flash-list": "awsui_flash-list_1q84n_19pij_350",
  "flash-focus-container": "awsui_flash-focus-container_1q84n_19pij_386",
  "flash-text": "awsui_flash-text_1q84n_19pij_392",
  "dismiss-button": "awsui_dismiss-button_1q84n_19pij_111",
  "breakpoint-default": "awsui_breakpoint-default_1q84n_19pij_433",
  "flash-list-item": "awsui_flash-list-item_1q84n_19pij_433",
  "action-button": "awsui_action-button_1q84n_19pij_110",
  "flash-type-success": "awsui_flash-type-success_1q84n_19pij_446",
  "flash-type-error": "awsui_flash-type-error_1q84n_19pij_450",
  "flash-type-warning": "awsui_flash-type-warning_1q84n_19pij_454",
  "flash-type-info": "awsui_flash-type-info_1q84n_19pij_458",
  "stack": "awsui_stack_1q84n_19pij_462",
  "expanded": "awsui_expanded_1q84n_19pij_467",
  "collapsed": "awsui_collapsed_1q84n_19pij_481",
  "item": "awsui_item_1q84n_19pij_487",
  "visual-refresh": "awsui_visual-refresh_1q84n_19pij_497",
  "flash-items": "awsui_flash-items_1q84n_19pij_503",
  "toggle": "awsui_toggle_1q84n_19pij_510",
  "icon": "awsui_icon_1q84n_19pij_573"
});

;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/internal/utils/throttle.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
function throttle(func, delay, _a) {
    var _b = _a === void 0 ? {} : _a, _c = _b.trailing, trailing = _c === void 0 ? true : _c;
    var pending = null;
    var lastInvokeTime = null;
    var timerId = null;
    // Runs on every animation frame until timer stopped.
    function pendingFunc() {
        if (pending === null || lastInvokeTime === null) {
            return;
        }
        var invokeTime = Date.now();
        var shouldInvoke = invokeTime - lastInvokeTime >= delay;
        if (shouldInvoke) {
            func.apply(pending["this"], pending.args);
            lastInvokeTime = invokeTime;
            pending = null;
            timerId = null;
        }
        else if (trailing) {
            startTimer();
        }
    }
    function startTimer() {
        if (timerId) {
            cancelAnimationFrame(timerId);
        }
        timerId = requestAnimationFrame(pendingFunc);
    }
    // Decorated client function with delay mechanism.
    function throttled() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (lastInvokeTime === null) {
            lastInvokeTime = Date.now();
            func.apply(this, args);
        }
        else {
            pending = { "this": this, args: args };
            startTimer();
        }
    }
    // Prevents delayed function from execution when no longer needed.
    throttled.cancel = function () {
        if (timerId) {
            cancelAnimationFrame(timerId);
        }
        pending = null;
        lastInvokeTime = null;
        timerId = null;
    };
    return throttled;
}
//# sourceMappingURL=throttle.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/flashbar/flash.js












var FOCUS_THROTTLE_DELAY = 2000;
var ICON_TYPES = {
    success: 'status-positive',
    warning: 'status-warning',
    info: 'status-info',
    error: 'status-negative'
};
function actionButton(buttonText, onButtonClick) {
    return (react.createElement(InternalButton, { onClick: onButtonClick, className: flashbar_styles_css["action-button"], formAction: "none" }, buttonText));
}
function dismissButton(dismissLabel, onDismiss) {
    return (react.createElement("div", { className: flashbar_styles_css["dismiss-button-wrapper"] },
        react.createElement(InternalButton, { onClick: onDismiss, className: flashbar_styles_css["dismiss-button"], variant: "flashbar-icon", iconName: "close", formAction: "none", ariaLabel: dismissLabel })));
}
var focusFlashById = throttle(function (element, itemId) {
    var _a;
    var selector = "[data-itemid=\"".concat(CSS.escape(itemId), "\"] .").concat(flashbar_styles_css["flash-focus-container"]);
    (_a = element === null || element === void 0 ? void 0 : element.querySelector(selector)) === null || _a === void 0 ? void 0 : _a.focus();
}, FOCUS_THROTTLE_DELAY, { trailing: false });
var Flash = react.forwardRef(function (_a, ref) {
    var _b;
    var id = _a.id, header = _a.header, content = _a.content, dismissible = _a.dismissible, dismissLabel = _a.dismissLabel, statusIconAriaLabel = _a.statusIconAriaLabel, loading = _a.loading, action = _a.action, buttonText = _a.buttonText, onButtonClick = _a.onButtonClick, onDismiss = _a.onDismiss, className = _a.className, transitionState = _a.transitionState, ariaRole = _a.ariaRole, _c = _a.type, type = _c === void 0 ? 'info' : _c;
    var focusVisible = useFocusVisible();
    if (isDevelopment) {
        if (buttonText && !onButtonClick) {
            logging_warnOnce('Flashbar', "You provided a `buttonText` prop without an `onButtonClick` handler. This will render a non-interactive action button.");
        }
        if (dismissible && !onDismiss) {
            logging_warnOnce('Flashbar', "You have set the `dismissible` prop without an `onDismiss` handler. This will render a non-interactive dismiss button.");
        }
    }
    var button = action || (buttonText && actionButton(buttonText, onButtonClick));
    var iconType = ICON_TYPES[type];
    var icon = loading ? react.createElement(InternalSpinner, null) : react.createElement(internal, { name: iconType });
    var effectiveType = loading ? 'info' : type;
    var announcement = [statusIconAriaLabel, header, content].filter(Boolean).join(' ');
    return (
    // We're not using "polite" or "assertive" here, just turning default behavior off.
    // eslint-disable-next-line @cloudscape-design/prefer-live-region
    react.createElement("div", { ref: ref, role: ariaRole, "aria-live": ariaRole ? 'off' : undefined, "data-itemid": id, className: clsx_m(flashbar_styles_css.flash, flashbar_styles_css["flash-type-".concat(effectiveType)], className, transitionState && (_b = {},
            _b[flashbar_styles_css.enter] = transitionState === 'enter',
            _b[flashbar_styles_css.entering] = transitionState === 'entering',
            _b[flashbar_styles_css.entered] = transitionState === 'entered',
            _b[flashbar_styles_css.exit] = transitionState === 'exit',
            _b[flashbar_styles_css.exiting] = transitionState === 'exiting',
            _b[flashbar_styles_css.exited] = transitionState === 'exited',
            _b)) },
        react.createElement("div", { className: flashbar_styles_css["flash-body"] },
            react.createElement("div", tslib_es6_assign({}, focusVisible, { className: flashbar_styles_css["flash-focus-container"], tabIndex: ariaRole === 'alert' ? -1 : undefined }),
                react.createElement("div", { className: clsx_m(flashbar_styles_css["flash-icon"], flashbar_styles_css["flash-text"]), role: "img", "aria-label": statusIconAriaLabel }, icon),
                react.createElement("div", { className: clsx_m(flashbar_styles_css["flash-message"], flashbar_styles_css["flash-text"]) },
                    react.createElement("div", { className: flashbar_styles_css["flash-header"] }, header),
                    react.createElement("div", { className: flashbar_styles_css["flash-content"] }, content))),
            button && react.createElement("div", { className: flashbar_styles_css["action-button-wrapper"] }, button)),
        dismissible && dismissButton(dismissLabel, onDismiss),
        ariaRole === 'status' && react.createElement(live_region, null, announcement)));
});
//# sourceMappingURL=flash.js.map
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/flashbar/constant.js
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
/**
 * This is a delay that delays the `entering` transition state
 * for the flashbar to be executed, this is useful for:
 * - If a flashbar is exiting and another is entering at the same time we'd want to delay the entering to
 * prevent the jumping in the layout
 * The current animation time for the exiting can be found in motion.scss which is equivilant to 115ms,
 * if in the future this value is changed for the exiting animation we'll have to change this as well to match it
 */
var TIMEOUT_FOR_ENTERING_ANIMATION = 115;
//# sourceMappingURL=constant.js.map
;// CONCATENATED MODULE: ./node_modules/react-transition-group/esm/utils/ChildMapping.js

/**
 * Given `this.props.children`, return an object mapping key to child.
 *
 * @param {*} children `this.props.children`
 * @return {object} Mapping of key to child
 */

function getChildMapping(children, mapFn) {
  var mapper = function mapper(child) {
    return mapFn && (0,react.isValidElement)(child) ? mapFn(child) : child;
  };

  var result = Object.create(null);
  if (children) react.Children.map(children, function (c) {
    return c;
  }).forEach(function (child) {
    // run the map function here instead so that the key is the computed one
    result[child.key] = mapper(child);
  });
  return result;
}
/**
 * When you're adding or removing children some may be added or removed in the
 * same render pass. We want to show *both* since we want to simultaneously
 * animate elements in and out. This function takes a previous set of keys
 * and a new set of keys and merges them with its best guess of the correct
 * ordering. In the future we may expose some of the utilities in
 * ReactMultiChild to make this easy, but for now React itself does not
 * directly have this concept of the union of prevChildren and nextChildren
 * so we implement it here.
 *
 * @param {object} prev prev children as returned from
 * `ReactTransitionChildMapping.getChildMapping()`.
 * @param {object} next next children as returned from
 * `ReactTransitionChildMapping.getChildMapping()`.
 * @return {object} a key set that contains all keys in `prev` and all keys
 * in `next` in a reasonable order.
 */

function mergeChildMappings(prev, next) {
  prev = prev || {};
  next = next || {};

  function getValueForKey(key) {
    return key in next ? next[key] : prev[key];
  } // For each key of `next`, the list of keys to insert before that key in
  // the combined list


  var nextKeysPending = Object.create(null);
  var pendingKeys = [];

  for (var prevKey in prev) {
    if (prevKey in next) {
      if (pendingKeys.length) {
        nextKeysPending[prevKey] = pendingKeys;
        pendingKeys = [];
      }
    } else {
      pendingKeys.push(prevKey);
    }
  }

  var i;
  var childMapping = {};

  for (var nextKey in next) {
    if (nextKeysPending[nextKey]) {
      for (i = 0; i < nextKeysPending[nextKey].length; i++) {
        var pendingNextKey = nextKeysPending[nextKey][i];
        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);
      }
    }

    childMapping[nextKey] = getValueForKey(nextKey);
  } // Finally, add the keys which didn't appear before any key in `next`


  for (i = 0; i < pendingKeys.length; i++) {
    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);
  }

  return childMapping;
}

function getProp(child, prop, props) {
  return props[prop] != null ? props[prop] : child.props[prop];
}

function getInitialChildMapping(props, onExited) {
  return getChildMapping(props.children, function (child) {
    return (0,react.cloneElement)(child, {
      onExited: onExited.bind(null, child),
      in: true,
      appear: getProp(child, 'appear', props),
      enter: getProp(child, 'enter', props),
      exit: getProp(child, 'exit', props)
    });
  });
}
function getNextChildMapping(nextProps, prevChildMapping, onExited) {
  var nextChildMapping = getChildMapping(nextProps.children);
  var children = mergeChildMappings(prevChildMapping, nextChildMapping);
  Object.keys(children).forEach(function (key) {
    var child = children[key];
    if (!(0,react.isValidElement)(child)) return;
    var hasPrev = (key in prevChildMapping);
    var hasNext = (key in nextChildMapping);
    var prevChild = prevChildMapping[key];
    var isLeaving = (0,react.isValidElement)(prevChild) && !prevChild.props.in; // item is new (entering)

    if (hasNext && (!hasPrev || isLeaving)) {
      // console.log('entering', key)
      children[key] = (0,react.cloneElement)(child, {
        onExited: onExited.bind(null, child),
        in: true,
        exit: getProp(child, 'exit', nextProps),
        enter: getProp(child, 'enter', nextProps)
      });
    } else if (!hasNext && hasPrev && !isLeaving) {
      // item is old (exiting)
      // console.log('leaving', key)
      children[key] = (0,react.cloneElement)(child, {
        in: false
      });
    } else if (hasNext && hasPrev && (0,react.isValidElement)(prevChild)) {
      // item hasn't changed transition states
      // copy over the last transition props;
      // console.log('unchanged', key)
      children[key] = (0,react.cloneElement)(child, {
        onExited: onExited.bind(null, child),
        in: prevChild.props.in,
        exit: getProp(child, 'exit', nextProps),
        enter: getProp(child, 'enter', nextProps)
      });
    }
  });
  return children;
}
;// CONCATENATED MODULE: ./node_modules/react-transition-group/esm/TransitionGroup.js









var values = Object.values || function (obj) {
  return Object.keys(obj).map(function (k) {
    return obj[k];
  });
};

var defaultProps = {
  component: 'div',
  childFactory: function childFactory(child) {
    return child;
  }
};
/**
 * The `<TransitionGroup>` component manages a set of transition components
 * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition
 * components, `<TransitionGroup>` is a state machine for managing the mounting
 * and unmounting of components over time.
 *
 * Consider the example below. As items are removed or added to the TodoList the
 * `in` prop is toggled automatically by the `<TransitionGroup>`.
 *
 * Note that `<TransitionGroup>`  does not define any animation behavior!
 * Exactly _how_ a list item animates is up to the individual transition
 * component. This means you can mix and match animations across different list
 * items.
 */

var TransitionGroup = /*#__PURE__*/function (_React$Component) {
  _inheritsLoose(TransitionGroup, _React$Component);

  function TransitionGroup(props, context) {
    var _this;

    _this = _React$Component.call(this, props, context) || this;

    var handleExited = _this.handleExited.bind(_assertThisInitialized(_this)); // Initial children should all be entering, dependent on appear


    _this.state = {
      contextValue: {
        isMounting: true
      },
      handleExited: handleExited,
      firstRender: true
    };
    return _this;
  }

  var _proto = TransitionGroup.prototype;

  _proto.componentDidMount = function componentDidMount() {
    this.mounted = true;
    this.setState({
      contextValue: {
        isMounting: false
      }
    });
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    this.mounted = false;
  };

  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {
    var prevChildMapping = _ref.children,
        handleExited = _ref.handleExited,
        firstRender = _ref.firstRender;
    return {
      children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),
      firstRender: false
    };
  } // node is `undefined` when user provided `nodeRef` prop
  ;

  _proto.handleExited = function handleExited(child, node) {
    var currentChildMapping = getChildMapping(this.props.children);
    if (child.key in currentChildMapping) return;

    if (child.props.onExited) {
      child.props.onExited(node);
    }

    if (this.mounted) {
      this.setState(function (state) {
        var children = extends_extends({}, state.children);

        delete children[child.key];
        return {
          children: children
        };
      });
    }
  };

  _proto.render = function render() {
    var _this$props = this.props,
        Component = _this$props.component,
        childFactory = _this$props.childFactory,
        props = objectWithoutPropertiesLoose_objectWithoutPropertiesLoose(_this$props, ["component", "childFactory"]);

    var contextValue = this.state.contextValue;
    var children = values(this.state.children).map(childFactory);
    delete props.appear;
    delete props.enter;
    delete props.exit;

    if (Component === null) {
      return /*#__PURE__*/react.createElement(TransitionGroupContext.Provider, {
        value: contextValue
      }, children);
    }

    return /*#__PURE__*/react.createElement(TransitionGroupContext.Provider, {
      value: contextValue
    }, /*#__PURE__*/react.createElement(Component, props, children));
  };

  return TransitionGroup;
}(react.Component);

TransitionGroup.propTypes =  false ? 0 : {};
TransitionGroup.defaultProps = defaultProps;
/* harmony default export */ const esm_TransitionGroup = (TransitionGroup);
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/flashbar/index.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

















function Flashbar(_a) {
    var items = _a.items, restProps = __rest(_a, ["items"]);
    var __internalRootRef = useBaseComponent('Flashbar').__internalRootRef;
    var baseProps = getBaseProps(restProps);
    var ref = (0,react.useRef)(null);
    var _b = useContainerBreakpoints(['xs']), breakpoint = _b[0], breakpointRef = _b[1];
    var mergedRef = useMergeRefs(ref, breakpointRef, __internalRootRef);
    var isFocusVisible = useFocusVisible();
    var isVisualRefresh = useVisualRefresh();
    var _c = (0,react.useState)(items), previousItems = _c[0], setPreviousItems = _c[1];
    var _d = (0,react.useState)(null), nextFocusId = _d[0], setNextFocusId = _d[1];
    // Track new or removed item IDs in state to only trigger focus changes for newly added items.
    // https://reactjs.org/docs/hooks-faq.html#how-do-i-implement-getderivedstatefromprops
    if (items) {
        var newItems = items.filter(function (_a) {
            var id = _a.id;
            return id && !previousItems.some(function (item) { return item.id === id; });
        });
        var removedItems = previousItems.filter(function (_a) {
            var id = _a.id;
            return id && !items.some(function (item) { return item.id === id; });
        });
        if (newItems.length > 0 || removedItems.length > 0) {
            setPreviousItems(items);
            var newFocusItems = newItems.filter(function (_a) {
                var ariaRole = _a.ariaRole;
                return ariaRole === 'alert';
            });
            if (newFocusItems.length > 0) {
                setNextFocusId(newFocusItems[0].id);
            }
        }
    }
    (0,react.useEffect)(function () {
        if (nextFocusId) {
            focusFlashById(ref.current, nextFocusId);
        }
    }, [nextFocusId]);
    /**
     * All the flash items should have ids so we can identify which DOM element is being
     * removed from the DOM to animate it. Motion will be disabled if any of the provided
     * flash messages does not contain an `id`.
     */
    var motionDisabled = useReducedMotion(breakpointRef) || !isVisualRefresh || (items && !items.every(function (item) { return 'id' in item; }));
    /**
     * The `stackItems` property is a hidden boolean that allows for teams
     * to beta test the flashbar stacking feature.
     */
    var stackItems = isStackedFlashbar(restProps);
    var ariaLabels = stackItems ? restProps.ariaLabels : {};
    var isFlashbarStacked = stackItems && (items === null || items === void 0 ? void 0 : items.length) > 3;
    var _e = (0,react.useState)(false), isFlashbarStackExpanded = _e[0], setIsFlashbarStackExpanded = _e[1];
    /**
     * Compute the appropriate aria label for the stacked notifications toggle button
     * based on the expanded/collapsed state of the stack and the presence of
     * corresponding aria label properties.
     */
    function getStackButtonAriaLabel() {
        var _a, _b;
        var stackButtonAriaLabel;
        if (isFlashbarStackExpanded) {
            stackButtonAriaLabel = (_a = ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.stackCollapseLabel) !== null && _a !== void 0 ? _a : 'Collapse stacked notifications';
        }
        else {
            stackButtonAriaLabel = (_b = ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.stackExpandLabel) !== null && _b !== void 0 ? _b : 'Expand stacked notifications';
        }
        return stackButtonAriaLabel;
    }
    /**
     * If the `isFlashbarStacked` is true (which is only possible if `stackItems` is true)
     * then the first item should be rendered followed by two dummy items that visually indicate
     * two, three, or more items exist in the stack.
     */
    function renderStackedItems() {
        var _a;
        if (!isFlashbarStacked) {
            return;
        }
        var stackDepth = Math.min(3, items.length);
        var stackedItems = items.slice(0, stackDepth);
        return (react.createElement("div", { className: flashbar_styles_css.stack, style: (_a = {}, _a[custom_css_properties.flashbarStackDepth] = stackDepth, _a) },
            !isFlashbarStackExpanded && (react.createElement("div", { className: clsx_m(flashbar_styles_css.collapsed, isVisualRefresh && flashbar_styles_css["visual-refresh"]) }, stackedItems.map(function (item, index) {
                var _a;
                var _b, _c;
                return (react.createElement("div", { className: flashbar_styles_css.item, style: (_a = {}, _a[custom_css_properties.flashbarStackIndex] = index, _a), key: index },
                    index === 0 && (react.createElement("ul", { className: flashbar_styles_css["flash-list"] },
                        react.createElement("li", { className: flashbar_styles_css["flash-list-item"] }, renderItem(item, (_b = item.id) !== null && _b !== void 0 ? _b : index)))),
                    index > 0 && react.createElement("div", { className: clsx_m(flashbar_styles_css.flash, flashbar_styles_css["flash-type-".concat((_c = item.type) !== null && _c !== void 0 ? _c : 'info')]) })));
            }))),
            isFlashbarStackExpanded && (react.createElement("ul", { className: clsx_m(flashbar_styles_css["flash-list"], flashbar_styles_css.expanded) }, items.map(function (item, index) {
                var _a, _b;
                return (react.createElement("li", { key: (_a = item.id) !== null && _a !== void 0 ? _a : index, className: flashbar_styles_css["flash-list-item"] }, renderItem(item, (_b = item.id) !== null && _b !== void 0 ? _b : index)));
            }))),
            react.createElement("button", tslib_es6_assign({ "aria-label": getStackButtonAriaLabel(), className: clsx_m(flashbar_styles_css.toggle, isVisualRefresh && flashbar_styles_css["visual-refresh"]), onClick: function () { return setIsFlashbarStackExpanded(!isFlashbarStackExpanded); } }, isFocusVisible),
                react.createElement("span", { className: clsx_m(flashbar_styles_css.icon, isFlashbarStackExpanded && flashbar_styles_css.expanded) },
                    react.createElement(internal, { size: "small", name: "angle-down" })))));
    }
    /**
     * If the flashbar is flat and motion is `enabled` then the adding and removing of items
     * from the flashbar will render with visual transitions.
     */
    function renderFlatItemsWithTransitions() {
        if (isFlashbarStacked || motionDisabled || !items) {
            return;
        }
        return (
        // This is a proxy for <ul>, so we're not applying a class to another actual component.
        // eslint-disable-next-line react/forbid-component-props
        react.createElement(esm_TransitionGroup, { component: "ul", className: flashbar_styles_css["flash-list"] }, items &&
            items.map(function (item, index) {
                var _a;
                return (react.createElement(transition_Transition, { transitionChangeDelay: { entering: TIMEOUT_FOR_ENTERING_ANIMATION }, key: (_a = item.id) !== null && _a !== void 0 ? _a : index, "in": true }, function (state, transitionRootElement) {
                    var _a;
                    return (react.createElement("li", { className: flashbar_styles_css["flash-list-item"] }, renderItem(item, (_a = item.id) !== null && _a !== void 0 ? _a : index, transitionRootElement, state)));
                }));
            })));
    }
    /**
     * If the flashbar is flat and motion is `disabled` then the adding and removing of items
     * from the flashbar will render without visual transitions.
     */
    function renderFlatItemsWithoutTransitions() {
        if (isFlashbarStacked || !motionDisabled || !items) {
            return;
        }
        return (react.createElement("ul", { className: flashbar_styles_css["flash-list"] }, items.map(function (item, index) {
            var _a, _b;
            return (react.createElement("li", { key: (_a = item.id) !== null && _a !== void 0 ? _a : index, className: flashbar_styles_css["flash-list-item"] }, renderItem(item, (_b = item.id) !== null && _b !== void 0 ? _b : index)));
        })));
    }
    /**
     * This is a shared render function for a single flashbar item to be used
     * by the stacking, motion, and non-motion item group render functions.
     */
    function renderItem(item, key, transitionRootElement, transitionState) {
        return (react.createElement(Flash
        // eslint-disable-next-line react/forbid-component-props
        , tslib_es6_assign({
            // eslint-disable-next-line react/forbid-component-props
            className: clsx_m(getVisualContextClassname('flashbar'), isVisualRefresh ? flashbar_styles_css["flash-refresh"] : ''), key: key, ref: transitionRootElement, transitionState: transitionState }, item)));
    }
    return (react.createElement("div", tslib_es6_assign({}, baseProps, { className: clsx_m(baseProps.className, flashbar_styles_css.flashbar, flashbar_styles_css["breakpoint-".concat(breakpoint)]), ref: mergedRef }),
        renderStackedItems(),
        renderFlatItemsWithTransitions(),
        renderFlatItemsWithoutTransitions()));
}
function isStackedFlashbar(props) {
    return 'stackItems' in props && !!props.stackItems;
}
applyDisplayName(Flashbar, 'Flashbar');
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./src/components/Notifications/index.tsx
var Notifications_Notifications=function(){var notifications=hooks_useAppSelector(selectNotifications);return/*#__PURE__*/react.createElement(Flashbar,{items:notifications})};
;// CONCATENATED MODULE: ./node_modules/@cloudscape-design/components/modal/index.js

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0




function Modal(_a) {
    var _b = _a.size, size = _b === void 0 ? 'medium' : _b, _c = _a.closeAriaLabel, closeAriaLabel = _c === void 0 ? '' : _c, props = __rest(_a, ["size", "closeAriaLabel"]);
    var baseComponentProps = useBaseComponent('Modal');
    return react.createElement(InternalModal, tslib_es6_assign({ size: size, closeAriaLabel: closeAriaLabel }, props, baseComponentProps));
}
applyDisplayName(Modal, 'Modal');
//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./src/components/ConfirmationDialog/index.tsx
var ConfirmationDialog=function(_ref){var titleProp=_ref.title,contentProp=_ref.content,_ref$visible=_ref.visible,onDiscard=_ref.onDiscard,onConfirm=_ref.onConfirm,cancelButtonLabelProp=_ref.cancelButtonLabel,confirmButtonLabelProp=_ref.confirmButtonLabel,_useTranslation=useTranslation_useTranslation(),t=_useTranslation.t,title=null!==titleProp&&void 0!==titleProp?titleProp:t("confirm_dialog.title"),content=null!==contentProp&&void 0!==contentProp?contentProp:/*#__PURE__*/react.createElement(Box,{variant:"span"},t("confirm_dialog.message")),cancelButtonLabel=null!==cancelButtonLabelProp&&void 0!==cancelButtonLabelProp?cancelButtonLabelProp:t("common.cancel"),confirmButtonLabel=null!==confirmButtonLabelProp&&void 0!==confirmButtonLabelProp?confirmButtonLabelProp:t("common.delete");return/*#__PURE__*/react.createElement(Modal,{visible:void 0!==_ref$visible&&_ref$visible,onDismiss:onDiscard,header:title,footer:/*#__PURE__*/react.createElement(Box,{float:"right"},/*#__PURE__*/react.createElement(SpaceBetween,{direction:"horizontal",size:"xs"},/*#__PURE__*/react.createElement(components_button,{variant:"link",onClick:onDiscard},cancelButtonLabel),/*#__PURE__*/react.createElement(components_button,{variant:"primary",onClick:onConfirm},confirmButtonLabel)))},content)};
;// CONCATENATED MODULE: ./src/components/index.ts
// custom components

;// CONCATENATED MODULE: ./src/App/AuthErrorMessage/index.tsx
var AuthErrorMessage=function(_ref){var title=_ref.title,text=_ref.text;return/*#__PURE__*/react.createElement(Box,{margin:{vertical:"xxxl"},textAlign:"center",color:"inherit"},/*#__PURE__*/react.createElement(SpaceBetween,{size:"xxs"},/*#__PURE__*/react.createElement("div",null,/*#__PURE__*/react.createElement("b",null,title),/*#__PURE__*/react.createElement(Box,{variant:"p",color:"inherit"},text))))};
;// CONCATENATED MODULE: ./src/routes.ts
var ROUTES={BASE:"/",LOGOUT:"/logout",PROJECT:{LIST:"/hubs",ADD:"/hubs/add",DETAILS:{TEMPLATE:"/hubs/:name",FORMAT:function FORMAT(name){return buildRoute(ROUTES.HUB.DETAILS.TEMPLATE,{name:name})}},EDIT_BACKEND:{TEMPLATE:"/hubs/:name/edit/backend",FORMAT:function FORMAT(name){return buildRoute(ROUTES.HUB.EDIT_BACKEND.TEMPLATE,{name:name})}}},USER:{LIST:"/users",ADD:"/users/add",DETAILS:{TEMPLATE:"/users/:name",FORMAT:function FORMAT(name){return buildRoute(ROUTES.USER.DETAILS.TEMPLATE,{name:name})}},EDIT:{TEMPLATE:"/users/:name/edit",FORMAT:function FORMAT(name){return buildRoute(ROUTES.USER.EDIT.TEMPLATE,{name:name})}}}};
;// CONCATENATED MODULE: ./src/assets/images/logo.svg
var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path10, _path11, _path12, _path13, _path14, _path15, _path16, _path17, _path18, _path19, _path20, _path21, _path22, _path23, _path24, _path25, _path26, _path27, _defs;
var logo_excluded = (/* unused pure expression or super */ null && (["title", "titleId"]));
function logo_extends() { logo_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return logo_extends.apply(this, arguments); }
function logo_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = logo_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function logo_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }


var SvgLogo = function SvgLogo(_ref, ref) {
  var title = _ref.title,
    titleId = _ref.titleId,
    props = logo_objectWithoutProperties(_ref, logo_excluded);
  return /*#__PURE__*/React.createElement("svg", logo_extends({
    width: 88,
    height: 21,
    viewBox: "0 0 88 21",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    ref: ref,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement("path", {
    d: "M20.8901 13.3026C20.8901 12.2132 21.1145 11.2484 21.5631 10.4084C22.025 9.56829 22.6452 8.91855 23.4237 8.45913C24.2154 7.9866 25.093 7.75033 26.0562 7.75033C26.7688 7.75033 27.4682 7.90784 28.1544 8.22287C28.8537 8.52477 29.4079 8.93167 29.817 9.44359V4.2063H32.0933V18.7762H29.817V17.142C29.4475 17.6671 28.9329 18.1002 28.2731 18.4415C27.6265 18.7828 26.881 18.9534 26.0364 18.9534C25.0864 18.9534 24.2154 18.7171 23.4237 18.2446C22.6452 17.7589 22.025 17.0895 21.5631 16.2363C21.1145 15.37 20.8901 14.3921 20.8901 13.3026ZM29.817 13.342C29.817 12.5938 29.6587 11.9441 29.342 11.3928C29.0385 10.8415 28.636 10.4215 28.1346 10.1327C27.6331 9.84393 27.0921 9.69955 26.5115 9.69955C25.9309 9.69955 25.3899 9.84393 24.8884 10.1327C24.387 10.4084 23.9779 10.8218 23.6612 11.3731C23.3577 11.9113 23.206 12.5545 23.206 13.3026C23.206 14.0508 23.3577 14.7071 23.6612 15.2716C23.9779 15.836 24.387 16.2691 24.8884 16.571C25.4031 16.8598 25.9441 17.0042 26.5115 17.0042C27.0921 17.0042 27.6331 16.8598 28.1346 16.571C28.636 16.2823 29.0385 15.8622 29.342 15.3109C29.6587 14.7465 29.817 14.0902 29.817 13.342Z",
    fill: "#fff"
  })), _path2 || (_path2 = /*#__PURE__*/React.createElement("path", {
    d: "M39.0157 18.9534C38.158 18.9534 37.3861 18.8025 36.6999 18.5006C36.0269 18.1855 35.4925 17.7655 35.0966 17.2405C34.7007 16.7023 34.4896 16.1051 34.4632 15.4488H36.7988C36.8384 15.9082 37.0562 16.2954 37.452 16.6104C37.8611 16.9123 38.3691 17.0633 38.9761 17.0633C39.6095 17.0633 40.0978 16.9451 40.4409 16.7089C40.7971 16.4595 40.9753 16.1444 40.9753 15.7638C40.9753 15.3569 40.7773 15.055 40.3815 14.8581C39.9988 14.6612 39.3852 14.4446 38.5407 14.2083C37.7225 13.9852 37.0562 13.7686 36.5415 13.5586C36.0269 13.3486 35.5783 13.027 35.1956 12.5938C34.8261 12.1607 34.6414 11.5897 34.6414 10.8809C34.6414 10.3033 34.8129 9.7783 35.156 9.30576C35.4991 8.8201 35.9873 8.43945 36.6207 8.1638C37.2673 7.88815 38.0063 7.75033 38.8376 7.75033C40.078 7.75033 41.0742 8.06535 41.8264 8.6954C42.5917 9.31233 43.0008 10.159 43.0536 11.2353H40.7971C40.7575 10.7496 40.5596 10.3624 40.2033 10.0736C39.847 9.78487 39.3654 9.64048 38.7584 9.64048C38.1646 9.64048 37.7094 9.75205 37.3927 9.97519C37.076 10.1983 36.9176 10.4937 36.9176 10.8612C36.9176 11.15 37.0232 11.3928 37.2343 11.5897C37.4454 11.7866 37.7028 11.9441 38.0063 12.0622C38.3098 12.1672 38.7584 12.3051 39.3522 12.4757C40.144 12.6857 40.7905 12.9023 41.292 13.1254C41.8066 13.3355 42.2487 13.6505 42.6181 14.0705C42.9876 14.4905 43.179 15.0484 43.1922 15.7441C43.1922 16.361 43.0206 16.9123 42.6775 17.398C42.3344 17.8836 41.8462 18.2643 41.2128 18.5399C40.5926 18.8156 39.8602 18.9534 39.0157 18.9534Z",
    fill: "#fff"
  })), _path3 || (_path3 = /*#__PURE__*/React.createElement("path", {
    d: "M48.2628 9.75861V15.7638C48.2628 16.1707 48.3552 16.466 48.5399 16.6498C48.7379 16.8204 49.0678 16.9057 49.5296 16.9057H50.9152V18.7762H49.1338C48.1177 18.7762 47.3391 18.5399 46.7981 18.0674C46.2571 17.5949 45.9866 16.827 45.9866 15.7638V9.75861H44.7V7.92753H45.9866V5.23013H48.2628V7.92753H50.9152V9.75861H48.2628Z",
    fill: "#fff"
  })), _path4 || (_path4 = /*#__PURE__*/React.createElement("path", {
    d: "M52.2427 13.3026C52.2427 12.2132 52.4671 11.2484 52.9157 10.4084C53.3776 9.56829 53.9977 8.91855 54.7763 8.45913C55.568 7.9866 56.4389 7.75033 57.389 7.75033C58.2468 7.75033 58.9923 7.92097 59.6257 8.26224C60.2723 8.5904 60.7869 9.00387 61.1696 9.50265V7.92753H63.4458V18.7762H61.1696V17.1617C60.7869 17.6736 60.2657 18.1002 59.6059 18.4415C58.9461 18.7828 58.194 18.9534 57.3494 18.9534C56.4126 18.9534 55.5548 18.7171 54.7763 18.2446C53.9977 17.7589 53.3776 17.0895 52.9157 16.2363C52.4671 15.37 52.2427 14.3921 52.2427 13.3026ZM61.1696 13.342C61.1696 12.5938 61.0112 11.9441 60.6945 11.3928C60.391 10.8415 59.9886 10.4215 59.4871 10.1327C58.9857 9.84393 58.4447 9.69955 57.8641 9.69955C57.2835 9.69955 56.7424 9.84393 56.241 10.1327C55.7396 10.4084 55.3305 10.8218 55.0138 11.3731C54.7103 11.9113 54.5586 12.5545 54.5586 13.3026C54.5586 14.0508 54.7103 14.7071 55.0138 15.2716C55.3305 15.836 55.7396 16.2691 56.241 16.571C56.7556 16.8598 57.2967 17.0042 57.8641 17.0042C58.4447 17.0042 58.9857 16.8598 59.4871 16.571C59.9886 16.2823 60.391 15.8622 60.6945 15.3109C61.0112 14.7465 61.1696 14.0902 61.1696 13.342Z",
    fill: "#fff"
  })), _path5 || (_path5 = /*#__PURE__*/React.createElement("path", {
    d: "M65.6575 13.342C65.6575 12.2263 65.8818 11.2484 66.3304 10.4084C66.7923 9.55516 67.4257 8.89886 68.2306 8.43945C69.0355 7.98004 69.9592 7.75033 71.0017 7.75033C72.3213 7.75033 73.4099 8.06535 74.2676 8.6954C75.1385 9.31233 75.7258 10.1983 76.0293 11.3534H73.5947C73.3967 10.8153 73.08 10.3952 72.6446 10.0933C72.2091 9.79143 71.6615 9.64048 71.0017 9.64048C70.078 9.64048 69.339 9.96863 68.7848 10.6249C68.2438 11.2681 67.9733 12.1738 67.9733 13.342C67.9733 14.5102 68.2438 15.4225 68.7848 16.0788C69.339 16.7351 70.078 17.0633 71.0017 17.0633C72.3081 17.0633 73.1724 16.4923 73.5947 15.3503H76.0293C75.7126 16.4529 75.1187 17.3323 74.2478 17.9886C73.3769 18.6318 72.2949 18.9534 71.0017 18.9534C69.9592 18.9534 69.0355 18.7237 68.2306 18.2643C67.4257 17.7917 66.7923 17.1354 66.3304 16.2954C65.8818 15.4422 65.6575 14.4577 65.6575 13.342Z",
    fill: "#fff"
  })), _path6 || (_path6 = /*#__PURE__*/React.createElement("path", {
    d: "M82.593 13.3617L87.6205 18.7762H84.5723L80.5344 14.1099V18.7762H78.278V4.2063H80.5344V12.6726L84.4931 7.92753H87.6205L82.593 13.3617Z",
    fill: "#fff"
  })), _path7 || (_path7 = /*#__PURE__*/React.createElement("path", {
    d: "M4.20035 8.6862C2.30151 9.02799 0.919922 10.6805 0.919922 12.6098L0.919922 20.0867H3.83327L3.83327 11.96C3.83327 10.6567 4.06327 9.58334 4.75327 8.58667L4.20035 8.6862Z",
    fill: "url(#paint0_linear_8927_5693)"
  })), _path8 || (_path8 = /*#__PURE__*/React.createElement("path", {
    d: "M15.8861 11.4005C17.7849 11.0587 19.1665 9.40621 19.1665 7.47685L19.1665 -3.24249e-05H16.2532L16.2532 8.12666C16.2532 9.42999 16.0232 10.5033 15.3332 11.5L15.8861 11.4005Z",
    fill: "url(#paint1_linear_8927_5693)"
  })), _path9 || (_path9 = /*#__PURE__*/React.createElement("path", {
    d: "M18.0932 2.45334C18.0932 2.70736 17.8873 2.91328 17.6333 2.91328C17.3793 2.91328 17.1733 2.70736 17.1733 2.45334C17.1733 2.19933 17.3793 1.99341 17.6333 1.99341C17.8873 1.99341 18.0932 2.19933 18.0932 2.45334Z",
    fill: "#CF07D3"
  })), _path10 || (_path10 = /*#__PURE__*/React.createElement("path", {
    d: "M2.75972 17.6333C2.75972 17.8873 2.5538 18.0932 2.29978 18.0932C2.04576 18.0932 1.83984 17.8873 1.83984 17.6333C1.83984 17.3793 2.04576 17.1733 2.29978 17.1733C2.5538 17.1733 2.75972 17.3793 2.75972 17.6333Z",
    fill: "#CF07D3"
  })), _path11 || (_path11 = /*#__PURE__*/React.createElement("path", {
    d: "M13.9359 2.9297C13.7761 2.7323 13.8065 2.44268 14.0039 2.28282C14.2013 2.12296 14.491 2.1534 14.6508 2.35081L15.9565 3.96325C16.0098 4.02905 15.9997 4.12559 15.9339 4.17888L15.4573 4.56481C15.3915 4.61809 15.2949 4.60795 15.2417 4.54214L13.9359 2.9297Z",
    fill: "url(#paint2_linear_8927_5693)"
  })), _path12 || (_path12 = /*#__PURE__*/React.createElement("path", {
    d: "M15.4349 4.78052C15.3816 4.71472 15.3917 4.61818 15.4575 4.56489L15.9341 4.17897C15.9999 4.12568 16.0965 4.13583 16.1497 4.20163L17.3749 5.71459C17.5348 5.912 17.5043 6.20162 17.3069 6.36148C17.1095 6.52133 16.8199 6.49089 16.66 6.29349L15.4349 4.78052Z",
    fill: "url(#paint3_linear_8927_5693)"
  })), _path13 || (_path13 = /*#__PURE__*/React.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M8.58651 4.94307C8.58651 3.01372 9.96809 1.36124 11.8669 1.01945L12.4199 0.919922C11.7299 1.91659 11.4998 2.98993 11.4998 4.29327V11.3466H8.58651V4.94307ZM11.4998 15.1435C11.4998 17.0728 10.1183 18.7253 8.21942 19.0671L7.6665 19.1666C8.35651 18.17 8.58651 17.0966 8.58651 15.7933V11.3466H11.4998V15.1435Z",
    fill: "url(#paint4_linear_8927_5693)"
  })), _path14 || (_path14 = /*#__PURE__*/React.createElement("path", {
    d: "M2.43593 14.4297C2.27607 14.2323 2.30651 13.9427 2.50392 13.7828C2.70133 13.623 2.99095 13.6534 3.15081 13.8508L4.45654 15.4633C4.50982 15.5291 4.49968 15.6256 4.43387 15.6789L3.95729 16.0648C3.89149 16.1181 3.79495 16.1079 3.74166 16.0421L2.43593 14.4297Z",
    fill: "url(#paint5_linear_8927_5693)"
  })), _path15 || (_path15 = /*#__PURE__*/React.createElement("path", {
    d: "M3.93486 16.2805C3.88158 16.2147 3.89172 16.1182 3.95752 16.0649L4.43411 15.679C4.49991 15.6257 4.59645 15.6358 4.64974 15.7016L5.87491 17.2146C6.03477 17.412 6.00433 17.7016 5.80692 17.8615C5.60951 18.0213 5.31989 17.9909 5.16004 17.7935L3.93486 16.2805Z",
    fill: "url(#paint6_linear_8927_5693)"
  })), _path16 || (_path16 = /*#__PURE__*/React.createElement("path", {
    d: "M3.35634 11.0564C3.19648 10.859 3.22692 10.5694 3.42433 10.4095C3.62174 10.2497 3.91136 10.2801 4.07122 10.4775L6.51342 13.4934C6.5667 13.5592 6.55656 13.6557 6.49076 13.709L6.01417 14.0949C5.94837 14.1482 5.85183 14.1381 5.79854 14.0723L3.35634 11.0564Z",
    fill: "url(#paint7_linear_8927_5693)"
  })), _path17 || (_path17 = /*#__PURE__*/React.createElement("path", {
    d: "M5.99199 14.3113C5.9387 14.2455 5.94885 14.1489 6.01465 14.0957L6.49124 13.7097C6.55704 13.6564 6.65358 13.6666 6.70686 13.7324L9.01439 16.582C9.17425 16.7794 9.14381 17.069 8.9464 17.2288C8.749 17.3887 8.45938 17.3583 8.29952 17.1608L5.99199 14.3113Z",
    fill: "url(#paint8_linear_8927_5693)"
  })), _path18 || (_path18 = /*#__PURE__*/React.createElement("path", {
    d: "M11.4005 15.8863C11.0587 17.7852 9.40621 19.1667 7.47685 19.1667H-3.14713e-05V16.2534H8.12666C9.42999 16.2534 10.5033 16.0234 11.5 15.3334L11.4005 15.8863Z",
    fill: "url(#paint9_linear_8927_5693)"
  })), _path19 || (_path19 = /*#__PURE__*/React.createElement("path", {
    d: "M11.0228 3.54298C10.863 3.34558 10.8934 3.05596 11.0908 2.8961C11.2882 2.73624 11.5779 2.76668 11.7377 2.96409L14.1799 5.97996C14.2332 6.04576 14.2231 6.1423 14.1573 6.19559L13.6807 6.58152C13.6149 6.6348 13.5183 6.62466 13.465 6.55885L11.0228 3.54298Z",
    fill: "url(#paint10_linear_8927_5693)"
  })), _path20 || (_path20 = /*#__PURE__*/React.createElement("path", {
    d: "M13.6585 6.79786C13.6052 6.73205 13.6154 6.63551 13.6812 6.58223L14.1577 6.1963C14.2235 6.14301 14.3201 6.15316 14.3734 6.21896L16.6809 9.06852C16.8408 9.26593 16.8103 9.55555 16.6129 9.71541C16.4155 9.87526 16.1259 9.84482 15.966 9.64742L13.6585 6.79786Z",
    fill: "url(#paint11_linear_8927_5693)"
  })), _path21 || (_path21 = /*#__PURE__*/React.createElement("path", {
    d: "M6.26943 10.4431C6.10957 10.2457 6.14001 9.9561 6.33742 9.79625C6.53483 9.63639 6.82445 9.66683 6.9843 9.86424L8.29003 11.4767C8.34332 11.5425 8.33317 11.639 8.26737 11.6923L7.79079 12.0782C7.72498 12.1315 7.62844 12.1214 7.57516 12.0556L6.26943 10.4431Z",
    fill: "url(#paint12_linear_8927_5693)"
  })), _path22 || (_path22 = /*#__PURE__*/React.createElement("path", {
    d: "M7.76836 12.294C7.71507 12.2281 7.72522 12.1316 7.79102 12.0783L8.2676 11.6924C8.33341 11.6391 8.42995 11.6493 8.48323 11.7151L9.70841 13.228C9.86826 13.4254 9.83782 13.715 9.64042 13.8749C9.44301 14.0348 9.15339 14.0043 8.99353 13.8069L7.76836 12.294Z",
    fill: "url(#paint13_linear_8927_5693)"
  })), _path23 || (_path23 = /*#__PURE__*/React.createElement("path", {
    d: "M8.68644 4.20035C9.02823 2.30151 10.6807 0.919922 12.6101 0.919922H20.0869V3.83326H11.9603C10.6569 3.83326 9.58358 4.06326 8.58691 4.75327L8.68644 4.20035Z",
    fill: "url(#paint14_linear_8927_5693)"
  })), _path24 || (_path24 = /*#__PURE__*/React.createElement("path", {
    d: "M9.9496 6.91628C9.78975 6.71887 9.82019 6.42925 10.0176 6.26939C10.215 6.10953 10.5046 6.13997 10.6645 6.33738L11.9702 7.94982C12.0235 8.01562 12.0133 8.11216 11.9475 8.16545L11.471 8.55138C11.4052 8.60467 11.3086 8.59452 11.2553 8.52872L9.9496 6.91628Z",
    fill: "url(#paint15_linear_8927_5693)"
  })), _path25 || (_path25 = /*#__PURE__*/React.createElement("path", {
    d: "M11.4485 8.76709C11.3952 8.70129 11.4054 8.60475 11.4712 8.55147L11.9478 8.16554C12.0136 8.11225 12.1101 8.1224 12.1634 8.1882L13.3886 9.70116C13.5484 9.89857 13.518 10.1882 13.3206 10.348C13.1232 10.5079 12.8336 10.4775 12.6737 10.2801L11.4485 8.76709Z",
    fill: "url(#paint16_linear_8927_5693)"
  })), _path26 || (_path26 = /*#__PURE__*/React.createElement("path", {
    d: "M10.4267 10.1198C10.4267 10.3739 10.2208 10.5798 9.96677 10.5798C9.71276 10.5798 9.50684 10.3739 9.50684 10.1198C9.50684 9.86583 9.71276 9.65991 9.96677 9.65991C10.2208 9.65991 10.4267 9.86583 10.4267 10.1198Z",
    fill: "#22BADB"
  })), _path27 || (_path27 = /*#__PURE__*/React.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M15.1434 11.4999C17.0727 11.4999 18.7252 10.1183 19.067 8.2195L19.1665 7.66658C18.1698 8.35658 17.0965 8.58658 15.7932 8.58658L8.73981 8.58658V11.4999L15.1434 11.4999ZM4.94293 8.58658C3.01357 8.58658 1.36109 9.96817 1.0193 11.867L0.919777 12.4199C1.91645 11.7299 2.98978 11.4999 4.29312 11.4999L8.7398 11.4999V8.58658L4.94293 8.58658Z",
    fill: "url(#paint17_linear_8927_5693)"
  })), _defs || (_defs = /*#__PURE__*/React.createElement("defs", null, /*#__PURE__*/React.createElement("linearGradient", {
    id: "paint0_linear_8927_5693",
    x1: 1.60992,
    y1: 20.93,
    x2: 1.68659,
    y2: 8.58667,
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/React.createElement("stop", {
    offset: 0.0428911,
    stopColor: "#B019E6"
  }), /*#__PURE__*/React.createElement("stop", {
    offset: 0.195594,
    stopColor: "#9C2B9A"
  }), /*#__PURE__*/React.createElement("stop", {
    offset: 0.430184,
    stopColor: "#DC46D3"
  }), /*#__PURE__*/React.createElement("stop", {
    offset: 0.627832,
    stopColor: "#BD23CB"
  }), /*#__PURE__*/React.createElement("stop", {
    offset: 1,
    stopColor: "#570995"
  })), /*#__PURE__*/React.createElement("linearGradient", {
    id: "paint1_linear_8927_5693",
    x1: 17.7865,
    y1: 10.7333,
    x2: 17.7098,
    y2: -0.766704,
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/React.createElement("stop", {
    stopColor: "#F139D2"
  }), /*#__PURE__*/React.createElement("stop", {
    offset: 0.303464,
    stopColor: "#D143B9"
  }), /*#__PURE__*/React.createElement("stop", {
    offset: 0.501827,
    stopColor: "#8226C9"
  }), /*#__PURE__*/React.createElement("stop", {
    offset: 1,
    stopColor: "#BF15DB"
  })), /*#__PURE__*/React.createElement("linearGradient", {
    id: "paint2_linear_8927_5693",
    x1: 13.8372,
    y1: 2.7703,
    x2: 15.6492,
    y2: 4.44275,
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/React.createElement("stop", {
    stopColor: "#5991D5"
  }), /*#__PURE__*/React.createElement("stop", {
    offset: 1,
    stopColor: "#11519E"
  })), /*#__PURE__*/React.createElement("linearGradient", {
    id: "paint3_linear_8927_5693",
    x1: 15.8697,
    y1: 5.36633,
    x2: 17.1729,
    y2: 5.13636,
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/React.createElement("stop", {
    stopColor: "#C050E8"
  }), /*#__PURE__*/React.createElement("stop", {
    offset: 1,
    stopColor: "#8022A2"
  })), /*#__PURE__*/React.createElement("linearGradient", {
    id: "paint4_linear_8927_5693",
    x1: 10.0432,
    y1: 0.919922,
    x2: 10.0432,
    y2: 19.1666,
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/React.createElement("stop", {
    stopColor: "#3CBACB",
    stopOpacity: 0.87
  }), /*#__PURE__*/React.createElement("stop", {
    offset: 0.154499,
    stopColor: "#0886BC"
  }), /*#__PURE__*/React.createElement("stop", {
    offset: 0.334093,
    stopColor: "#0CBCC7"
  }), /*#__PURE__*/React.createElement("stop", {
    offset: 0.60681,
    stopColor: "#14D6F0"
  }), /*#__PURE__*/React.createElement("stop", {
    offset: 0.786865,
    stopColor: "#0CA0C0"
  }), /*#__PURE__*/React.createElement("stop", {
    offset: 1,
    stopColor: "#0665BC"
  })), /*#__PURE__*/React.createElement("linearGradient", {
    id: "paint5_linear_8927_5693",
    x1: 4.59948,
    y1: 15.6397,
    x2: 2.10951,
    y2: 14.7463,
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/React.createElement("stop", {
    stopColor: "#C050E8"
  }), /*#__PURE__*/React.createElement("stop", {
    offset: 1,
    stopColor: "#8022A2"
  })), /*#__PURE__*/React.createElement("linearGradient", {
    id: "paint6_linear_8927_5693",
    x1: 3.83314,
    y1: 16.5597,
    x2: 6.13282,
    y2: 17.3263,
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/React.createElement("stop", {
    stopColor: "#F77FF5"
  }), /*#__PURE__*/React.createElement("stop", {
    offset: 1,
    stopColor: "#A22CA0"
  })), /*#__PURE__*/React.createElement("linearGradient", {
    id: "paint7_linear_8927_5693",
    x1: 6.82296,
    y1: 13.2631,
    x2: 3.68007,
    y2: 11.8832,
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/React.createElement("stop", {
    stopColor: "#5991D5"
  }), /*#__PURE__*/React.createElement("stop", {
    offset: 1,
    stopColor: "#11519E"
  })), /*#__PURE__*/React.createElement("linearGradient", {
    id: "paint8_linear_8927_5693",
    x1: 5.59689,
    y1: 14.1067,
    x2: 9.35304,
    y2: 16.943,
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/React.createElement("stop", {
    stopColor: "#77D3FB"
  }), /*#__PURE__*/React.createElement("stop", {
    offset: 1,
    stopColor: "#0A69C1"
  })), /*#__PURE__*/React.createElement("linearGradient", {
    id: "paint9_linear_8927_5693",
    x1: 11.5,
    y1: 18.4767,
    x2: -0.306701,
    y2: 18.4767,
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/React.createElement("stop", {
    stopColor: "#055BAB",
    stopOpacity: 0.49
  }), /*#__PURE__*/React.createElement("stop", {
    offset: 0.196658,
    stopColor: "#0794C0",
    stopOpacity: 0.88
  }), /*#__PURE__*/React.createElement("stop", {
    offset: 0.371414,
    stopColor: "#05B4D0",
    stopOpacity: 0.96
  }), /*#__PURE__*/React.createElement("stop", {
    offset: 0.536277,
    stopColor: "#30C2D8",
    stopOpacity: 0.86
  }), /*#__PURE__*/React.createElement("stop", {
    offset: 0.806654,
    stopColor: "#1FBFD0",
    stopOpacity: 0.8
  }), /*#__PURE__*/React.createElement("stop", {
    offset: 1,
    stopColor: "#0CC6D9",
    stopOpacity: 0.87
  })), /*#__PURE__*/React.createElement("linearGradient", {
    id: "paint10_linear_8927_5693",
    x1: 14.4895,
    y1: 5.74963,
    x2: 11.3466,
    y2: 4.36982,
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/React.createElement("stop", {
    stopColor: "#5991D5"
  }), /*#__PURE__*/React.createElement("stop", {
    offset: 1,
    stopColor: "#11519E"
  })), /*#__PURE__*/React.createElement("linearGradient", {
    id: "paint11_linear_8927_5693",
    x1: 13.2634,
    y1: 6.5933,
    x2: 17.0195,
    y2: 9.42956,
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/React.createElement("stop", {
    stopColor: "#77D3FB"
  }), /*#__PURE__*/React.createElement("stop", {
    offset: 1,
    stopColor: "#0A69C1"
  })), /*#__PURE__*/React.createElement("linearGradient", {
    id: "paint12_linear_8927_5693",
    x1: 8.63435,
    y1: 11.2893,
    x2: 6.80081,
    y2: 10.0598,
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/React.createElement("stop", {
    stopColor: "#5991D5"
  }), /*#__PURE__*/React.createElement("stop", {
    offset: 1,
    stopColor: "#11519E"
  })), /*#__PURE__*/React.createElement("linearGradient", {
    id: "paint13_linear_8927_5693",
    x1: 7.66663,
    y1: 12.5731,
    x2: 9.96632,
    y2: 13.3397,
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/React.createElement("stop", {
    stopColor: "#FD7EFC"
  }), /*#__PURE__*/React.createElement("stop", {
    offset: 1,
    stopColor: "#3D57B5"
  })), /*#__PURE__*/React.createElement("linearGradient", {
    id: "paint14_linear_8927_5693",
    x1: 8.58691,
    y1: 2.75993,
    x2: 21.1603,
    y2: 2.75993,
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/React.createElement("stop", {
    stopColor: "#0397C6",
    stopOpacity: 0.73
  }), /*#__PURE__*/React.createElement("stop", {
    offset: 0.304027,
    stopColor: "#31D0E1",
    stopOpacity: 0.87
  }), /*#__PURE__*/React.createElement("stop", {
    offset: 0.526955,
    stopColor: "#43E1ED",
    stopOpacity: 0.82
  }), /*#__PURE__*/React.createElement("stop", {
    offset: 0.783942,
    stopColor: "#1DB0C8",
    stopOpacity: 0.71
  }), /*#__PURE__*/React.createElement("stop", {
    offset: 1,
    stopColor: "#098A9F"
  })), /*#__PURE__*/React.createElement("linearGradient", {
    id: "paint15_linear_8927_5693",
    x1: 12.1132,
    y1: 8.12632,
    x2: 9.62318,
    y2: 7.23284,
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/React.createElement("stop", {
    stopColor: "#C050E8"
  }), /*#__PURE__*/React.createElement("stop", {
    offset: 1,
    stopColor: "#8022A2"
  })), /*#__PURE__*/React.createElement("linearGradient", {
    id: "paint16_linear_8927_5693",
    x1: 11.3468,
    y1: 9.04628,
    x2: 13.6465,
    y2: 9.81283,
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/React.createElement("stop", {
    stopColor: "#C77FF7"
  }), /*#__PURE__*/React.createElement("stop", {
    offset: 1,
    stopColor: "#A22CA0",
    stopOpacity: 0.25
  })), /*#__PURE__*/React.createElement("linearGradient", {
    id: "paint17_linear_8927_5693",
    x1: 19.1665,
    y1: 10.0432,
    x2: 0.919777,
    y2: 10.0432,
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/React.createElement("stop", {
    stopColor: "#A724A5"
  }), /*#__PURE__*/React.createElement("stop", {
    offset: 0.240046,
    stopColor: "#E344E3",
    stopOpacity: 0.76
  }), /*#__PURE__*/React.createElement("stop", {
    offset: 0.651048,
    stopColor: "#FE7CE6",
    stopOpacity: 0.76
  }), /*#__PURE__*/React.createElement("stop", {
    offset: 0.756859,
    stopColor: "#EE6FEE",
    stopOpacity: 0.93
  }), /*#__PURE__*/React.createElement("stop", {
    offset: 1,
    stopColor: "#BE0595",
    stopOpacity: 0.9
  })))));
};
var ForwardRef = /*#__PURE__*/(/* unused pure expression or super */ null && (forwardRef(SvgLogo)));

/* harmony default export */ const logo = (__webpack_require__.p + "static/media/logo.df52b0ee0a40537cc3308a89102b2967.svg");
;// CONCATENATED MODULE: ./src/layouts/AppLayout/index.module.scss
// extracted by mini-css-extract-plugin
/* harmony default export */ const index_module = ({"appHeader":"BJe6d"});
;// CONCATENATED MODULE: ./src/layouts/AppLayout/index.tsx
var HeaderPortal=function(_ref){var children=_ref.children,domNode=document.querySelector("#header");return domNode?/*#__PURE__*/(0,react_dom.createPortal)(children,domNode):null},AppLayout_AppLayout=function(_ref2){var _useAppSelector,children=_ref2.children,_useTranslation=useTranslation_useTranslation(),t=_useTranslation.t,navigate=dist_useNavigate(),_useLocation=dist_useLocation(),pathname=_useLocation.pathname,activeHref="/"+pathname.split("/")[1],userName=null!==(_useAppSelector=hooks_useAppSelector(selectUserName))&&void 0!==_useAppSelector?_useAppSelector:"",breadcrumbs=hooks_useAppSelector(selectBreadcrumbs),onFollowHandler=function(event){event.preventDefault(),navigate(event.detail.href)},profileActions=[{type:"button",href:ROUTES.USER.DETAILS.FORMAT(userName),id:"profile",text:t("common.profile")},{type:"button",href:ROUTES.LOGOUT,id:"signout",text:t("common.sign_out")}];return/*#__PURE__*/react.createElement(react.Fragment,null,/*#__PURE__*/react.createElement(HeaderPortal,null,/*#__PURE__*/react.createElement("div",{className:index_module.appHeader},/*#__PURE__*/react.createElement(TopNavigation,{i18nStrings:{overflowMenuTriggerText:"",overflowMenuTitleText:"",overflowMenuBackIconAriaLabel:"",overflowMenuDismissIconAriaLabel:""},identity:{href:"/",logo:{src:logo,alt:"Dstack logo"}},utilities:[{type:"menu-dropdown",text:userName,iconName:"user-profile",items:profileActions,// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore
onItemFollow:onFollowHandler}]}))),/*#__PURE__*/react.createElement(app_layout,{headerSelector:"#header",content:children,splitPanelOpen:!0,toolsHide:!0,breadcrumbs:function renderBreadcrumbs(){if(breadcrumbs)return/*#__PURE__*/react.createElement(BreadcrumbGroup,{items:breadcrumbs,onFollow:onFollowHandler})}(),notifications:/*#__PURE__*/react.createElement(Notifications_Notifications,null),navigation:/*#__PURE__*/react.createElement(SideNavigation// header={{
//     text: t('navigation.settings'),
//     href: ROUTES.BASE,
// }}
,{activeHref:activeHref,items:[{type:"section-group",title:t("navigation.settings"),items:[{type:"link",text:t("navigation.hubs"),href:ROUTES.HUB.LIST},{type:"link",text:t("navigation.users"),href:ROUTES.USER.LIST}]}],onFollow:onFollowHandler})}))};/* harmony default export */ const layouts_AppLayout = (AppLayout_AppLayout);
;// CONCATENATED MODULE: ./src/App/Loading/styles.module.scss
// extracted by mini-css-extract-plugin
/* harmony default export */ const Loading_styles_module = ({"spinner":"OZnXs"});
;// CONCATENATED MODULE: ./src/App/Loading/index.tsx
var Loading=function(){return/*#__PURE__*/react.createElement(app_layout,{toolsHide:!0,navigationHide:!0,disableContentPaddings:!0,content:/*#__PURE__*/react.createElement("div",{className:Loading_styles_module.spinner},/*#__PURE__*/react.createElement(Spinner,{size:"large"}))})};
;// CONCATENATED MODULE: ./src/App/index.tsx
var App=function(){var _useTranslation=useTranslation_useTranslation(),t=_useTranslation.t,_useSearchParams=useSearchParams(),_useSearchParams2=slicedToArray_slicedToArray(_useSearchParams,2),searchParams=_useSearchParams2[0],setSearchParams=_useSearchParams2[1],urlToken=searchParams.get("token"),isAuthenticated=!!hooks_useAppSelector(selectAuthToken),_useState=(0,react.useState)(!0),_useState2=slicedToArray_slicedToArray(_useState,2),isAuthorizing=_useState2[0],setIsAuthorizing=_useState2[1],dispatch=hooks_useAppDispatch(),_useGetUserDataQuery=useGetUserDataQuery(void 0,{skip:!isAuthenticated}),isLoading=_useGetUserDataQuery.isLoading,userData=_useGetUserDataQuery.data,getUserError=_useGetUserDataQuery.error;(0,react.useEffect)(function(){isAuthenticated||urlToken||setIsAuthorizing(!1),urlToken&&(dispatch(setAuthData({token:urlToken})),setSearchParams())},[]),(0,react.useEffect)(function(){(null!==userData&&void 0!==userData&&userData.user_name||getUserError)&&(setIsAuthorizing(!1),null!==userData&&void 0!==userData&&userData.user_name&&dispatch(setUserData(userData)))},[userData,getUserError,isLoading]);return isAuthorizing?/*#__PURE__*/react.createElement(Loading,null):getUserError?function renderTokenError(){return/*#__PURE__*/react.createElement(AuthErrorMessage,{title:t("auth.invalid_token"),text:t("auth.contact_to_administrator")})}():isAuthenticated||urlToken?/*#__PURE__*/react.createElement(layouts_AppLayout,null,/*#__PURE__*/react.createElement(Outlet,null)):function renderNotAuthorizedError(){return/*#__PURE__*/react.createElement(AuthErrorMessage,{title:t("auth.you_are_not_logged_in"),text:t("auth.contact_to_administrator")})}()};/* harmony default export */ const src_App = (App);
;// CONCATENATED MODULE: ./src/App/Logout/index.tsx
var Logout=function(){var dispatch=hooks_useAppDispatch();return (0,react.useEffect)(function(){dispatch(removeAuthData())},[]),/*#__PURE__*/react.createElement(Navigate,{replace:!0,to:ROUTES.BASE})};
;// CONCATENATED MODULE: ./src/pages/Hub/utils.ts
var getHubRoleByUserName=function(hub,userName){var _hub$members$find$hub,_hub$members$find;return null!==(_hub$members$find$hub=null===(_hub$members$find=hub.members.find(function(m){return m.user_name===userName}))||void 0===_hub$members$find?void 0:_hub$members$find.hub_role)&&void 0!==_hub$members$find$hub?_hub$members$find$hub:null};
;// CONCATENATED MODULE: ./src/pages/Hub/List/index.tsx
var HubList=function(){var _useAppSelector,_t,_useTranslation=useTranslation_useTranslation(),t=_useTranslation.t,_useState=(0,react.useState)(!1),_useState2=slicedToArray_slicedToArray(_useState,2),showDeleteConfirm=_useState2[0],setShowConfirmDelete=_useState2[1],userName=null!==(_useAppSelector=hooks_useAppSelector(selectUserName))&&void 0!==_useAppSelector?_useAppSelector:"",_useGetHubsQuery=useGetHubsQuery(),isLoading=_useGetHubsQuery.isLoading,data=_useGetHubsQuery.data,navigate=dist_useNavigate(),_useDeleteHubsMutatio=useDeleteHubsMutation(),_useDeleteHubsMutatio2=slicedToArray_slicedToArray(_useDeleteHubsMutatio,2),deleteHubs=_useDeleteHubsMutatio2[0],isDeleting=_useDeleteHubsMutatio2[1].isLoading;useBreadcrumbs([{text:t("navigation.hubs"),href:ROUTES.HUB.LIST}]);var toggleDeleteConfirm=function(){setShowConfirmDelete(function(val){return!val})},_useCollection=useCollection(null!==data&&void 0!==data?data:[],{filtering:{empty:function renderEmptyMessage(){return/*#__PURE__*/react.createElement(ListEmptyMessage,{title:t("hubs.empty_message_title"),message:t("hubs.empty_message_text")})}(),noMatch:function renderNoMatchMessage(onClearFilter){return/*#__PURE__*/react.createElement(ListEmptyMessage,{title:t("hubs.nomatch_message_title"),message:t("hubs.nomatch_message_text")},/*#__PURE__*/react.createElement(components_button,{onClick:onClearFilter},t("hubs.nomatch_message_button_label")))}(function(){return actions.setFiltering("")})},pagination:{pageSize:20},selection:{}}),items=_useCollection.items,actions=_useCollection.actions,filteredItemsCount=_useCollection.filteredItemsCount,collectionProps=_useCollection.collectionProps,filterProps=_useCollection.filterProps,paginationProps=_useCollection.paginationProps;(0,react.useEffect)(function(){isDeleting||actions.setSelectedItems([])},[isDeleting]);var isDisabledEdit=(0,react.useMemo)(function(){var _collectionProps$sele3,_collectionProps$sele4,_collectionProps$sele5;return 1!==(null===(_collectionProps$sele3=collectionProps.selectedItems)||void 0===_collectionProps$sele3?void 0:_collectionProps$sele3.length)||!(null===(_collectionProps$sele4=null===(_collectionProps$sele5=collectionProps.selectedItems)||void 0===_collectionProps$sele5?void 0:_collectionProps$sele5.some(function(item){return"admin"!==getHubRoleByUserName(item,userName)}))||void 0===_collectionProps$sele4)&&_collectionProps$sele4},[isDeleting,collectionProps.selectedItems]),isDisabledDelete=(0,react.useMemo)(function(){var _collectionProps$sele6,_collectionProps$sele7,_collectionProps$sele8;return!!(isDeleting||0===(null===(_collectionProps$sele6=collectionProps.selectedItems)||void 0===_collectionProps$sele6?void 0:_collectionProps$sele6.length))||!(null===(_collectionProps$sele7=null===(_collectionProps$sele8=collectionProps.selectedItems)||void 0===_collectionProps$sele8?void 0:_collectionProps$sele8.some(function(item){return"admin"!==getHubRoleByUserName(item,userName)}))||void 0===_collectionProps$sele7)&&_collectionProps$sele7},[isDeleting,collectionProps.selectedItems]);return/*#__PURE__*/react.createElement(react.Fragment,null,/*#__PURE__*/react.createElement(cards,extends_extends({},collectionProps,{variant:"full-page",cardDefinition:{header:function header(hub){return/*#__PURE__*/react.createElement(NavigateLink,{fontSize:"heading-m",href:ROUTES.HUB.DETAILS.FORMAT(hub.hub_name)},hub.hub_name)},sections:[{id:"type",header:t("hubs.card.backend"),content:function content(hub){return t("hubs.backend_type.".concat(hub.backend.type))}},{id:"region",header:t("hubs.card.region"),content:function content(hub){return hub.backend.region_name_title}},{id:"bucket",header:t("hubs.card.bucket"),content:function content(hub){return"".concat(hub.backend.s3_bucket_name)}}]},items:items,loading:isLoading,isItemDisabled:function getIsTableItemDisabled(){return isDeleting},loadingText:"Loading",selectionType:"multi",header:/*#__PURE__*/react.createElement(components_header_Header,{variant:"awsui-h1-sticky",counter:function renderCounter(){var _data$length,selectedItems=collectionProps.selectedItems;return null!==data&&void 0!==data&&data.length?null!==selectedItems&&void 0!==selectedItems&&selectedItems.length?"(".concat(null===selectedItems||void 0===selectedItems?void 0:selectedItems.length,"/").concat(null!==(_data$length=null===data||void 0===data?void 0:data.length)&&void 0!==_data$length?_data$length:0,")"):"(".concat(data.length,")"):""}(),actions:/*#__PURE__*/react.createElement(SpaceBetween,{size:"xs",direction:"horizontal"},/*#__PURE__*/react.createElement(components_button,{onClick:function addHubHandler(){navigate(ROUTES.HUB.ADD)}},t("common.add")),/*#__PURE__*/react.createElement(components_button,{onClick:function editSelectedHubHandler(){var _collectionProps$sele2;1===(null===(_collectionProps$sele2=collectionProps.selectedItems)||void 0===_collectionProps$sele2?void 0:_collectionProps$sele2.length)&&navigate(ROUTES.HUB.EDIT_BACKEND.FORMAT(collectionProps.selectedItems[0].hub_name))},disabled:isDisabledEdit},t("common.edit")),/*#__PURE__*/react.createElement(components_button,{onClick:toggleDeleteConfirm,disabled:isDisabledDelete},t("common.delete")))},t("hubs.page_title")),filter:/*#__PURE__*/react.createElement(text_filter,extends_extends({},filterProps,{filteringPlaceholder:t("hubs.search_placeholder")||"",countText:null!==(_t=t("common.match_count_with_value",{count:filteredItemsCount}))&&void 0!==_t?_t:"",disabled:isLoading})),pagination:/*#__PURE__*/react.createElement(Pagination,extends_extends({},paginationProps,{disabled:isLoading}))})),/*#__PURE__*/react.createElement(ConfirmationDialog,{visible:showDeleteConfirm,onDiscard:toggleDeleteConfirm,onConfirm:function deleteSelectedHubsHandler(){var _collectionProps$sele;null!==(_collectionProps$sele=collectionProps.selectedItems)&&void 0!==_collectionProps$sele&&_collectionProps$sele.length&&deleteHubs(collectionProps.selectedItems.map(function(hub){return hub.hub_name})),setShowConfirmDelete(!1)}}))};
// EXTERNAL MODULE: ./node_modules/lodash/lodash.js
var lodash = __webpack_require__(486);
;// CONCATENATED MODULE: ./src/pages/Hub/Members/UsersAutosuggest/index.tsx
var UsersAutosuggest_excluded=["optionsFilter","onSelect"];var UserAutosuggest=function(_ref){var optionsFilter=_ref.optionsFilter,onSelectProp=_ref.onSelect,props=objectWithoutProperties_objectWithoutProperties(_ref,UsersAutosuggest_excluded),_useTranslation=useTranslation_useTranslation(),t=_useTranslation.t,_useState=(0,react.useState)(""),_useState2=slicedToArray_slicedToArray(_useState,2),value=_useState2[0],setValue=_useState2[1],_useGetUserListQuery=useGetUserListQuery(),usersData=_useGetUserListQuery.data,isUsersLoading=_useGetUserListQuery.isLoading,options=(0,react.useMemo)(function(){return usersData?usersData.map(function(user){return{value:user.user_name}}):[]},[usersData]),filteredOptions=optionsFilter?optionsFilter(options):options;return/*#__PURE__*/react.createElement(autosuggest,extends_extends({value:value,enteredTextLabel:function enteredTextLabel(){return""},onChange:function onChange(_ref2){var detail=_ref2.detail;return setValue(detail.value)},options:filteredOptions,statusType:isUsersLoading?"loading":void 0,loadingText:t("users_autosuggest.loading"),placeholder:t("users_autosuggest.placeholder"),empty:t("users_autosuggest.no_match"),onSelect:function onSelectHandle(args){onSelectProp&&args.detail.value&&onSelectProp(args),setValue("")}},props))};
;// CONCATENATED MODULE: ./src/pages/Hub/Members/styles.module.scss
// extracted by mini-css-extract-plugin
/* harmony default export */ const Members_styles_module = ({"role":"HTbMU","roleFieldWrapper":"L_HmB","deleteMemberButtonWrapper":"zPL1h"});
;// CONCATENATED MODULE: ./src/pages/Hub/Members/index.tsx
function Members_ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function Members_objectSpread(target){for(var source,i=1;i<arguments.length;i++)source=null==arguments[i]?{}:arguments[i],i%2?Members_ownKeys(Object(source),!0).forEach(function(key){defineProperty_defineProperty(target,key,source[key])}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):Members_ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))});return target}//TODO move type to special file
var HubMembers=function(_ref){var initialValues=_ref.initialValues,loading=_ref.loading,onChange=_ref.onChange,_useTranslation=useTranslation_useTranslation(),t=_useTranslation.t,_useState=(0,react.useState)([]),_useState2=slicedToArray_slicedToArray(_useState,2),selectedItems=_useState2[0],setSelectedItems=_useState2[1],_useForm=useForm({defaultValues:{members:null!==initialValues&&void 0!==initialValues?initialValues:[]}}),handleSubmit=_useForm.handleSubmit,control=_useForm.control,getValues=_useForm.getValues,_useFieldArray=useFieldArray({control:control,name:"members"}),fields=_useFieldArray.fields,append=_useFieldArray.append,remove=_useFieldArray.remove,onChangeHandler=function(){return onChange(getValues("members"))},fieldsWithIndex=fields.map(function(field,index){return Members_objectSpread(Members_objectSpread({},field),{},{index:index})}),roleSelectOptions=[{label:t("roles.admin"),value:"admin"},{label:t("roles.run"),value:"run"},{label:t("roles.read"),value:"read"}],addMember=function(user_name){append({user_name:user_name,hub_role:"read"}),onChangeHandler()},COLUMN_DEFINITIONS=[{id:"name",header:t("hubs.edit.members.name"),cell:function cell(item){return/*#__PURE__*/react.createElement(components_link,{target:"_blank",href:ROUTES.USER.DETAILS.FORMAT(item.user_name)},item.user_name)}},{id:"global_role",header:t("hubs.edit.members.role"),cell:function cell(field){return/*#__PURE__*/react.createElement("div",{className:Members_styles_module.role},/*#__PURE__*/react.createElement("div",{className:Members_styles_module.roleFieldWrapper},/*#__PURE__*/react.createElement(FormSelect,{control:control,name:"members.".concat(field.index,".hub_role"),options:roleSelectOptions,disabled:loading,expandToViewport:!0,onChange:onChangeHandler})),/*#__PURE__*/react.createElement("div",{className:Members_styles_module.deleteMemberButtonWrapper},/*#__PURE__*/react.createElement(components_button,{disabled:loading,formAction:"none",onClick:function onClick(){remove(field.index),onChangeHandler()},variant:"icon",iconName:"remove"})))}}];return/*#__PURE__*/ (// eslint-disable-next-line @typescript-eslint/no-empty-function
react.createElement("form",{onSubmit:handleSubmit(function(){})},/*#__PURE__*/react.createElement(table,{selectionType:"multi",trackBy:"user_name",selectedItems:selectedItems,onSelectionChange:function onSelectionChange(event){return setSelectedItems(event.detail.selectedItems)},columnDefinitions:COLUMN_DEFINITIONS,items:fieldsWithIndex,header:/*#__PURE__*/react.createElement(components_header_Header,{variant:"h2",counter:"(".concat(null===fieldsWithIndex||void 0===fieldsWithIndex?void 0:fieldsWithIndex.length,")"),actions:/*#__PURE__*/react.createElement(components_button,{formAction:"none",onClick:function deleteSelectedMembers(){remove(selectedItems.map(function(_ref2){var index=_ref2.index;return index})),setSelectedItems([]),onChangeHandler()},disabled:!selectedItems.length},t("common.delete"))},t("hubs.edit.members.section_title")),filter:/*#__PURE__*/react.createElement(UserAutosuggest,{disabled:loading,onSelect:function onSelect(_ref3){var detail=_ref3.detail;return addMember(detail.value)},optionsFilter:function optionsFilter(options){return options.filter(function(o){return!fields.find(function(f){return f.user_name===o.value})})}}),empty:/*#__PURE__*/react.createElement(ListEmptyMessage,{title:t("hubs.edit.members_empty_message_title"),message:t("hubs.edit.members_empty_message_text")})})))};
;// CONCATENATED MODULE: ./src/pages/Hub/Details/styles.module.scss
// extracted by mini-css-extract-plugin
/* harmony default export */ const Details_styles_module = ({"code":"gAQ1S"});
;// CONCATENATED MODULE: ./src/pages/Hub/Details/index.tsx
var HubDetails=function(){var _params$name,_useTranslation=useTranslation_useTranslation(),t=_useTranslation.t,_useState=(0,react.useState)(!1),_useState2=slicedToArray_slicedToArray(_useState,2),showDeleteConfirm=_useState2[0],setShowConfirmDelete=_useState2[1],params=useParams(),paramHubName=null!==(_params$name=params.name)&&void 0!==_params$name?_params$name:"",navigate=dist_useNavigate(),_useGetHubQuery=useGetHubQuery({name:paramHubName}),data=_useGetHubQuery.data,isLoading=_useGetHubQuery.isLoading,_useDeleteHubsMutatio=useDeleteHubsMutation(),_useDeleteHubsMutatio2=slicedToArray_slicedToArray(_useDeleteHubsMutatio,2),deleteHubs=_useDeleteHubsMutatio2[0],_useDeleteHubsMutatio3=_useDeleteHubsMutatio2[1],isDeleting=_useDeleteHubsMutatio3.isLoading,deleteData=_useDeleteHubsMutatio3.data,_useUpdateHubMembersM=useUpdateHubMembersMutation(),_useUpdateHubMembersM2=slicedToArray_slicedToArray(_useUpdateHubMembersM,1),updateHubMembers=_useUpdateHubMembersM2[0],currentUserToken=hooks_useAppSelector(selectAuthToken);useBreadcrumbs([{text:t("navigation.hubs"),href:ROUTES.HUB.LIST},{text:paramHubName,href:ROUTES.HUB.DETAILS.FORMAT(paramHubName)}]),(0,react.useEffect)(function(){!isDeleting&&deleteData&&navigate(ROUTES.HUB.LIST)},[isDeleting,deleteData]);var cliCommand="dstack config hub --url ".concat(location.origin,"/").concat(paramHubName," --token ").concat(currentUserToken),onCopyCliCommand=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/regenerator_default().mark(function _callee(){return regenerator_default().wrap(function(_context){for(;;)switch(_context.prev=_context.next){case 0:return _context.prev=0,_context.next=3,navigator.clipboard.writeText(cliCommand);case 3:_context.next=8;break;case 5:_context.prev=5,_context.t0=_context["catch"](0),console.error("Failed to copy: ",_context.t0);case 8:case"end":return _context.stop();}},_callee,null,[[0,5]])}));return function(){return _ref.apply(this,arguments)}}(),debouncedMembersHandler=(0,react.useCallback)((0,lodash.debounce)(function changeMembersHandler(members){updateHubMembers({hub_name:paramHubName,members:members})},1e3),[]),toggleDeleteConfirm=function(){setShowConfirmDelete(function(val){return!val})};return/*#__PURE__*/react.createElement(react.Fragment,null,/*#__PURE__*/react.createElement(ContentLayout,{header:/*#__PURE__*/react.createElement(DetailsHeader,{title:paramHubName,deleteAction:toggleDeleteConfirm,deleteDisabled:isDeleting})},isLoading&&!data&&/*#__PURE__*/react.createElement(Container,null,/*#__PURE__*/react.createElement(Loader,null)),data&&/*#__PURE__*/react.createElement(SpaceBetween,{size:"l"},/*#__PURE__*/react.createElement(Container,{header:/*#__PURE__*/react.createElement(components_header_Header,{variant:"h2",actions:/*#__PURE__*/react.createElement(components_button,{onClick:function editUserHandler(){navigate(ROUTES.HUB.EDIT_BACKEND.FORMAT(paramHubName))},disabled:isDeleting},t("common.edit"))},t("hubs.edit.backend"))},function renderAwsSettingsSection(){return data?/*#__PURE__*/react.createElement(ColumnLayout,{columns:4,variant:"text-grid"},/*#__PURE__*/react.createElement("div",null,/*#__PURE__*/react.createElement(Box,{variant:"awsui-key-label"},t("hubs.edit.backend_type")),/*#__PURE__*/react.createElement("div",null,t("hubs.backend_type.".concat(data.backend.type)))),/*#__PURE__*/react.createElement("div",null,/*#__PURE__*/react.createElement(Box,{variant:"awsui-key-label"},t("hubs.edit.aws.region_name")),/*#__PURE__*/react.createElement("div",null,data.backend.region_name_title)),/*#__PURE__*/react.createElement("div",null,/*#__PURE__*/react.createElement(Box,{variant:"awsui-key-label"},t("hubs.edit.aws.s3_bucket_name")),/*#__PURE__*/react.createElement("div",null,data.backend.s3_bucket_name)),/*#__PURE__*/react.createElement("div",null,/*#__PURE__*/react.createElement(Box,{variant:"awsui-key-label"},t("hubs.edit.aws.ec2_subnet_id")),/*#__PURE__*/react.createElement("div",null,data.backend.ec2_subnet_id))):null}()),/*#__PURE__*/react.createElement(Container,{header:/*#__PURE__*/react.createElement(components_header_Header,{variant:"h2",actions:/*#__PURE__*/react.createElement(Popover,{dismissButton:!1,position:"top",size:"small",triggerType:"custom",content:/*#__PURE__*/react.createElement(status_indicator_StatusIndicator,{type:"success"},t("common.copied"))},/*#__PURE__*/react.createElement(components_button,{formAction:"none",iconName:"copy",variant:"normal",onClick:onCopyCliCommand},t("common.copy")))},t("hubs.edit.cli"))},/*#__PURE__*/react.createElement(SpaceBetween,{size:"s"},/*#__PURE__*/react.createElement(Box,{variant:"p",color:"text-body-secondary"},"Use the code snippet below to configure your CLI to use this hub as a remote"),/*#__PURE__*/react.createElement("div",{className:Details_styles_module.code},/*#__PURE__*/react.createElement(Box,{variant:"code",color:"text-status-inactive"},cliCommand)))),/*#__PURE__*/react.createElement(HubMembers,{onChange:debouncedMembersHandler,initialValues:data.members}))),/*#__PURE__*/react.createElement(ConfirmationDialog,{visible:showDeleteConfirm,onDiscard:toggleDeleteConfirm,onConfirm:function deleteUserHandler(){data&&(deleteHubs([paramHubName]),setShowConfirmDelete(!1))}}))};
;// CONCATENATED MODULE: ./src/pages/Hub/Form/AWS/index.tsx
var AWSBackend=function(_ref){var loadingProp=_ref.loading,_useTranslation=useTranslation_useTranslation(),t=_useTranslation.t,_useFormContext=useFormContext(),control=_useFormContext.control,getValues=_useFormContext.getValues,setValue=_useFormContext.setValue,_useState=(0,react.useState)([]),_useState2=slicedToArray_slicedToArray(_useState,2),regions=_useState2[0],setRegions=_useState2[1],_useState3=(0,react.useState)([]),_useState4=slicedToArray_slicedToArray(_useState3,2),buckets=_useState4[0],setBuckets=_useState4[1],_useState5=(0,react.useState)([]),_useState6=slicedToArray_slicedToArray(_useState5,2),subnets=_useState6[0],setSubnets=_useState6[1],_useBackendValuesMuta=useBackendValuesMutation(),_useBackendValuesMuta2=slicedToArray_slicedToArray(_useBackendValuesMuta,2),getBackendValues=_useBackendValuesMuta2[0],isLoading=_useBackendValuesMuta2[1].isLoading;(0,react.useEffect)(function(){changeFormHandler().catch(console.log)},[]);var loading=loadingProp||isLoading,changeFormHandler=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/regenerator_default().mark(function _callee(){var backendFormValues,response;return regenerator_default().wrap(function(_context){for(;;)switch(_context.prev=_context.next){case 0:if(backendFormValues=getValues("backend"),backendFormValues.secret_key&&backendFormValues.access_key){_context.next=3;break}return _context.abrupt("return");case 3:return _context.prev=3,_context.next=6,getBackendValues(backendFormValues).unwrap();case 6:response=_context.sent,response.region_name.values.length&&setRegions(response.region_name.values),void 0!==response.region_name.selected&&setValue("backend.region_name",response.region_name.selected),response.s3_bucket_name.values.length&&setBuckets(response.s3_bucket_name.values),void 0!==response.s3_bucket_name.selected&&setValue("backend.s3_bucket_name",response.s3_bucket_name.selected),response.ec2_subnet_id.values.length&&setSubnets(response.ec2_subnet_id.values),void 0!==response.ec2_subnet_id.selected&&setValue("backend.ec2_subnet_id",response.ec2_subnet_id.selected),_context.next=18;break;case 15:_context.prev=15,_context.t0=_context["catch"](3),console.log("fetch backends values error",_context.t0);case 18:case"end":return _context.stop();}},_callee,null,[[3,15]])}));return function(){return _ref2.apply(this,arguments)}}(),debouncedChangeFormHandler=(0,react.useCallback)((0,lodash.debounce)(changeFormHandler,1e3),[]);return/*#__PURE__*/react.createElement(SpaceBetween,{size:"l"},/*#__PURE__*/react.createElement(FormInput,{label:t("hubs.edit.aws.access_key_id"),control:control,name:"backend.access_key",onChange:debouncedChangeFormHandler,disabled:loading}),/*#__PURE__*/react.createElement(FormInput,{label:t("hubs.edit.aws.secret_key_id"),control:control,name:"backend.secret_key",onChange:debouncedChangeFormHandler,disabled:loading}),/*#__PURE__*/react.createElement(FormSelect,{label:t("hubs.edit.aws.region_name"),control:control,name:"backend.region_name",disabled:loading,onChange:changeFormHandler,options:regions}),/*#__PURE__*/react.createElement(FormS3BucketSelector,{label:t("hubs.edit.aws.s3_bucket_name"),control:control,name:"backend.s3_bucket_name",selectableItemsTypes:["buckets"]// onChange={debouncedChangeFormHandler}
,buckets:buckets}),/*#__PURE__*/react.createElement(FormSelect,{label:t("hubs.edit.aws.ec2_subnet_id"),control:control,name:"backend.ec2_subnet_id",disabled:loading,onChange:changeFormHandler,options:subnets}))};
;// CONCATENATED MODULE: ./src/pages/Hub/Form/index.tsx
var HubForm=function(_ref){var initialValues=_ref.initialValues,onCancel=_ref.onCancel,loading=_ref.loading,onSubmitProp=_ref.onSubmit,_useTranslation=useTranslation_useTranslation(),t=_useTranslation.t,formMethods=useForm({defaultValues:null!==initialValues&&void 0!==initialValues?initialValues:{backend:{type:"aws"}}}),handleSubmit=formMethods.handleSubmit,control=formMethods.control,watch=formMethods.watch,backendType=watch("backend.type"),backendOptions=[{label:t("hubs.backend_type.aws"),value:"aws",description:t("hubs.backend_type.aws_description"),disabled:loading},{label:t("hubs.backend_type.gcp"),value:"gcp",description:t("hubs.backend_type.gcp_description"),disabled:!0},{label:t("hubs.backend_type.azure"),value:"azure",description:t("hubs.backend_type.azure_description"),disabled:!0}];return/*#__PURE__*/react.createElement(FormProvider,formMethods,/*#__PURE__*/react.createElement("form",{onSubmit:handleSubmit(function onSubmit(data){onSubmitProp(data)})},/*#__PURE__*/react.createElement(form_Form,{actions:/*#__PURE__*/react.createElement(SpaceBetween,{direction:"horizontal",size:"xs"},/*#__PURE__*/react.createElement(components_button,{formAction:"none",disabled:loading,variant:"link",onClick:onCancel},t("common.cancel")),/*#__PURE__*/react.createElement(components_button,{loading:loading,disabled:loading,variant:"primary"},t("common.save")))},/*#__PURE__*/react.createElement(SpaceBetween,{size:"l"},!!!initialValues&&/*#__PURE__*/react.createElement(Container,{header:/*#__PURE__*/react.createElement(components_header_Header,{variant:"h2"},t("hubs.edit.general"))},/*#__PURE__*/react.createElement(SpaceBetween,{size:"l"},/*#__PURE__*/react.createElement(FormInput,{label:t("hubs.edit.hub_name"),control:control,name:"hub_name",disabled:loading}))),/*#__PURE__*/react.createElement(Container,{header:/*#__PURE__*/react.createElement(components_header_Header,{variant:"h2"},t("hubs.edit.backend"))},/*#__PURE__*/react.createElement(FormField,{label:t("hubs.edit.backend_type")}),/*#__PURE__*/react.createElement(SpaceBetween,{size:"l"},/*#__PURE__*/react.createElement(FormTiles,{control:control,name:"backend.type",items:backendOptions}),function renderBackendFields(){return"aws"===backendType?/*#__PURE__*/react.createElement(AWSBackend,{loading:loading}):null}()))))))};
;// CONCATENATED MODULE: ./src/pages/Hub/EditBackend/index.tsx
function EditBackend_ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function EditBackend_objectSpread(target){for(var source,i=1;i<arguments.length;i++)source=null==arguments[i]?{}:arguments[i],i%2?EditBackend_ownKeys(Object(source),!0).forEach(function(key){defineProperty_defineProperty(target,key,source[key])}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):EditBackend_ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))});return target}var HubEditBackend=function(){var _params$name,_useTranslation=useTranslation_useTranslation(),t=_useTranslation.t,params=useParams(),paramHubName=null!==(_params$name=params.name)&&void 0!==_params$name?_params$name:"",navigate=dist_useNavigate(),_useNotifications=useNotifications(),_useNotifications2=slicedToArray_slicedToArray(_useNotifications,1),pushNotification=_useNotifications2[0],_useGetHubQuery=useGetHubQuery({name:paramHubName}),data=_useGetHubQuery.data,isLoading=_useGetHubQuery.isLoading,_useUpdateHubMutation=useUpdateHubMutation(),_useUpdateHubMutation2=slicedToArray_slicedToArray(_useUpdateHubMutation,2),updateHub=_useUpdateHubMutation2[0],isHubUpdating=_useUpdateHubMutation2[1].isLoading;useBreadcrumbs([{text:t("navigation.hubs"),href:ROUTES.HUB.LIST},{text:paramHubName,href:ROUTES.HUB.DETAILS.FORMAT(paramHubName)},{text:t("hubs.edit.edit_backend"),href:ROUTES.USER.EDIT.FORMAT(paramHubName)}]);var onSubmitHandler=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/regenerator_default().mark(function _callee(hubData){var _data$hub_name,_data;return regenerator_default().wrap(function(_context){for(;;)switch(_context.prev=_context.next){case 0:return _context.prev=0,_context.next=3,updateHub(EditBackend_objectSpread(EditBackend_objectSpread({},hubData),{},{hub_name:paramHubName})).unwrap();case 3:_data=_context.sent,pushNotification({type:"success",content:t("hubs.edit.success_notification")}),navigate(ROUTES.HUB.DETAILS.FORMAT(null!==(_data$hub_name=_data.hub_name)&&void 0!==_data$hub_name?_data$hub_name:paramHubName)),_context.next=11;break;case 8:_context.prev=8,_context.t0=_context["catch"](0),pushNotification({type:"error",content:t("hubs.edit.error_notification")});case 11:case"end":return _context.stop();}},_callee,null,[[0,8]])}));return function(){return _ref.apply(this,arguments)}}();return/*#__PURE__*/react.createElement(ContentLayout,{header:/*#__PURE__*/react.createElement(components_header_Header,{variant:"awsui-h1-sticky"},paramHubName)},isLoading&&!data&&/*#__PURE__*/react.createElement(Container,null,/*#__PURE__*/react.createElement(Loader,null)),data&&/*#__PURE__*/react.createElement(HubForm,{initialValues:data,loading:isHubUpdating,onSubmit:onSubmitHandler,onCancel:function onCancelHandler(){navigate(ROUTES.HUB.DETAILS.FORMAT(paramHubName))}}))};
;// CONCATENATED MODULE: ./src/pages/Hub/Add/index.tsx
var HubAdd=function(){var _useTranslation=useTranslation_useTranslation(),t=_useTranslation.t,navigate=dist_useNavigate(),_useNotifications=useNotifications(),_useNotifications2=slicedToArray_slicedToArray(_useNotifications,1),pushNotification=_useNotifications2[0],_useCreateHubMutation=useCreateHubMutation(),_useCreateHubMutation2=slicedToArray_slicedToArray(_useCreateHubMutation,2),createHub=_useCreateHubMutation2[0],isLoading=_useCreateHubMutation2[1].isLoading;useBreadcrumbs([{text:t("navigation.hubs"),href:ROUTES.HUB.LIST},{text:t("common.create"),href:ROUTES.HUB.ADD}]);var onSubmitHandler=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/regenerator_default().mark(function _callee(hubData){var data;return regenerator_default().wrap(function(_context){for(;;)switch(_context.prev=_context.next){case 0:return _context.prev=0,_context.next=3,createHub(hubData).unwrap();case 3:data=_context.sent,pushNotification({type:"success",content:t("hubs.create.success_notification")}),navigate(ROUTES.HUB.DETAILS.FORMAT(data.hub_name)),_context.next=11;break;case 8:_context.prev=8,_context.t0=_context["catch"](0),pushNotification({type:"error",content:t("hubs.create.error_notification")});case 11:case"end":return _context.stop();}},_callee,null,[[0,8]])}));return function(){return _ref.apply(this,arguments)}}();return/*#__PURE__*/react.createElement(ContentLayout,{header:/*#__PURE__*/react.createElement(components_header_Header,{variant:"awsui-h1-sticky"},t("hubs.create.page_title"))},/*#__PURE__*/react.createElement(HubForm,{onSubmit:onSubmitHandler,loading:isLoading,onCancel:function onCancelHandler(){navigate(ROUTES.HUB.LIST)}}))};
;// CONCATENATED MODULE: ./src/pages/Hub/index.tsx
var Hub=function(){return null};
;// CONCATENATED MODULE: ./src/pages/User/List/index.tsx
var UserList=function(){var _useTranslation=useTranslation_useTranslation(),t=_useTranslation.t,_useState=(0,react.useState)(!1),_useState2=slicedToArray_slicedToArray(_useState,2),showDeleteConfirm=_useState2[0],setShowConfirmDelete=_useState2[1],_useGetUserListQuery=useGetUserListQuery(),isLoading=_useGetUserListQuery.isLoading,data=_useGetUserListQuery.data,_useDeleteUsersMutati=useDeleteUsersMutation(),_useDeleteUsersMutati2=slicedToArray_slicedToArray(_useDeleteUsersMutati,2),deleteUsers=_useDeleteUsersMutati2[0],isDeleting=_useDeleteUsersMutati2[1].isLoading,navigate=dist_useNavigate();useBreadcrumbs([{text:t("navigation.users"),href:ROUTES.USER.LIST}]);var COLUMN_DEFINITIONS=[{id:"name",header:t("users.user_name"),cell:function cell(item){return/*#__PURE__*/react.createElement(NavigateLink,{href:ROUTES.USER.DETAILS.FORMAT(item.user_name)},item.user_name)}},{id:"global_role",header:t("users.global_role"),cell:function cell(item){return t("roles.".concat(item.global_role))}}],toggleDeleteConfirm=function(){setShowConfirmDelete(function(val){return!val})},_useCollection=useCollection(null!==data&&void 0!==data?data:[],{filtering:{empty:function renderEmptyMessage(){return/*#__PURE__*/react.createElement(ListEmptyMessage,{title:t("users.empty_message_title"),message:t("hubs.empty_message_text")})}(),noMatch:function renderNoMatchMessage(onClearFilter){return/*#__PURE__*/react.createElement(ListEmptyMessage,{title:t("users.nomatch_message_title"),message:t("users.nomatch_message_text")},/*#__PURE__*/react.createElement(components_button,{onClick:onClearFilter},t("users.nomatch_message_button_label")))}(function(){return actions.setFiltering("")})},pagination:{pageSize:20},selection:{}}),items=_useCollection.items,actions=_useCollection.actions,filteredItemsCount=_useCollection.filteredItemsCount,collectionProps=_useCollection.collectionProps,filterProps=_useCollection.filterProps,paginationProps=_useCollection.paginationProps;(0,react.useEffect)(function(){isDeleting||actions.setSelectedItems([])},[isDeleting]);var isDisabledDelete=(0,react.useMemo)(function(){var _collectionProps$sele;return isDeleting||0===(null===(_collectionProps$sele=collectionProps.selectedItems)||void 0===_collectionProps$sele?void 0:_collectionProps$sele.length)},[collectionProps.selectedItems]),isDisabledEdit=(0,react.useMemo)(function(){var _collectionProps$sele2;return isDeleting||1!==(null===(_collectionProps$sele2=collectionProps.selectedItems)||void 0===_collectionProps$sele2?void 0:_collectionProps$sele2.length)},[collectionProps.selectedItems]);return/*#__PURE__*/react.createElement(react.Fragment,null,/*#__PURE__*/react.createElement(table,extends_extends({},collectionProps,{variant:"full-page",isItemDisabled:function getIsTableItemDisabled(){return isDeleting},columnDefinitions:COLUMN_DEFINITIONS,items:items,loading:isLoading,loadingText:t("common.loading"),selectionType:"multi",stickyHeader:!0,header:/*#__PURE__*/react.createElement(components_header_Header,{variant:"awsui-h1-sticky",counter:function renderCounter(){var _data$length,selectedItems=collectionProps.selectedItems;return null!==data&&void 0!==data&&data.length?null!==selectedItems&&void 0!==selectedItems&&selectedItems.length?"(".concat(null===selectedItems||void 0===selectedItems?void 0:selectedItems.length,"/").concat(null!==(_data$length=null===data||void 0===data?void 0:data.length)&&void 0!==_data$length?_data$length:0,")"):"(".concat(data.length,")"):""}(),actions:/*#__PURE__*/react.createElement(SpaceBetween,{size:"xs",direction:"horizontal"},/*#__PURE__*/react.createElement(components_button,{formAction:"none",onClick:function editSelectedUserHandler(){var selectedItems=collectionProps.selectedItems;null!==selectedItems&&void 0!==selectedItems&&selectedItems.length&&navigate(ROUTES.USER.DETAILS.FORMAT(selectedItems[0].user_name))},disabled:isDisabledEdit},t("common.edit")),/*#__PURE__*/react.createElement(components_button,{formAction:"none",onClick:toggleDeleteConfirm,disabled:isDisabledDelete},t("common.delete")),/*#__PURE__*/react.createElement(components_button,{formAction:"none",onClick:function addUserHandler(){navigate(ROUTES.USER.ADD)}},t("common.add")))},t("users.page_title")),filter:/*#__PURE__*/react.createElement(text_filter,extends_extends({},filterProps,{filteringPlaceholder:t("users.search_placeholder"),countText:t("common.match_count_with_value",{count:filteredItemsCount}),disabled:isLoading})),pagination:/*#__PURE__*/react.createElement(Pagination,extends_extends({},paginationProps,{disabled:isLoading}))})),/*#__PURE__*/react.createElement(ConfirmationDialog,{visible:showDeleteConfirm,onDiscard:toggleDeleteConfirm,onConfirm:function deleteSelectedUserHandler(){var selectedItems=collectionProps.selectedItems;null!==selectedItems&&void 0!==selectedItems&&selectedItems.length&&deleteUsers(selectedItems.map(function(user){return user.user_name})),setShowConfirmDelete(!1)}}))};
;// CONCATENATED MODULE: ./src/pages/User/Details/index.tsx
var UserDetails=function(){var _params$name,_useTranslation=useTranslation_useTranslation(),t=_useTranslation.t,_useState=(0,react.useState)(!1),_useState2=slicedToArray_slicedToArray(_useState,2),showDeleteConfirm=_useState2[0],setShowConfirmDelete=_useState2[1],params=useParams(),paramUserName=null!==(_params$name=params.name)&&void 0!==_params$name?_params$name:"",navigate=dist_useNavigate(),_useGetUserQuery=useGetUserQuery({name:paramUserName},{skip:!params.name}),isLoading=_useGetUserQuery.isLoading,data=_useGetUserQuery.data,_useDeleteUsersMutati=useDeleteUsersMutation(),_useDeleteUsersMutati2=slicedToArray_slicedToArray(_useDeleteUsersMutati,2),deleteUsers=_useDeleteUsersMutati2[0],_useDeleteUsersMutati3=_useDeleteUsersMutati2[1],isDeleting=_useDeleteUsersMutati3.isLoading,deleteData=_useDeleteUsersMutati3.data;useBreadcrumbs([{text:t("navigation.users"),href:ROUTES.USER.LIST},{text:paramUserName,href:ROUTES.USER.DETAILS.FORMAT(paramUserName)}]),(0,react.useEffect)(function(){!isDeleting&&deleteData&&navigate(ROUTES.USER.LIST)},[isDeleting,deleteData]);var toggleDeleteConfirm=function(){setShowConfirmDelete(function(val){return!val})};return/*#__PURE__*/react.createElement(react.Fragment,null,/*#__PURE__*/react.createElement(ContentLayout,{header:/*#__PURE__*/react.createElement(DetailsHeader,{title:paramUserName,deleteAction:toggleDeleteConfirm,deleteDisabled:isDeleting})},isLoading&&!data&&/*#__PURE__*/react.createElement(Container,null,/*#__PURE__*/react.createElement(Loader,null)),data&&/*#__PURE__*/react.createElement(SpaceBetween,{size:"l"},/*#__PURE__*/react.createElement(Container,{header:/*#__PURE__*/react.createElement(components_header_Header,{variant:"h2",actions:/*#__PURE__*/react.createElement(components_button,{onClick:function editUserHandler(){navigate(ROUTES.USER.EDIT.FORMAT(paramUserName))},disabled:isDeleting},t("common.edit"))},t("users.account_settings"))},/*#__PURE__*/react.createElement(ColumnLayout,{columns:2,variant:"text-grid"},/*#__PURE__*/react.createElement(SpaceBetween,{size:"l"},/*#__PURE__*/react.createElement("div",null,/*#__PURE__*/react.createElement(Box,{variant:"awsui-key-label"},t("users.user_name")),/*#__PURE__*/react.createElement("div",null,data.user_name)),/*#__PURE__*/react.createElement("div",null,/*#__PURE__*/react.createElement(Box,{variant:"awsui-key-label"},t("users.global_role")),/*#__PURE__*/react.createElement("div",null,t("roles.".concat(data.global_role))))))))),/*#__PURE__*/react.createElement(ConfirmationDialog,{visible:showDeleteConfirm,onDiscard:toggleDeleteConfirm,onConfirm:function deleteUserHandler(){data&&(deleteUsers([paramUserName]),setShowConfirmDelete(!1))}}))};
;// CONCATENATED MODULE: ./src/pages/User/Form/index.tsx
var UserForm=function(_ref){var initialValues=_ref.initialValues,onCancel=_ref.onCancel,loading=_ref.loading,onRefreshToken=_ref.onRefreshToken,disabledRefreshToken=_ref.disabledRefreshToken,onSubmitProp=_ref.onSubmit,_useTranslation=useTranslation_useTranslation(),t=_useTranslation.t,isEditing=!!initialValues,_useForm=useForm({defaultValues:null!==initialValues&&void 0!==initialValues?initialValues:{global_role:"read"}}),handleSubmit=_useForm.handleSubmit,control=_useForm.control,roleSelectOptions=[{label:t("roles.admin"),value:"admin"},{label:t("roles.run"),value:"run"},{label:t("roles.read"),value:"read"}],onCopyToken=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/regenerator_default().mark(function _callee(){var _initialValues$token;return regenerator_default().wrap(function(_context){for(;;)switch(_context.prev=_context.next){case 0:return _context.prev=0,_context.next=3,navigator.clipboard.writeText(null!==(_initialValues$token=null===initialValues||void 0===initialValues?void 0:initialValues.token)&&void 0!==_initialValues$token?_initialValues$token:"");case 3:_context.next=8;break;case 5:_context.prev=5,_context.t0=_context["catch"](0),console.error("Failed to copy: ",_context.t0);case 8:case"end":return _context.stop();}},_callee,null,[[0,5]])}));return function(){return _ref2.apply(this,arguments)}}();return/*#__PURE__*/react.createElement("form",{onSubmit:handleSubmit(function onSubmit(data){onSubmitProp(data)})},/*#__PURE__*/react.createElement(form_Form,{actions:/*#__PURE__*/react.createElement(SpaceBetween,{direction:"horizontal",size:"xs"},/*#__PURE__*/react.createElement(components_button,{formAction:"none",disabled:loading,variant:"link",onClick:onCancel},t("common.cancel")),/*#__PURE__*/react.createElement(components_button,{loading:loading,disabled:loading,variant:"primary"},t("common.save")))},/*#__PURE__*/react.createElement(Container,{header:/*#__PURE__*/react.createElement(components_header_Header,{variant:"h2"},t("users.account_settings"))},/*#__PURE__*/react.createElement(SpaceBetween,{size:"l"},/*#__PURE__*/react.createElement(ColumnLayout,{columns:isEditing?1:2},!isEditing&&/*#__PURE__*/react.createElement(FormInput,{label:t("users.user_name"),control:control,name:"user_name",disabled:loading}),/*#__PURE__*/react.createElement(FormSelect,{label:t("users.global_role"),control:control,name:"global_role",options:roleSelectOptions,disabled:loading})),initialValues&&/*#__PURE__*/react.createElement(FormField,{label:t("users.token")},/*#__PURE__*/react.createElement(Box,{margin:{right:"xxs"},display:"inline-block"},/*#__PURE__*/react.createElement(Popover,{dismissButton:!1,position:"top",size:"small",triggerType:"custom",content:/*#__PURE__*/react.createElement(status_indicator_StatusIndicator,{type:"success"},t("users.token_copied"))},/*#__PURE__*/react.createElement(components_button,{disabled:loading,formAction:"none",iconName:"copy",variant:"link",onClick:onCopyToken}))),initialValues.token,/*#__PURE__*/react.createElement(Box,{margin:{left:"l"},display:"inline-block"},/*#__PURE__*/react.createElement(components_button,{disabled:loading||disabledRefreshToken,formAction:"none",variant:"normal",onClick:onRefreshToken},t("users.edit.refresh_token_button_label"))))))))};
;// CONCATENATED MODULE: ./src/pages/User/Edit/index.tsx
function Edit_ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function Edit_objectSpread(target){for(var source,i=1;i<arguments.length;i++)source=null==arguments[i]?{}:arguments[i],i%2?Edit_ownKeys(Object(source),!0).forEach(function(key){defineProperty_defineProperty(target,key,source[key])}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):Edit_ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))});return target}var UserEdit=function(){var _params$name,_useTranslation=useTranslation_useTranslation(),t=_useTranslation.t,params=useParams(),navigate=dist_useNavigate(),paramUserName=null!==(_params$name=params.name)&&void 0!==_params$name?_params$name:"",_useState=(0,react.useState)(!1),_useState2=slicedToArray_slicedToArray(_useState,2),showRefreshConfirm=_useState2[0],setShowRefreshConfirm=_useState2[1],_useGetUserQuery=useGetUserQuery({name:paramUserName},{skip:!params.name}),isLoading=_useGetUserQuery.isLoading,data=_useGetUserQuery.data,_useUpdateUserMutatio=useUpdateUserMutation(),_useUpdateUserMutatio2=slicedToArray_slicedToArray(_useUpdateUserMutatio,2),updateUser=_useUpdateUserMutatio2[0],isUserUpdating=_useUpdateUserMutatio2[1].isLoading,_useRefreshTokenMutat=useRefreshTokenMutation(),_useRefreshTokenMutat2=slicedToArray_slicedToArray(_useRefreshTokenMutat,2),refreshToken=_useRefreshTokenMutat2[0],isTokenRefreshing=_useRefreshTokenMutat2[1].isLoading,toggleRefreshConfirm=function(){setShowRefreshConfirm(function(val){return!val})};useBreadcrumbs([{text:t("navigation.users"),href:ROUTES.USER.LIST},{text:paramUserName,href:ROUTES.USER.DETAILS.FORMAT(paramUserName)},{text:t("common.edit"),href:ROUTES.USER.EDIT.FORMAT(paramUserName)}]);var _useNotifications=useNotifications(),_useNotifications2=slicedToArray_slicedToArray(_useNotifications,1),pushNotification=_useNotifications2[0],onRefreshTokenHandler=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/regenerator_default().mark(function _callee(){return regenerator_default().wrap(function(_context){for(;;)switch(_context.prev=_context.next){case 0:return setShowRefreshConfirm(!1),_context.prev=1,_context.next=4,refreshToken({user_name:paramUserName}).unwrap();case 4:pushNotification({type:"success",content:t("users.edit.refresh_token_success_notification")}),_context.next=10;break;case 7:_context.prev=7,_context.t0=_context["catch"](1),pushNotification({type:"error",content:t("users.edit.refresh_token_error_notification")});case 10:case"end":return _context.stop();}},_callee,null,[[1,7]])}));return function(){return _ref.apply(this,arguments)}}(),onSubmitHandler=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/regenerator_default().mark(function _callee2(userData){var _data$user_name,_data;return regenerator_default().wrap(function(_context2){for(;;)switch(_context2.prev=_context2.next){case 0:return _context2.prev=0,_context2.next=3,updateUser(Edit_objectSpread(Edit_objectSpread({},(0,lodash.pick)(userData,["global_role"])),{},{user_name:paramUserName})).unwrap();case 3:_data=_context2.sent,pushNotification({type:"success",content:t("users.edit.success_notification")}),navigate(ROUTES.USER.DETAILS.FORMAT(null!==(_data$user_name=_data.user_name)&&void 0!==_data$user_name?_data$user_name:paramUserName)),_context2.next=11;break;case 8:_context2.prev=8,_context2.t0=_context2["catch"](0),pushNotification({type:"error",content:t("users.edit.error_notification")});case 11:case"end":return _context2.stop();}},_callee2,null,[[0,8]])}));return function(){return _ref2.apply(this,arguments)}}();return/*#__PURE__*/react.createElement(react.Fragment,null,/*#__PURE__*/react.createElement(ContentLayout,{header:/*#__PURE__*/react.createElement(components_header_Header,{variant:"awsui-h1-sticky"},paramUserName)},isLoading&&!data&&/*#__PURE__*/react.createElement(Container,null,/*#__PURE__*/react.createElement(Loader,null)),data&&/*#__PURE__*/react.createElement(UserForm,{initialValues:data,onSubmit:onSubmitHandler,loading:isUserUpdating,onCancel:function onCancelHandler(){navigate(ROUTES.USER.DETAILS.FORMAT(paramUserName))},onRefreshToken:toggleRefreshConfirm,disabledRefreshToken:isTokenRefreshing})),/*#__PURE__*/react.createElement(ConfirmationDialog,{title:t("users.edit.refresh_token_confirm_title"),content:/*#__PURE__*/react.createElement(Box,{variant:"span"},t("users.edit.refresh_token_confirm_message")),confirmButtonLabel:t("users.edit.refresh_token_button_label"),visible:showRefreshConfirm,onDiscard:toggleRefreshConfirm,onConfirm:onRefreshTokenHandler}))};
;// CONCATENATED MODULE: ./src/pages/User/Add/index.tsx
var UserAdd=function(){var _useTranslation=useTranslation_useTranslation(),t=_useTranslation.t,navigate=dist_useNavigate(),_useCreateUserMutatio=useCreateUserMutation(),_useCreateUserMutatio2=slicedToArray_slicedToArray(_useCreateUserMutatio,2),createUser=_useCreateUserMutatio2[0],isLoading=_useCreateUserMutatio2[1].isLoading;useBreadcrumbs([{text:t("navigation.users"),href:ROUTES.USER.LIST},{text:t("common.create"),href:ROUTES.USER.ADD}]);var _useNotifications=useNotifications(),_useNotifications2=slicedToArray_slicedToArray(_useNotifications,1),pushNotification=_useNotifications2[0],onSubmitHandler=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/regenerator_default().mark(function _callee(userData){var data;return regenerator_default().wrap(function(_context){for(;;)switch(_context.prev=_context.next){case 0:return _context.prev=0,_context.next=3,createUser(userData).unwrap();case 3:data=_context.sent,pushNotification({type:"success",content:t("users.create.success_notification")}),navigate(ROUTES.USER.DETAILS.FORMAT(data.user_name)),_context.next=11;break;case 8:_context.prev=8,_context.t0=_context["catch"](0),pushNotification({type:"error",content:t("users.create.error_notification")});case 11:case"end":return _context.stop();}},_callee,null,[[0,8]])}));return function(){return _ref.apply(this,arguments)}}();return/*#__PURE__*/react.createElement(ContentLayout,{header:/*#__PURE__*/react.createElement(components_header_Header,{variant:"awsui-h1-sticky"},t("users.create.page_title"))},/*#__PURE__*/react.createElement(UserForm,{onSubmit:onSubmitHandler,loading:isLoading,onCancel:function onCancelHandler(){navigate(ROUTES.USER.LIST)}}))};
;// CONCATENATED MODULE: ./src/pages/User/index.tsx
var Members=function(){return null};
;// CONCATENATED MODULE: ./src/router.tsx
var router_router=createBrowserRouter([{path:"/",element:/*#__PURE__*/react.createElement(src_App,null),errorElement:/*#__PURE__*/react.createElement(AuthErrorMessage,{title:"Not Found",text:"Page not found"}),children:[// hubs
{path:ROUTES.BASE,element:/*#__PURE__*/react.createElement(Navigate,{replace:!0,to:ROUTES.HUB.LIST})},{path:ROUTES.HUB.LIST,element:/*#__PURE__*/react.createElement(HubList,null)},{path:ROUTES.HUB.DETAILS.TEMPLATE,element:/*#__PURE__*/react.createElement(HubDetails,null)},{path:ROUTES.HUB.EDIT_BACKEND.TEMPLATE,element:/*#__PURE__*/react.createElement(HubEditBackend,null)},{path:ROUTES.HUB.ADD,element:/*#__PURE__*/react.createElement(HubAdd,null)},// members
{path:ROUTES.USER.LIST,element:/*#__PURE__*/react.createElement(UserList,null)},{path:ROUTES.USER.ADD,element:/*#__PURE__*/react.createElement(UserAdd,null)},{path:ROUTES.USER.DETAILS.TEMPLATE,element:/*#__PURE__*/react.createElement(UserDetails,null)},{path:ROUTES.USER.EDIT.TEMPLATE,element:/*#__PURE__*/react.createElement(UserEdit,null)},// auth
{path:ROUTES.LOGOUT,element:/*#__PURE__*/react.createElement(Logout,null)}]}]);
;// CONCATENATED MODULE: ./src/index.tsx
var container=document.getElementById("root");if(container){var root=(0,client/* createRoot */.s)(container);root.render(/*#__PURE__*/react.createElement(react.StrictMode,null,/*#__PURE__*/react.createElement(components_Provider,{store:store},/*#__PURE__*/react.createElement(RouterProvider,{router:router_router}))))}
})();

/******/ })()
;
//# sourceMappingURL=main-e89f20b41c22dbad24af.js.map
